0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 IY_STRUCT	     struc ; (sizeof=0x2e)
0000 field_0:	     .db ?
0001 field_1:	     .db ?
0002 field_2:	     .db ?
0003 field_3:	     .db ?
0004 field_4:	     .db ?
0005 field_5:	     .db ?
0006 field_6:	     .db ?
0007 field_7:	     .db ?
0008 field_8:	     .db ?
0009 field_9:	     .db ?
000A field_A:	     .db ?
000B field_B:	     .db ?
000C field_C:	     .db ?
000D field_D:	     .db ?
000E field_E:	     .db ?
000F field_F:	     .db ?
0010 field_10:	     .db ?
0011 field_11:	     .db ?
0012 field_12:	     .db ?
0013 field_13:	     .db ?
0014 field_14:	     .db ?
0015 field_15:	     .db ?
0016 field_16:	     .db ?
0017 field_17:	     .db ?
0018 field_18:	     .db ?
0019 field_19:	     .db ?
001A field_1A:	     .db ?
001B field_1B:	     .db ?
001C field_1C:	     .db ?
001D field_1D:	     .db ?
001E field_1E:	     .db ?
001F field_1F:	     .db ?
0020 field_20:	     .db ?
0021 field_21:	     .db ?
0022 field_22:	     .db ?
0023 field_23:	     .db ?
0024 field_24:	     .db ?
0025 field_25:	     .db ?
0026 field_26:	     .db ?
0027 field_27:	     .db ?
0028 field_28:	     .db ?
0029 field_29:	     .db ?
002A field_2A:	     .db ?
002B field_2B:	     .db ?
002C field_2C:	     .db ?
002D LAST:	     .db ?
002E IY_STRUCT	     ends
002E 
0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 IX_STRUCT	     struc ; (sizeof=0xd)
0000 field_0:	     .db ?
0001 field_1:	     .db ?
0002 PORT_BASE_1:    .db ?		     ; enum PORTS
0003 PORT_BASE_2:    .db ?		     ; enum PORTS
0004 field_4:	     .db ?
0005 field_5:	     .db ?
0006 field_6:	     .db ?
0007 field_7:	     .db ?
0008 field_8:	     .db ?
0009 field_9:	     .db ?
000A field_A:	     .db ?
000B field_B:	     .db ?
000C LAST:	     .db ?
000D IX_STRUCT	     ends
000D 
0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 HOST_RAM_ADDR   struc ; (sizeof=0x3)
0000 LO:	     .db ?
0001 MID:	     .db ?
0002 HI:	     .db ?
0003 HOST_RAM_ADDR   ends
0003 
0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 FDC_COMMAND_S   struc ; (sizeof=0x9)
0000 COMMAND:	     .db ?
0001 STATUS:	     .db ?
0002 field_2:	     .db ?
0003 TRACK_NUMBER:   .db ?
0004 HEAD:	     .db ?
0005 SECTOR:	     .db ?
0006 BUFFER_ADDR_MID_LO:.dw ?
0008 BUFFER_ADDR_HI: .db ?
0009 FDC_COMMAND_S   ends
0009 
0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 FDC_IX_STRUCT   struc ; (sizeof=0xb)
0000 field_0:	     .db ?
0001 field_1:	     .db ?
0002 LEN_C_LO:	     .db ?
0003 LEN_B_HI:	     .db ?
0004 DOUBLE_STEP:    .db ?
0005 field_5:	     .db ?
0006 field_6:	     .db ?
0007 field_7:	     .db ?
0008 field_8:	     .db ?
0009 field_9:	     .db ?
000A field_A:	     .db ?
000B FDC_IX_STRUCT   ends
000B 
0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 struc_26FF	     struc ; (sizeof=0xc)
0000 ARR12:	     .db ?
0001 HL_STH:	     .db ?
0002 SIO_field_2:    .db ?
0003 field_3:	     .db ?
0004 SIO_field_4:    .db ?
0005 field_5:	     .db ?
0006 field_6:	     .db ?
0007 field_7:	     .db ?
0008 FDC_field_8:    .db ?
0009 field_9:	     .db ?
000A field_A:	     .db ?
000B HOST_RAM_PTR:   .db ?
000C struc_26FF	     ends
000C 
0000 ; ───────────────────────────────────────────────────────────────────────────
0000 
0000 FDC_IY_PARAMS   struc ; (sizeof=0x10)
0000 field_0:	     .db ?
0001 field_1:	     .db ?
0002 field_2:	     .db ?
0003 field_3:	     .db ?
0004 field_4:	     .db ?
0005 field_5:	     .db ?
0006 field_6:	     .db ?
0007 field_7:	     .db ?
0008 field_8:	     .db ?
0009 field_9:	     .db ?
000A field_A:	     .db ?
000B field_B:	     .db ?
000C field_C:	     .db ?
000D field_D:	     .db ?
000E field_E:	     .db ?
000F field_F:	     .db ?
0010 FDC_IY_PARAMS   ends
0010 
FFFFFFFF ; ───────────────────────────────────────────────────────────────────────────
FFFFFFFF 
FFFFFFFF ; enum	PORTS
FFFFFFFF BUS_ADDRESS_LATCH: = 0			 ; Address Latch - System memory block number (bits 0 thru 4)
FFFFFFFF PIT0_COUNTER_0:  = 20h			 ; PIT 0 - Counter 0 provides baud rate	for port 3
FFFFFFFF PIT0_COUNTER_1:  = 21h			 ; PIT 0 - Counter 1 provides baud rate	for port 4
FFFFFFFF PIT0_COUNTER_2:  = 22h			 ; PIT 0 - Counter 2 provides baud rate	for port 1
FFFFFFFF PIT0_CONTROL:	  = 23h			 ; PIT 0 - Control byte	for PIT	0
FFFFFFFF PIT1_COUNTER_0:  = 24h			 ; PIT 1 - Counter 0 provides baud rate	for port 2
FFFFFFFF PIT1_COUNTER_1:  = 25h			 ; PIT 1 - Counter 1 provides baud rate	for port 5
FFFFFFFF PIT1_COUNTER_2:  = 26h			 ; PIT 1 - Counter 2 timer interrupt
FFFFFFFF PIT1_CONTROL:	  = 27h			 ; PIT 1 - Control byte	for PIT	1
FFFFFFFF SIO0_CHAN_A_DATA: = 28h		 ; SIO 0 - Channel A data for serial port 3
FFFFFFFF SIO0_CHAN_A_CONTROL: =	29h		 ; SIO 0 - Channel A control for serial	port 3
FFFFFFFF SIO0_CHAN_B_DATA: = 2Ah		 ; SIO 0 - Channel B data for serial port 4
FFFFFFFF SIO0_CHAN_B_CONTROL: =	2Bh		 ; SIO 0 - Channel B control for serial	port 4
FFFFFFFF SIO1_CHAN_A_DATA: = 2Ch		 ; SIO 1 - Channel A data for serial port 1
FFFFFFFF SIO1_CHAN_A_CONTROL: =	2Dh		 ; SIO 1 - Channel A control for serial	port 1
FFFFFFFF SIO1_CHAN_B_DATA: = 2Eh		 ; SIO 1 - Channel B data for serial port 2
FFFFFFFF SIO1_CHAN_B_CONTROL: =	2Fh		 ; SIO 1 - Channel B control for serial	port 2
FFFFFFFF SIO2_CHAN_A_DATA: = 30h		 ; SIO 2 - Channel A data for serial port 5
FFFFFFFF SIO2_CHAN_A_CONTROL: =	31h		 ; SIO 2 - Channel A control for serial	port 5
FFFFFFFF SIO2_CHAN_B_DATA: = 32h		 ; SIO 2 - Channel B data for serial port 6
FFFFFFFF SIO2_CHAN_B_CONTROL: =	33h		 ; SIO 2 - Channel B control for serial	port 6
FFFFFFFF PIO_DATA_A:	  = 34h			 ; PIO - Data port A
FFFFFFFF PIO_COMMAND_A:	  = 35h			 ; PIO - Command port A
FFFFFFFF PIO_DATA_B:	  = 36h			 ; PIO - Data port B
FFFFFFFF PIO_COMMAND_B:	  = 37h			 ; PIO - Command port B
FFFFFFFF FDC_CMD_STAT:	  = 38h			 ; FDC - Write command,	Read status
FFFFFFFF FDC_TRACK:	  = 39h			 ; FDC - Track number
FFFFFFFF FDC_SECTOR:	  = 3Ah			 ; FDC - Sector	number
FFFFFFFF FDC_DATA:	  = 3Bh			 ; FDC - Read/Write data
FFFFFFFF DMA_ALL:	  = 3Ch			 ; DMA - All read and write registers
FFFFFFFF DMA_CLEAR:	  = 40h			 ; DMA - Clear carrier sense and parity	error bit
FFFFFFFF RTC_MSEC:	  = 80h			 ; RTC - Counter - thousandths of seconds
FFFFFFFF RTC_DCSEC:	  = 81h			 ; RTC - Counter - hundredths and tenths of seconds
FFFFFFFF RTC_SECONDS:	  = 82h			 ; RTC - Counter - seconds
FFFFFFFF RTC_MINUTES:	  = 83h			 ; RTC - Counter - minutes
FFFFFFFF RTC_HOURS:	  = 84h			 ; RTC - Counter - hours
FFFFFFFF RTC_DAY_OF_WEEK: = 85h			 ; RTC - Counter - Day of Week
FFFFFFFF RTC_DAY_OF_MONTH: = 86h		 ; RTC - Counter - Day of Month
FFFFFFFF RTC_MONTHS:	  = 87h			 ; RTC - Counter - Months
FFFFFFFF RTC_LATCH_MSEC:  = 88h			 ; RTC - Latches - Thousandths of seconds
FFFFFFFF RTC_LATCH_DCSEC: = 89h			 ; RTC - Latches - Hundredths and tenths of seconds
FFFFFFFF RTC_LATCH_SECONDS: = 8Ah		 ; RTC - Latches - Seconds
FFFFFFFF RTC_LATCH_MINUTES: = 8Bh		 ; RTC - Latches - Minutes
FFFFFFFF RTC_LATCH_HOURS: = 8Ch			 ; RTC - Latches - Hours
FFFFFFFF RTC_LATCH_DAY_OF_WEEK:	= 8Dh		 ; RTC - Latches - Day of the Week
FFFFFFFF RTC_LATCH_DAY_OF_MONTH: = 8Eh		 ; RTC - Latches - Day of the Month
FFFFFFFF RTC_LATCH_MONTHS: = 8Fh		 ; RTC - Latches - Months
FFFFFFFF RTC_INT_STATUS:  = 90h			 ; RTC - Interrupt Status Register
FFFFFFFF RTC_INT_CONTROL: = 91h			 ; RTC - Interrupt Control Register
FFFFFFFF RTC_COUNTER_RESET: = 92h		 ; RTC - Counter Reset
FFFFFFFF RTC_LATCH_RESET: = 93h			 ; RTC - Latch Reset
FFFFFFFF RTC_STATUS:	  = 94h			 ; RTC - Status	Bit
FFFFFFFF RTC_GO_CMD:	  = 95h			 ; RTC - "GO" Command
FFFFFFFF RTC_STANDBY_INT: = 96h			 ; RTC - Standby Interrupt
FFFFFFFF RTC_TEST:	  = 9Fh			 ; RTC - Test Mode
FFFFFFFF 
FFFFFFFF ; ───────────────────────────────────────────────────────────────────────────
FFFFFFFF 
FFFFFFFF ; enum	SYS_REGS
FFFFFFFF SYS_FW_VER:	  = 0			 ; SYS - Firmware Version Register
FFFFFFFF SYS_SYS_CMD:	  = 1			 ; SYS - System	Command	Register
FFFFFFFF SYS_SYS_STAT:	  = 2			 ; SYS - System	Status Register
FFFFFFFF SYS_INT_VEC:	  = 3			 ; SYS - Interrupt Vector Register
FFFFFFFF SYS_NEW_CMD:	  = 5			 ; SYS - New Command Register
FFFFFFFF CH0_CHAN_PARM:	  = 6			 ; CH 0	- Channel Parameter Register
FFFFFFFF CH0_CHAN_STAT:	  = 8			 ; CH 0	- Channel Status Register
FFFFFFFF CH0_CHAN_CMD:	  = 0Ah			 ; CH 0	- Channel Command Register
FFFFFFFF CH0_XMIT_BUF_ADDR: = 0Bh		 ; CH 0	- Transmit Data	Buffer Address Register
FFFFFFFF CH0_XMIT_BUF_LEN: = 0Eh		 ; CH 0	- Transmit Data	Buffer Length Register
FFFFFFFF CH0_RECV_BUF_ADDR: = 10h		 ; CH 0	- Receive Data Buffer Address Register
FFFFFFFF CH0_RECV_BUF_LEN: = 13h		 ; CH 0	- Receive Data Buffer Length Register
FFFFFFFF CH0_RECV_BUF_IN_PTR: =	15h		 ; CH 0	- Receive Buffer Input Pointer Register
FFFFFFFF CH0_RECV_BUF_OUT_PTR: = 17h		 ; CH 0	- Receive Buffer Output	Pointer	Register
FFFFFFFF CH0_TTY_RECV:	  = 19h			 ; CH 0	- TTY Receive Register
FFFFFFFF CH0_SEL_RATE:	  = 1Ah			 ; CH 0	- Selectable Rate Register
FFFFFFFF CH1_CHAN_PARM:	  = 1Ch			 ; CH 1	- Channel Parameter Register
FFFFFFFF CH1_CHAN_STAT:	  = 1Eh			 ; CH 1	- Channel Status Register
FFFFFFFF CH1_CHAN_CMD:	  = 20h			 ; CH 1	- Channel Command Register
FFFFFFFF CH1_XMIT_BUF_ADDR: = 21h		 ; CH 1	- Transmit Data	Buffer Address Register
FFFFFFFF CH1_XMIT_BUF_LEN: = 24h		 ; CH 1	- Transmit Data	Buffer Length Register
FFFFFFFF CH1_RECV_BUF_ADDR: = 26h		 ; CH 1	- Receive Data Buffer Address Register
FFFFFFFF CH1_RECV_BUF_LEN: = 29h		 ; CH 1	- Receive Data Buffer Length Register
FFFFFFFF CH1_RECV_BUF_IN_PTR: =	2Bh		 ; CH 1	- Receive Buffer Input Pointer Register
FFFFFFFF CH1_RECV_BUF_OUT_PTR: = 2Dh		 ; CH 1	- Receive Buffer Output	Pointer	Register
FFFFFFFF CH1_TTY_RECV:	  = 2Fh			 ; CH 1	- TTY Receive Register
FFFFFFFF CH1_SEL_RATE:	  = 30h			 ; CH 1	- Selectable Rate Register
FFFFFFFF CH2_CHAN_PARM:	  = 32h			 ; CH 2	- Channel Parameter Register
FFFFFFFF CH2_CHAN_STAT:	  = 34h			 ; CH 2	- Channel Status Register
FFFFFFFF CH2_CHAN_CMD:	  = 36h			 ; CH 2	- Channel Command Register
FFFFFFFF CH2_XMIT_BUF_ADDR: = 37h		 ; CH 2	- Transmit Data	Buffer Address Register
FFFFFFFF CH2_XMIT_BUF_LEN: = 3Ah		 ; CH 2	- Transmit Data	Buffer Length Register
FFFFFFFF CH2_RECV_BUF_ADDR: = 3Ch		 ; CH 2	- Receive Data Buffer Address Register
FFFFFFFF CH2_RECV_BUF_LEN: = 3Fh		 ; CH 2	- Receive Data Buffer Length Register
FFFFFFFF CH2_RECV_BUF_IN_PTR: =	41h		 ; CH 2	- Receive Buffer Input Pointer Register
FFFFFFFF CH2_RECV_BUF_OUT_PTR: = 43h		 ; CH 2	- Receive Buffer Output	Pointer	Register
FFFFFFFF CH2_TTY_RECV:	  = 45h			 ; CH 2	- TTY Receive Register
FFFFFFFF CH2_SEL_RATE:	  = 46h			 ; CH 2	- Selectable Rate Register
FFFFFFFF CH3_CHAN_PARM:	  = 48h			 ; CH 3	- Channel Parameter Register
FFFFFFFF CH3_CHAN_STAT:	  = 4Ah			 ; CH 3	- Channel Status Register
FFFFFFFF CH3_CHAN_CMD:	  = 4Ch			 ; CH 3	- Channel Command Register
FFFFFFFF CH3_XMIT_BUF_ADDR: = 4Dh		 ; CH 3	- Transmit Data	Buffer Address Register
FFFFFFFF CH3_XMIT_BUF_LEN: = 50h		 ; CH 3	- Transmit Data	Buffer Length Register
FFFFFFFF CH3_RECV_BUF_ADDR: = 52h		 ; CH 3	- Receive Data Buffer Address Register
FFFFFFFF CH3_RECV_BUF_LEN: = 55h		 ; CH 3	- Receive Data Buffer Length Register
FFFFFFFF CH3_RECV_BUF_IN_PTR: =	57h		 ; CH 3	- Receive Buffer Input Pointer Register
FFFFFFFF CH3_RECV_BUF_OUT_PTR: = 59h		 ; CH 3	- Receive Buffer Output	Pointer	Register
FFFFFFFF CH3_TTY_RECV:	  = 5Bh			 ; CH 3	- TTY Receive Register
FFFFFFFF CH3_SEL_RATE:	  = 5Ch			 ; CH 3	- Selectable Rate Register
FFFFFFFF CH4_CHAN_PARM:	  = 5Eh			 ; CH 4	- Channel Parameter Register
FFFFFFFF CH4_CHAN_STAT:	  = 60h			 ; CH 4	- Channel Status Register
FFFFFFFF CH4_CHAN_CMD:	  = 62h			 ; CH 4	- Channel Command Register
FFFFFFFF CH4_XMIT_BUF_ADDR: = 63h		 ; CH 4	- Transmit Data	Buffer Address Register
FFFFFFFF CH4_XMIT_BUF_LEN: = 66h		 ; CH 4	- Transmit Data	Buffer Length Register
FFFFFFFF CH4_RECV_BUF_ADDR: = 68h		 ; CH 4	- Receive Data Buffer Address Register
FFFFFFFF CH4_RECV_BUF_LEN: = 6Bh		 ; CH 4	- Receive Data Buffer Length Register
FFFFFFFF CH4_RECV_BUF_IN_PTR: =	6Dh		 ; CH 4	- Receive Buffer Input Pointer Register
FFFFFFFF CH4_RECV_BUF_OUT_PTR: = 6Fh		 ; CH 4	- Receive Buffer Output	Pointer	Register
FFFFFFFF CH4_TTY_RECV:	  = 71h			 ; CH 4	- TTY Receive Register
FFFFFFFF CH4_SEL_RATE:	  = 72h			 ; CH 4	- Selectable Rate Register
FFFFFFFF CH5_CHAN_PARM:	  = 74h			 ; CH 5	- Channel Parameter Register
FFFFFFFF CH5_CHAN_STAT:	  = 76h			 ; CH 5	- Channel Status Register
FFFFFFFF CH5_CHAN_CMD:	  = 78h			 ; CH 5	- Channel Command Register
FFFFFFFF CH5_XMIT_BUF_ADDR: = 79h		 ; CH 5	- Transmit Data	Buffer Address Register
FFFFFFFF CH5_XMIT_BUF_LEN: = 7Ch		 ; CH 5	- Transmit Data	Buffer Length Register
FFFFFFFF CH5_RECV_BUF_ADDR: = 7Eh		 ; CH 5	- Receive Data Buffer Address Register
FFFFFFFF CH5_RECV_BUF_LEN: = 81h		 ; CH 5	- Receive Data Buffer Length Register
FFFFFFFF CH5_RECV_BUF_IN_PTR: =	83h		 ; CH 5	- Receive Buffer Input Pointer Register
FFFFFFFF CH5_RECV_BUF_OUT_PTR: = 85h		 ; CH 5	- Receive Buffer Output	Pointer	Register
FFFFFFFF CH5_TTY_RECV:	  = 87h			 ; CH 5	- TTY Receive Register
FFFFFFFF CH5_SEL_RATE:	  = 88h			 ; CH 5	- Selectable Rate Register
FFFFFFFF UNK_CMD_XXX:	  = 8Ah			 ; UNK - Command Register?
FFFFFFFF UNK_STAT_XXX:	  = 8Bh			 ; UNK - Status	Register?
FFFFFFFF UNK_Some_BUF:	  = 8Ch			 ; UNK - Some Buffer?
FFFFFFFF UNK_Sector_size: = 96h			 ; UNK - Sector	size?
FFFFFFFF UNKNOWN:	  = 0D4h		 ; UNKNOWN
FFFFFFFF 
ROM:0000 ;
ROM:0000 ; ╔═════════════════════════════════════════════════════════════════════════╗
ROM:0000 ; ║	 This file is generated	by The Interactive Disassembler	(IDA)	     ║
ROM:0000 ; ║			       Freeware	version				     ║
ROM:0000 ; ║	 Copyright (c) 2000 by DataRescue sa/nv, http://www.datarescue.com   ║
ROM:0000 ; ╚═════════════════════════════════════════════════════════════════════════╝
ROM:0000 ;
ROM:0000 
ROM:0000 ; Processor:	     z80
ROM:0000 ; Target assembler: Table Driven Assembler (TASM) by Speech Technology	Inc.
ROM:0000 
ROM:0000 ; ═══════════════════════════════════════════════════════════════════════════
ROM:0000 
ROM:0000 ; Segment type: Pure code
ROM:0000 ; segment 'ROM'
ROM:0000 
ROM:0000 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0000 
ROM:0000 ; Attributes: bp-based	frame
ROM:0000 
ROM:0000 START:					 ; CODE	XREF: DO_NMI_HANDLER+5Aj
ROM:0000		 ld	 hl, SRAM_JUMP_SLOT1
ROM:0003		 ld	 de, 3		 ; How long a jump slot	is
ROM:0006		 ld	 bc, 5		 ; How many jump slots
ROM:0009		 ld	 sp, STACK_TOP
ROM:000C 
ROM:000C RET_TO_SRAM:				 ; CODE	XREF: START+12j
ROM:000C		 ld	 (hl), 0C9h ; '╔' ; Fill jump slots with 0C9h == RET
ROM:000E		 add	 hl, de
ROM:000F		 dec	 bc
ROM:0010		 ld	 a, b
ROM:0011		 or	 c
ROM:0012		 jr	 nz, RET_TO_SRAM
ROM:0014		 ld	 bc, 7F1h	 ; Length of rest of SRAM, after the jump slots
ROM:0017 
ROM:0017 ERASE_SRAM:				 ; CODE	XREF: START+1Dj
ROM:0017		 ld	 (hl), 0	 ; Fill	rest of	SRAM with zeroes
ROM:0019		 inc	 hl
ROM:001A		 dec	 bc
ROM:001B		 ld	 a, b
ROM:001C		 or	 c
ROM:001D		 jr	 nz, ERASE_SRAM	 ; Fill	rest of	SRAM with zeroes
ROM:001F 
ROM:001F loc_0_1F:				 ; CODE	XREF: START+1Fj
ROM:001F		 jr	 loc_0_1F	 ; Endless loop
ROM:001F ; End of function START		 ; Waiting for interrupt
ROM:001F 
ROM:001F ; ───────────────────────────────────────────────────────────────────────────
ROM:0021 byte_0_21:	 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:0021					 ; DATA	XREF: ROM:1C27r
ROM:0021					 ; ROM:1C41w
ROM:0021		 .db 0,	0, 0, 0, 0, 0
ROM:0038 
ROM:0038 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0038 
ROM:0038 ; Mode	1 interrupt handler
ROM:0038 ; Attributes: bp-based	frame
ROM:0038 
ROM:0038 INT_HANDLER:				 ; CODE	XREF: ROM:1C44p
ROM:0038					 ; ROM:1C45p ROM:1C46p
ROM:0038		 jp	 DO_INT_HANDLER
ROM:0038 ; End of function INT_HANDLER
ROM:0038 
ROM:0038 ; ───────────────────────────────────────────────────────────────────────────
ROM:003B		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:003B		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:003B		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:0066 
ROM:0066 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0066 
ROM:0066 ; Attributes: bp-based	frame
ROM:0066 
ROM:0066 NMI_HANDLER:
ROM:0066		 jp	 DO_NMI_HANDLER
ROM:0066 ; End of function NMI_HANDLER
ROM:0066 
ROM:0066 ; ───────────────────────────────────────────────────────────────────────────
ROM:0069		 .db 0,	0, 0, 0, 0, 0, 0
ROM:0070 ; ───────────────────────────────────────────────────────────────────────────
ROM:0070		 jp	 CHECK_STUFF	 ; Called from *many* sites
ROM:0073 ; ───────────────────────────────────────────────────────────────────────────
ROM:0073		 jp	 ZERO_SAVED_TASK_sub_028C
ROM:0076 ; ───────────────────────────────────────────────────────────────────────────
ROM:0076		 jp	 sub_0_286
ROM:0079 ; ───────────────────────────────────────────────────────────────────────────
ROM:0079		 jp	 sub_0_280
ROM:007C ; ───────────────────────────────────────────────────────────────────────────
ROM:007C		 jp	 TAIL_EI
ROM:007F ; ───────────────────────────────────────────────────────────────────────────
ROM:007F		 jp	 BUS_READ8	 ; hl=host address
ROM:007F					 ; returns b=value
ROM:0082 ; ───────────────────────────────────────────────────────────────────────────
ROM:0082		 jp	 BUS_WRITE8	 ; b=data byte
ROM:0085 
ROM:0085 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0085 
ROM:0085 ; Attributes: bp-based	frame
ROM:0085 
ROM:0085 DO_NMI_HANDLER:			 ; CODE	XREF: NMI_HANDLERj
ROM:0085		 call	 SRAM_JUMP_SLOT1 ; Beginning of	SRAM
ROM:0085					 ; There's a jump slot there
ROM:0088		 di	 
ROM:0089		 ld	 hl, CCB_PTR	 ; Start of the	rest of	SRAM
ROM:008C		 ld	 bc, 7F1h	 ; Length of the rest of SRAM
ROM:008F 
ROM:008F WIPE_SRAM:				 ; CODE	XREF: DO_NMI_HANDLER+10j
ROM:008F		 ld	 (hl), 0	 ; Zero	out
ROM:0091		 inc	 hl
ROM:0092		 dec	 bc
ROM:0093		 ld	 a, b
ROM:0094		 or	 c
ROM:0095		 jr	 nz, WIPE_SRAM
ROM:0097		 ld	 a, 0FFh
ROM:0099		 ld	 (FF_FROM_BEGINNING), a	; NMI handler puts FF here first
ROM:009C		 ld	 sp, STACK_TOP
ROM:009F		 call	 INIT_PIO
ROM:00A2		 call	 INIT_PIO	 ; Why twice?
ROM:00A5		 ld	 a, 0Ah
ROM:00A7		 ld	 (MONITOR_unk_26DA+1), a
ROM:00AA		 xor	 a		 ; a=0
ROM:00AB		 ld	 (_00_FROM_BEGINNING), a
ROM:00AE		 ld	 (_00_FROM_BEGINNING_0), a
ROM:00B1		 ld	 hl, ARR12
ROM:00B4		 ld	 c, 12
ROM:00B6		 call	 MEMSET		 ; hl=dest, c=count, a=fill
ROM:00B9		 ld	 hl, 0
ROM:00BC		 ld	 (_00_FROM_BEGINNING_1), hl
ROM:00BF		 ld	 hl, (word_0_1CCB)
ROM:00C2		 ld	 a, (byte_0_1CCD)
ROM:00C5		 ld	 de, CCB_PTR
ROM:00C8		 ld	 bc, 3		 ; 3 bytes: lo mid hi
ROM:00CB		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:00CB					 ; bc=count, (de)=source
ROM:00CB					 ; ix=preserved, interrupts off/on
ROM:00CE		 call	 PIO_A_BIT5_OFF
ROM:00D1		 ld	 hl, CCB_PTR
ROM:00D4		 ld	 a, (hl)	 ; CCB lo. (0x16)
ROM:00D5		 and	 0FEh ;	'■'      ; Even address
ROM:00D7		 ld	 e, a
ROM:00D8		 ld	 a, (hl)	 ; CCB lo (0x16)
ROM:00D9		 inc	 hl
ROM:00DA		 ld	 d, (hl)	 ; CCB mid (0x04)
ROM:00DB		 or	 (hl)
ROM:00DC		 inc	 hl
ROM:00DD		 or	 (hl)		 ; CCB hi (0x00)
ROM:00DE		 ld	 a, (hl)
ROM:00DF		 jp	 z, START
ROM:00E2		 ex	 de, hl
ROM:00E3		 ld	 de, _00_FROM_BEGINNING_0
ROM:00E6		 call	 BUS_READ16	 ; This	reads 0x416, 0x417 -- firmware version and cmd reg
ROM:00E9		 ld	 hl, byte_0_26D6
ROM:00EC		 ld	 a, (hl)
ROM:00ED		 dec	 hl
ROM:00EE		 or	 (hl)
ROM:00EF		 ld	 (hl), 0
ROM:00F1		 cp	 1
ROM:00F3		 jr	 nz, loc_0_F7
ROM:00F5		 ld	 (hl), 1
ROM:00F7 
ROM:00F7 loc_0_F7:				 ; CODE	XREF: DO_NMI_HANDLER+6Ej
ROM:00F7		 ld	 hl, FF_FROM_BEGINNING ; NMI handler puts FF here first
ROM:00FA		 ld	 (SAVE_DE_ADDR), hl
ROM:00FD		 ld	 hl, CHANNEL_VECTOR
ROM:0100		 call	 PICK_CALLBACK
ROM:0103		 im	 1		 ; Interrupt mode 1
ROM:0105		 ld	 hl, SERIAL_SOMETHINGS
ROM:0108		 ld	 b, 6
ROM:010A 
ROM:010A loc_0_10A:				 ; CODE	XREF: DO_NMI_HANDLER+95j
ROM:010A		 ld	 e, (hl)
ROM:010B		 inc	 hl
ROM:010C		 ld	 d, (hl)
ROM:010D		 inc	 hl
ROM:010E		 ld	 a, (hl)
ROM:010F		 inc	 hl
ROM:0110		 ld	 (de), a
ROM:0111		 inc	 de
ROM:0112		 ld	 a, (hl)
ROM:0113		 inc	 hl
ROM:0114		 ld	 (de), a
ROM:0115		 inc	 de
ROM:0116		 ld	 a, 28h	; '('
ROM:0118		 ld	 (de), a
ROM:0119		 dec	 b
ROM:011A		 jr	 nz, loc_0_10A
ROM:011C		 call	 INIT_PIT1	 ; Set up timer	interrupt and UART5
ROM:011F		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:0122		 ld	 a, 0
ROM:0124		 ld	 (FF_FROM_BEGINNING), a	; NMI handler puts FF here first
ROM:0127		 jp	 TAIL_sub_02B4	 ; Switch task?
ROM:0127 ; End of function DO_NMI_HANDLER
ROM:0127 
ROM:0127 ; ───────────────────────────────────────────────────────────────────────────
ROM:012A CHANNEL_VECTOR: .db 0			 ; DATA	XREF: DO_NMI_HANDLER+78o
ROM:012B		 .dw HANDLER00_sub_1A3D
ROM:012D		 .db 1
ROM:012E		 .dw HANDLER01_SYS_COMMAND
ROM:0130		 .db 2
ROM:0131		 .dw HANDLER02_SIO_sub_0A26
ROM:0133		 .db 3
ROM:0134		 .dw HANDLER03_SIO_sub_0A30
ROM:0136		 .db 4
ROM:0137		 .dw HANDLER04_SIO_sub_0A3A
ROM:0139		 .db 5
ROM:013A		 .dw HANDLER05_SIO_sub_0A44
ROM:013C		 .db 6
ROM:013D		 .dw HANDLER06_SIO_sub_0A4E
ROM:013F		 .db 7
ROM:0140		 .dw HANDLER07_SIO_sub_0A58
ROM:0142		 .db 8
ROM:0143		 .dw HANDLER08_FDC_sub_1547 ; On init
ROM:0145		 .db 9
ROM:0146		 .dw HANDLER09_RTC_sub_1AD7
ROM:0148		 .db 0FFh
ROM:0149 SERIAL_SOMETHINGS:.dw unk_0_2570, CH0_BUF, unk_0_259E,	CH1_BUF, unk_0_25CC
ROM:0149					 ; DATA	XREF: DO_NMI_HANDLER+80o
ROM:0149		 .dw CH2_BUF, unk_0_25FA, CH3_BUF, unk_0_2628, CH4_BUF
ROM:0149		 .dw unk_0_2656, CH5_BUF
ROM:0161 
ROM:0161 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0161 
ROM:0161 ; hl+=a
ROM:0161 ; Attributes: bp-based	frame
ROM:0161 
ROM:0161 ADD_WORD16:				 ; CODE	XREF: sub_0_1BF+6j
ROM:0161					 ; sub_0_2E9+12p sub_0_44F+4p
ROM:0161					 ; sub_0_46F+4p
ROM:0161					 ; MAKE_CCB_ADDR_FALLTHRU+3p ...
ROM:0161		 add	 a, l
ROM:0162		 ld	 l, a
ROM:0163		 ret	 nc
ROM:0164		 inc	 h
ROM:0165		 ret	 
ROM:0165 ; End of function ADD_WORD16
ROM:0165 
ROM:0166 
ROM:0166 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0166 
ROM:0166 ; hl=dest, c=count, a=fill
ROM:0166 ; Attributes: bp-based	frame
ROM:0166 
ROM:0166 MEMSET:				 ; CODE	XREF: DO_NMI_HANDLER+31p
ROM:0166					 ; MEMSET+3j
ROM:0166					 ; HANDLER08_FDC_sub_1547+107p
ROM:0166					 ; HANDLER08_FDC_sub_1547+10Fp
ROM:0166		 ld	 (hl), a
ROM:0167		 inc	 hl
ROM:0168		 dec	 c
ROM:0169		 jp	 nz, MEMSET	 ; hl=dest, c=count, a=fill
ROM:016C		 ret	 
ROM:016C ; End of function MEMSET
ROM:016C 
ROM:016D 
ROM:016D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:016D 
ROM:016D ; Attributes: bp-based	frame
ROM:016D 
ROM:016D sub_0_16D:				 ; CODE	XREF: XH_sub_0BA2+23p
ROM:016D					 ; XH_sub_0BA2+6Ep
ROM:016D					 ; YH_sub_0F85+10p
ROM:016D					 ; sub_0_105E+7p
ROM:016D					 ; FH_JUMP_SLOT5_sub_1097+23p
ROM:016D		 push	 ix
ROM:016F		 push	 hl
ROM:0170		 pop	 ix
ROM:0172		 ld	 a, (ix+IX_STRUCT.field_4)
ROM:0175		 cp	 (ix+IX_STRUCT.PORT_BASE_2)
ROM:0178		 jp	 z, loc_0_1BB
ROM:017B		 call	 sub_0_1C8
ROM:017E		 ld	 c, a
ROM:017F		 call	 sub_0_1BF
ROM:0182		 ld	 b, (hl)
ROM:0183		 ld	 a, c
ROM:0184		 ld	 (ix+IX_STRUCT.field_4), a
ROM:0187		 jp	 loc_0_1B7
ROM:0187 ; End of function sub_0_16D
ROM:0187 
ROM:018A 
ROM:018A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:018A 
ROM:018A ; Attributes: bp-based	frame
ROM:018A 
ROM:018A sub_0_18A:				 ; CODE	XREF: sub_0_1046+13p
ROM:018A					 ; FH_JUMP_SLOT4_sub_1133+21p
ROM:018A		 push	 ix
ROM:018C		 push	 hl
ROM:018D		 pop	 ix
ROM:018F		 ld	 a, (ix+IX_STRUCT.PORT_BASE_2)
ROM:0192		 call	 sub_0_1C8
ROM:0195		 cp	 (ix+IX_STRUCT.field_4)
ROM:0198		 jp	 z, loc_0_1BB
ROM:019B		 ld	 c, a
ROM:019C		 call	 sub_0_1BF
ROM:019F		 ld	 (hl), b
ROM:01A0		 ld	 (ix+IX_STRUCT.PORT_BASE_2), c
ROM:01A3		 jp	 loc_0_1B7
ROM:01A3 ; End of function sub_0_18A
ROM:01A3 
ROM:01A6 
ROM:01A6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01A6 
ROM:01A6 ; Attributes: bp-based	frame
ROM:01A6 
ROM:01A6 sub_0_1A6:				 ; CODE	XREF: sub_0_1046+8p
ROM:01A6		 push	 ix
ROM:01A8		 push	 hl
ROM:01A9		 pop	 ix
ROM:01AB		 ld	 a, (ix+IX_STRUCT.PORT_BASE_2)
ROM:01AE		 call	 sub_0_1C8
ROM:01B1		 cp	 (ix+IX_STRUCT.field_4)
ROM:01B4		 pop	 ix
ROM:01B6		 ret	 
ROM:01B6 ; End of function sub_0_1A6
ROM:01B6 
ROM:01B7 ; ───────────────────────────────────────────────────────────────────────────
ROM:01B7 
ROM:01B7 loc_0_1B7:				 ; CODE	XREF: sub_0_16D+1Aj
ROM:01B7					 ; sub_0_18A+19j
ROM:01B7		 push	 ix
ROM:01B9		 pop	 hl
ROM:01BA		 scf	 
ROM:01BB 
ROM:01BB loc_0_1BB:				 ; CODE	XREF: sub_0_16D+Bj
ROM:01BB					 ; sub_0_18A+Ej
ROM:01BB		 ccf	 
ROM:01BC		 pop	 ix
ROM:01BE		 ret	 
ROM:01BF 
ROM:01BF ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01BF 
ROM:01BF ; Attributes: bp-based	frame
ROM:01BF 
ROM:01BF sub_0_1BF:				 ; CODE	XREF: sub_0_16D+12p
ROM:01BF					 ; sub_0_18A+12p
ROM:01BF		 ld	 l, (ix+IX_STRUCT)
ROM:01C2		 ld	 h, (ix+IX_STRUCT.field_1)
ROM:01C5		 jp	 ADD_WORD16	 ; hl+=a
ROM:01C5 ; End of function sub_0_1BF
ROM:01C5 
ROM:01C8 
ROM:01C8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01C8 
ROM:01C8 ; Attributes: bp-based	frame
ROM:01C8 
ROM:01C8 sub_0_1C8:				 ; CODE	XREF: sub_0_16D+Ep
ROM:01C8					 ; sub_0_18A+8p sub_0_1A6+8p
ROM:01C8		 inc	 a
ROM:01C9		 cp	 (ix+IX_STRUCT.PORT_BASE_1)
ROM:01CC		 ret	 nz
ROM:01CD		 xor	 a
ROM:01CE		 ret	 
ROM:01CE ; End of function sub_0_1C8
ROM:01CE 
ROM:01CF 
ROM:01CF ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01CF 
ROM:01CF ; hl=host address
ROM:01CF ; returns b=value
ROM:01CF ; Attributes: bp-based	frame
ROM:01CF 
ROM:01CF BUS_READ8:				 ; CODE	XREF: ROM:007Fj
ROM:01CF					 ; BUS_READ8_STH+3j
ROM:01CF					 ; SIO_L1H_sub_0D28+8p
ROM:01CF					 ; MONITOR_ENTRY+51p
ROM:01CF					 ; MONITOR_sub_12A7+Fp	...
ROM:01CF		 push	 ix
ROM:01D1		 di	 
ROM:01D2		 call	 HOST_MEM_WINDOW ; a:h:l = address hi:mid:low
ROM:01D2					 ; ret hl=0x8xxx address
ROM:01D2					 ; clobbers ix with 24-bit host	mem address pointer
ROM:01D2					 ; 
ROM:01D5		 ld	 b, (hl)
ROM:01D6		 ld	 ix, unk_0_270A
ROM:01DA		 call	 SET_BUS_ADDRESS_LATCH ; ret hl=0x8xxx address
ROM:01DD		 ei	 
ROM:01DE		 pop	 ix
ROM:01E0		 ret	 
ROM:01E0 ; End of function BUS_READ8
ROM:01E0 
ROM:01E1 
ROM:01E1 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01E1 
ROM:01E1 ; b=data byte
ROM:01E1 ; Attributes: bp-based	frame
ROM:01E1 
ROM:01E1 BUS_WRITE8:				 ; CODE	XREF: ROM:0082j
ROM:01E1					 ; BUS_WRITE8_STH+3j
ROM:01E1					 ; sub_0_5B1+13p
ROM:01E1					 ; HANDLER_SIO_L0_COMMON+B7p
ROM:01E1					 ; XH_sub_0BA2+4Fp ...
ROM:01E1		 push	 ix
ROM:01E3		 di	 
ROM:01E4		 call	 HOST_MEM_WINDOW ; a:h:l = address hi:mid:low
ROM:01E4					 ; ret hl=0x8xxx address
ROM:01E4					 ; clobbers ix with 24-bit host	mem address pointer
ROM:01E4					 ; 
ROM:01E7		 ld	 (hl), b
ROM:01E8		 ld	 ix, unk_0_270A
ROM:01EC		 call	 SET_BUS_ADDRESS_LATCH ; ret hl=0x8xxx address
ROM:01EF		 ei	 
ROM:01F0		 pop	 ix
ROM:01F2		 ret	 
ROM:01F2 ; End of function BUS_WRITE8
ROM:01F2 
ROM:01F3 
ROM:01F3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01F3 
ROM:01F3 ; ix=24-bit host mem address pointer, (de)=destination
ROM:01F3 ; Attributes: bp-based	frame
ROM:01F3 
ROM:01F3 BUS_READ16:				 ; CODE	XREF: DO_NMI_HANDLER+61p
ROM:01F3					 ; SIO_L1H_sub_065F+10p
ROM:01F3					 ; sub_0_6AD+Dp
ROM:01F3					 ; SIO0_sub_070B+Cp
ROM:01F3					 ; SIO_L1H_sub_0D4C+8p	...
ROM:01F3		 ld	 bc, 2
ROM:01F6		 jr	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:01F6 ; End of function BUS_READ16		 ; bc=count, (de)=source
ROM:01F6					 ; ix=preserved, interrupts off/on
ROM:01F8 
ROM:01F8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01F8 
ROM:01F8 ; ix=24-bit host mem address pointer, (de)=source
ROM:01F8 ; Attributes: bp-based	frame
ROM:01F8 
ROM:01F8 BUS_WRITE16:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+95p
ROM:01F8					 ; XH_sub_0BA2+5Ap
ROM:01F8					 ; YH_sub_0F85+42p
ROM:01F8		 ld	 bc, 2
ROM:01FB		 jr	 WRITE_BUS_MEMORY ; hl=host address
ROM:01FB ; End of function BUS_WRITE16		 ; ix=24-bit host mem address pointer (for window)
ROM:01FB					 ; c=count, (de)=source
ROM:01FB					 ; ix=preserved, interrupts off/on
ROM:01FD 
ROM:01FD ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01FD 
ROM:01FD ; ix=24-bit host mem address pointer
ROM:01FD ; bc=count, (de)=source
ROM:01FD ; ix=preserved, interrupts off/on
ROM:01FD ; Attributes: bp-based	frame
ROM:01FD 
ROM:01FD READ_BUS_MEMORY:			 ; CODE	XREF: DO_NMI_HANDLER+46p
ROM:01FD					 ; BUS_READ16+3j
ROM:01FD					 ; SIO0_sub_070B+26p
ROM:01FD					 ; SIO_L1_sub_0E3D+Cp
ROM:01FD					 ; sub_0_E5B+Cp ...
ROM:01FD		 push	 ix
ROM:01FF		 di			 ; Interupts off
ROM:0200		 call	 HOST_MEM_WINDOW ; a:h:l = address hi:mid:low
ROM:0200					 ; ret hl=0x8xxx address
ROM:0200					 ; clobbers ix with 24-bit host	mem address pointer
ROM:0200					 ; 
ROM:0203 
ROM:0203 READ_BYTE:				 ; CODE	XREF: READ_BUS_MEMORY+Bj
ROM:0203		 ld	 a, (hl)	 ; hl=0x8xxx host mem address
ROM:0204		 ld	 (de), a
ROM:0205		 call	 NEXT_BUS_BYTE
ROM:0208		 jr	 nz, READ_BYTE	 ; hl=0x8xxx host mem address
ROM:020A		 ld	 ix, unk_0_270A
ROM:020E		 call	 SET_BUS_ADDRESS_LATCH ; Reset the latch
ROM:0211		 ei	 
ROM:0212		 pop	 ix		 ; Interrupts on
ROM:0214		 ret	 
ROM:0214 ; End of function READ_BUS_MEMORY
ROM:0214 
ROM:0215 
ROM:0215 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0215 
ROM:0215 ; hl=host address
ROM:0215 ; ix=24-bit host mem address pointer (for window)
ROM:0215 ; c=count, (de)=source
ROM:0215 ; ix=preserved, interrupts off/on
ROM:0215 ; Attributes: bp-based	frame
ROM:0215 
ROM:0215 WRITE_BUS_MEMORY:			 ; CODE	XREF: BUS_WRITE16+3j
ROM:0215					 ; DO_CHECK_STUFF+35p
ROM:0215					 ; SIO_sub_0C4A+1Dp
ROM:0215					 ; MONITOR_ENTRY+34p
ROM:0215					 ; MONITOR_ENTRY+44p ...
ROM:0215		 push	 ix
ROM:0217		 di	 
ROM:0218		 call	 HOST_MEM_WINDOW ; a:h:l = address hi:mid:low
ROM:0218					 ; ret hl=0x8xxx address
ROM:0218					 ; clobbers ix with 24-bit host	mem address pointer
ROM:0218					 ; 
ROM:021B 
ROM:021B loc_0_21B:				 ; CODE	XREF: WRITE_BUS_MEMORY+Bj
ROM:021B		 ld	 a, (de)
ROM:021C		 ld	 (hl), a
ROM:021D		 call	 NEXT_BUS_BYTE
ROM:0220		 jr	 nz, loc_0_21B
ROM:0222		 ld	 ix, unk_0_270A
ROM:0226		 call	 SET_BUS_ADDRESS_LATCH ; ret hl=0x8xxx address
ROM:0229		 ei	 
ROM:022A		 pop	 ix
ROM:022C		 ret	 
ROM:022C ; End of function WRITE_BUS_MEMORY
ROM:022C 
ROM:022D 
ROM:022D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:022D 
ROM:022D ; a:h:l = address hi:mid:low
ROM:022D ; ret hl=0x8xxx address
ROM:022D ; clobbers ix with 24-bit host	mem address pointer
ROM:022D ; 
ROM:022D ; Attributes: bp-based	frame
ROM:022D 
ROM:022D HOST_MEM_WINDOW:			 ; CODE	XREF: BUS_READ8+3p
ROM:022D					 ; BUS_WRITE8+3p
ROM:022D					 ; READ_BUS_MEMORY+3p
ROM:022D					 ; WRITE_BUS_MEMORY+3p
ROM:022D		 ld	 ix, BUS_ADDR
ROM:0231		 ld	 (ix+HOST_RAM_ADDR), l ; 0xfc
ROM:0234		 ld	 (ix+HOST_RAM_ADDR.MID), h ; 0xff
ROM:0237		 ld	 (ix+HOST_RAM_ADDR.HI),	a ; 0x01
ROM:023A		 jr	 SET_BUS_ADDRESS_LATCH ; ret hl=0x8xxx address
ROM:023A ; End of function HOST_MEM_WINDOW
ROM:023A 
ROM:023C 
ROM:023C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:023C 
ROM:023C ; Attributes: bp-based	frame
ROM:023C 
ROM:023C NEXT_BUS_BYTE:				 ; CODE	XREF: READ_BUS_MEMORY+8p
ROM:023C					 ; WRITE_BUS_MEMORY+8p
ROM:023C		 ld	 ix, BUS_ADDR
ROM:0240		 ld	 l, (ix+HOST_RAM_ADDR)
ROM:0243		 inc	 l
ROM:0244		 ld	 a, (_00_FROM_BEGINNING_0)
ROM:0247		 xor	 l
ROM:0248		 ld	 l, a
ROM:0249		 inc	 (ix+HOST_RAM_ADDR)
ROM:024C		 jp	 nz, loc_0_25B
ROM:024F		 inc	 (ix+HOST_RAM_ADDR.MID)
ROM:0252		 jp	 nz, loc_0_258
ROM:0255		 inc	 (ix+HOST_RAM_ADDR.HI)
ROM:0258 
ROM:0258 loc_0_258:				 ; CODE	XREF: NEXT_BUS_BYTE+16j
ROM:0258		 call	 SET_BUS_ADDRESS_LATCH ; ret hl=0x8xxx address
ROM:025B 
ROM:025B loc_0_25B:				 ; CODE	XREF: NEXT_BUS_BYTE+10j
ROM:025B		 inc	 de
ROM:025C		 dec	 bc
ROM:025D		 ld	 a, b
ROM:025E		 or	 c		 ; Is zero?
ROM:025F		 ret	 
ROM:025F ; End of function NEXT_BUS_BYTE
ROM:025F 
ROM:0260 
ROM:0260 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0260 
ROM:0260 ; ret hl=0x8xxx address
ROM:0260 ; Attributes: bp-based	frame
ROM:0260 
ROM:0260 SET_BUS_ADDRESS_LATCH:			 ; CODE	XREF: BUS_READ8+Bp
ROM:0260					 ; BUS_WRITE8+Bp
ROM:0260					 ; READ_BUS_MEMORY+11p
ROM:0260					 ; WRITE_BUS_MEMORY+11p
ROM:0260					 ; HOST_MEM_WINDOW+Dj ...
ROM:0260		 ld	 a, (ix+HOST_RAM_ADDR.HI)
ROM:0263		 add	 a, a
ROM:0264		 ld	 l, a
ROM:0265		 ld	 a, (ix+HOST_RAM_ADDR.MID)
ROM:0268		 rlca	 
ROM:0269		 and	 1
ROM:026B		 or	 l
ROM:026C		 ld	 (ADDRESS_LATCH_SET_VALUE), a
ROM:026F		 out	 (0), a
ROM:0271		 ld	 a, (ix+HOST_RAM_ADDR.MID)
ROM:0274		 or	 80h ; 'Ç'       ; Host addresses are at 0x80..
ROM:0276		 ld	 h, a		 ; Top part: 0x80...
ROM:0277		 ld	 l, (ix+HOST_RAM_ADDR)
ROM:027A		 ld	 a, (_00_FROM_BEGINNING_0)
ROM:027D		 xor	 l
ROM:027E		 ld	 l, a
ROM:027F		 ret	 
ROM:027F ; End of function SET_BUS_ADDRESS_LATCH
ROM:027F 
ROM:0280 
ROM:0280 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0280 
ROM:0280 ; Attributes: bp-based	frame
ROM:0280 
ROM:0280 sub_0_280:				 ; CODE	XREF: ROM:0079j
ROM:0280					 ; FDC_sub_0360+Cp
ROM:0280					 ; FDC_sub_0360+21p
ROM:0280					 ; INTH_sub_08A9+42p
ROM:0280					 ; FH_JUMP_SLOT3_sub_10F3+35p ...
ROM:0280		 call	 sub_0_292
ROM:0283		 ld	 (hl), 1
ROM:0285		 ret	 
ROM:0285 ; End of function sub_0_280
ROM:0285 
ROM:0286 
ROM:0286 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0286 
ROM:0286 ; Attributes: bp-based	frame
ROM:0286 
ROM:0286 sub_0_286:				 ; CODE	XREF: ROM:0076j
ROM:0286		 call	 sub_0_292
ROM:0289		 ld	 (hl), 0
ROM:028B		 ret	 
ROM:028B ; End of function sub_0_286
ROM:028B 
ROM:028C 
ROM:028C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:028C 
ROM:028C ; Attributes: bp-based	frame
ROM:028C 
ROM:028C ZERO_SAVED_TASK_sub_028C:		 ; CODE	XREF: ROM:0073j
ROM:028C					 ; SIO_sub_0807+3Bp
ROM:028C					 ; SIO_sub_0807+60p
ROM:028C					 ; HANDLER_SIO_L0_COMMON+1Ap
ROM:028C					 ; HANDLER_SIO_L0_COMMON+2Dp ...
ROM:028C		 ld	 hl, (SAVED_TASK_XXX)
ROM:028F		 ld	 (hl), 0
ROM:0291		 ret	 
ROM:0291 ; End of function ZERO_SAVED_TASK_sub_028C
ROM:0291 
ROM:0292 
ROM:0292 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0292 
ROM:0292 ; Attributes: bp-based	frame
ROM:0292 
ROM:0292 sub_0_292:				 ; CODE	XREF: sub_0_280p
ROM:0292					 ; sub_0_286p
ROM:0292		 ld	 a, l
ROM:0293		 add	 a, l
ROM:0294		 add	 a, l
ROM:0295		 ld	 l, a
ROM:0296		 ld	 h, 0
ROM:0298		 ld	 de, byte_0_26DC
ROM:029B		 add	 hl, de
ROM:029C		 ret	 
ROM:029C ; End of function sub_0_292
ROM:029C 
ROM:029D 
ROM:029D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:029D 
ROM:029D ; Called from *many* sites
ROM:029D ; Attributes: bp-based	frame
ROM:029D 
ROM:029D CHECK_STUFF:				 ; CODE	XREF: ROM:0070j
ROM:029D					 ; FDC_sub_0360+Fp
ROM:029D					 ; FDC_sub_0360+24p
ROM:029D					 ; SIO0_sub_070B+54p
ROM:029D					 ; SIO0_sub_070B+57p ...
ROM:029D		 push	 ix
ROM:029F		 push	 iy
ROM:02A1		 push	 hl
ROM:02A2		 push	 de
ROM:02A3		 push	 bc
ROM:02A4		 push	 af
ROM:02A5		 call	 DO_CHECK_STUFF
ROM:02A8		 ld	 hl, 0
ROM:02AB		 add	 hl, sp
ROM:02AC		 ex	 de, hl
ROM:02AD		 ld	 hl, (SAVED_TASK_XXX)
ROM:02B0		 inc	 hl
ROM:02B1		 ld	 (hl), e
ROM:02B2		 inc	 hl
ROM:02B3		 ld	 (hl), d
ROM:02B3 ; End of function CHECK_STUFF
ROM:02B3 
ROM:02B4 
ROM:02B4 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:02B4 
ROM:02B4 ; Switch task?
ROM:02B4 ; Attributes: bp-based	frame
ROM:02B4 
ROM:02B4 TAIL_sub_02B4:				 ; CODE	XREF: DO_NMI_HANDLER+A2j
ROM:02B4		 call	 sub_0_2C9
ROM:02B7		 ld	 (SAVED_TASK_XXX), hl
ROM:02BA		 inc	 hl
ROM:02BB		 ld	 e, (hl)
ROM:02BC		 inc	 hl
ROM:02BD		 ld	 d, (hl)
ROM:02BE		 ex	 de, hl
ROM:02BF		 ld	 sp, hl
ROM:02C0		 pop	 af
ROM:02C1		 pop	 bc
ROM:02C2		 pop	 de
ROM:02C3		 pop	 hl
ROM:02C4		 pop	 iy
ROM:02C6		 pop	 ix
ROM:02C8		 ret	 
ROM:02C8 ; End of function TAIL_sub_02B4
ROM:02C8 
ROM:02C9 
ROM:02C9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:02C9 
ROM:02C9 ; Attributes: bp-based	frame
ROM:02C9 
ROM:02C9 sub_0_2C9:				 ; CODE	XREF: TAIL_sub_02B4p
ROM:02C9					 ; sub_0_2C9+10j
ROM:02C9		 ld	 hl, MONITOR_unk_26DA+1
ROM:02CC		 inc	 (hl)
ROM:02CD		 ld	 a, 9
ROM:02CF		 cp	 (hl)
ROM:02D0		 jr	 nc, loc_0_2D4
ROM:02D2		 ld	 (hl), 0
ROM:02D4 
ROM:02D4 loc_0_2D4:				 ; CODE	XREF: sub_0_2C9+7j
ROM:02D4		 ld	 l, (hl)
ROM:02D5		 call	 sub_0_2DB
ROM:02D8		 ret	 nz
ROM:02D9		 jr	 sub_0_2C9
ROM:02D9 ; End of function sub_0_2C9
ROM:02D9 
ROM:02DB 
ROM:02DB ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:02DB 
ROM:02DB ; Attributes: bp-based	frame
ROM:02DB 
ROM:02DB sub_0_2DB:				 ; CODE	XREF: sub_0_2C9+Cp
ROM:02DB		 ld	 h, 0
ROM:02DD		 add	 hl, hl
ROM:02DE		 ld	 de, off_0_1CB7
ROM:02E1		 add	 hl, de
ROM:02E2		 ld	 e, (hl)
ROM:02E3		 inc	 hl
ROM:02E4		 ld	 d, (hl)
ROM:02E5		 ex	 de, hl
ROM:02E6		 ld	 a, (hl)
ROM:02E7		 or	 a
ROM:02E8		 ret	 
ROM:02E8 ; End of function sub_0_2DB
ROM:02E8 
ROM:02E9 
ROM:02E9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:02E9 
ROM:02E9 ; a=1,2,3..; de=handler addr
ROM:02E9 ; Attributes: bp-based	frame
ROM:02E9 
ROM:02E9 sub_0_2E9:				 ; CODE	XREF: PICK_CALLBACK+9p
ROM:02E9		 ld	 hl, (SAVE_DE_ADDR)
ROM:02EC		 dec	 hl
ROM:02ED		 ld	 (hl), d
ROM:02EE		 dec	 hl
ROM:02EF		 ld	 (hl), e
ROM:02F0		 ld	 de, 65524
ROM:02F3		 add	 hl, de
ROM:02F4		 push	 hl
ROM:02F5		 ld	 l, a
ROM:02F6		 add	 a, l
ROM:02F7		 add	 a, l
ROM:02F8		 ld	 hl, byte_0_26DC
ROM:02FB		 call	 ADD_WORD16	 ; hl+=a
ROM:02FE		 ld	 (hl), 1
ROM:0300		 inc	 hl
ROM:0301		 pop	 de
ROM:0302		 ld	 (hl), e
ROM:0303		 inc	 hl
ROM:0304		 ld	 (hl), d
ROM:0305		 ld	 hl, 65496
ROM:0308		 add	 hl, de
ROM:0309		 ld	 (SAVE_DE_ADDR), hl
ROM:030C		 ret	 
ROM:030C ; End of function sub_0_2E9
ROM:030C 
ROM:030D 
ROM:030D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:030D 
ROM:030D ; Attributes: bp-based	frame
ROM:030D 
ROM:030D PICK_CALLBACK:				 ; CODE	XREF: DO_NMI_HANDLER+7Bp
ROM:030D					 ; PICK_CALLBACK+Dj
ROM:030D		 ld	 a, (hl)	 ; a=0,	1, 2...
ROM:030E		 inc	 hl
ROM:030F		 or	 a		 ; OR with itself. S flag = bit	7 on
ROM:0310		 ret	 m		 ; S flag means	we've reached a -1 = 0xff
ROM:0311		 ld	 e, (hl)	 ; e=handler addr lo
ROM:0312		 inc	 hl
ROM:0313		 ld	 d, (hl)	 ;  e=handler addr hi
ROM:0313					 ; de=handler addr
ROM:0314		 inc	 hl
ROM:0315		 push	 hl
ROM:0316		 call	 sub_0_2E9	 ; a=1,2,3..; de=handler addr
ROM:0319		 pop	 hl
ROM:031A		 jp	 PICK_CALLBACK
ROM:031A ; End of function PICK_CALLBACK
ROM:031A 
ROM:031D 
ROM:031D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:031D 
ROM:031D ; Attributes: bp-based	frame
ROM:031D 
ROM:031D INIT_PIO:				 ; CODE	XREF: DO_NMI_HANDLER+1Ap
ROM:031D					 ; DO_NMI_HANDLER+1Dp
ROM:031D		 ld	 hl, PIO_COMMAND_A_INIT
ROM:0320		 ld	 bc, 535h	 ; PIO - Command port A
ROM:0323		 otir	 
ROM:0325		 ld	 hl, PIO_COMMAND_B_INIT
ROM:0328		 ld	 bc, 537h	 ; PIO - Command port B
ROM:032B		 otir	 
ROM:032D		 ret	 
ROM:032D ; ───────────────────────────────────────────────────────────────────────────
ROM:032E PIO_COMMAND_A_INIT:.db	11001111b, 11011111b, 0, 110111b, 11111111b
ROM:032E					 ; DATA	XREF: INIT_PIOo
ROM:032E					 ; 1. 1100 1111	  Mode control
ROM:032E					 ; 2.  1101 1111    IIOI IIII (5 = output)
ROM:032E					 ; 3. 0000 0000	  Interrupt vector 0
ROM:032E					 ; 4. 0011 0111	  Interrupt control
ROM:032E					 ; 5. 1111 1111	    Disable all
ROM:0333 PIO_COMMAND_B_INIT:.db	11001111b, 10000100b, 0, 110111b, 11111111b
ROM:0333					 ; DATA	XREF: INIT_PIO+8o
ROM:0333 ; End of function INIT_PIO		 ; 1. 1100 1111	  Mode control
ROM:0333					 ; 2.  1000 0100    IOOO OIOO
ROM:0333					 ; 3. 0000 0000	  Interrupt vector 0
ROM:0333					 ; 4. 0011 0111	  Interrupt control
ROM:0333					 ; 5. 1111 1111	    Disable all
ROM:0338 
ROM:0338 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0338 
ROM:0338 ; a=result
ROM:0338 ; Attributes: bp-based	frame
ROM:0338 
ROM:0338 PIO_A_NEG_LOW_4_BITS:			 ; CODE	XREF: FDC_NEVIEM_sub_03B6+6p
ROM:0338					 ; SIO_L1H_sub_0D4C+45p
ROM:0338		 in	 a, (34h)
ROM:033A		 cpl			 ; complement ~
ROM:033B		 and	 0Fh
ROM:033D		 ret	 
ROM:033D ; End of function PIO_A_NEG_LOW_4_BITS
ROM:033D 
ROM:033E 
ROM:033E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:033E 
ROM:033E ; a=result
ROM:033E ; Attributes: bp-based	frame
ROM:033E 
ROM:033E PIO_A_GET_BIT6:			 ; CODE	XREF: DO_PIO_A_GET_BIT6p
ROM:033E		 in	 a, (34h)
ROM:0340		 and	 40h ; '@'
ROM:0342		 ret	 
ROM:0342 ; End of function PIO_A_GET_BIT6
ROM:0342 
ROM:0343 
ROM:0343 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0343 
ROM:0343 ; result: a, z	flag
ROM:0343 ; Attributes: bp-based	frame
ROM:0343 
ROM:0343 PIO_A_GET_BIT7_FDC_INTRQ:		 ; CODE	XREF: FDC_READ_TRACK+8p
ROM:0343					 ; FDC_WRITE_TRACK+8p
ROM:0343					 ; FDC_RUN_CMD+5p
ROM:0343		 in	 a, (34h)
ROM:0345		 and	 80h ; 'Ç'
ROM:0347		 ret	 
ROM:0347 ; End of function PIO_A_GET_BIT7_FDC_INTRQ
ROM:0347 
ROM:0348 
ROM:0348 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0348 
ROM:0348 ; Goes	to an unpopulated pin (via a driver) a=result
ROM:0348 ; Attributes: bp-based	frame
ROM:0348 
ROM:0348 orphan_PIO_B_GET_BIT2_AUX_FDC:
ROM:0348		 in	 a, (36h)
ROM:034A		 and	 4
ROM:034C		 ret	 
ROM:034C ; End of function orphan_PIO_B_GET_BIT2_AUX_FDC
ROM:034C 
ROM:034D 
ROM:034D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:034D 
ROM:034D ; a=result
ROM:034D ; Attributes: bp-based	frame
ROM:034D 
ROM:034D orphan_PIO_B_GET_BIT7_PIT_OUT2:
ROM:034D		 in	 a, (36h)
ROM:034F		 and	 80h ; 'Ç'
ROM:0351		 ret	 
ROM:0351 ; End of function orphan_PIO_B_GET_BIT7_PIT_OUT2
ROM:0351 
ROM:0352 
ROM:0352 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0352 
ROM:0352 ; Attributes: bp-based	frame
ROM:0352 
ROM:0352 PIO_A_BIT5_ON:				 ; CODE	XREF: DO_CHECK_STUFF+42j
ROM:0352		 in	 a, (34h)
ROM:0354		 or	 20h ; ' '
ROM:0356		 out	 (34h),	a
ROM:0358		 ret	 
ROM:0358 ; End of function PIO_A_BIT5_ON
ROM:0358 
ROM:0359 
ROM:0359 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0359 
ROM:0359 ; Attributes: bp-based	frame
ROM:0359 
ROM:0359 PIO_A_BIT5_OFF:			 ; CODE	XREF: DO_NMI_HANDLER+49p
ROM:0359					 ; DO_CHECK_STUFF+15p
ROM:0359		 in	 a, (34h)
ROM:035B		 and	 0DFh ;	'▀'
ROM:035D		 out	 (34h),	a
ROM:035F		 ret	 
ROM:035F ; End of function PIO_A_BIT5_OFF
ROM:035F 
ROM:0360 
ROM:0360 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0360 
ROM:0360 ; Called on sector/track read write. PORTB low	2 bits touched
ROM:0360 ; Attributes: bp-based	frame
ROM:0360 
ROM:0360 FDC_sub_0360:				 ; CODE	XREF: sub_0_8F1+5p
ROM:0360					 ; FDC_SUBHANDLER02_READ_SECTOR+Fp
ROM:0360					 ; FDC_SUBHANDLER03_WRITE_SECTOR+Fp
ROM:0360					 ; FDC_SUBHANDLER05_READ_TRACK+Fp
ROM:0360					 ; FDC_SUBHANDLER06_WRITE_TRACK+Fp
ROM:0360		 push	 hl
ROM:0361 
ROM:0361 loc_0_361:				 ; CODE	XREF: FDC_sub_0360+12j
ROM:0361		 ld	 hl, unk_0_2552
ROM:0364		 ld	 a, (hl)
ROM:0365		 or	 a
ROM:0366		 jr	 z, loc_0_374
ROM:0368		 ld	 a, (byte_0_2551)
ROM:036B		 ld	 l, a
ROM:036C		 call	 sub_0_280
ROM:036F		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0372		 jr	 loc_0_361
ROM:0374 ; ───────────────────────────────────────────────────────────────────────────
ROM:0374 
ROM:0374 loc_0_374:				 ; CODE	XREF: FDC_sub_0360+6j
ROM:0374		 ld	 (hl), 1
ROM:0376 
ROM:0376 loc_0_376:				 ; CODE	XREF: FDC_sub_0360+27j
ROM:0376		 ld	 hl, unk_0_2553
ROM:0379		 ld	 a, (hl)
ROM:037A		 or	 a
ROM:037B		 jr	 z, loc_0_389
ROM:037D		 ld	 a, (byte_0_2551)
ROM:0380		 ld	 l, a
ROM:0381		 call	 sub_0_280
ROM:0384		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0387		 jr	 loc_0_376
ROM:0389 ; ───────────────────────────────────────────────────────────────────────────
ROM:0389 
ROM:0389 loc_0_389:				 ; CODE	XREF: FDC_sub_0360+1Bj
ROM:0389		 ld	 (hl), 1
ROM:038B		 dec	 hl
ROM:038C		 ld	 (hl), 0
ROM:038E		 pop	 hl
ROM:038F		 ld	 a, h
ROM:0390		 ld	 (byte_0_2551),	a
ROM:0393		 ld	 a, l
ROM:0394		 cp	 4
ROM:0396		 ccf	 
ROM:0397		 jr	 c, ZERO_TO_SOME_VAR_sub_03AC
ROM:0399		 ld	 c, 0
ROM:039B		 call	 SHIFT_OR_WHAT	 ; c=by	how much
ROM:039E		 in	 a, (36h)
ROM:03A0		 and	 0FCh ;	'³'      ; BIT1 off
ROM:03A2		 or	 l		 ; BIT0	on
ROM:03A3		 out	 (36h),	a
ROM:03A5		 ret	 
ROM:03A5 ; End of function FDC_sub_0360
ROM:03A5 
ROM:03A6 
ROM:03A6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03A6 
ROM:03A6 ; Attributes: bp-based	frame
ROM:03A6 
ROM:03A6 SIO_sub_03A6:				 ; CODE	XREF: SIO_sub_0807+1Dp
ROM:03A6		 ld	 hl, unk_0_2552
ROM:03A9		 ld	 a, (hl)
ROM:03AA		 or	 a
ROM:03AB		 ret	 z
ROM:03AB ; End of function SIO_sub_03A6
ROM:03AB 
ROM:03AC 
ROM:03AC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03AC 
ROM:03AC ; Attributes: bp-based	frame
ROM:03AC 
ROM:03AC ZERO_TO_SOME_VAR_sub_03AC:		 ; CODE	XREF: DO_NMI_HANDLER+9Ap
ROM:03AC					 ; FDC_sub_0360+37j
ROM:03AC					 ; SIO0_sub_06F3+6p
ROM:03AC					 ; FDC_SUBHANDLER02_READ_SECTOR+1Bp
ROM:03AC					 ; FDC_SUBHANDLER03_WRITE_SECTOR+1Bp ...
ROM:03AC		 ld	 hl, unk_0_2553
ROM:03AF		 ld	 (hl), 0
ROM:03B1		 ret	 
ROM:03B1 ; End of function ZERO_TO_SOME_VAR_sub_03AC
ROM:03B1 
ROM:03B2 
ROM:03B2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03B2 
ROM:03B2 ; Attributes: bp-based	frame
ROM:03B2 
ROM:03B2 FDC_SELECT_DRIVE:			 ; CODE	XREF: HANDLER08_FDC_sub_1547+1Ep
ROM:03B2					 ; HANDLER08_FDC_sub_1547+56p
ROM:03B2		 ld	 b, 0
ROM:03B4		 jr	 FDC_SET_DRIVE_SELECT
ROM:03B4 ; End of function FDC_SELECT_DRIVE
ROM:03B4 
ROM:03B6 
ROM:03B6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03B6 
ROM:03B6 ; A=param (2?)
ROM:03B6 ; Attributes: bp-based	frame
ROM:03B6 
ROM:03B6 FDC_NEVIEM_sub_03B6:			 ; CODE	XREF: HANDLER08_FDC_sub_1547+6Dp
ROM:03B6					 ; FDC_COMMON_HANDLER+3p
ROM:03B6		 cp	 2
ROM:03B8		 ccf	 
ROM:03B9		 ret	 c
ROM:03BA		 inc	 a
ROM:03BB		 ld	 b, a
ROM:03BC		 call	 PIO_A_NEG_LOW_4_BITS ;	a=result
ROM:03BF		 and	 b
ROM:03C0		 scf	 
ROM:03C1		 ret	 z
ROM:03C1 ; End of function FDC_NEVIEM_sub_03B6
ROM:03C1 
ROM:03C2 
ROM:03C2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03C2 
ROM:03C2 ; Attributes: bp-based	frame
ROM:03C2 
ROM:03C2 FDC_SET_DRIVE_SELECT:			 ; CODE	XREF: FDC_SELECT_DRIVE+2j
ROM:03C2		 ld	 a, b
ROM:03C3		 dec	 a
ROM:03C4		 ld	 (FDC_DRIVE_OR_WHAT), a
ROM:03C7		 ld	 l, b
ROM:03C8		 ld	 c, 3
ROM:03CA		 call	 SHIFT_OR_WHAT	 ; c=by	how much
ROM:03CD		 in	 a, (36h)
ROM:03CF		 and	 0E7h ;	'þ'      ; BIT3 BIT4 off DS0/DS1
ROM:03D1		 or	 l		 ; BIT0	on
ROM:03D2		 xor	 18h
ROM:03D4		 out	 (36h),	a
ROM:03D6		 ret	 
ROM:03D6 ; End of function FDC_SET_DRIVE_SELECT
ROM:03D6 
ROM:03D7 
ROM:03D7 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03D7 
ROM:03D7 ; Attributes: bp-based	frame
ROM:03D7 
ROM:03D7 FDC_SET_SIDE:				 ; CODE	XREF: FDC_COMMON_HANDLER+4Dp
ROM:03D7					 ; FDC_READ_SECTOR_DMA_sub_183D+14p
ROM:03D7					 ; FDC_WRITE_SECTOR_DMA_sub_1864+14p
ROM:03D7		 cp	 2
ROM:03D9		 ccf	 
ROM:03DA		 ret	 c
ROM:03DB		 ld	 l, a
ROM:03DC		 ld	 c, 5
ROM:03DE		 call	 SHIFT_OR_WHAT	 ; c=by	how much
ROM:03E1		 in	 a, (36h)
ROM:03E3		 and	 0DFh ;	'▀'      ; BIT5 off (SIDE 0)
ROM:03E5		 or	 l		 ; BIT0	in
ROM:03E6		 out	 (36h),	a
ROM:03E8		 ret	 
ROM:03E8 ; End of function FDC_SET_SIDE
ROM:03E8 
ROM:03E9 
ROM:03E9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03E9 
ROM:03E9 ; Attributes: bp-based	frame
ROM:03E9 
ROM:03E9 FDC_DMA_WHAT:				 ; CODE	XREF: FDC_READ_SECTOR_DMA_sub_183D+Ep
ROM:03E9					 ; FDC_WRITE_SECTOR_DMA_sub_1864+Ep
ROM:03E9		 cp	 2
ROM:03EB		 ccf	 
ROM:03EC		 ret	 c
ROM:03ED		 ld	 l, a
ROM:03EE		 ld	 c, 6
ROM:03F0		 call	 SHIFT_OR_WHAT	 ; c=by	how much
ROM:03F3		 in	 a, (36h)
ROM:03F5		 and	 0BFh ;	'┐'      ; what
ROM:03F7		 or	 l		 ; what
ROM:03F8		 out	 (40h),	a
ROM:03FA		 ret	 
ROM:03FA ; End of function FDC_DMA_WHAT
ROM:03FA 
ROM:03FB 
ROM:03FB ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03FB 
ROM:03FB ; c=by	how much
ROM:03FB ; Attributes: bp-based	frame
ROM:03FB 
ROM:03FB SHIFT_OR_WHAT:				 ; CODE	XREF: FDC_sub_0360+3Bp
ROM:03FB					 ; FDC_SET_DRIVE_SELECT+8p
ROM:03FB					 ; FDC_SET_SIDE+7p
ROM:03FB					 ; FDC_DMA_WHAT+7p
ROM:03FB					 ; SHIFT_OR_WHAT+3j
ROM:03FB		 dec	 c
ROM:03FC		 ret	 m
ROM:03FD		 add	 hl, hl
ROM:03FE		 jr	 SHIFT_OR_WHAT	 ; c=by	how much
ROM:03FE ; End of function SHIFT_OR_WHAT
ROM:03FE 
ROM:0400 
ROM:0400 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0400 
ROM:0400 ; Attributes: bp-based	frame
ROM:0400 
ROM:0400 DO_CHECK_STUFF:			 ; CODE	XREF: CHECK_STUFF+8p
ROM:0400		 ld	 hl, HOST_MEM_byte_26FE
ROM:0403		 di	 
ROM:0404		 ld	 a, (hl)
ROM:0405		 ld	 (hl), 0
ROM:0407		 ei	 
ROM:0408		 or	 a
ROM:0409		 ret	 z
ROM:040A		 call	 FDC_CHECK_sub_0478
ROM:040D		 ld	 ix, XXX_word_2260
ROM:0411		 bit	 2, (ix+IX_STRUCT.PORT_BASE_1)
ROM:0415		 call	 z, PIO_A_BIT5_OFF
ROM:0418		 bit	 3, (ix+IX_STRUCT.PORT_BASE_1)
ROM:041C		 jr	 nz, loc_0_429
ROM:041E		 ld	 a, (ix+IX_STRUCT.PORT_BASE_2)
ROM:0421		 or	 (ix+IX_STRUCT.field_4)
ROM:0424		 and	 88h ; 'ê'
ROM:0426		 jp	 z, loc_0_42D
ROM:0429 
ROM:0429 loc_0_429:				 ; CODE	XREF: DO_CHECK_STUFF+1Cj
ROM:0429		 set	 2, (ix+IX_STRUCT.PORT_BASE_1)
ROM:042D 
ROM:042D loc_0_42D:				 ; CODE	XREF: DO_CHECK_STUFF+26j
ROM:042D		 ld	 e, SYS_SYS_STAT ; SYS - System	Status Register
ROM:042F		 call	 MAKE_CCB_ADDRESS ; ???
ROM:042F					 ; e=offset from CCB (0x0416)
ROM:042F					 ; returns hl=host address de=original hl
ROM:0432		 ld	 bc, 3
ROM:0435		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:0435					 ; ix=24-bit host mem address pointer (for window)
ROM:0435					 ; c=count, (de)=source
ROM:0435					 ; ix=preserved, interrupts off/on
ROM:0438		 bit	 1, (ix+IX_STRUCT.PORT_BASE_1)
ROM:043C		 ret	 z
ROM:043D		 bit	 2, (ix+IX_STRUCT.PORT_BASE_1)
ROM:0441		 ret	 z
ROM:0442		 jp	 PIO_A_BIT5_ON
ROM:0442 ; End of function DO_CHECK_STUFF
ROM:0442 
ROM:0445 
ROM:0445 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0445 
ROM:0445 ; Attributes: bp-based	frame
ROM:0445 
ROM:0445 TAIL_EI:				 ; CODE	XREF: ROM:007Cj
ROM:0445					 ; sub_0_458+14j
ROM:0445					 ; FDC_CHECK_sub_0478+2Fj
ROM:0445					 ; sub_0_4E6+9j sub_0_4F2+Aj ...
ROM:0445		 push	 af
ROM:0446		 ld	 a, (FF_FROM_BEGINNING)	; NMI handler puts FF here first
ROM:0449		 or	 a
ROM:044A		 jr	 nz, loc_0_44D
ROM:044C		 ei	 
ROM:044D 
ROM:044D loc_0_44D:				 ; CODE	XREF: TAIL_EI+5j
ROM:044D		 pop	 af
ROM:044E		 ret	 
ROM:044E ; End of function TAIL_EI
ROM:044E 
ROM:044F 
ROM:044F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:044F 
ROM:044F ; Attributes: bp-based	frame
ROM:044F 
ROM:044F sub_0_44F:				 ; CODE	XREF: XH_sub_0BA2+20p
ROM:044F					 ; XH_sub_0BA2+6Bp
ROM:044F					 ; SIO_L1H_sub_0C96+2p
ROM:044F					 ; SIO_L1H_sub_0C96+32p
ROM:044F					 ; SIO_L1H_sub_0C96+3Cp ...
ROM:044F		 push	 iy
ROM:0451		 pop	 hl
ROM:0452		 ld	 a, b
ROM:0453		 call	 ADD_WORD16	 ; hl+=a
ROM:0456		 ld	 a, (hl)
ROM:0457		 ret	 
ROM:0457 ; End of function sub_0_44F
ROM:0457 
ROM:0458 
ROM:0458 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0458 
ROM:0458 ; Attributes: bp-based	frame
ROM:0458 
ROM:0458 sub_0_458:				 ; CODE	XREF: sub_0_969+12p
ROM:0458					 ; sub_0_996+11p
ROM:0458					 ; HANDLER_SIO_L0_COMMON+6Bp
ROM:0458					 ; SIO_sub_0B40+16p
ROM:0458					 ; sub_0_E96+Bp ...
ROM:0458		 call	 sub_0_46F
ROM:045B		 di	 
ROM:045C		 or	 (hl)
ROM:045D		 jp	 loc_0_466
ROM:0460 ; ───────────────────────────────────────────────────────────────────────────
ROM:0460 
ROM:0460 loc_0_460:				 ; CODE	XREF: sub_0_6AD+33p
ROM:0460					 ; sub_0_6AD+3Bp sub_0_987+Bp
ROM:0460					 ; sub_0_9B7+10p
ROM:0460					 ; SIO_L1H_sub_0DE3+5p	...
ROM:0460		 call	 sub_0_46F
ROM:0463		 cpl	 
ROM:0464		 di	 
ROM:0465		 and	 (hl)
ROM:0466 
ROM:0466 loc_0_466:				 ; CODE	XREF: sub_0_458+5j
ROM:0466		 ld	 (hl), a
ROM:0467		 ld	 a, 1
ROM:0469		 ld	 (HOST_MEM_byte_26FE), a
ROM:046C		 jp	 TAIL_EI
ROM:046C ; End of function sub_0_458
ROM:046C 
ROM:046F 
ROM:046F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:046F 
ROM:046F ; Attributes: bp-based	frame
ROM:046F 
ROM:046F sub_0_46F:				 ; CODE	XREF: sub_0_458p
ROM:046F					 ; sub_0_458+8p
ROM:046F		 ld	 hl, unk_0_2700
ROM:0472		 add	 a, a
ROM:0473		 call	 ADD_WORD16	 ; hl+=a
ROM:0476		 ld	 a, b
ROM:0477		 ret	 
ROM:0477 ; End of function sub_0_46F
ROM:0477 
ROM:0478 
ROM:0478 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0478 
ROM:0478 ; Attributes: bp-based	frame
ROM:0478 
ROM:0478 FDC_CHECK_sub_0478:			 ; CODE	XREF: DO_CHECK_STUFF+Ap
ROM:0478		 di	 
ROM:0479		 ld	 hl, 0
ROM:047C		 ld	 b, 8
ROM:047E 
ROM:047E loc_0_47E:				 ; CODE	XREF: FDC_CHECK_sub_0478+29j
ROM:047E		 ld	 de, unk_0_270A
ROM:0481		 ld	 c, 5
ROM:0483		 add	 hl, hl
ROM:0484		 add	 hl, hl
ROM:0485		 add	 hl, hl
ROM:0486		 add	 hl, hl
ROM:0487		 ex	 de, hl
ROM:0488 
ROM:0488 loc_0_488:				 ; CODE	XREF: FDC_CHECK_sub_0478+23j
ROM:0488		 ld	 a, (hl)
ROM:0489		 dec	 hl
ROM:048A		 and	 b
ROM:048B		 jp	 z, loc_0_499
ROM:048E		 and	 (hl)
ROM:048F		 jp	 z, loc_0_499
ROM:0492		 ld	 a, e
ROM:0493		 and	 0F0h ;	'­'
ROM:0495		 or	 c
ROM:0496		 or	 8
ROM:0498		 ld	 e, a
ROM:0499 
ROM:0499 loc_0_499:				 ; CODE	XREF: FDC_CHECK_sub_0478+13j
ROM:0499					 ; FDC_CHECK_sub_0478+17j
ROM:0499		 dec	 hl
ROM:049A		 dec	 c
ROM:049B		 jp	 p, loc_0_488
ROM:049E		 ex	 de, hl
ROM:049F		 rrc	 b
ROM:04A1		 jp	 nc, loc_0_47E
ROM:04A4		 ld	 (_00_FROM_BEGINNING_1), hl
ROM:04A7		 jp	 TAIL_EI
ROM:04A7 ; End of function FDC_CHECK_sub_0478
ROM:04A7 
ROM:04AA 
ROM:04AA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04AA 
ROM:04AA ; Attributes: bp-based	frame
ROM:04AA 
ROM:04AA FDC_sub_04AA_FALLTHRU:			 ; CODE	XREF: FDC_COMMON_HANDLER+64p
ROM:04AA					 ; orphan_sub_193B+2p
ROM:04AA		 ld	 a, (FDC_DRIVE_OR_WHAT)
ROM:04AD		 or	 a
ROM:04AE		 ld	 a, 0Ah
ROM:04B0		 jr	 z, loc_0_4B4
ROM:04B2		 add	 a, 20h	; ' '
ROM:04B4 
ROM:04B4 loc_0_4B4:				 ; CODE	XREF: FDC_sub_04AA_FALLTHRU+6j
ROM:04B4		 add	 a, e
ROM:04B5		 ld	 e, a		 ; FALL_THROUGH
ROM:04B5 ; End of function FDC_sub_04AA_FALLTHRU
ROM:04B5 
ROM:04B6 
ROM:04B6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04B6 
ROM:04B6 ; Attributes: bp-based	frame
ROM:04B6 
ROM:04B6 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU:	 ; CODE	XREF: HANDLER08_FDC_sub_1547+ADp
ROM:04B6					 ; HANDLER08_FDC_sub_1547+B8p
ROM:04B6					 ; HANDLER08_FDC_sub_1547+DBp
ROM:04B6					 ; HANDLER08_FDC_sub_1547+E8p
ROM:04B6					 ; HANDLER08_FDC_sub_1547+14Cp	...
ROM:04B6		 ld	 a, 6		 ; FALL_THROUGH
ROM:04B6 ; End of function FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:04B6 
ROM:04B8 
ROM:04B8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04B8 
ROM:04B8 ; Attributes: bp-based	frame
ROM:04B8 
ROM:04B8 MAKE_CCB_ADDR_FALLTHRU:		 ; CODE	XREF: SIO_L1H_sub_065F+Cp
ROM:04B8					 ; sub_0_6AD+9p
ROM:04B8					 ; SIO0_sub_070B+8p
ROM:04B8					 ; SIO0_sub_070B+1Fp
ROM:04B8					 ; SIO_sub_0807+5Ap ...
ROM:04B8		 ld	 hl, byte_0_1CD2
ROM:04BB		 call	 ADD_WORD16	 ; hl+=a
ROM:04BE		 ld	 a, (hl)
ROM:04BF		 add	 a, 6
ROM:04C1		 add	 a, e
ROM:04C2		 ld	 e, a		 ; FALL_THROUGH
ROM:04C2 ; End of function MAKE_CCB_ADDR_FALLTHRU
ROM:04C2 
ROM:04C3 
ROM:04C3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04C3 
ROM:04C3 ; ???
ROM:04C3 ; e=offset from CCB (0x0416)
ROM:04C3 ; returns hl=host address de=original hl
ROM:04C3 ; Attributes: bp-based	frame
ROM:04C3 
ROM:04C3 MAKE_CCB_ADDRESS:			 ; CODE	XREF: DO_CHECK_STUFF+2Fp
ROM:04C3					 ; UNKNOWN_SYS_REG_ADDR+4j
ROM:04C3					 ; MONITOR_ENTRY+17p
ROM:04C3					 ; MONITOR_PUTCHAR+29p
ROM:04C3					 ; HANDLER00_sub_1A3D+5p ...
ROM:04C3		 ld	 a, e		 ; e=offset (0x05)
ROM:04C4		 ld	 hl, XXX_word_2260
ROM:04C7		 call	 ADD_WORD16	 ; hl+=a
ROM:04CA		 push	 hl
ROM:04CB		 ld	 a, e
ROM:04CC		 ld	 hl, CCB_PTR
ROM:04CF		 add	 a, (hl)	 ; add CCB offset to there
ROM:04D0		 ld	 e, a		 ; bottom byte 0x1b
ROM:04D1		 call	 XXX_ADD_WITH_CARRY
ROM:04D4		 ld	 d, a		 ; top byte. 0x04
ROM:04D5		 call	 XXX_ADD_WITH_CARRY
ROM:04D8		 ex	 de, hl		 ; hl=host address
ROM:04D9		 pop	 de
ROM:04DA		 ret	 
ROM:04DA ; End of function MAKE_CCB_ADDRESS
ROM:04DA 
ROM:04DB 
ROM:04DB ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04DB 
ROM:04DB ; Attributes: bp-based	frame
ROM:04DB 
ROM:04DB XXX_ADD_WITH_CARRY:			 ; CODE	XREF: MAKE_CCB_ADDRESS+Ep
ROM:04DB					 ; MAKE_CCB_ADDRESS+12p
ROM:04DB		 inc	 hl
ROM:04DC		 ld	 a, 0
ROM:04DE		 adc	 a, (hl)
ROM:04DF		 ret	 
ROM:04DF ; End of function XXX_ADD_WITH_CARRY
ROM:04DF 
ROM:04E0 
ROM:04E0 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04E0 
ROM:04E0 ; Maybe RTC?
ROM:04E0 ; Attributes: bp-based	frame
ROM:04E0 
ROM:04E0 UNKNOWN_SYS_REG_ADDR:			 ; CODE	XREF: HANDLER00_sub_1A3D+5Dp
ROM:04E0					 ; HANDLER09_RTC_sub_1AD7+15p
ROM:04E0					 ; HANDLER09_RTC_sub_1AD7+B1p
ROM:04E0					 ; HANDLER09_RTC_sub_1AD7+BCp
ROM:04E0		 ld	 a, UNKNOWN	 ; UNKNOWN
ROM:04E2		 add	 a, e
ROM:04E3		 ld	 e, a
ROM:04E4		 jr	 MAKE_CCB_ADDRESS ; ???
ROM:04E4 ; End of function UNKNOWN_SYS_REG_ADDR	 ; e=offset from CCB (0x0416)
ROM:04E4					 ; returns hl=host address de=original hl
ROM:04E6 
ROM:04E6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04E6 
ROM:04E6 ; (ix+2) == ioport-1
ROM:04E6 ; b = data out
ROM:04E6 ; a = data in
ROM:04E6 ; Attributes: bp-based	frame
ROM:04E6 
ROM:04E6 sub_0_4E6:				 ; CODE	XREF: XH_sub_0C26+2p
ROM:04E6					 ; XH_sub_0C72+6p
ROM:04E6					 ; SIO_L1H_sub_0C96+1Bp
ROM:04E6					 ; FH_JUMP_SLOT3_sub_10F3+Fp
ROM:04E6					 ; FH_JUMP_SLOT4_sub_1133+9p ...
ROM:04E6		 di	 
ROM:04E7		 ld	 c, (ix+IX_STRUCT.PORT_BASE_1)
ROM:04EA		 inc	 c
ROM:04EB		 out	 (c), b
ROM:04ED		 in	 a, (c)
ROM:04EF		 jp	 TAIL_EI
ROM:04EF ; End of function sub_0_4E6
ROM:04EF 
ROM:04F2 
ROM:04F2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04F2 
ROM:04F2 ; write b,a to	port_base_2+1
ROM:04F2 ; save	a in (hl)
ROM:04F2 ; (ix+2) == ioport-1
ROM:04F2 ; Attributes: bp-based	frame
ROM:04F2 
ROM:04F2 sub_0_4F2:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+8p
ROM:04F2					 ; HANDLER_SIO_L0_COMMON+Fp
ROM:04F2					 ; SIO_L1H_sub_0C96+7p
ROM:04F2					 ; SIO_L1H_sub_0C96+37p
ROM:04F2					 ; SIO_L1H_sub_0C96+41p ...
ROM:04F2		 di	 
ROM:04F3		 ld	 (hl), a
ROM:04F4		 ld	 c, (ix+IX_STRUCT.PORT_BASE_1)
ROM:04F7		 inc	 c
ROM:04F8		 out	 (c), b
ROM:04FA		 out	 (c), a
ROM:04FC		 jp	 TAIL_EI
ROM:04FC ; End of function sub_0_4F2
ROM:04FC 
ROM:04FF 
ROM:04FF ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:04FF 
ROM:04FF ; Attributes: bp-based	frame
ROM:04FF 
ROM:04FF sub_0_4FF:				 ; CODE	XREF: XH_sub_0BA2+18p
ROM:04FF					 ; XH_sub_0BA2+30p
ROM:04FF					 ; XH_sub_0BA2+73p
ROM:04FF					 ; SIO_sub_0C4A+22p
ROM:04FF					 ; XH_sub_0C72+1Ej ...
ROM:04FF		 push	 af
ROM:0500		 cpl	 
ROM:0501		 di	 
ROM:0502		 and	 (iy+IY_STRUCT.field_23)
ROM:0505		 jp	 SOME_TAIL
ROM:0505 ; End of function sub_0_4FF
ROM:0505 
ROM:0508 
ROM:0508 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0508 
ROM:0508 ; Attributes: bp-based	frame
ROM:0508 
ROM:0508 DI_sub_0508:				 ; CODE	XREF: XH_sub_0C72+21j
ROM:0508					 ; SIO_L1H_sub_0D0C+16p
ROM:0508					 ; SIO_sub_0E27+13j
ROM:0508					 ; SIO_L1H_sub_0F22+9j
ROM:0508					 ; SIO_L1H_sub_0F32+10p ...
ROM:0508		 push	 af
ROM:0509		 di	 
ROM:050A		 or	 (iy+IY_STRUCT.field_23)
ROM:050A ; End of function DI_sub_0508
ROM:050A 
ROM:050D 
ROM:050D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:050D 
ROM:050D ; Attributes: bp-based	frame
ROM:050D 
ROM:050D SOME_TAIL:				 ; CODE	XREF: sub_0_4FF+6j
ROM:050D		 ld	 (iy+IY_STRUCT.field_23), a
ROM:0510		 pop	 af
ROM:0511		 jp	 TAIL_EI
ROM:0511 ; End of function SOME_TAIL
ROM:0511 
ROM:0514 
ROM:0514 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0514 
ROM:0514 ; Attributes: bp-based	frame
ROM:0514 
ROM:0514 BUS_READ8_STH:				 ; CODE	XREF: XH_sub_0C26+Cp
ROM:0514					 ; SIO_L1H_sub_0DEC+2Cp
ROM:0514					 ; sub_0_1023+Bp
ROM:0514		 call	 CALCULATE_BUS_IO_STH
ROM:0517		 jp	 BUS_READ8	 ; hl=host address
ROM:0517 ; End of function BUS_READ8_STH	 ; returns b=value
ROM:0517 
ROM:051A 
ROM:051A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:051A 
ROM:051A ; Attributes: bp-based	frame
ROM:051A 
ROM:051A BUS_WRITE8_STH:			 ; CODE	XREF: XH_sub_0BA2+7Bp
ROM:051A		 call	 CALCULATE_BUS_IO_STH
ROM:051D		 jp	 BUS_WRITE8	 ; b=data byte
ROM:051D ; End of function BUS_WRITE8_STH
ROM:051D 
ROM:0520 
ROM:0520 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0520 
ROM:0520 ; Attributes: bp-based	frame
ROM:0520 
ROM:0520 CALCULATE_BUS_IO_STH:			 ; CODE	XREF: BUS_READ8_STHp
ROM:0520					 ; BUS_WRITE8_STHp
ROM:0520		 push	 iy
ROM:0522		 pop	 hl
ROM:0523		 ld	 d, 0
ROM:0525		 add	 hl, de
ROM:0526		 ld	 e, (hl)
ROM:0527		 inc	 hl
ROM:0528		 ld	 d, (hl)
ROM:0529		 inc	 hl
ROM:052A		 ld	 a, (hl)
ROM:052B		 ex	 de, hl
ROM:052C		 ret	 
ROM:052C ; End of function CALCULATE_BUS_IO_STH
ROM:052C 
ROM:052D 
ROM:052D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:052D 
ROM:052D ; Attributes: bp-based	frame
ROM:052D 
ROM:052D CLOSE_BUS_WINDOW:			 ; CODE	XREF: FDC_ERROR_COMMON_sub_1781+1p
ROM:052D					 ; FDC_READ_TRACK+Dp
ROM:052D					 ; FDC_WRITE_TRACK+Dp
ROM:052D		 ld	 a, (SAVED_BUS_HI)
ROM:0530		 ld	 hl, (SAVED_BUS_MID_LO)
ROM:0530 ; End of function CLOSE_BUS_WINDOW
ROM:0530 
ROM:0533 
ROM:0533 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0533 
ROM:0533 ; Set 0x8000 window to	access A:HL bus	address
ROM:0533 ; Attributes: bp-based	frame
ROM:0533 
ROM:0533 OPEN_BUS_WINDOW:			 ; CODE	XREF: SIO_L1H_sub_0DEC+27p
ROM:0533					 ; FDC_DMA_WRITE_TRACK+10p
ROM:0533		 push	 hl
ROM:0534		 ld	 hl, (word_0_270B)
ROM:0537		 ld	 (SAVED_BUS_MID_LO), hl
ROM:053A		 pop	 hl
ROM:053B		 ld	 (word_0_270B+1), a
ROM:053E		 ld	 a, h
ROM:053F		 and	 80h ; 'Ç'
ROM:0541		 ld	 (word_0_270B),	a
ROM:0544		 push	 ix
ROM:0546		 ld	 ix, unk_0_270A
ROM:054A		 call	 SET_BUS_ADDRESS_LATCH ; ret hl=0x8xxx address
ROM:054D		 pop	 ix
ROM:054F		 ret	 
ROM:054F ; End of function OPEN_BUS_WINDOW
ROM:054F 
ROM:0550 
ROM:0550 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0550 
ROM:0550 ; Attributes: bp-based	frame
ROM:0550 
ROM:0550 sub_0_550:				 ; CODE	XREF: XH_sub_0C26+1Fp
ROM:0550					 ; sub_0_1023+1Dp
ROM:0550		 push	 iy
ROM:0552		 pop	 hl
ROM:0553		 ld	 d, 0
ROM:0555		 add	 hl, de
ROM:0556		 scf	 
ROM:0557 
ROM:0557 loc_0_557:				 ; CODE	XREF: sub_0_550+11j
ROM:0557		 ld	 a, (hl)
ROM:0558		 sbc	 a, 0
ROM:055A		 ld	 (hl), a
ROM:055B		 push	 af
ROM:055C		 or	 d
ROM:055D		 ld	 d, a
ROM:055E		 pop	 af
ROM:055F		 inc	 hl
ROM:0560		 dec	 b
ROM:0561		 jp	 nz, loc_0_557
ROM:0564		 xor	 a
ROM:0565		 or	 d
ROM:0566		 ret	 
ROM:0566 ; End of function sub_0_550
ROM:0566 
ROM:0567 
ROM:0567 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0567 
ROM:0567 ; Attributes: bp-based	frame
ROM:0567 
ROM:0567 sub_0_567:				 ; CODE	XREF: XH_sub_0C26+18p
ROM:0567					 ; sub_0_1023+16p
ROM:0567		 push	 iy
ROM:0569		 pop	 hl
ROM:056A		 ld	 d, 0
ROM:056C		 add	 hl, de
ROM:056D		 scf	 
ROM:056E 
ROM:056E loc_0_56E:				 ; CODE	XREF: sub_0_567+11j
ROM:056E		 ld	 a, (hl)
ROM:056F		 adc	 a, 0
ROM:0571		 ld	 (hl), a
ROM:0572		 push	 af
ROM:0573		 or	 d
ROM:0574		 ld	 d, a
ROM:0575		 pop	 af
ROM:0576		 inc	 hl
ROM:0577		 dec	 b
ROM:0578		 jp	 nz, loc_0_56E
ROM:057B		 xor	 a
ROM:057C		 or	 d
ROM:057D		 ret	 
ROM:057D ; End of function sub_0_567
ROM:057D 
ROM:057E 
ROM:057E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:057E 
ROM:057E ; Attributes: bp-based	frame
ROM:057E 
ROM:057E sub_0_57E:				 ; CODE	XREF: sub_0_6AD+2Bp
ROM:057E					 ; sub_0_987+4p sub_0_9B7+3p
ROM:057E					 ; sub_0_9B7+9p
ROM:057E					 ; SIO_L1H_sub_0C96+16p ...
ROM:057E		 call	 sub_0_59D
ROM:0581		 ld	 a, c		 ; FALLTHROUGH
ROM:0581 ; End of function sub_0_57E
ROM:0581 
ROM:0582 
ROM:0582 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0582 
ROM:0582 ; Attributes: bp-based	frame
ROM:0582 
ROM:0582 sub_0_582:				 ; DATA	XREF: SIO0_sub_070B+45o
ROM:0582					 ; SIO_sub_0807+Fo
ROM:0582		 call	 sub_0_586
ROM:0585		 ld	 a, b		 ; FALLTHROUGH
ROM:0585 ; End of function sub_0_582
ROM:0585 
ROM:0586 
ROM:0586 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0586 
ROM:0586 ; Attributes: bp-based	frame
ROM:0586 
ROM:0586 sub_0_586:				 ; CODE	XREF: sub_0_582p
ROM:0586		 di	 
ROM:0587		 cpl	 
ROM:0588		 and	 (hl)
ROM:0589		 ld	 (hl), a
ROM:058A		 inc	 hl
ROM:058B		 jp	 TAIL_EI
ROM:058B ; End of function sub_0_586
ROM:058B 
ROM:058E 
ROM:058E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:058E 
ROM:058E ; Attributes: bp-based	frame
ROM:058E 
ROM:058E sub_0_58E:				 ; CODE	XREF: sub_0_969+Bp
ROM:058E					 ; sub_0_996+Ap
ROM:058E					 ; XH_sub_0C72+10p
ROM:058E					 ; SIO_L1H_sub_0C96+25p
ROM:058E					 ; sub_0_E96+3p ...
ROM:058E		 call	 sub_0_59D
ROM:0591		 ld	 a, c
ROM:0592		 call	 sub_0_596
ROM:0595		 ld	 a, b		 ; FALLTHROUGH
ROM:0595 ; End of function sub_0_58E
ROM:0595 
ROM:0596 
ROM:0596 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0596 
ROM:0596 ; Attributes: bp-based	frame
ROM:0596 
ROM:0596 sub_0_596:				 ; CODE	XREF: sub_0_58E+4p
ROM:0596		 di	 
ROM:0597		 or	 (hl)
ROM:0598		 ld	 (hl), a
ROM:0599		 inc	 hl
ROM:059A		 jp	 TAIL_EI
ROM:059A ; End of function sub_0_596
ROM:059A 
ROM:059D 
ROM:059D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:059D 
ROM:059D ; Attributes: bp-based	frame
ROM:059D 
ROM:059D sub_0_59D:				 ; CODE	XREF: sub_0_57Ep
ROM:059D					 ; sub_0_58Ep
ROM:059D		 ld	 (iy+IX_STRUCT.field_B+1Ah), 1
ROM:05A1		 ld	 e, (ix+IX_STRUCT.field_8)
ROM:05A4		 ld	 d, (ix+IX_STRUCT.field_9)
ROM:05A7		 ld	 hl, 2
ROM:05AA		 add	 hl, de
ROM:05AB		 ret	 
ROM:05AB ; End of function sub_0_59D
ROM:05AB 
ROM:05AC 
ROM:05AC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:05AC 
ROM:05AC ; Attributes: bp-based	frame
ROM:05AC 
ROM:05AC orphan_sub_5AC:
ROM:05AC		 call	 sub_0_5D7
ROM:05AF		 scf	 
ROM:05B0		 ret	 z
ROM:05B0 ; End of function orphan_sub_5AC
ROM:05B0 
ROM:05B1 
ROM:05B1 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:05B1 
ROM:05B1 ; Attributes: bp-based	frame
ROM:05B1 
ROM:05B1 sub_0_5B1:				 ; CODE	XREF: XH_sub_0BA2+29p
ROM:05B1					 ; YH_sub_0F85+16p
ROM:05B1		 push	 de
ROM:05B2		 ld	 e, (iy+IY_STRUCT.field_1A)
ROM:05B5		 ld	 d, (iy+IY_STRUCT.field_1B)
ROM:05B8		 ld	 l, (iy+IY_STRUCT.field_15)
ROM:05BB		 ld	 h, (iy+IY_STRUCT.field_16)
ROM:05BE		 ld	 a, (iy+IY_STRUCT.field_17)
ROM:05C1		 add	 hl, de
ROM:05C2		 adc	 a, 0
ROM:05C4		 call	 BUS_WRITE8	 ; b=data byte
ROM:05C7		 pop	 de
ROM:05C8		 ld	 (iy+IY_STRUCT.field_1A), e
ROM:05CB		 ld	 (iy+IY_STRUCT.field_1B), d
ROM:05CE		 ret	 
ROM:05CE ; End of function sub_0_5B1
ROM:05CE 
ROM:05CF 
ROM:05CF ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:05CF 
ROM:05CF ; Attributes: bp-based	frame
ROM:05CF 
ROM:05CF sub_0_5CF:				 ; CODE	XREF: XH_sub_0BA2+33p
ROM:05CF					 ; SIO_L1H_sub_0CEE+10p
ROM:05CF					 ; YH_sub_0F85+1Bp
ROM:05CF		 ld	 e, (iy+IY_STRUCT.field_1A)
ROM:05D2		 ld	 d, (iy+IY_STRUCT.field_1B)
ROM:05D5		 jr	 loc_0_5ED
ROM:05D5 ; End of function sub_0_5CF
ROM:05D5 
ROM:05D7 
ROM:05D7 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:05D7 
ROM:05D7 ; Attributes: bp-based	frame
ROM:05D7 
ROM:05D7 sub_0_5D7:				 ; CODE	XREF: orphan_sub_5ACp
ROM:05D7					 ; XH_sub_0BA2+13p
ROM:05D7					 ; YH_sub_0F85+5p
ROM:05D7		 ld	 e, (iy+IY_STRUCT.field_1A)
ROM:05DA		 ld	 d, (iy+IY_STRUCT.field_1B)
ROM:05DD		 inc	 de
ROM:05DE		 ld	 a, (iy+IY_STRUCT.field_18)
ROM:05E1		 cp	 e
ROM:05E2		 jr	 nz, loc_0_5ED
ROM:05E4		 ld	 a, (iy+IY_STRUCT.field_19)
ROM:05E7		 cp	 d
ROM:05E8		 jr	 nz, loc_0_5ED
ROM:05EA		 ld	 de, 0
ROM:05ED 
ROM:05ED loc_0_5ED:				 ; CODE	XREF: sub_0_5CF+6j
ROM:05ED					 ; sub_0_5D7+Bj sub_0_5D7+11j
ROM:05ED		 ld	 a, (iy+IY_STRUCT.field_1C)
ROM:05F0		 cp	 e
ROM:05F1		 ret	 nz
ROM:05F2		 ld	 a, (iy+IY_STRUCT.field_1D)
ROM:05F5		 cp	 d
ROM:05F6		 ret	 
ROM:05F6 ; End of function sub_0_5D7
ROM:05F6 
ROM:05F7 
ROM:05F7 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:05F7 
ROM:05F7 ; Set up timer	interrupt and UART5
ROM:05F7 ; Attributes: bp-based	frame
ROM:05F7 
ROM:05F7 INIT_PIT1:				 ; CODE	XREF: DO_NMI_HANDLER+97p
ROM:05F7		 ld	 a, 0B4h ; '┤'
ROM:05F9		 out	 (27h),	a
ROM:05FB		 ld	 a, 0A8h ; '¿'
ROM:05FD		 out	 (26h),	a
ROM:05FF		 ld	 a, 61h	; 'a'
ROM:0601		 out	 (25h),	a
ROM:0603		 ret	 
ROM:0603 ; End of function INIT_PIT1
ROM:0603 
ROM:0604 
ROM:0604 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0604 
ROM:0604 ; Attributes: bp-based	frame
ROM:0604 
ROM:0604 sub_0_604:				 ; CODE	XREF: SIO_L1H_sub_0D4C+17p
ROM:0604		 ld	 e, (ix+IX_STRUCT.field_8)
ROM:0607		 ld	 d, (ix+IX_STRUCT.field_9)
ROM:060A		 ld	 hl, 1
ROM:060D		 add	 hl, de
ROM:060E		 ld	 a, (hl)
ROM:060F		 and	 0Fh
ROM:0611		 ld	 hl, 13h
ROM:0614		 add	 hl, de
ROM:0615		 or	 a
ROM:0616		 call	 nz, sub_0_638
ROM:0619		 bit	 0, (iy+IY_STRUCT.field_27)
ROM:061D		 jr	 z, loc_0_622
ROM:061F		 ld	 hl, loc_0_641
ROM:0622 
ROM:0622 loc_0_622:				 ; CODE	XREF: sub_0_604+19j
ROM:0622		 ld	 c, (ix+IX_STRUCT.field_5)
ROM:0625		 ld	 a, (ix+IX_STRUCT.field_6)
ROM:0628		 cp	 0FFh
ROM:062A		 ret	 z
ROM:062B		 out	 (c), a
ROM:062D		 ld	 c, (ix+IX_STRUCT.field_7)
ROM:0630		 ld	 a, (hl)
ROM:0631		 out	 (c), a
ROM:0633		 inc	 hl
ROM:0634		 ld	 a, (hl)
ROM:0635		 out	 (c), a
ROM:0637		 ret	 
ROM:0637 ; End of function sub_0_604
ROM:0637 
ROM:0638 
ROM:0638 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0638 
ROM:0638 ; Attributes: bp-based	frame
ROM:0638 
ROM:0638 sub_0_638:				 ; CODE	XREF: sub_0_604+12p
ROM:0638		 dec	 a
ROM:0639		 add	 a, a
ROM:063A		 ld	 hl, loc_0_641
ROM:063D		 call	 ADD_WORD16	 ; hl+=a
ROM:0640		 ret	 
ROM:0640 ; End of function sub_0_638
ROM:0640 
ROM:0641 ; ───────────────────────────────────────────────────────────────────────────
ROM:0641 
ROM:0641 loc_0_641:				 ; DATA	XREF: sub_0_604+1Bo
ROM:0641					 ; sub_0_638+2o
ROM:0641		 ld	 b, a
ROM:0642		 djnz	 loc_0_65B+2
ROM:0644		 dec	 bc
ROM:0645		 inc	 de
ROM:0646		 add	 hl, bc
ROM:0647		 inc	 hl
ROM:0648		 ex	 af, af'
ROM:0649		 ld	 (de), a
ROM:064A		 inc	 b
ROM:064B		 add	 hl, bc
ROM:064C		 ld	 (bc), a
ROM:064D		 inc	 b
ROM:064E		 ld	 bc, 0AEh ; '«'
ROM:0651		 sbc	 a, h
ROM:0652		 nop	 
ROM:0653		 add	 a, d
ROM:0654		 nop	 
ROM:0655		 ld	 d, a
ROM:0656		 nop	 
ROM:0657		 ld	 b, c
ROM:0658		 nop	 
ROM:0659		 dec	 hl
ROM:065A		 nop	 
ROM:065B 
ROM:065B loc_0_65B:				 ; CODE	XREF: ROM:0642j
ROM:065B		 ld	 hl, 1000h
ROM:065E		 nop	 
ROM:065F 
ROM:065F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:065F 
ROM:065F ; Attributes: bp-based	frame
ROM:065F 
ROM:065F SIO_L1H_sub_065F:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:065F		 bit	 1, (ix+IX_STRUCT.LAST)
ROM:0663		 jp	 z, JUST_RETURN_SH
ROM:0666		 ld	 a, (ix+IX_STRUCT)
ROM:0669		 ld	 e, 0
ROM:066B		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:066E		 push	 de
ROM:066F		 call	 BUS_READ16	 ; ix=24-bit host mem address pointer, (de)=destination
ROM:0672		 pop	 de
ROM:0673		 ld	 a, (de)
ROM:0674		 ld	 hl, unk_0_2701
ROM:0677		 res	 3, (hl)
ROM:0679		 bit	 7, a
ROM:067B		 jr	 z, loc_0_67F
ROM:067D		 set	 3, (hl)
ROM:067F 
ROM:067F loc_0_67F:				 ; CODE	XREF: SIO_L1H_sub_065F+1Cj
ROM:067F		 ld	 hl, unk_0_2703
ROM:0682		 res	 3, (hl)
ROM:0684		 bit	 6, a
ROM:0686		 jr	 z, loc_0_68A
ROM:0688		 set	 3, (hl)
ROM:068A 
ROM:068A loc_0_68A:				 ; CODE	XREF: SIO_L1H_sub_065F+27j
ROM:068A		 inc	 de
ROM:068B		 ld	 a, (de)
ROM:068C		 ld	 hl, off_0_69D
ROM:068F		 rrca	 
ROM:0690		 rrca	 
ROM:0691		 rrca	 
ROM:0692		 rrca	 
ROM:0693		 and	 0Eh
ROM:0695		 call	 ADD_WORD16	 ; hl+=a
ROM:0698		 ld	 e, (hl)
ROM:0699		 inc	 hl
ROM:069A		 ld	 d, (hl)
ROM:069B		 ex	 de, hl
ROM:069C		 jp	 (hl)
ROM:069C ; End of function SIO_L1H_sub_065F
ROM:069C 
ROM:069C ; ───────────────────────────────────────────────────────────────────────────
ROM:069D off_0_69D:	 .dw nullsub_5,	sub_0_6AD, SIO0_sub_070B, SIO0_sub_07E6
ROM:069D					 ; DATA	XREF: SIO_L1H_sub_065F+2Do
ROM:069D		 .dw SIO0_sub_06F3, nullsub_5, nullsub_5, nullsub_5
ROM:06AD 
ROM:06AD ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:06AD 
ROM:06AD ; Attributes: bp-based	frame
ROM:06AD 
ROM:06AD sub_0_6AD:				 ; DATA	XREF: ROM:069Do
ROM:06AD		 ld	 (iy+IY_STRUCT.field_2A), 0
ROM:06B1		 ld	 a, (ix+IX_STRUCT)
ROM:06B4		 ld	 e, 13h
ROM:06B6		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:06B9		 push	 de
ROM:06BA		 call	 BUS_READ16	 ; ix=24-bit host mem address pointer, (de)=destination
ROM:06BD		 pop	 hl
ROM:06BE		 ld	 a, (hl)
ROM:06BF		 ld	 (iy+IY_STRUCT.field_28), a
ROM:06C2		 inc	 hl
ROM:06C3		 ld	 b, (hl)
ROM:06C4		 bit	 0, b
ROM:06C6		 jr	 z, loc_0_6CC
ROM:06C8		 set	 7, (iy+IY_STRUCT.field_2A)
ROM:06CC 
ROM:06CC loc_0_6CC:				 ; CODE	XREF: sub_0_6AD+19j
ROM:06CC		 call	 sub_0_E5B
ROM:06CF		 call	 sub_0_8F1
ROM:06D2		 call	 sub_0_8FA
ROM:06D5		 ld	 bc, 0FFFFh
ROM:06D8		 call	 sub_0_57E
ROM:06DB		 ld	 a, (ix+IX_STRUCT)
ROM:06DE		 ld	 b, 4
ROM:06E0		 call	 loc_0_460
ROM:06E3		 ld	 a, (ix+IX_STRUCT)
ROM:06E6		 ld	 b, 2
ROM:06E8		 call	 loc_0_460
ROM:06EB		 call	 sub_0_996
ROM:06EE		 set	 1, (iy+IY_STRUCT.field_27)
ROM:06F2		 ret	 
ROM:06F2 ; End of function sub_0_6AD
ROM:06F2 
ROM:06F3 
ROM:06F3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:06F3 
ROM:06F3 ; Attributes: bp-based	frame
ROM:06F3 
ROM:06F3 SIO0_sub_06F3:				 ; DATA	XREF: ROM:069Do
ROM:06F3		 call	 DMA_ALL_STH
ROM:06F6		 call	 SIO0_CHANA_CTL_STH
ROM:06F9		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:06FC		 call	 sub_0_987
ROM:06FF		 call	 sub_0_9B7
ROM:0702		 ld	 (iy+IY_STRUCT.field_2A), 0
ROM:0706		 res	 1, (iy+IY_STRUCT.field_27)
ROM:070A		 ret	 
ROM:070A ; End of function SIO0_sub_06F3
ROM:070A 
ROM:070B 
ROM:070B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:070B 
ROM:070B ; Attributes: bp-based	frame
ROM:070B 
ROM:070B SIO0_sub_070B:				 ; DATA	XREF: ROM:069Do
ROM:070B		 call	 sub_0_9B7
ROM:070E		 ld	 a, (ix+IX_STRUCT)
ROM:0711		 ld	 e, 0
ROM:0713		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0716		 push	 de
ROM:0717		 call	 BUS_READ16	 ; ix=24-bit host mem address pointer, (de)=destination
ROM:071A		 pop	 hl
ROM:071B		 ld	 a, (hl)
ROM:071C		 and	 3Fh ; '?'
ROM:071E		 ld	 e, a
ROM:071F		 inc	 hl
ROM:0720		 ld	 a, (hl)
ROM:0721		 and	 1Fh
ROM:0723		 ld	 d, a
ROM:0724		 push	 de
ROM:0725		 ld	 a, (ix+IX_STRUCT)
ROM:0728		 ld	 e, 5
ROM:072A		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:072D		 push	 de
ROM:072E		 ld	 bc, 5
ROM:0731		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:0731					 ; bc=count, (de)=source
ROM:0731					 ; ix=preserved, interrupts off/on
ROM:0734		 pop	 hl
ROM:0735		 push	 hl
ROM:0736		 ld	 bc, 0A01Ch
ROM:0739		 ld	 e, (hl)
ROM:073A		 ld	 (hl), c
ROM:073B		 inc	 hl
ROM:073C		 ld	 d, (hl)
ROM:073D		 ld	 (hl), b
ROM:073E		 set	 7, d
ROM:0740		 inc	 hl
ROM:0741		 inc	 hl
ROM:0742		 ld	 c, (hl)
ROM:0743		 inc	 hl
ROM:0744		 ld	 b, (hl)
ROM:0745		 inc	 bc
ROM:0746		 ld	 hl, DATA_BUFFER ; Used	as FDC sector buffer, perhaps elsewhere
ROM:0749		 ex	 de, hl
ROM:074A		 ldir	 
ROM:074C		 pop	 hl
ROM:074D		 ld	 bc, 0FF29h	 ; SIO 0 - Channel A control for serial	port 3
ROM:0750		 ld	 de, sub_0_582
ROM:0753 
ROM:0753 loc_0_753:				 ; CODE	XREF: SIO0_sub_070B+5Dj
ROM:0753		 di	 
ROM:0754		 in	 a, (40h)
ROM:0756		 nop	 
ROM:0757		 nop	 
ROM:0758		 in	 a, (34h)
ROM:075A		 and	 10h
ROM:075C		 jr	 z, loc_0_771
ROM:075E		 ei	 
ROM:075F		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0762		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0765		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0768		 djnz	 loc_0_753
ROM:076A		 set	 2, (iy+IY_STRUCT.field_2A)
ROM:076E		 pop	 de
ROM:076F		 jr	 loc_0_7D7
ROM:0771 ; ───────────────────────────────────────────────────────────────────────────
ROM:0771 
ROM:0771 loc_0_771:				 ; CODE	XREF: SIO0_sub_070B+51j
ROM:0771		 out	 (c), d
ROM:0773		 out	 (c), e
ROM:0775		 ld	 a, 3
ROM:0777		 out	 (c), a
ROM:0779		 ld	 a, 20h	; ' '
ROM:077B		 out	 (c), a
ROM:077D		 call	 DMA_sub_092D
ROM:0780		 ld	 hl, ARR_3_OR_5_VAL
ROM:0783		 ld	 b, 5
ROM:0785		 otir	 
ROM:0787		 ld	 hl, ARR_7_VAL_29
ROM:078A		 ld	 bc, 729h	 ; SIO 0 - Channel A control for serial	port 3
ROM:078D		 otir	 
ROM:078F		 pop	 de
ROM:0790		 ld	 b, e
ROM:0791		 call	 DELAY_A_BIT	 ; b=by	how much
ROM:0794		 ld	 a, 87h	; 'ç'
ROM:0796		 out	 (3Ch),	a
ROM:0798		 nop	 
ROM:0799		 nop	 
ROM:079A		 nop	 
ROM:079B		 nop	 
ROM:079C		 ld	 a, 0D0h ; 'ð'
ROM:079E		 out	 (c), a
ROM:07A0		 set	 5, (iy+IY_STRUCT.field_23)
ROM:07A4		 ei	 
ROM:07A5		 ld	 bc, 7D0h
ROM:07A8 
ROM:07A8 loc_0_7A8:				 ; CODE	XREF: SIO0_sub_070B+A6j
ROM:07A8		 in	 a, (29h)
ROM:07AA		 bit	 6, a
ROM:07AC		 jr	 nz, loc_0_7BC
ROM:07AE		 dec	 bc
ROM:07AF		 ld	 a, b
ROM:07B0		 or	 c
ROM:07B1		 jr	 nz, loc_0_7A8
ROM:07B3		 set	 3, (iy+IY_STRUCT.field_2A)
ROM:07B7		 call	 DMA_ALL_STH
ROM:07BA		 jr	 loc_0_7CA
ROM:07BC ; ───────────────────────────────────────────────────────────────────────────
ROM:07BC 
ROM:07BC loc_0_7BC:				 ; CODE	XREF: SIO0_sub_070B+A1j
ROM:07BC		 ld	 a, 0BFh ; '┐'
ROM:07BE		 out	 (3Ch),	a
ROM:07C0		 in	 a, (3Ch)
ROM:07C2		 bit	 5, a
ROM:07C4		 jr	 z, loc_0_7CA
ROM:07C6		 set	 1, (iy+IY_STRUCT.field_2A)
ROM:07CA 
ROM:07CA loc_0_7CA:				 ; CODE	XREF: SIO0_sub_070B+AFj
ROM:07CA					 ; SIO0_sub_070B+B9j
ROM:07CA		 ld	 b, d
ROM:07CB		 inc	 b
ROM:07CC		 inc	 b
ROM:07CD		 call	 DELAY_A_BIT	 ; b=by	how much
ROM:07D0		 call	 SIO0_CHANA_CTL_STH
ROM:07D3		 res	 5, (iy+IY_STRUCT.field_23)
ROM:07D7 
ROM:07D7 loc_0_7D7:				 ; CODE	XREF: SIO0_sub_070B+64j
ROM:07D7		 call	 sub_0_9ED
ROM:07DA		 jp	 nz, loc_0_7E0
ROM:07DD		 call	 sub_0_8FA
ROM:07E0 
ROM:07E0 loc_0_7E0:				 ; CODE	XREF: SIO0_sub_070B+CFj
ROM:07E0		 call	 sub_0_996
ROM:07E3		 jp	 SIO_sub_0807
ROM:07E3 ; End of function SIO0_sub_070B
ROM:07E3 
ROM:07E6 
ROM:07E6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:07E6 
ROM:07E6 ; Attributes: bp-based	frame
ROM:07E6 
ROM:07E6 SIO0_sub_07E6:				 ; DATA	XREF: ROM:069Do
ROM:07E6		 call	 sub_0_9F9
ROM:07E9		 jr	 nz, loc_0_7F0
ROM:07EB		 call	 sub_0_987
ROM:07EE		 jr	 loc_0_7F3
ROM:07F0 ; ───────────────────────────────────────────────────────────────────────────
ROM:07F0 
ROM:07F0 loc_0_7F0:				 ; CODE	XREF: SIO0_sub_07E6+3j
ROM:07F0		 call	 sub_0_969
ROM:07F3 
ROM:07F3 loc_0_7F3:				 ; CODE	XREF: SIO0_sub_07E6+8j
ROM:07F3		 bit	 0, (iy+IY_STRUCT.field_2A)
ROM:07F7		 ret	 z
ROM:07F8		 call	 sub_0_9DE
ROM:07FB		 ret	 nz
ROM:07FC		 call	 SIO0_CHANA_CTL_STH
ROM:07FF		 ld	 (iy+IY_STRUCT.field_1A), c
ROM:0802		 call	 sub_0_8FA
ROM:0805		 ret	 
ROM:0805 ; End of function SIO0_sub_07E6
ROM:0805 
ROM:0806 
ROM:0806 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0806 
ROM:0806 ; Attributes: bp-based	frame
ROM:0806 
ROM:0806 nullsub_5:				 ; DATA	XREF: ROM:069Do
ROM:0806		 ret	 
ROM:0806 ; End of function nullsub_5
ROM:0806 
ROM:0807 
ROM:0807 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0807 
ROM:0807 ; Attributes: bp-based	frame
ROM:0807 
ROM:0807 SIO_sub_0807:				 ; CODE	XREF: SIO0_sub_070B+D8j
ROM:0807					 ; SIO_sub_0B40+4j
ROM:0807		 di	 
ROM:0808		 bit	 6, (iy+IY_STRUCT.field_2A)
ROM:080C		 res	 6, (iy+IY_STRUCT.field_2A)
ROM:0810		 ei	 
ROM:0811		 jr	 z, loc_0_816
ROM:0813		 call	 sub_0_969
ROM:0816 
ROM:0816 loc_0_816:				 ; CODE	XREF: SIO_sub_0807+Aj
ROM:0816		 ld	 de, sub_0_582
ROM:0819		 di	 
ROM:081A		 in	 a, (40h)
ROM:081C		 nop	 
ROM:081D		 nop	 
ROM:081E		 in	 a, (34h)
ROM:0820		 and	 10h
ROM:0822		 jr	 nz, loc_0_85B
ROM:0824		 call	 SIO_sub_03A6
ROM:0827		 jr	 z, loc_0_85B
ROM:0829		 ld	 c, 29h	; ')'
ROM:082B		 bit	 7, (iy+IY_STRUCT.field_2A)
ROM:082F		 jr	 z, loc_0_835
ROM:0831		 out	 (c), d
ROM:0833		 out	 (c), e
ROM:0835 
ROM:0835 loc_0_835:				 ; CODE	XREF: SIO_sub_0807+28j
ROM:0835		 ld	 a, 3
ROM:0837		 out	 (c), a
ROM:0839		 ld	 a, 20h	; ' '
ROM:083B		 out	 (c), a
ROM:083D		 set	 0, (iy+IY_STRUCT.field_2A)
ROM:0841		 ei	 
ROM:0842		 call	 ZERO_SAVED_TASK_sub_028C
ROM:0845		 call	 sub_0_8F1
ROM:0848 
ROM:0848 loc_0_848:				 ; CODE	XREF: SIO_sub_0807+4Aj
ROM:0848		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:084B		 ld	 a, (byte_0_2551)
ROM:084E		 cp	 (ix+IX_STRUCT.field_1)
ROM:0851		 jr	 nz, loc_0_848
ROM:0853		 call	 sub_0_9ED
ROM:0856		 jr	 nz, loc_0_85B
ROM:0858		 call	 sub_0_8FA
ROM:085B 
ROM:085B loc_0_85B:				 ; CODE	XREF: SIO_sub_0807+1Bj
ROM:085B					 ; SIO_sub_0807+20j
ROM:085B					 ; SIO_sub_0807+4Fj
ROM:085B		 ei	 
ROM:085C		 ld	 e, 4
ROM:085E		 ld	 a, (ix+IX_STRUCT)
ROM:0861		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0864		 ex	 de, hl
ROM:0865		 bit	 7, (hl)
ROM:0867		 call	 z, ZERO_SAVED_TASK_sub_028C
ROM:086A		 ret	 
ROM:086A ; End of function SIO_sub_0807
ROM:086A 
ROM:086B 
ROM:086B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:086B 
ROM:086B ; Attributes: bp-based	frame
ROM:086B 
ROM:086B XINTH_sub_086B:			 ; CODE	XREF: JINTH_sub_1070+4j
ROM:086B		 and	 a
ROM:086C		 bit	 5, (iy+IY_STRUCT.field_23)
ROM:0870		 ret	 nz
ROM:0871		 ld	 b, 2
ROM:0873 
ROM:0873 loc_0_873:				 ; CODE	XREF: XINTH_sub_086B+1Fj
ROM:0873		 ld	 a, 1
ROM:0875		 out	 (29h),	a
ROM:0877		 in	 a, (29h)
ROM:0879		 bit	 5, a
ROM:087B		 jr	 nz, INTH_sub_08A9
ROM:087D		 bit	 7, a
ROM:087F		 jr	 nz, INTH_sub_08A9
ROM:0881		 bit	 4, (iy+IY_STRUCT.field_2A)
ROM:0885		 ret	 nz
ROM:0886		 bit	 6, a
ROM:0888		 jr	 nz, loc_0_88D
ROM:088A		 djnz	 loc_0_873
ROM:088C		 ret	 
ROM:088D ; ───────────────────────────────────────────────────────────────────────────
ROM:088D 
ROM:088D loc_0_88D:				 ; CODE	XREF: XINTH_sub_086B+1Dj
ROM:088D		 bit	 0, (iy+IY_STRUCT.field_2A)
ROM:0891		 jr	 nz, loc_0_89A
ROM:0893		 set	 4, (iy+IY_STRUCT.field_2A)
ROM:0897		 scf	 
ROM:0898		 reti	 
ROM:089A ; ───────────────────────────────────────────────────────────────────────────
ROM:089A 
ROM:089A loc_0_89A:				 ; CODE	XREF: XINTH_sub_086B+26j
ROM:089A		 in	 a, (28h)
ROM:089C		 ld	 (iy+IY_STRUCT.field_29), a
ROM:089F		 set	 5, (iy+IY_STRUCT.field_2A)
ROM:08A3		 call	 SIO0_CHANA_CTL_STH
ROM:08A6		 scf	 
ROM:08A7		 reti	 
ROM:08A7 ; End of function XINTH_sub_086B
ROM:08A7 
ROM:08A9 
ROM:08A9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:08A9 
ROM:08A9 ; Attributes: bp-based	frame
ROM:08A9 
ROM:08A9 INTH_sub_08A9:				 ; CODE	XREF: XINTH_sub_086B+10j
ROM:08A9					 ; XINTH_sub_086B+14j
ROM:08A9		 push	 af
ROM:08AA		 ld	 hl, DMA_ALL_3
ROM:08AD		 ld	 bc, 33Ch	 ; DMA - All read and write registers
ROM:08B0		 otir	 
ROM:08B2		 ld	 e, 6
ROM:08B4		 call	 sub_0_9CB
ROM:08B7		 ld	 b, 2
ROM:08B9		 inir	 
ROM:08BB		 call	 DMA_ALL_STH
ROM:08BE		 in	 a, (28h)
ROM:08C0		 pop	 af
ROM:08C1		 and	 60h ; '`'
ROM:08C3		 or	 1
ROM:08C5		 dec	 hl
ROM:08C6		 dec	 hl
ROM:08C7		 dec	 hl
ROM:08C8		 ld	 (hl), a
ROM:08C9		 call	 SIO0_CHANA_CTL_STH
ROM:08CC		 call	 sub_0_9DE
ROM:08CF		 jr	 nz, loc_0_8D9
ROM:08D1		 ld	 (iy+IY_STRUCT.field_1A), c
ROM:08D4		 call	 sub_0_8FA
ROM:08D7		 jr	 loc_0_8E0
ROM:08D9 ; ───────────────────────────────────────────────────────────────────────────
ROM:08D9 
ROM:08D9 loc_0_8D9:				 ; CODE	XREF: INTH_sub_08A9+26j
ROM:08D9		 set	 0, (iy+IY_STRUCT.field_2A)
ROM:08DD		 call	 SIO0_sub_0918
ROM:08E0 
ROM:08E0 loc_0_8E0:				 ; CODE	XREF: INTH_sub_08A9+2Ej
ROM:08E0		 set	 6, (iy+IY_STRUCT.field_2A)
ROM:08E4		 res	 4, (iy+IY_STRUCT.field_2A)
ROM:08E8		 ld	 l, (ix+IX_STRUCT.field_1)
ROM:08EB		 call	 sub_0_280
ROM:08EE		 scf	 
ROM:08EF		 reti	 
ROM:08EF ; End of function INTH_sub_08A9
ROM:08EF 
ROM:08F1 
ROM:08F1 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:08F1 
ROM:08F1 ; Attributes: bp-based	frame
ROM:08F1 
ROM:08F1 sub_0_8F1:				 ; CODE	XREF: sub_0_6AD+22p
ROM:08F1					 ; SIO_sub_0807+3Ep
ROM:08F1		 ld	 h, (ix+IX_STRUCT.field_1)
ROM:08F4		 ld	 l, 1
ROM:08F6		 call	 FDC_sub_0360	 ; Called on sector/track read write. PORTB low	2 bits touched
ROM:08F9		 ret	 
ROM:08F9 ; End of function sub_0_8F1
ROM:08F9 
ROM:08FA 
ROM:08FA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:08FA 
ROM:08FA ; Attributes: bp-based	frame
ROM:08FA 
ROM:08FA sub_0_8FA:				 ; CODE	XREF: sub_0_6AD+25p
ROM:08FA					 ; SIO0_sub_070B+D2p
ROM:08FA					 ; SIO0_sub_07E6+1Cp
ROM:08FA					 ; SIO_sub_0807+51p
ROM:08FA					 ; INTH_sub_08A9+2Bp
ROM:08FA		 ld	 e, 0
ROM:08FC		 call	 sub_0_9CB
ROM:08FF		 di	 
ROM:0900		 call	 DMA_sub_092D
ROM:0903		 ld	 hl, ARR_3_OR_5_VAL
ROM:0906		 ld	 b, 3
ROM:0908		 otir	 
ROM:090A		 res	 0, (iy+IY_STRUCT.field_2A)
ROM:090E		 call	 SIO0_sub_0918
ROM:0911		 ld	 a, 87h	; 'ç'
ROM:0913		 out	 (3Ch),	a
ROM:0915		 jp	 TAIL_EI
ROM:0915 ; End of function sub_0_8FA
ROM:0915 
ROM:0918 
ROM:0918 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0918 
ROM:0918 ; Attributes: bp-based	frame
ROM:0918 
ROM:0918 SIO0_sub_0918:				 ; CODE	XREF: INTH_sub_08A9+34p
ROM:0918					 ; sub_0_8FA+14p
ROM:0918		 ld	 hl, SIO0_CHAN_A_CONTROL_VALS
ROM:091B		 ld	 bc, 829h
ROM:091E		 otir	 
ROM:0920		 ld	 a, (iy+IY_STRUCT.field_28)
ROM:0923		 out	 (c), a
ROM:0925		 ld	 hl, ARR_6_VAL
ROM:0928		 ld	 b, 6
ROM:092A		 otir	 
ROM:092C		 ret	 
ROM:092C ; End of function SIO0_sub_0918
ROM:092C 
ROM:092D 
ROM:092D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:092D 
ROM:092D ; Attributes: bp-based	frame
ROM:092D 
ROM:092D DMA_sub_092D:				 ; CODE	XREF: SIO0_sub_070B+72p
ROM:092D					 ; sub_0_8FA+6p
ROM:092D		 push	 hl
ROM:092E		 ld	 hl, ARR_5_DMA_ALL
ROM:0931		 ld	 bc, 53Ch	 ; DMA - All read and write registers
ROM:0934		 otir	 
ROM:0936		 pop	 hl
ROM:0937		 ld	 a, (hl)
ROM:0938		 out	 (c), a
ROM:093A		 inc	 hl
ROM:093B		 ld	 a, (hl)
ROM:093C		 xor	 80h ; 'Ç'
ROM:093E		 out	 (c), a
ROM:0940		 inc	 hl
ROM:0941		 inc	 hl
ROM:0942		 ld	 b, 2
ROM:0944		 otir	 
ROM:0946		 ret	 
ROM:0946 ; End of function DMA_sub_092D
ROM:0946 
ROM:0946 ; ───────────────────────────────────────────────────────────────────────────
ROM:0947 ARR_5_DMA_ALL:	 .db 0C3h, 14h,	28h, 92h, 79h ;	DATA XREF: DMA_sub_092D+1o
ROM:094C ARR_3_OR_5_VAL: .db 85h, 28h, 0CFh, 5,	0CFh ; DATA XREF: SIO0_sub_070B+75o
ROM:094C					 ; sub_0_8FA+9o
ROM:0951 DMA_ALL_3:	 .db 0BBh, 6, 0A7h	 ; DATA	XREF: INTH_sub_08A9+1o
ROM:0954 ARR_7_VAL_29:	 .db 14h, 20h, 11h, 0C0h, 5, 0EBh, 80h
ROM:0954					 ; DATA	XREF: SIO0_sub_070B+7Co
ROM:095B SIO0_CHAN_A_CONTROL_VALS:.db 18h, 4, 20h, 15h,	80h, 3,	0FCh, 6
ROM:095B					 ; DATA	XREF: SIO0_sub_0918o
ROM:0963 ARR_6_VAL:	 .db 7,	7Eh, 11h, 0ECh,	23h, 0FDh ; DATA XREF: SIO0_sub_0918+Do
ROM:0969 
ROM:0969 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0969 
ROM:0969 ; Attributes: bp-based	frame
ROM:0969 
ROM:0969 sub_0_969:				 ; CODE	XREF: SIO0_sub_07E6+Ap
ROM:0969					 ; SIO_sub_0807+Cp
ROM:0969		 ld	 a, (iy+IY_STRUCT.field_2A)
ROM:096C		 and	 20h ; ' '
ROM:096E		 or	 40h ; '@'
ROM:0970		 ld	 b, (iy+IY_STRUCT.field_29)
ROM:0973		 ld	 c, a
ROM:0974		 call	 sub_0_58E
ROM:0977		 ld	 a, 1
ROM:0979		 ld	 b, 8
ROM:097B		 call	 sub_0_458
ROM:097E		 res	 5, (iy+IY_STRUCT.field_2A)
ROM:0982		 ld	 (iy+IY_STRUCT.field_29), 0
ROM:0986		 ret	 
ROM:0986 ; End of function sub_0_969
ROM:0986 
ROM:0987 
ROM:0987 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0987 
ROM:0987 ; Attributes: bp-based	frame
ROM:0987 
ROM:0987 sub_0_987:				 ; CODE	XREF: SIO0_sub_06F3+9p
ROM:0987					 ; SIO0_sub_07E6+5p
ROM:0987		 ld	 b, 0FFh
ROM:0989		 ld	 c, 60h	; '`'
ROM:098B		 call	 sub_0_57E
ROM:098E		 ld	 a, 1
ROM:0990		 ld	 b, 8
ROM:0992		 call	 loc_0_460
ROM:0995		 ret	 
ROM:0995 ; End of function sub_0_987
ROM:0995 
ROM:0996 
ROM:0996 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0996 
ROM:0996 ; Attributes: bp-based	frame
ROM:0996 
ROM:0996 sub_0_996:				 ; CODE	XREF: sub_0_6AD+3Ep
ROM:0996					 ; SIO0_sub_070B+D5p
ROM:0996		 ld	 a, (iy+IY_STRUCT.field_2A)
ROM:0999		 and	 0Eh
ROM:099B		 or	 1
ROM:099D		 ld	 b, 0
ROM:099F		 ld	 c, a
ROM:09A0		 call	 sub_0_58E
ROM:09A3		 ld	 a, 2
ROM:09A5		 ld	 b, 8
ROM:09A7		 call	 sub_0_458
ROM:09AA		 res	 1, (iy+IY_STRUCT.field_2A)
ROM:09AE		 res	 3, (iy+IY_STRUCT.field_2A)
ROM:09B2		 res	 2, (iy+IY_STRUCT.field_2A)
ROM:09B6		 ret	 
ROM:09B6 ; End of function sub_0_996
ROM:09B6 
ROM:09B7 
ROM:09B7 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09B7 
ROM:09B7 ; Attributes: bp-based	frame
ROM:09B7 
ROM:09B7 sub_0_9B7:				 ; CODE	XREF: SIO0_sub_06F3+Cp
ROM:09B7					 ; SIO0_sub_070Bp
ROM:09B7		 ld	 bc, 1
ROM:09BA		 call	 sub_0_57E
ROM:09BD		 ld	 bc, 0Eh
ROM:09C0		 call	 sub_0_57E
ROM:09C3		 ld	 a, 2
ROM:09C5		 ld	 b, 8
ROM:09C7		 call	 loc_0_460
ROM:09CA		 ret	 
ROM:09CA ; End of function sub_0_9B7
ROM:09CA 
ROM:09CB 
ROM:09CB ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09CB 
ROM:09CB ; Attributes: bp-based	frame
ROM:09CB 
ROM:09CB sub_0_9CB:				 ; CODE	XREF: INTH_sub_08A9+Bp
ROM:09CB					 ; sub_0_8FA+2p
ROM:09CB		 ld	 a, (iy+IY_STRUCT.field_1A)
ROM:09CB ; End of function sub_0_9CB
ROM:09CB 
ROM:09CE 
ROM:09CE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09CE 
ROM:09CE ; Attributes: bp-based	frame
ROM:09CE 
ROM:09CE sub_0_9CE:				 ; CODE	XREF: sub_0_9ED+6p
ROM:09CE					 ; sub_0_9F9+6p
ROM:09CE		 rlca	 
ROM:09CF		 rlca	 
ROM:09D0		 rlca	 
ROM:09D1		 add	 a, e
ROM:09D2		 ld	 l, (iy+IY_STRUCT.field_15)
ROM:09D5		 ld	 h, (iy+IY_STRUCT.field_16)
ROM:09D8		 call	 ADD_WORD16	 ; hl+=a
ROM:09DB		 set	 7, h
ROM:09DD		 ret	 
ROM:09DD ; End of function sub_0_9CE
ROM:09DD 
ROM:09DE 
ROM:09DE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09DE 
ROM:09DE ; Attributes: bp-based	frame
ROM:09DE 
ROM:09DE sub_0_9DE:				 ; CODE	XREF: SIO0_sub_07E6+12p
ROM:09DE					 ; INTH_sub_08A9+23p
ROM:09DE		 ld	 b, (iy+IY_STRUCT.field_18)
ROM:09E1		 ld	 c, (iy+IY_STRUCT.field_1A)
ROM:09E4		 inc	 c
ROM:09E5		 ld	 a, b
ROM:09E6		 cp	 c
ROM:09E7		 jr	 nz, loc_0_9F0
ROM:09E9		 ld	 c, 0
ROM:09EB		 jr	 loc_0_9F0
ROM:09EB ; End of function sub_0_9DE
ROM:09EB 
ROM:09ED 
ROM:09ED ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09ED 
ROM:09ED ; Attributes: bp-based	frame
ROM:09ED 
ROM:09ED sub_0_9ED:				 ; CODE	XREF: SIO0_sub_070B+CCp
ROM:09ED					 ; SIO_sub_0807+4Cp
ROM:09ED		 ld	 c, (iy+IY_STRUCT.field_1A)
ROM:09F0 
ROM:09F0 loc_0_9F0:				 ; CODE	XREF: sub_0_9DE+9j
ROM:09F0					 ; sub_0_9DE+Dj
ROM:09F0		 ld	 a, c
ROM:09F1		 ld	 e, 5
ROM:09F3		 call	 sub_0_9CE
ROM:09F6		 bit	 0, (hl)
ROM:09F8		 ret	 
ROM:09F8 ; End of function sub_0_9ED
ROM:09F8 
ROM:09F9 
ROM:09F9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09F9 
ROM:09F9 ; Attributes: bp-based	frame
ROM:09F9 
ROM:09F9 sub_0_9F9:				 ; CODE	XREF: SIO0_sub_07E6p
ROM:09F9		 ld	 b, (iy+IY_STRUCT.field_18)
ROM:09FC 
ROM:09FC loc_0_9FC:				 ; CODE	XREF: sub_0_9F9+Cj
ROM:09FC		 ld	 a, b
ROM:09FD		 ld	 e, 5
ROM:09FF		 call	 sub_0_9CE
ROM:0A02		 bit	 0, (hl)
ROM:0A04		 ret	 nz
ROM:0A05		 djnz	 loc_0_9FC
ROM:0A07		 ret	 
ROM:0A07 ; End of function sub_0_9F9
ROM:0A07 
ROM:0A08 
ROM:0A08 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A08 
ROM:0A08 ; Attributes: bp-based	frame
ROM:0A08 
ROM:0A08 orphan_sub_A08:
ROM:0A08		 ld	 bc, 2000
ROM:0A0B 
ROM:0A0B loc_0_A0B:				 ; CODE	XREF: orphan_sub_A08+Bj
ROM:0A0B		 bit	 4, (iy+IY_STRUCT.field_2A)
ROM:0A0F		 ret	 z
ROM:0A10		 dec	 bc
ROM:0A11		 ld	 a, b
ROM:0A12		 or	 c
ROM:0A13		 jr	 nz, loc_0_A0B
ROM:0A15		 ret	 
ROM:0A15 ; End of function orphan_sub_A08
ROM:0A15 
ROM:0A16 
ROM:0A16 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A16 
ROM:0A16 ; Attributes: bp-based	frame
ROM:0A16 
ROM:0A16 SIO0_CHANA_CTL_STH:			 ; CODE	XREF: SIO0_sub_06F3+3p
ROM:0A16					 ; SIO0_sub_070B+C5p
ROM:0A16					 ; SIO0_sub_07E6+16p
ROM:0A16					 ; XINTH_sub_086B+38p
ROM:0A16					 ; INTH_sub_08A9+20p
ROM:0A16		 ld	 a, 18h
ROM:0A18		 out	 (29h),	a
ROM:0A1A		 ret	 
ROM:0A1A ; End of function SIO0_CHANA_CTL_STH
ROM:0A1A 
ROM:0A1B 
ROM:0A1B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A1B 
ROM:0A1B ; Attributes: bp-based	frame
ROM:0A1B 
ROM:0A1B DMA_ALL_STH:				 ; CODE	XREF: SIO0_sub_06F3p
ROM:0A1B					 ; SIO0_sub_070B+ACp
ROM:0A1B					 ; INTH_sub_08A9+12p
ROM:0A1B		 ld	 a, 0C3h ; '├'
ROM:0A1D		 out	 (3Ch),	a
ROM:0A1F		 ret	 
ROM:0A1F ; End of function DMA_ALL_STH
ROM:0A1F 
ROM:0A20 
ROM:0A20 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A20 
ROM:0A20 ; b=by	how much
ROM:0A20 ; Attributes: bp-based	frame
ROM:0A20 
ROM:0A20 DELAY_A_BIT:				 ; CODE	XREF: SIO0_sub_070B+86p
ROM:0A20					 ; SIO0_sub_070B+C2p
ROM:0A20					 ; DELAY_A_BIT+3j
ROM:0A20		 call	 locret_0_A25
ROM:0A23		 djnz	 DELAY_A_BIT	 ; b=by	how much
ROM:0A25 
ROM:0A25 locret_0_A25:				 ; CODE	XREF: DELAY_A_BITp
ROM:0A25		 ret	 
ROM:0A25 ; End of function DELAY_A_BIT
ROM:0A25 
ROM:0A26 
ROM:0A26 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A26 
ROM:0A26 ; Attributes: bp-based	frame
ROM:0A26 
ROM:0A26 HANDLER02_SIO_sub_0A26:		 ; DATA	XREF: ROM:0131o
ROM:0A26		 ld	 ix, IX_stru_1BFE
ROM:0A2A		 ld	 iy, IY_CH0_stru_2568
ROM:0A2E		 jr	 HANDLER_SIO_L0_COMMON ; i0X27D7,iy=pointers
ROM:0A2E ; End of function HANDLER02_SIO_sub_0A26 ; (ix+2) == ioport-1,	(ix+3) == ioport-1
ROM:0A2E 
ROM:0A30 
ROM:0A30 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A30 
ROM:0A30 ; Attributes: bp-based	frame
ROM:0A30 
ROM:0A30 HANDLER03_SIO_sub_0A30:		 ; DATA	XREF: ROM:0134o
ROM:0A30		 ld	 ix, IX_stru_1C0B
ROM:0A34		 ld	 iy, IY_CH1_stru_2596
ROM:0A38		 jr	 HANDLER_SIO_L0_COMMON ; i0X27D7,iy=pointers
ROM:0A38 ; End of function HANDLER03_SIO_sub_0A30 ; (ix+2) == ioport-1,	(ix+3) == ioport-1
ROM:0A38 
ROM:0A3A 
ROM:0A3A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A3A 
ROM:0A3A ; Attributes: bp-based	frame
ROM:0A3A 
ROM:0A3A HANDLER04_SIO_sub_0A3A:		 ; DATA	XREF: ROM:0137o
ROM:0A3A		 ld	 ix, IX_stru_1C18
ROM:0A3E		 ld	 iy, IY_CH2_stru_25C4
ROM:0A42		 jr	 HANDLER_SIO_L0_COMMON ; i0X27D7,iy=pointers
ROM:0A42 ; End of function HANDLER04_SIO_sub_0A3A ; (ix+2) == ioport-1,	(ix+3) == ioport-1
ROM:0A42 
ROM:0A44 
ROM:0A44 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A44 
ROM:0A44 ; Attributes: bp-based	frame
ROM:0A44 
ROM:0A44 HANDLER05_SIO_sub_0A44:		 ; DATA	XREF: ROM:013Ao
ROM:0A44		 ld	 ix, IX_stru_1C25
ROM:0A48		 ld	 iy, IY_CH3_stru_25F2
ROM:0A4C		 jr	 HANDLER_SIO_L0_COMMON ; i0X27D7,iy=pointers
ROM:0A4C ; End of function HANDLER05_SIO_sub_0A44 ; (ix+2) == ioport-1,	(ix+3) == ioport-1
ROM:0A4C 
ROM:0A4E 
ROM:0A4E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A4E 
ROM:0A4E ; Attributes: bp-based	frame
ROM:0A4E 
ROM:0A4E HANDLER06_SIO_sub_0A4E:		 ; DATA	XREF: ROM:013Do
ROM:0A4E		 ld	 ix, IX_stru_1C32
ROM:0A52		 ld	 iy, IY_CH4_stru_2620
ROM:0A56		 jr	 HANDLER_SIO_L0_COMMON ; i0X27D7,iy=pointers
ROM:0A56 ; End of function HANDLER06_SIO_sub_0A4E ; (ix+2) == ioport-1,	(ix+3) == ioport-1
ROM:0A56 
ROM:0A58 
ROM:0A58 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A58 
ROM:0A58 ; Attributes: bp-based	frame
ROM:0A58 
ROM:0A58 HANDLER07_SIO_sub_0A58:		 ; DATA	XREF: ROM:0140o
ROM:0A58		 ld	 ix, IX_stru_1C3F
ROM:0A5C		 ld	 iy, IY_CH5_stru_264E
ROM:0A5C ; End of function HANDLER07_SIO_sub_0A58
ROM:0A5C 
ROM:0A60 
ROM:0A60 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A60 
ROM:0A60 ; i0X27D7,iy=pointers
ROM:0A60 ; (ix+2) == ioport-1, (ix+3) == ioport-1
ROM:0A60 ; Attributes: bp-based	frame
ROM:0A60 
ROM:0A60 HANDLER_SIO_L0_COMMON:			 ; CODE	XREF: HANDLER02_SIO_sub_0A26+8j
ROM:0A60					 ; HANDLER03_SIO_sub_0A30+8j
ROM:0A60					 ; HANDLER04_SIO_sub_0A3A+8j
ROM:0A60					 ; HANDLER05_SIO_sub_0A44+8j
ROM:0A60					 ; HANDLER06_SIO_sub_0A4E+8j ...
ROM:0A60		 ld	 (iy+IY_STRUCT.field_26), 0
ROM:0A64		 ld	 b, 2
ROM:0A66		 ld	 a, 0
ROM:0A68		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0A68					 ; save	a in (hl)
ROM:0A68					 ; (ix+2) == ioport-1
ROM:0A6B		 ld	 b, 1
ROM:0A6D		 ld	 a, 4
ROM:0A6F		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0A6F					 ; save	a in (hl)
ROM:0A6F					 ; (ix+2) == ioport-1
ROM:0A72		 ld	 de, JINTH_sub_1070 ; (ix+3) ==	ioport-1
ROM:0A72					 ; de =	return address
ROM:0A75		 call	 STH_INT_RELATED_PERHAPS
ROM:0A78		 jr	 nc, loc_0_A82
ROM:0A7A		 call	 ZERO_SAVED_TASK_sub_028C
ROM:0A7D		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0A80		 jr	 HANDLER_SIO_L0_COMMON ; i0X27D7,iy=pointers
ROM:0A80					 ; (ix+2) == ioport-1, (ix+3) == ioport-1
ROM:0A82 ; ───────────────────────────────────────────────────────────────────────────
ROM:0A82 
ROM:0A82 loc_0_A82:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+18j
ROM:0A82		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0A85		 ei	 
ROM:0A86 
ROM:0A86 loc_0_A86:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+33j
ROM:0A86					 ; HANDLER_SIO_L0_COMMON+BDj
ROM:0A86		 ld	 a, (_00_FROM_BEGINNING)
ROM:0A89		 bit	 0, a
ROM:0A8B		 jr	 nz, loc_0_A95
ROM:0A8D		 call	 ZERO_SAVED_TASK_sub_028C
ROM:0A90		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0A93		 jr	 loc_0_A86
ROM:0A95 ; ───────────────────────────────────────────────────────────────────────────
ROM:0A95 
ROM:0A95 loc_0_A95:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+2Bj
ROM:0A95		 ld	 hl, loc_0_AE1
ROM:0A98		 push	 hl
ROM:0A99		 ld	 c, (ix+IX_STRUCT.field_8)
ROM:0A9C		 ld	 b, (ix+IX_STRUCT.field_9)
ROM:0A9F		 ld	 hl, 4
ROM:0AA2		 add	 hl, bc
ROM:0AA3		 ld	 a, (hl)
ROM:0AA4		 bit	 7, a
ROM:0AA6		 jp	 z, SIO_sub_0B40
ROM:0AA9		 ld	 (iy+IY_STRUCT.field_26), 1
ROM:0AAD		 push	 hl
ROM:0AAE		 res	 7, a
ROM:0AB0		 rrca	 
ROM:0AB1		 rrca	 
ROM:0AB2		 rrca	 
ROM:0AB3		 rrca	 
ROM:0AB4		 and	 0Fh
ROM:0AB6		 ld	 b, a
ROM:0AB7		 ld	 a, (ix+IX_STRUCT)
ROM:0ABA		 add	 a, a
ROM:0ABB		 ld	 hl, ARR12
ROM:0ABE		 call	 ADD_WORD16	 ; hl+=a
ROM:0AC1		 ld	 a, (hl)
ROM:0AC2		 and	 8
ROM:0AC4		 or	 b
ROM:0AC5		 ld	 (hl), a
ROM:0AC6		 ld	 b, 0
ROM:0AC8		 ld	 a, (ix+IX_STRUCT)
ROM:0ACB		 call	 sub_0_458
ROM:0ACE		 pop	 hl
ROM:0ACF		 ld	 a, (hl)
ROM:0AD0		 and	 0Fh
ROM:0AD2		 cp	 10h
ROM:0AD4		 ret	 nc
ROM:0AD5		 add	 a, a
ROM:0AD6		 ld	 hl, V_SIO_L0_off_0B20
ROM:0AD9		 call	 ADD_WORD16	 ; hl+=a
ROM:0ADC		 ld	 e, (hl)
ROM:0ADD		 inc	 hl
ROM:0ADE		 ld	 d, (hl)
ROM:0ADF		 ex	 de, hl
ROM:0AE0		 jp	 (hl)
ROM:0AE1 ; ───────────────────────────────────────────────────────────────────────────
ROM:0AE1 
ROM:0AE1 loc_0_AE1:				 ; DATA	XREF: HANDLER_SIO_L0_COMMON+35o
ROM:0AE1		 di	 
ROM:0AE2		 ld	 a, (iy+IY_STRUCT.field_25)
ROM:0AE5		 ld	 (iy+IY_STRUCT.field_25), 0
ROM:0AE9		 ei	 
ROM:0AEA		 or	 a
ROM:0AEB		 jr	 z, loc_0_AF8
ROM:0AED		 ld	 e, 2
ROM:0AEF		 ld	 a, (ix+IX_STRUCT)
ROM:0AF2		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0AF5		 call	 BUS_WRITE16	 ; ix=24-bit host mem address pointer, (de)=source
ROM:0AF8 
ROM:0AF8 loc_0_AF8:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+8Bj
ROM:0AF8		 ld	 a, (iy+IY_STRUCT.field_26)
ROM:0AFB		 or	 a
ROM:0AFC		 jr	 z, loc_0_B1A
ROM:0AFE		 ld	 (iy+IY_STRUCT.field_26), 0
ROM:0B02		 ld	 e, 4
ROM:0B04		 ld	 a, (ix+IX_STRUCT)
ROM:0B07		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0B0A		 ex	 de, hl
ROM:0B0B		 ld	 b, (hl)
ROM:0B0C		 ld	 (hl), 0
ROM:0B0E		 ex	 de, hl
ROM:0B0F		 bit	 7, b
ROM:0B11		 push	 af
ROM:0B12		 ld	 a, b
ROM:0B13		 and	 70h ; 'p'
ROM:0B15		 ld	 b, a
ROM:0B16		 pop	 af
ROM:0B17		 call	 nz, BUS_WRITE8	 ; b=data byte
ROM:0B1A 
ROM:0B1A loc_0_B1A:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+9Cj
ROM:0B1A		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0B1D		 jp	 loc_0_A86
ROM:0B1D ; ───────────────────────────────────────────────────────────────────────────
ROM:0B20 V_SIO_L0_off_0B20:.dw SIO_L1H_nullsub_2, SIO_L1H_sub_0C96, SIO_L1H_sub_0D0C
ROM:0B20					 ; DATA	XREF: HANDLER_SIO_L0_COMMON+76o
ROM:0B20		 .dw SIO_L1H_sub_0CEE, SIO_L1H_sub_0CEB, SIO_L1H_nullsub_2
ROM:0B20		 .dw SIO_L1H_sub_0D28, SIO_L1H_sub_065F, SIO_L1H_sub_0D4C
ROM:0B20		 .dw SIO_L1H_sub_0DDC, SIO_L1H_sub_0DE3, SIO_L1H_sub_0DEC
ROM:0B20		 .dw SIO_L1H_sub_0EC3, SIO_L1H_sub_0F2E, SIO_L1H_sub_0F22
ROM:0B20		 .dw SIO_L1H_sub_0F32
ROM:0B20 ; End of function HANDLER_SIO_L0_COMMON
ROM:0B20 
ROM:0B40 
ROM:0B40 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0B40 
ROM:0B40 ; Attributes: bp-based	frame
ROM:0B40 
ROM:0B40 SIO_sub_0B40:				 ; CODE	XREF: HANDLER_SIO_L0_COMMON+46j
ROM:0B40					 ; XH_sub_0BA2+60j
ROM:0B40					 ; XH_sub_0BA2+66j
ROM:0B40					 ; XH_sub_0BA2+76j
ROM:0B40					 ; XH_sub_0BA2+81j ...
ROM:0B40		 bit	 1, (iy+IY_STRUCT.field_27)
ROM:0B44		 jp	 nz, SIO_sub_0807
ROM:0B47		 ld	 a, (iy+IY_STRUCT.LAST)
ROM:0B4A		 ld	 (iy+IY_STRUCT.LAST), 0
ROM:0B4E		 or	 a
ROM:0B4F		 jr	 z, loc_0_B59
ROM:0B51		 ld	 a, (ix+IX_STRUCT)
ROM:0B54		 ld	 b, 1
ROM:0B56		 call	 sub_0_458
ROM:0B59 
ROM:0B59 loc_0_B59:				 ; CODE	XREF: SIO_sub_0B40+Fj
ROM:0B59		 bit	 0, (iy+IY_STRUCT.field_27)
ROM:0B5D		 ld	 hl, off_0_B72
ROM:0B60		 jr	 z, loc_0_B65
ROM:0B62		 ld	 hl, off_0_B82
ROM:0B65 
ROM:0B65 loc_0_B65:				 ; CODE	XREF: SIO_sub_0B40+20j
ROM:0B65		 ld	 a, (iy+IY_STRUCT.field_23)
ROM:0B68		 and	 3Eh ; '>'
ROM:0B6A		 call	 ADD_WORD16	 ; hl+=a
ROM:0B6D		 ld	 e, (hl)
ROM:0B6E		 inc	 hl
ROM:0B6F		 ld	 d, (hl)
ROM:0B70		 ex	 de, hl
ROM:0B71		 jp	 (hl)
ROM:0B71 ; End of function SIO_sub_0B40
ROM:0B71 
ROM:0B71 ; ───────────────────────────────────────────────────────────────────────────
ROM:0B72 off_0_B72:	 .dw XH_sub_0C72, XH_sub_0C72, XH_sub_0C72, XH_sub_0BA2
ROM:0B72					 ; DATA	XREF: SIO_sub_0B40+1Do
ROM:0B72		 .dw XH_sub_0C26, XH_sub_0C26, XH_sub_0C26, XH_sub_0BA2	; (ix+2) == ioport-1
ROM:0B72					 ; b = data out
ROM:0B82 off_0_B82:	 .dw YH_nullsub_3, YH_sub_0F52,	YH_sub_0F85, YH_sub_0F52
ROM:0B82					 ; DATA	XREF: SIO_sub_0B40+22o
ROM:0B82		 .dw YH_sub_0FD6, YH_sub_0FD6, YH_sub_0FD6, YH_sub_0FD6
ROM:0B82		 .dw YH_sub_1014, YH_sub_1014, YH_sub_1014, YH_sub_1014
ROM:0B82		 .dw YH_sub_100B, YH_sub_100B, YH_sub_100B, YH_sub_100B
ROM:0BA2 
ROM:0BA2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0BA2 
ROM:0BA2 ; Attributes: bp-based	frame
ROM:0BA2 
ROM:0BA2 XH_sub_0BA2:				 ; DATA	XREF: ROM:0B72o
ROM:0BA2		 ld	 e, 0
ROM:0BA4		 ld	 a, (ix+IX_STRUCT)
ROM:0BA7		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0BAA		 ex	 de, hl
ROM:0BAB		 bit	 7, (hl)
ROM:0BAD		 jp	 z, loc_0_C0B
ROM:0BB0		 call	 sub_0_E5B
ROM:0BB3		 push	 hl
ROM:0BB4		 push	 de
ROM:0BB5 
ROM:0BB5 loc_0_BB5:				 ; CODE	XREF: XH_sub_0BA2+2Cj
ROM:0BB5		 call	 sub_0_5D7
ROM:0BB8		 ld	 a, 2
ROM:0BBA		 call	 z, sub_0_4FF
ROM:0BBD		 jr	 z, loc_0_BD5
ROM:0BBF		 push	 de
ROM:0BC0		 ld	 b, 8
ROM:0BC2		 call	 sub_0_44F
ROM:0BC5		 call	 sub_0_16D
ROM:0BC8		 pop	 de
ROM:0BC9		 jr	 c, loc_0_BD0
ROM:0BCB		 call	 sub_0_5B1
ROM:0BCE		 jr	 loc_0_BB5
ROM:0BD0 ; ───────────────────────────────────────────────────────────────────────────
ROM:0BD0 
ROM:0BD0 loc_0_BD0:				 ; CODE	XREF: XH_sub_0BA2+27j
ROM:0BD0		 ld	 a, 4
ROM:0BD2		 call	 sub_0_4FF
ROM:0BD5 
ROM:0BD5 loc_0_BD5:				 ; CODE	XREF: XH_sub_0BA2+1Bj
ROM:0BD5		 call	 sub_0_5CF
ROM:0BD8		 pop	 hl
ROM:0BD9		 pop	 de
ROM:0BDA		 jr	 z, loc_0_C05
ROM:0BDC		 ld	 bc, 9
ROM:0BDF		 ldir	 
ROM:0BE1		 ld	 a, (iy+IY_STRUCT.field_19)
ROM:0BE4		 or	 a
ROM:0BE5		 jr	 z, loc_0_BF4
ROM:0BE7		 ld	 e, 10h
ROM:0BE9		 ld	 a, (ix+IX_STRUCT)
ROM:0BEC		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0BEF		 ld	 b, 80h	; 'Ç'
ROM:0BF1		 call	 BUS_WRITE8	 ; b=data byte
ROM:0BF4 
ROM:0BF4 loc_0_BF4:				 ; CODE	XREF: XH_sub_0BA2+43j
ROM:0BF4		 ld	 e, 0Fh
ROM:0BF6		 ld	 a, (ix+IX_STRUCT)
ROM:0BF9		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0BFC		 call	 BUS_WRITE16	 ; ix=24-bit host mem address pointer, (de)=source
ROM:0BFF		 call	 sub_0_E96
ROM:0C02		 jp	 SIO_sub_0B40
ROM:0C05 ; ───────────────────────────────────────────────────────────────────────────
ROM:0C05 
ROM:0C05 loc_0_C05:				 ; CODE	XREF: XH_sub_0BA2+38j
ROM:0C05		 call	 sub_0_E87
ROM:0C08		 jp	 SIO_sub_0B40
ROM:0C0B ; ───────────────────────────────────────────────────────────────────────────
ROM:0C0B 
ROM:0C0B loc_0_C0B:				 ; CODE	XREF: XH_sub_0BA2+Bj
ROM:0C0B		 ld	 b, 8
ROM:0C0D		 call	 sub_0_44F
ROM:0C10		 call	 sub_0_16D
ROM:0C13		 ld	 a, 4
ROM:0C15		 call	 c, sub_0_4FF
ROM:0C18		 jp	 c, SIO_sub_0B40
ROM:0C1B		 ld	 e, 12h
ROM:0C1D		 call	 BUS_WRITE8_STH
ROM:0C20		 call	 sub_0_E96
ROM:0C23		 jp	 SIO_sub_0B40
ROM:0C23 ; End of function XH_sub_0BA2
ROM:0C23 
ROM:0C26 
ROM:0C26 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C26 
ROM:0C26 ; (ix+2) == ioport-1
ROM:0C26 ; b = data out
ROM:0C26 ; Attributes: bp-based	frame
ROM:0C26 
ROM:0C26 XH_sub_0C26:				 ; CODE	XREF: XH_sub_0C26+22j
ROM:0C26					 ; DATA	XREF: ROM:0B72o
ROM:0C26		 ld	 b, 0
ROM:0C28		 call	 sub_0_4E6	 ; (ix+2) == ioport-1
ROM:0C28					 ; b = data out
ROM:0C28					 ; a = data in
ROM:0C2B		 and	 0Ch
ROM:0C2D		 xor	 0Ch
ROM:0C2F		 ret	 nz
ROM:0C30		 ld	 e, 1Eh
ROM:0C32		 call	 BUS_READ8_STH
ROM:0C35		 ld	 c, (ix+IX_STRUCT.PORT_BASE_1)
ROM:0C38		 out	 (c), b
ROM:0C3A		 ld	 e, 1Eh
ROM:0C3C		 ld	 b, 3
ROM:0C3E		 call	 sub_0_567
ROM:0C41		 ld	 e, 21h	; '!'
ROM:0C43		 ld	 b, 2
ROM:0C45		 call	 sub_0_550
ROM:0C48		 jr	 nz, XH_sub_0C26 ; recurse
ROM:0C48 ; End of function XH_sub_0C26
ROM:0C48 
ROM:0C4A 
ROM:0C4A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C4A 
ROM:0C4A ; Attributes: bp-based	frame
ROM:0C4A 
ROM:0C4A SIO_sub_0C4A:				 ; CODE	XREF: SIO_L1H_sub_0C96+4Ep
ROM:0C4A					 ; SIO_L1H_sub_0CEBj
ROM:0C4A		 ld	 e, 5
ROM:0C4C		 ld	 a, (ix+IX_STRUCT)
ROM:0C4F		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0C52		 push	 hl
ROM:0C53		 push	 de
ROM:0C54		 push	 af
ROM:0C55		 push	 iy
ROM:0C57		 pop	 hl
ROM:0C58		 ld	 bc, 1Eh
ROM:0C5B		 add	 hl, bc
ROM:0C5C		 ld	 bc, 5
ROM:0C5F		 ldir	 
ROM:0C61		 pop	 af
ROM:0C62		 pop	 de
ROM:0C63		 pop	 hl
ROM:0C64		 ld	 bc, 5
ROM:0C67		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:0C67					 ; ix=24-bit host mem address pointer (for window)
ROM:0C67					 ; c=count, (de)=source
ROM:0C67					 ; ix=preserved, interrupts off/on
ROM:0C6A		 ld	 a, 8
ROM:0C6C		 call	 sub_0_4FF
ROM:0C6F		 jp	 sub_0_EA5
ROM:0C6F ; End of function SIO_sub_0C4A
ROM:0C6F 
ROM:0C72 
ROM:0C72 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C72 
ROM:0C72 ; Attributes: bp-based	frame
ROM:0C72 
ROM:0C72 XH_sub_0C72:				 ; DATA	XREF: ROM:0B72o
ROM:0C72		 ld	 (iy+IY_STRUCT.field_25), 1
ROM:0C76		 ld	 b, 1
ROM:0C78		 call	 sub_0_4E6	 ; (ix+2) == ioport-1
ROM:0C78					 ; b = data out
ROM:0C78					 ; a = data in
ROM:0C7B		 and	 1
ROM:0C7D		 jr	 z, loc_0_C88
ROM:0C7F		 ld	 bc, 1
ROM:0C82		 call	 sub_0_58E
ROM:0C85		 call	 ZERO_SAVED_TASK_sub_028C
ROM:0C88 
ROM:0C88 loc_0_C88:				 ; CODE	XREF: XH_sub_0C72+Bj
ROM:0C88		 ld	 a, (iy+IY_STRUCT.field_B)
ROM:0C8B		 cp	 (iy+IY_STRUCT.field_C)
ROM:0C8E		 ld	 a, 4
ROM:0C90		 jp	 z, sub_0_4FF
ROM:0C93		 jp	 DI_sub_0508
ROM:0C93 ; End of function XH_sub_0C72
ROM:0C93 
ROM:0C96 
ROM:0C96 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C96 
ROM:0C96 ; Attributes: bp-based	frame
ROM:0C96 
ROM:0C96 SIO_L1H_sub_0C96:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0C96		 ld	 b, 0
ROM:0C98		 call	 sub_0_44F
ROM:0C9B		 ld	 a, 18h
ROM:0C9D		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0C9D					 ; save	a in (hl)
ROM:0C9D					 ; (ix+2) == ioport-1
ROM:0CA0		 call	 SIO_sub_0E27
ROM:0CA3		 call	 SIO_L1H_sub_0D4C
ROM:0CA6		 call	 SIO_L1H_sub_0DDC
ROM:0CA9		 ld	 bc, 0Ah
ROM:0CAC		 call	 sub_0_57E
ROM:0CAF		 ld	 b, 0
ROM:0CB1		 call	 sub_0_4E6	 ; (ix+2) == ioport-1
ROM:0CB1					 ; b = data out
ROM:0CB1					 ; a = data in
ROM:0CB4		 rrca	 
ROM:0CB5		 rrca	 
ROM:0CB6		 and	 0Ah
ROM:0CB8		 ld	 c, a
ROM:0CB9		 ld	 b, 0
ROM:0CBB		 call	 sub_0_58E
ROM:0CBE		 ld	 (iy+IY_STRUCT.field_B), 0
ROM:0CC2		 ld	 (iy+IX_STRUCT.LAST), 0
ROM:0CC6		 ld	 b, 3
ROM:0CC8		 call	 sub_0_44F
ROM:0CCB		 or	 1
ROM:0CCD		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0CCD					 ; save	a in (hl)
ROM:0CCD					 ; (ix+2) == ioport-1
ROM:0CD0		 ld	 b, 5
ROM:0CD2		 call	 sub_0_44F
ROM:0CD5		 or	 8
ROM:0CD7		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0CD7					 ; save	a in (hl)
ROM:0CD7					 ; (ix+2) == ioport-1
ROM:0CDA		 ld	 b, 1
ROM:0CDC		 call	 sub_0_44F
ROM:0CDF		 or	 1Dh
ROM:0CE1		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0CE1					 ; save	a in (hl)
ROM:0CE1					 ; (ix+2) == ioport-1
ROM:0CE4		 call	 SIO_sub_0C4A
ROM:0CE7		 jp	 SIO_L1H_sub_0DDC
ROM:0CE7 ; End of function SIO_L1H_sub_0C96
ROM:0CE7 
ROM:0CEA 
ROM:0CEA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0CEA 
ROM:0CEA ; Attributes: bp-based	frame
ROM:0CEA 
ROM:0CEA SIO_L1H_nullsub_2:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0CEA		 ret	 
ROM:0CEA ; End of function SIO_L1H_nullsub_2
ROM:0CEA 
ROM:0CEB 
ROM:0CEB ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0CEB 
ROM:0CEB ; Attributes: bp-based	frame
ROM:0CEB 
ROM:0CEB SIO_L1H_sub_0CEB:			 ; CODE	XREF: SIO_L1H_sub_0D0C+9j
ROM:0CEB					 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0CEB		 jp	 SIO_sub_0C4A
ROM:0CEB ; End of function SIO_L1H_sub_0CEB
ROM:0CEB 
ROM:0CEE 
ROM:0CEE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0CEE 
ROM:0CEE ; Attributes: bp-based	frame
ROM:0CEE 
ROM:0CEE SIO_L1H_sub_0CEE:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0CEE		 ld	 e, 0
ROM:0CF0		 ld	 a, (ix+IX_STRUCT)
ROM:0CF3		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0CF6		 ex	 de, hl
ROM:0CF7		 bit	 7, (hl)
ROM:0CF9		 jr	 z, loc_0_D03
ROM:0CFB		 call	 sub_0_E5B
ROM:0CFE		 call	 sub_0_5CF
ROM:0D01		 jr	 nz, loc_0_D06
ROM:0D03 
ROM:0D03 loc_0_D03:				 ; CODE	XREF: SIO_L1H_sub_0CEE+Bj
ROM:0D03		 call	 sub_0_E87
ROM:0D06 
ROM:0D06 loc_0_D06:				 ; CODE	XREF: SIO_L1H_sub_0CEE+13j
ROM:0D06		 call	 SIO_sub_0E27
ROM:0D09		 jp	 SIO_sub_0B40
ROM:0D09 ; End of function SIO_L1H_sub_0CEE
ROM:0D09 
ROM:0D0C 
ROM:0D0C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0D0C 
ROM:0D0C ; Attributes: bp-based	frame
ROM:0D0C 
ROM:0D0C SIO_L1H_sub_0D0C:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0D0C		 call	 SIO_L1_sub_0E3D
ROM:0D0F		 ld	 a, (iy+IY_STRUCT.field_21)
ROM:0D12		 or	 (iy+IY_STRUCT.field_22)
ROM:0D15		 jr	 z, SIO_L1H_sub_0CEB
ROM:0D17		 ld	 bc, 1
ROM:0D1A		 call	 sub_0_57E
ROM:0D1D		 call	 sub_0_EB4
ROM:0D20		 ld	 a, 8
ROM:0D22		 call	 DI_sub_0508
ROM:0D25		 jp	 SIO_sub_0B40
ROM:0D25 ; End of function SIO_L1H_sub_0D0C
ROM:0D25 
ROM:0D28 
ROM:0D28 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0D28 
ROM:0D28 ; Attributes: bp-based	frame
ROM:0D28 
ROM:0D28 SIO_L1H_sub_0D28:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0D28		 ld	 a, (ix+IX_STRUCT)
ROM:0D2B		 ld	 e, 0
ROM:0D2D		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0D30		 call	 BUS_READ8	 ; hl=host address
ROM:0D30					 ; returns b=value
ROM:0D33		 bit	 6, b
ROM:0D35		 jr	 z, loc_0_D3E
ROM:0D37		 call	 SIO_L1_sub_0D46
ROM:0D3A		 or	 10h
ROM:0D3C		 jr	 loc_0_D43
ROM:0D3E ; ───────────────────────────────────────────────────────────────────────────
ROM:0D3E 
ROM:0D3E loc_0_D3E:				 ; CODE	XREF: SIO_L1H_sub_0D28+Dj
ROM:0D3E		 call	 SIO_L1_sub_0D46
ROM:0D41		 and	 0EFh ;	'´'
ROM:0D43 
ROM:0D43 loc_0_D43:				 ; CODE	XREF: SIO_L1H_sub_0D28+14j
ROM:0D43		 jp	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0D43 ; End of function SIO_L1H_sub_0D28	 ; save	a in (hl)
ROM:0D43					 ; (ix+2) == ioport-1
ROM:0D46 
ROM:0D46 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0D46 
ROM:0D46 ; Attributes: bp-based	frame
ROM:0D46 
ROM:0D46 SIO_L1_sub_0D46:			 ; CODE	XREF: SIO_L1H_sub_0D28+Fp
ROM:0D46					 ; SIO_L1H_sub_0D28+16p
ROM:0D46		 ld	 b, 5
ROM:0D48		 call	 sub_0_44F
ROM:0D4B		 ret	 
ROM:0D4B ; End of function SIO_L1_sub_0D46
ROM:0D4B 
ROM:0D4C 
ROM:0D4C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0D4C 
ROM:0D4C ; Attributes: bp-based	frame
ROM:0D4C 
ROM:0D4C SIO_L1H_sub_0D4C:			 ; CODE	XREF: SIO_L1H_sub_0C96+Dp
ROM:0D4C					 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0D4C		 ld	 a, (ix+IX_STRUCT)
ROM:0D4F		 ld	 e, 13h
ROM:0D51		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0D54		 call	 BUS_READ16	 ; ix=24-bit host mem address pointer, (de)=destination
ROM:0D57		 ld	 a, (ix+IX_STRUCT)
ROM:0D5A		 ld	 e, 0
ROM:0D5C		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0D5F		 push	 de
ROM:0D60		 call	 BUS_READ16	 ; ix=24-bit host mem address pointer, (de)=destination
ROM:0D63		 call	 sub_0_604
ROM:0D66		 pop	 hl
ROM:0D67		 push	 hl
ROM:0D68		 ld	 a, (hl)
ROM:0D69		 rrca	 
ROM:0D6A		 rrca	 
ROM:0D6B		 rrca	 
ROM:0D6C		 rrca	 
ROM:0D6D		 and	 3
ROM:0D6F		 ld	 hl, byte_0_1CCE
ROM:0D72		 call	 ADD_WORD16	 ; hl+=a
ROM:0D75		 ld	 a, (hl)
ROM:0D76		 ld	 (iy+IY_STRUCT.field_24), a
ROM:0D79		 pop	 hl
ROM:0D7A		 ld	 a, (hl)
ROM:0D7B		 and	 0Fh
ROM:0D7D		 or	 40h ; '@'
ROM:0D7F		 ld	 (iy+IY_STRUCT.field_4), a
ROM:0D82		 ld	 b, 8
ROM:0D84		 ld	 a, (hl)
ROM:0D85		 and	 30h ; '0'
ROM:0D87		 add	 a, a
ROM:0D88		 or	 b
ROM:0D89		 inc	 hl
ROM:0D8A		 bit	 1, (ix+IX_STRUCT.LAST)
ROM:0D8E		 jr	 z, loc_0_D99
ROM:0D90		 ld	 b, a
ROM:0D91		 call	 PIO_A_NEG_LOW_4_BITS ;	a=result
ROM:0D94		 bit	 2, a
ROM:0D96		 ld	 a, b
ROM:0D97		 jr	 nz, loc_0_DA7
ROM:0D99 
ROM:0D99 loc_0_D99:				 ; CODE	XREF: SIO_L1H_sub_0D4C+42j
ROM:0D99		 bit	 7, (hl)
ROM:0D9B		 jp	 z, loc_0_DA0
ROM:0D9E		 set	 7, a
ROM:0DA0 
ROM:0DA0 loc_0_DA0:				 ; CODE	XREF: SIO_L1H_sub_0D4C+4Fj
ROM:0DA0		 bit	 6, (hl)
ROM:0DA2		 jp	 z, loc_0_DA7
ROM:0DA5		 set	 1, a
ROM:0DA7 
ROM:0DA7 loc_0_DA7:				 ; CODE	XREF: SIO_L1H_sub_0D4C+4Bj
ROM:0DA7					 ; SIO_L1H_sub_0D4C+56j
ROM:0DA7		 ld	 (iy+IY_STRUCT.field_5), a
ROM:0DAA		 dec	 hl
ROM:0DAB		 ld	 a, (hl)
ROM:0DAC		 and	 30h ; '0'
ROM:0DAE		 add	 a, a
ROM:0DAF		 add	 a, a
ROM:0DB0		 ld	 b, a
ROM:0DB1		 ld	 a, (iy+IY_STRUCT.field_3)
ROM:0DB4		 and	 1
ROM:0DB6		 or	 b
ROM:0DB7		 ld	 (iy+IY_STRUCT.field_3), a
ROM:0DBA		 ld	 (iy+IY_STRUCT.field_1), 1Dh
ROM:0DBE		 push	 iy
ROM:0DC0		 pop	 hl
ROM:0DC1		 inc	 hl
ROM:0DC2		 ld	 b, 1
ROM:0DC4		 call	 SIO_L1_sub_0DD6
ROM:0DC7		 ld	 b, 2
ROM:0DC9		 inc	 hl
ROM:0DCA		 ld	 b, 3
ROM:0DCC		 call	 SIO_L1_sub_0DD6
ROM:0DCF		 ld	 b, 4
ROM:0DD1		 call	 SIO_L1_sub_0DD6
ROM:0DD4		 ld	 b, 5
ROM:0DD4 ; End of function SIO_L1H_sub_0D4C
ROM:0DD4 
ROM:0DD6 
ROM:0DD6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0DD6 
ROM:0DD6 ; Attributes: bp-based	frame
ROM:0DD6 
ROM:0DD6 SIO_L1_sub_0DD6:			 ; CODE	XREF: SIO_L1H_sub_0D4C+78p
ROM:0DD6					 ; SIO_L1H_sub_0D4C+80p
ROM:0DD6					 ; SIO_L1H_sub_0D4C+85p
ROM:0DD6		 ld	 a, (hl)
ROM:0DD7		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0DD7					 ; save	a in (hl)
ROM:0DD7					 ; (ix+2) == ioport-1
ROM:0DDA		 inc	 hl
ROM:0DDB		 ret	 
ROM:0DDB ; End of function SIO_L1_sub_0DD6
ROM:0DDB 
ROM:0DDC 
ROM:0DDC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0DDC 
ROM:0DDC ; Attributes: bp-based	frame
ROM:0DDC 
ROM:0DDC SIO_L1H_sub_0DDC:			 ; CODE	XREF: SIO_L1H_sub_0C96+10p
ROM:0DDC					 ; SIO_L1H_sub_0C96+51j
ROM:0DDC					 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0DDC		 ld	 bc, 0F0h ; '­'
ROM:0DDF		 call	 sub_0_57E
ROM:0DE2		 ret	 
ROM:0DE2 ; End of function SIO_L1H_sub_0DDC
ROM:0DE2 
ROM:0DE3 
ROM:0DE3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0DE3 
ROM:0DE3 ; Attributes: bp-based	frame
ROM:0DE3 
ROM:0DE3 SIO_L1H_sub_0DE3:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0DE3		 ld	 b, 1
ROM:0DE5		 ld	 a, (ix+IX_STRUCT)
ROM:0DE8		 call	 loc_0_460
ROM:0DEB		 ret	 
ROM:0DEB ; End of function SIO_L1H_sub_0DE3
ROM:0DEB 
ROM:0DEC 
ROM:0DEC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0DEC 
ROM:0DEC ; Attributes: bp-based	frame
ROM:0DEC 
ROM:0DEC SIO_L1H_sub_0DEC:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0DEC		 bit	 2, (ix+IX_STRUCT.LAST)
ROM:0DF0		 ret	 z
ROM:0DF1		 set	 2, (iy+IY_STRUCT.field_27)
ROM:0DF5		 call	 SIO_L1_sub_0E3D
ROM:0DF8		 ld	 a, (ix+IX_STRUCT)
ROM:0DFB		 ld	 e, 4
ROM:0DFD		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0E00		 ld	 b, 0
ROM:0E02		 call	 BUS_WRITE8	 ; b=data byte
ROM:0E05		 ld	 a, 1Eh
ROM:0E07		 push	 iy
ROM:0E09		 pop	 hl
ROM:0E0A		 call	 ADD_WORD16	 ; hl+=a
ROM:0E0D		 ld	 e, (hl)
ROM:0E0E		 inc	 hl
ROM:0E0F		 ld	 d, (hl)
ROM:0E10		 inc	 hl
ROM:0E11		 ld	 a, (hl)
ROM:0E12		 ex	 de, hl
ROM:0E13		 call	 OPEN_BUS_WINDOW ; Set 0x8000 window to	access A:HL bus	address
ROM:0E16		 ld	 e, 1Eh
ROM:0E18		 call	 BUS_READ8_STH
ROM:0E1B		 ld	 b, 1Eh
ROM:0E1D		 call	 sub_0_44F
ROM:0E20		 ld	 e, (hl)
ROM:0E21		 inc	 hl
ROM:0E22		 ld	 d, (hl)
ROM:0E23		 ex	 de, hl
ROM:0E24		 set	 7, h
ROM:0E26		 jp	 (hl)
ROM:0E26 ; End of function SIO_L1H_sub_0DEC
ROM:0E26 
ROM:0E27 
ROM:0E27 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0E27 
ROM:0E27 ; Attributes: bp-based	frame
ROM:0E27 
ROM:0E27 SIO_sub_0E27:				 ; CODE	XREF: SIO_L1H_sub_0C96+Ap
ROM:0E27					 ; SIO_L1H_sub_0CEE+18p
ROM:0E27		 ld	 e, 12h
ROM:0E29		 ld	 a, (ix+IX_STRUCT)
ROM:0E2C		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0E2F		 ld	 (iy+IY_STRUCT.field_12), l
ROM:0E32		 ld	 (iy+IY_STRUCT.field_13), h
ROM:0E35		 ld	 (iy+IY_STRUCT.field_14), a
ROM:0E38		 ld	 a, 2
ROM:0E3A		 jp	 DI_sub_0508
ROM:0E3A ; End of function SIO_sub_0E27
ROM:0E3A 
ROM:0E3D 
ROM:0E3D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0E3D 
ROM:0E3D ; Attributes: bp-based	frame
ROM:0E3D 
ROM:0E3D SIO_L1_sub_0E3D:			 ; CODE	XREF: SIO_L1H_sub_0D0Cp
ROM:0E3D					 ; SIO_L1H_sub_0DEC+9p
ROM:0E3D					 ; SIO_L1H_sub_0F32+1Cj
ROM:0E3D		 ld	 e, 5
ROM:0E3F		 ld	 a, (ix+IX_STRUCT)
ROM:0E42		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0E45		 push	 de
ROM:0E46		 ld	 bc, 5
ROM:0E49		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:0E49					 ; bc=count, (de)=source
ROM:0E49					 ; ix=preserved, interrupts off/on
ROM:0E4C		 push	 iy
ROM:0E4E		 pop	 hl
ROM:0E4F		 ld	 de, 1Eh
ROM:0E52		 add	 hl, de
ROM:0E53		 pop	 de
ROM:0E54		 ex	 de, hl
ROM:0E55		 ld	 bc, 5
ROM:0E58		 ldir	 
ROM:0E5A		 ret	 
ROM:0E5A ; End of function SIO_L1_sub_0E3D
ROM:0E5A 
ROM:0E5B 
ROM:0E5B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0E5B 
ROM:0E5B ; Attributes: bp-based	frame
ROM:0E5B 
ROM:0E5B sub_0_E5B:				 ; CODE	XREF: sub_0_6AD+1Fp
ROM:0E5B					 ; XH_sub_0BA2+Ep
ROM:0E5B					 ; SIO_L1H_sub_0CEE+Dp
ROM:0E5B					 ; sub_0_E5B+29j YH_sub_0F85p
ROM:0E5B		 ld	 e, 0Ah
ROM:0E5D		 ld	 a, (ix+IX_STRUCT)
ROM:0E60		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0E63		 push	 de
ROM:0E64		 ld	 bc, 9
ROM:0E67		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:0E67					 ; bc=count, (de)=source
ROM:0E67					 ; ix=preserved, interrupts off/on
ROM:0E6A		 push	 iy
ROM:0E6C		 pop	 hl
ROM:0E6D		 ld	 de, 15h
ROM:0E70		 add	 hl, de
ROM:0E71		 ex	 de, hl
ROM:0E72		 pop	 hl
ROM:0E73		 push	 hl
ROM:0E74		 push	 de
ROM:0E75		 ld	 bc, 9
ROM:0E78		 ldir	 
ROM:0E7A		 pop	 de
ROM:0E7B		 pop	 hl
ROM:0E7C		 ld	 a, (iy+IY_STRUCT.field_1D)
ROM:0E7F		 and	 80h ; 'Ç'
ROM:0E81		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:0E84		 jr	 nz, sub_0_E5B
ROM:0E86		 ret	 
ROM:0E86 ; End of function sub_0_E5B
ROM:0E86 
ROM:0E87 
ROM:0E87 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0E87 
ROM:0E87 ; Attributes: bp-based	frame
ROM:0E87 
ROM:0E87 sub_0_E87:				 ; CODE	XREF: XH_sub_0BA2+63p
ROM:0E87					 ; SIO_L1H_sub_0CEE+15p
ROM:0E87					 ; SIO_L1H_sub_0EC3+5Bp
ROM:0E87					 ; YH_sub_0F85+4Bp
ROM:0E87		 ld	 bc, 100h
ROM:0E8A		 call	 sub_0_57E
ROM:0E8D		 ld	 a, (ix+IX_STRUCT)
ROM:0E90		 ld	 b, 2
ROM:0E92		 call	 loc_0_460
ROM:0E95		 ret	 
ROM:0E95 ; End of function sub_0_E87
ROM:0E95 
ROM:0E96 
ROM:0E96 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0E96 
ROM:0E96 ; Attributes: bp-based	frame
ROM:0E96 
ROM:0E96 sub_0_E96:				 ; CODE	XREF: XH_sub_0BA2+5Dp
ROM:0E96					 ; XH_sub_0BA2+7Ep
ROM:0E96					 ; YH_sub_0F85+45p
ROM:0E96		 ld	 bc, 256
ROM:0E99		 call	 sub_0_58E
ROM:0E9C		 ld	 a, (ix+IX_STRUCT)
ROM:0E9F		 ld	 b, 2
ROM:0EA1		 call	 sub_0_458
ROM:0EA4		 ret	 
ROM:0EA4 ; End of function sub_0_E96
ROM:0EA4 
ROM:0EA5 
ROM:0EA5 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0EA5 
ROM:0EA5 ; Attributes: bp-based	frame
ROM:0EA5 
ROM:0EA5 sub_0_EA5:				 ; CODE	XREF: SIO_sub_0C4A+25j
ROM:0EA5					 ; SIO_L1H_sub_0EC3+58p
ROM:0EA5					 ; YH_sub_1014+7p
ROM:0EA5		 ld	 bc, 4096
ROM:0EA8		 call	 sub_0_58E
ROM:0EAB		 ld	 a, (ix+IX_STRUCT)
ROM:0EAE		 ld	 b, 4
ROM:0EB0		 call	 sub_0_458
ROM:0EB3		 ret	 
ROM:0EB3 ; End of function sub_0_EA5
ROM:0EB3 
ROM:0EB4 
ROM:0EB4 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0EB4 
ROM:0EB4 ; Attributes: bp-based	frame
ROM:0EB4 
ROM:0EB4 sub_0_EB4:				 ; CODE	XREF: SIO_L1H_sub_0D0C+11p
ROM:0EB4					 ; SIO_L1H_sub_0F32+19p
ROM:0EB4		 ld	 bc, 4096
ROM:0EB7		 call	 sub_0_57E
ROM:0EBA		 ld	 a, (ix+IX_STRUCT)
ROM:0EBD		 ld	 b, 4
ROM:0EBF		 call	 loc_0_460
ROM:0EC2		 ret	 
ROM:0EC2 ; End of function sub_0_EB4
ROM:0EC2 
ROM:0EC3 
ROM:0EC3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0EC3 
ROM:0EC3 ; Attributes: bp-based	frame
ROM:0EC3 
ROM:0EC3 SIO_L1H_sub_0EC3:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0EC3		 bit	 0, (ix+IX_STRUCT.LAST)
ROM:0EC7		 jp	 z, JUST_RETURN_SH
ROM:0ECA		 set	 0, (iy+IY_STRUCT.field_27)
ROM:0ECE		 ld	 a, 0Eh
ROM:0ED0		 call	 sub_0_4FF
ROM:0ED3		 ld	 b, 0
ROM:0ED5		 call	 sub_0_44F
ROM:0ED8		 ld	 a, 18h
ROM:0EDA		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0EDA					 ; save	a in (hl)
ROM:0EDA					 ; (ix+2) == ioport-1
ROM:0EDD		 ld	 a, (ix+IX_STRUCT)
ROM:0EE0		 ld	 e, 13h
ROM:0EE2		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0EE5		 push	 de
ROM:0EE6		 call	 BUS_READ16	 ; ix=24-bit host mem address pointer, (de)=destination
ROM:0EE9		 pop	 hl
ROM:0EEA		 ld	 a, (hl)
ROM:0EEB		 ld	 (iy+IY_STRUCT.field_28), a
ROM:0EEE		 inc	 hl
ROM:0EEF		 ld	 a, (hl)
ROM:0EF0		 ld	 (iy+IY_STRUCT.field_29), a
ROM:0EF3		 ld	 b, 5
ROM:0EF5		 call	 sub_0_44F
ROM:0EF8		 ld	 a, 0E0h ; 'Ó'
ROM:0EFA		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0EFA					 ; save	a in (hl)
ROM:0EFA					 ; (ix+2) == ioport-1
ROM:0EFD		 ld	 b, 3
ROM:0EFF		 call	 sub_0_44F
ROM:0F02		 ld	 a, 0C0h ; '└'
ROM:0F04		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0F04					 ; save	a in (hl)
ROM:0F04					 ; (ix+2) == ioport-1
ROM:0F07		 ld	 b, 4
ROM:0F09		 call	 sub_0_44F
ROM:0F0C		 ld	 a, 10h
ROM:0F0E		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0F0E					 ; save	a in (hl)
ROM:0F0E					 ; (ix+2) == ioport-1
ROM:0F11		 ld	 b, 1
ROM:0F13		 call	 sub_0_44F
ROM:0F16		 ld	 a, 1Dh
ROM:0F18		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0F18					 ; save	a in (hl)
ROM:0F18					 ; (ix+2) == ioport-1
ROM:0F1B		 call	 sub_0_EA5
ROM:0F1E		 call	 sub_0_E87
ROM:0F21		 ret	 
ROM:0F21 ; End of function SIO_L1H_sub_0EC3
ROM:0F21 
ROM:0F22 
ROM:0F22 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F22 
ROM:0F22 ; Attributes: bp-based	frame
ROM:0F22 
ROM:0F22 SIO_L1H_sub_0F22:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0F22		 bit	 0, (iy+IY_STRUCT.field_27)
ROM:0F26		 jp	 z, JUST_RETURN_SH
ROM:0F29		 ld	 a, 2
ROM:0F2B		 jp	 DI_sub_0508
ROM:0F2B ; End of function SIO_L1H_sub_0F22
ROM:0F2B 
ROM:0F2E 
ROM:0F2E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F2E 
ROM:0F2E ; Attributes: bp-based	frame
ROM:0F2E 
ROM:0F2E SIO_L1H_sub_0F2E:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0F2E		 ld	 a, 8
ROM:0F30		 jr	 loc_0_F34
ROM:0F30 ; End of function SIO_L1H_sub_0F2E
ROM:0F30 
ROM:0F32 
ROM:0F32 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F32 
ROM:0F32 ; Attributes: bp-based	frame
ROM:0F32 
ROM:0F32 SIO_L1H_sub_0F32:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+C0o
ROM:0F32		 ld	 a, 0Ah
ROM:0F34 
ROM:0F34 loc_0_F34:				 ; CODE	XREF: SIO_L1H_sub_0F2E+2j
ROM:0F34		 bit	 0, (iy+IY_STRUCT.field_27)
ROM:0F38		 jp	 z, JUST_RETURN_SH
ROM:0F3B		 push	 af
ROM:0F3C		 ld	 a, 2
ROM:0F3E		 call	 sub_0_4FF
ROM:0F41		 pop	 af
ROM:0F42		 call	 DI_sub_0508
ROM:0F45		 ld	 bc, 1
ROM:0F48		 call	 sub_0_57E
ROM:0F4B		 call	 sub_0_EB4
ROM:0F4E		 jp	 SIO_L1_sub_0E3D
ROM:0F4E ; End of function SIO_L1H_sub_0F32
ROM:0F4E 
ROM:0F51 ; [COLLAPSED FUNCTION YH_nullsub_3, 00000001 BYTES. PRESS KEYPAD "+" TO EXPAND]
ROM:0F52 
ROM:0F52 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F52 
ROM:0F52 ; Attributes: bp-based	frame
ROM:0F52 
ROM:0F52 YH_sub_0F52:				 ; DATA	XREF: ROM:0B82o
ROM:0F52		 call	 ZERO_SAVED_TASK_sub_028C
ROM:0F55		 ld	 b, 6
ROM:0F57		 call	 sub_0_44F
ROM:0F5A		 ld	 a, (iy+IY_STRUCT.field_28)
ROM:0F5D		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0F5D					 ; save	a in (hl)
ROM:0F5D					 ; (ix+2) == ioport-1
ROM:0F60		 ld	 b, 7
ROM:0F62		 call	 sub_0_44F
ROM:0F65		 ld	 a, (iy+IY_STRUCT.field_29)
ROM:0F68		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0F68					 ; save	a in (hl)
ROM:0F68					 ; (ix+2) == ioport-1
ROM:0F6B		 ld	 b, 3
ROM:0F6D		 call	 sub_0_44F
ROM:0F70		 ld	 a, 11h
ROM:0F72		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0F72					 ; save	a in (hl)
ROM:0F72					 ; (ix+2) == ioport-1
ROM:0F75		 ld	 a, 2
ROM:0F77		 call	 sub_0_4FF
ROM:0F7A		 ld	 a, 4
ROM:0F7C		 call	 DI_sub_0508
ROM:0F7F		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:0F82		 jp	 SIO_sub_0B40
ROM:0F82 ; End of function YH_sub_0F52
ROM:0F82 
ROM:0F85 
ROM:0F85 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F85 
ROM:0F85 ; Attributes: bp-based	frame
ROM:0F85 
ROM:0F85 YH_sub_0F85:				 ; DATA	XREF: ROM:0B82o
ROM:0F85		 call	 sub_0_E5B
ROM:0F88		 push	 hl
ROM:0F89		 push	 de
ROM:0F8A 
ROM:0F8A loc_0_F8A:				 ; CODE	XREF: YH_sub_0F85+19j
ROM:0F8A		 call	 sub_0_5D7
ROM:0F8D		 jr	 z, loc_0_FA0
ROM:0F8F		 push	 de
ROM:0F90		 ld	 b, 8
ROM:0F92		 call	 sub_0_44F
ROM:0F95		 call	 sub_0_16D
ROM:0F98		 pop	 de
ROM:0F99		 jr	 c, loc_0_FA0
ROM:0F9B		 call	 sub_0_5B1
ROM:0F9E		 jr	 loc_0_F8A
ROM:0FA0 ; ───────────────────────────────────────────────────────────────────────────
ROM:0FA0 
ROM:0FA0 loc_0_FA0:				 ; CODE	XREF: YH_sub_0F85+8j
ROM:0FA0					 ; YH_sub_0F85+14j
ROM:0FA0		 call	 sub_0_5CF
ROM:0FA3		 pop	 hl
ROM:0FA4		 pop	 de
ROM:0FA5		 jr	 z, loc_0_FD0
ROM:0FA7		 ld	 bc, 9
ROM:0FAA		 ldir	 
ROM:0FAC		 ld	 a, (iy+IY_STRUCT.field_19)
ROM:0FAF		 or	 a
ROM:0FB0		 jr	 z, loc_0_FBF
ROM:0FB2		 ld	 e, 10h
ROM:0FB4		 ld	 a, (ix+IX_STRUCT)
ROM:0FB7		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0FBA		 ld	 b, 80h	; 'Ç'
ROM:0FBC		 call	 BUS_WRITE8	 ; b=data byte
ROM:0FBF 
ROM:0FBF loc_0_FBF:				 ; CODE	XREF: YH_sub_0F85+2Bj
ROM:0FBF		 ld	 e, 0Fh
ROM:0FC1		 ld	 a, (ix+IX_STRUCT)
ROM:0FC4		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0FC7		 call	 BUS_WRITE16	 ; ix=24-bit host mem address pointer, (de)=source
ROM:0FCA		 call	 sub_0_E96
ROM:0FCD		 jp	 SIO_sub_0B40
ROM:0FD0 ; ───────────────────────────────────────────────────────────────────────────
ROM:0FD0 
ROM:0FD0 loc_0_FD0:				 ; CODE	XREF: YH_sub_0F85+20j
ROM:0FD0		 call	 sub_0_E87
ROM:0FD3		 jp	 SIO_sub_0B40
ROM:0FD3 ; End of function YH_sub_0F85
ROM:0FD3 
ROM:0FD6 
ROM:0FD6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0FD6 
ROM:0FD6 ; Attributes: bp-based	frame
ROM:0FD6 
ROM:0FD6 YH_sub_0FD6:				 ; DATA	XREF: ROM:0B82o
ROM:0FD6		 call	 sub_0_1023
ROM:0FD9		 jr	 c, YH_sub_1014
ROM:0FDB		 ld	 (iy+IY_STRUCT.field_2A), b
ROM:0FDE		 call	 sub_0_1023
ROM:0FE1		 jr	 c, YH_sub_1014
ROM:0FE3		 ld	 (iy+IY_STRUCT.field_2B), b
ROM:0FE6		 ld	 b, 5
ROM:0FE8		 call	 sub_0_44F
ROM:0FEB		 or	 0Ah
ROM:0FED		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:0FED					 ; save	a in (hl)
ROM:0FED					 ; (ix+2) == ioport-1
ROM:0FF0 
ROM:0FF0 loc_0_FF0:				 ; CODE	XREF: YH_sub_0FD6+28j
ROM:0FF0		 ld	 e, 2
ROM:0FF2		 ld	 a, (ix+IX_STRUCT)
ROM:0FF5		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:0FF8		 ld	 a, (de)
ROM:0FF9		 and	 8
ROM:0FFB		 call	 z, CHECK_STUFF	 ; Called from *many* sites
ROM:0FFE		 jr	 z, loc_0_FF0
ROM:1000		 call	 sub_0_1046
ROM:1003		 ld	 a, 10h
ROM:1005		 call	 DI_sub_0508
ROM:1008		 jp	 sub_0_105E
ROM:1008 ; End of function YH_sub_0FD6
ROM:1008 
ROM:100B 
ROM:100B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:100B 
ROM:100B ; Attributes: bp-based	frame
ROM:100B 
ROM:100B YH_sub_100B:				 ; DATA	XREF: ROM:0B82o
ROM:100B		 call	 sub_0_1046
ROM:100E		 ret	 nc
ROM:100F		 ld	 a, 8
ROM:1011		 jp	 sub_0_4FF
ROM:1011 ; End of function YH_sub_100B
ROM:1011 
ROM:1014 
ROM:1014 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1014 
ROM:1014 ; Attributes: bp-based	frame
ROM:1014 
ROM:1014 YH_sub_1014:				 ; CODE	XREF: YH_sub_0FD6+3j
ROM:1014					 ; YH_sub_0FD6+Bj
ROM:1014					 ; DATA	XREF: ROM:0B82o
ROM:1014		 ld	 a, (iy+IY_STRUCT.field_10)
ROM:1017		 cp	 (iy+IY_STRUCT.field_11)
ROM:101A		 ret	 nz
ROM:101B		 call	 sub_0_EA5
ROM:101E		 ld	 a, 10h
ROM:1020		 jp	 sub_0_4FF
ROM:1020 ; End of function YH_sub_1014
ROM:1020 
ROM:1023 
ROM:1023 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1023 
ROM:1023 ; Attributes: bp-based	frame
ROM:1023 
ROM:1023 sub_0_1023:				 ; CODE	XREF: YH_sub_0FD6p
ROM:1023					 ; YH_sub_0FD6+8p
ROM:1023					 ; sub_0_1046+Ep
ROM:1023		 ld	 b, 21h	; '!'
ROM:1025		 call	 sub_0_44F
ROM:1028		 inc	 hl
ROM:1029		 or	 (hl)
ROM:102A		 scf	 
ROM:102B		 ret	 z
ROM:102C		 ld	 e, 1Eh
ROM:102E		 call	 BUS_READ8_STH
ROM:1031		 ld	 a, (ix+IX_STRUCT.PORT_BASE_1)
ROM:1034		 push	 bc
ROM:1035		 ld	 e, 1Eh
ROM:1037		 ld	 b, 3
ROM:1039		 call	 sub_0_567
ROM:103C		 ld	 e, 21h	; '!'
ROM:103E		 ld	 b, 2
ROM:1040		 call	 sub_0_550
ROM:1043		 pop	 bc
ROM:1044		 or	 a
ROM:1045		 ret	 
ROM:1045 ; End of function sub_0_1023
ROM:1045 
ROM:1046 
ROM:1046 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1046 
ROM:1046 ; Attributes: bp-based	frame
ROM:1046 
ROM:1046 sub_0_1046:				 ; CODE	XREF: YH_sub_0FD6+2Ap
ROM:1046					 ; YH_sub_100Bp sub_0_1046+16j
ROM:1046		 push	 iy
ROM:1048		 pop	 hl
ROM:1049		 ld	 de, 0Dh
ROM:104C		 add	 hl, de
ROM:104D		 push	 hl
ROM:104E		 call	 sub_0_1A6
ROM:1051		 pop	 hl
ROM:1052		 ret	 z
ROM:1053		 push	 hl
ROM:1054		 call	 sub_0_1023
ROM:1057		 pop	 hl
ROM:1058		 ret	 c
ROM:1059		 call	 sub_0_18A
ROM:105C		 jr	 sub_0_1046
ROM:105C ; End of function sub_0_1046
ROM:105C 
ROM:105E 
ROM:105E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:105E 
ROM:105E ; Attributes: bp-based	frame
ROM:105E 
ROM:105E sub_0_105E:				 ; CODE	XREF: YH_sub_0FD6+32j
ROM:105E		 push	 iy
ROM:1060		 pop	 hl
ROM:1061		 ld	 de, 0Dh
ROM:1064		 add	 hl, de
ROM:1065		 call	 sub_0_16D
ROM:1068		 ld	 c, (ix+IX_STRUCT.PORT_BASE_1)
ROM:106B		 ret	 c
ROM:106C		 out	 (c), b
ROM:106E		 ret	 
ROM:106E ; End of function sub_0_105E
ROM:106E 
ROM:106F 
ROM:106F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:106F 
ROM:106F ; Attributes: bp-based	frame
ROM:106F 
ROM:106F JUST_RETURN_SH:			 ; CODE	XREF: SIO_L1H_sub_065F+4j
ROM:106F					 ; SIO_L1H_sub_0EC3+4j
ROM:106F					 ; SIO_L1H_sub_0F22+4j
ROM:106F					 ; SIO_L1H_sub_0F32+6j
ROM:106F		 ret	 
ROM:106F ; End of function JUST_RETURN_SH
ROM:106F 
ROM:1070 
ROM:1070 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1070 
ROM:1070 ; (ix+3) == ioport-1
ROM:1070 ; de =	return address
ROM:1070 ; Attributes: bp-based	frame
ROM:1070 
ROM:1070 JINTH_sub_1070:			 ; DATA	XREF: HANDLER_SIO_L0_COMMON+12o
ROM:1070		 bit	 1, (iy+IY_STRUCT.field_27)
ROM:1074		 jp	 nz, XINTH_sub_086B
ROM:1077		 call	 sub_0_1193	 ; (ix+3) == ioport-1
ROM:107A		 bit	 1, b
ROM:107C		 ret	 z
ROM:107D		 ld	 a, (ix+IX_STRUCT.field_4)
ROM:1080		 xor	 c
ROM:1081		 bit	 3, a
ROM:1083		 ret	 nz
ROM:1084		 ld	 hl, off_0_108F
ROM:1087		 call	 ADD_WORD16	 ; hl+=a
ROM:108A		 ld	 e, (hl)
ROM:108B		 inc	 hl
ROM:108C		 ld	 d, (hl)
ROM:108D		 ex	 de, hl
ROM:108E		 jp	 (hl)
ROM:108E ; End of function JINTH_sub_1070
ROM:108E 
ROM:108E ; ───────────────────────────────────────────────────────────────────────────
ROM:108F off_0_108F:	 .dw FH_JUMP_SLOT5_sub_1097 ; DATA XREF: JINTH_sub_1070+14o
ROM:1091		 .dw FH_JUMP_SLOT3_sub_10F3
ROM:1093		 .dw FH_JUMP_SLOT4_sub_1133 ; (ix+2) ==	ioport-1
ROM:1095		 .dw FH_JUMP_SLOT2_sub_116E
ROM:1097 
ROM:1097 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1097 
ROM:1097 ; Attributes: bp-based	frame
ROM:1097 
ROM:1097 FH_JUMP_SLOT5_sub_1097:		 ; DATA	XREF: ROM:108Fo
ROM:1097		 bit	 2, (iy+IY_STRUCT.field_27)
ROM:109B		 jp	 nz, SRAM_JUMP_SLOT5
ROM:109E		 bit	 0, (iy+IY_STRUCT.field_27)
ROM:10A2		 jr	 z, loc_0_10DE
ROM:10A4		 bit	 5, (iy+IY_STRUCT.field_23)
ROM:10A8		 jr	 z, loc_0_10B3
ROM:10AA		 res	 5, (iy+IY_STRUCT.field_23)
ROM:10AE		 ld	 b, (iy+IY_STRUCT.field_2B)
ROM:10B1		 jr	 loc_0_10EB
ROM:10B3 ; ───────────────────────────────────────────────────────────────────────────
ROM:10B3 
ROM:10B3 loc_0_10B3:				 ; CODE	XREF: FH_JUMP_SLOT5_sub_1097+11j
ROM:10B3		 push	 iy
ROM:10B5		 pop	 hl
ROM:10B6		 ld	 de, 0Dh
ROM:10B9		 add	 hl, de
ROM:10BA		 call	 sub_0_16D
ROM:10BD		 jr	 nc, loc_0_10EB
ROM:10BF		 set	 5, (iy+IY_STRUCT.field_23)
ROM:10C3		 ld	 b, (iy+IY_STRUCT.field_2A)
ROM:10C6		 bit	 3, (iy+IY_STRUCT.field_23)
ROM:10CA		 jr	 z, loc_0_10EB
ROM:10CC		 res	 5, (iy+IY_STRUCT.field_23)
ROM:10D0		 res	 4, (iy+IY_STRUCT.field_23)
ROM:10D4		 ld	 b, 5
ROM:10D6		 call	 sub_0_44F
ROM:10D9		 and	 0F5h ;	'§'
ROM:10DB		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:10DB					 ; save	a in (hl)
ROM:10DB					 ; (ix+2) == ioport-1
ROM:10DE 
ROM:10DE loc_0_10DE:				 ; CODE	XREF: FH_JUMP_SLOT5_sub_1097+Bj
ROM:10DE		 push	 iy
ROM:10E0		 pop	 hl
ROM:10E1		 ld	 b, 0
ROM:10E3		 ld	 a, 28h	; '('
ROM:10E5		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:10E5					 ; save	a in (hl)
ROM:10E5					 ; (ix+2) == ioport-1
ROM:10E8		 scf	 
ROM:10E9		 reti	 
ROM:10EB ; ───────────────────────────────────────────────────────────────────────────
ROM:10EB 
ROM:10EB loc_0_10EB:				 ; CODE	XREF: FH_JUMP_SLOT5_sub_1097+1Aj
ROM:10EB					 ; FH_JUMP_SLOT5_sub_1097+26j
ROM:10EB					 ; FH_JUMP_SLOT5_sub_1097+33j
ROM:10EB		 ld	 c, (ix+IX_STRUCT.PORT_BASE_1)
ROM:10EE		 out	 (c), b
ROM:10F0		 scf	 
ROM:10F1		 reti	 
ROM:10F1 ; End of function FH_JUMP_SLOT5_sub_1097
ROM:10F1 
ROM:10F3 
ROM:10F3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:10F3 
ROM:10F3 ; Attributes: bp-based	frame
ROM:10F3 
ROM:10F3 FH_JUMP_SLOT3_sub_10F3:		 ; DATA	XREF: ROM:1091o
ROM:10F3		 bit	 2, (iy+IY_STRUCT.field_27)
ROM:10F7		 jp	 nz, SRAM_JUMP_SLOT3
ROM:10FA		 ld	 bc, 0Eh
ROM:10FD		 call	 sub_0_57E
ROM:1100		 ld	 b, 0
ROM:1102		 call	 sub_0_4E6	 ; (ix+2) == ioport-1
ROM:1102					 ; b = data out
ROM:1102					 ; a = data in
ROM:1105		 ld	 (iy+IY_STRUCT.field_2C), a
ROM:1108		 add	 a, a
ROM:1109		 push	 af
ROM:110A		 rrca	 
ROM:110B		 rrca	 
ROM:110C		 rrca	 
ROM:110D		 and	 0Ah
ROM:110F		 ld	 c, a
ROM:1110		 ld	 b, 0
ROM:1112		 pop	 af
ROM:1113		 jr	 nc, loc_0_1119
ROM:1115		 ld	 a, 4
ROM:1117		 or	 c
ROM:1118		 ld	 c, a
ROM:1119 
ROM:1119 loc_0_1119:				 ; CODE	XREF: FH_JUMP_SLOT3_sub_10F3+20j
ROM:1119		 call	 sub_0_58E
ROM:111C		 push	 iy
ROM:111E		 pop	 hl
ROM:111F		 ld	 b, 0
ROM:1121		 ld	 (iy+IY_STRUCT.LAST), 0FFh
ROM:1125		 ld	 l, (ix+IX_STRUCT.field_1)
ROM:1128		 call	 sub_0_280
ROM:112B		 ld	 a, 10h
ROM:112D		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:112D					 ; save	a in (hl)
ROM:112D					 ; (ix+2) == ioport-1
ROM:1130		 scf	 
ROM:1131		 reti	 
ROM:1131 ; End of function FH_JUMP_SLOT3_sub_10F3
ROM:1131 
ROM:1133 
ROM:1133 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1133 
ROM:1133 ; (ix+2) == ioport-1
ROM:1133 ; Attributes: bp-based	frame
ROM:1133 
ROM:1133 FH_JUMP_SLOT4_sub_1133:		 ; DATA	XREF: ROM:1093o
ROM:1133		 bit	 2, (iy+27h)
ROM:1137		 jp	 nz, SRAM_JUMP_SLOT4
ROM:113A 
ROM:113A loc_0_113A:				 ; CODE	XREF: FH_JUMP_SLOT4_sub_1133+38j
ROM:113A		 ld	 b, 0
ROM:113C		 call	 sub_0_4E6	 ; (ix+2) == ioport-1
ROM:113C					 ; b = data out
ROM:113C					 ; a = data in
ROM:113F		 and	 1
ROM:1141		 jp	 z, loc_0_1175
ROM:1144		 ld	 c, (ix+IX_STRUCT.PORT_BASE_1)
ROM:1147		 in	 a, (c)
ROM:1149		 and	 (iy+IY_STRUCT.field_24)
ROM:114C		 ld	 b, a
ROM:114D		 push	 iy
ROM:114F		 pop	 de
ROM:1150		 ld	 hl, 8
ROM:1153		 add	 hl, de
ROM:1154		 call	 sub_0_18A
ROM:1157		 jp	 nc, loc_0_1160
ROM:115A		 ld	 bc, 0A0h ; 'á'
ROM:115D		 call	 sub_0_58E
ROM:1160 
ROM:1160 loc_0_1160:				 ; CODE	XREF: FH_JUMP_SLOT4_sub_1133+24j
ROM:1160		 ld	 a, 4
ROM:1162		 call	 DI_sub_0508
ROM:1165		 ld	 l, (ix+IX_STRUCT.field_1)
ROM:1168		 call	 sub_0_280
ROM:116B		 jp	 loc_0_113A
ROM:116B ; End of function FH_JUMP_SLOT4_sub_1133
ROM:116B 
ROM:116E 
ROM:116E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:116E 
ROM:116E ; Attributes: bp-based	frame
ROM:116E 
ROM:116E FH_JUMP_SLOT2_sub_116E:		 ; DATA	XREF: ROM:1095o
ROM:116E		 bit	 2, (iy+IY_STRUCT.field_27)
ROM:1172		 jp	 nz, SRAM_JUMP_SLOT2
ROM:1175 
ROM:1175 loc_0_1175:				 ; CODE	XREF: FH_JUMP_SLOT4_sub_1133+Ej
ROM:1175		 ld	 b, 1
ROM:1177		 call	 sub_0_4E6	 ; (ix+2) == ioport-1
ROM:1177					 ; b = data out
ROM:1177					 ; a = data in
ROM:117A		 and	 70h ; 'p'
ROM:117C		 jr	 z, loc_0_1190
ROM:117E		 or	 80h ; 'Ç'
ROM:1180		 ld	 c, a
ROM:1181		 ld	 b, 0
ROM:1183		 call	 sub_0_58E
ROM:1186		 push	 iy
ROM:1188		 pop	 hl
ROM:1189		 ld	 b, 0
ROM:118B		 ld	 a, 30h	; '0'
ROM:118D		 call	 sub_0_4F2	 ; write b,a to	port_base_2+1
ROM:118D					 ; save	a in (hl)
ROM:118D					 ; (ix+2) == ioport-1
ROM:1190 
ROM:1190 loc_0_1190:				 ; CODE	XREF: FH_JUMP_SLOT2_sub_116E+Ej
ROM:1190		 scf	 
ROM:1191		 reti	 
ROM:1191 ; End of function FH_JUMP_SLOT2_sub_116E
ROM:1191 
ROM:1193 
ROM:1193 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1193 
ROM:1193 ; (ix+3) == ioport-1
ROM:1193 ; Attributes: bp-based	frame
ROM:1193 
ROM:1193 sub_0_1193:				 ; CODE	XREF: JINTH_sub_1070+7p
ROM:1193		 di	 
ROM:1194		 ld	 c, (ix+IX_STRUCT.PORT_BASE_2)
ROM:1197		 inc	 c
ROM:1198		 ld	 a, 0
ROM:119A		 out	 (c), a
ROM:119C		 in	 b, (c)
ROM:119E		 inc	 c
ROM:119F		 inc	 c
ROM:11A0		 ld	 a, 2
ROM:11A2		 out	 (c), a
ROM:11A4		 in	 a, (c)
ROM:11A6		 and	 0Eh
ROM:11A8		 ld	 c, a
ROM:11A9		 jp	 TAIL_EI
ROM:11A9 ; End of function sub_0_1193
ROM:11A9 
ROM:11A9 ; ───────────────────────────────────────────────────────────────────────────
ROM:11AC MONITOR_SPACES: .text "    "            ; DATA XREF: MONITOR_PRINT_STH+32o
ROM:11AC		 .db 0
ROM:11B1 MONITOR_ARR_5_byte_11B1:.db 14h, 0CEh,	0, 0, 81h ; DATA XREF: MONITOR_ENTRY+2Eo
ROM:11B6 MONITOR_ARR_5_byte_11B6:.db 14h, 0C5h,	0, 0, 81h ; DATA XREF: MONITOR_ENTRY+3Eo
ROM:11BB MONITOR_BANNER: .db 0Dh		 ; DATA	XREF: MONITOR_ENTRY+58o
ROM:11BB		 .db 0Ah
ROM:11BB		 .db 0Ah
ROM:11BB		 .db 0Ah
ROM:11BB		 .text "5-86 IOP monitor - version 6.2"
ROM:11BB		 .db 0Ah
ROM:11BB		 .db 0Dh
ROM:11BB		 .db 0Ah
ROM:11BB		 .db 0
ROM:11E1 MONITOR_Z80:	 .text "Z80- "           ; DATA XREF: MONITOR_PRINT_STH+Co
ROM:11E1		 .db 0
ROM:11E7 MONITOR_CONT:	 .db 0Dh		 ; DATA	XREF: MONITOR_PROMPT+6o
ROM:11E7		 .db 0Ah
ROM:11E7		 .text "-> "
ROM:11E7		 .db 0
ROM:11ED 
ROM:11ED ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:11ED 
ROM:11ED ; Attributes: bp-based	frame
ROM:11ED 
ROM:11ED MONITOR_ENTRY:				 ; CODE	XREF: MONITOR_ENTRY+10j
ROM:11ED		 ld	 ix, IX_stru_1C25
ROM:11F1		 ld	 iy, IY_CH3_stru_25F2
ROM:11F5		 ld	 a, (_00_FROM_BEGINNING)
ROM:11F8		 bit	 0, a
ROM:11FA		 call	 z, CHECK_STUFF	 ; Called from *many* sites
ROM:11FD		 jr	 z, MONITOR_ENTRY
ROM:11FF		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1202		 ld	 e, SYS_FW_VER	 ; SYS - Firmware Version Register
ROM:1204		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1204					 ; e=offset from CCB (0x0416)
ROM:1204					 ; returns hl=host address de=original hl
ROM:1207		 ld	 (BUS_ADDR), hl
ROM:120A		 ld	 (byte_0_26D9),	a
ROM:120D		 ld	 hl, 1
ROM:1210		 ld	 (MONITOR_unk_26DA), hl
ROM:1213		 ld	 a, (ix+IX_STRUCT)
ROM:1216		 ld	 e, 0
ROM:1218		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:121B		 ld	 de, MONITOR_ARR_5_byte_11B1
ROM:121E		 ld	 bc, 5
ROM:1221		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1221					 ; ix=24-bit host mem address pointer (for window)
ROM:1221					 ; c=count, (de)=source
ROM:1221					 ; ix=preserved, interrupts off/on
ROM:1224		 ld	 a, 4
ROM:1226		 ld	 e, 0
ROM:1228		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:122B		 ld	 de, MONITOR_ARR_5_byte_11B6
ROM:122E		 ld	 bc, 5
ROM:1231		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1231					 ; ix=24-bit host mem address pointer (for window)
ROM:1231					 ; c=count, (de)=source
ROM:1231					 ; ix=preserved, interrupts off/on
ROM:1234 
ROM:1234 loc_0_1234:				 ; CODE	XREF: MONITOR_ENTRY+56j
ROM:1234		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1237		 ld	 a, 1
ROM:1239		 ld	 e, 4
ROM:123B		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:123E		 call	 BUS_READ8	 ; hl=host address
ROM:123E					 ; returns b=value
ROM:1241		 bit	 7, b
ROM:1243		 jr	 nz, loc_0_1234
ROM:1245		 ld	 hl, MONITOR_BANNER ; "\r\n\n\n5-86 IOP monitor - version 6.2\n\r\n"
ROM:1248		 call	 MONITOR_PUTS
ROM:124B 
ROM:124B loc_0_124B:				 ; CODE	XREF: MONITOR_ENTRY+64j
ROM:124B		 call	 MONITOR_PROMPT
ROM:124E		 call	 MONITOR_sub_135F
ROM:1251		 jr	 loc_0_124B
ROM:1251 ; End of function MONITOR_ENTRY
ROM:1251 
ROM:1253 
ROM:1253 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1253 
ROM:1253 ; Attributes: bp-based	frame
ROM:1253 
ROM:1253 MONITOR_PROMPT:			 ; CODE	XREF: MONITOR_ENTRY+5Ep
ROM:1253		 ld	 hl, unk_0_267E
ROM:1256		 ld	 (FDC_COMMAND_BITS_ALSO), hl
ROM:1259		 ld	 hl, MONITOR_CONT ; "\r\n-> "
ROM:125C		 call	 MONITOR_PUTS
ROM:125F 
ROM:125F loc_0_125F:				 ; CODE	XREF: MONITOR_PROMPT+1Ej
ROM:125F					 ; MONITOR_PROMPT+33j
ROM:125F					 ; MONITOR_PROMPT+4Cj
ROM:125F		 call	 MONITOR_sub_12A7
ROM:1262		 cp	 7Fh ; ''
ROM:1264		 jr	 nz, loc_0_1268
ROM:1266		 ld	 a, 8
ROM:1268 
ROM:1268 loc_0_1268:				 ; CODE	XREF: MONITOR_PROMPT+11j
ROM:1268		 cp	 8
ROM:126A		 jr	 nz, loc_0_1288
ROM:126C		 ld	 a, (FDC_COMMAND_BITS_ALSO)
ROM:126F		 cp	 7Eh ; '~'
ROM:1271		 jr	 z, loc_0_125F
ROM:1273		 dec	 a
ROM:1274		 ld	 (FDC_COMMAND_BITS_ALSO), a
ROM:1277		 ld	 a, 8
ROM:1279		 call	 MONITOR_PUTCHAR
ROM:127C		 ld	 a, 20h	; ' '
ROM:127E		 call	 MONITOR_PUTCHAR
ROM:1281		 ld	 a, 8
ROM:1283		 call	 MONITOR_PUTCHAR
ROM:1286		 jr	 loc_0_125F
ROM:1288 ; ───────────────────────────────────────────────────────────────────────────
ROM:1288 
ROM:1288 loc_0_1288:				 ; CODE	XREF: MONITOR_PROMPT+17j
ROM:1288		 cp	 1Bh
ROM:128A		 jr	 nz, loc_0_1292
ROM:128C		 call	 ZERO_SAVED_TASK_sub_028C
ROM:128F		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1292 
ROM:1292 loc_0_1292:				 ; CODE	XREF: MONITOR_PROMPT+37j
ROM:1292		 ld	 hl, (FDC_COMMAND_BITS_ALSO)
ROM:1295		 ld	 (hl), a
ROM:1296		 inc	 hl
ROM:1297		 ld	 (FDC_COMMAND_BITS_ALSO), hl
ROM:129A		 call	 MONITOR_PUTCHAR
ROM:129D		 cp	 0Dh
ROM:129F		 jr	 nz, loc_0_125F
ROM:12A1		 ld	 a, 0Ah
ROM:12A3		 call	 MONITOR_PUTCHAR
ROM:12A6		 ret	 
ROM:12A6 ; End of function MONITOR_PROMPT
ROM:12A6 
ROM:12A7 
ROM:12A7 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:12A7 
ROM:12A7 ; Attributes: bp-based	frame
ROM:12A7 
ROM:12A7 MONITOR_sub_12A7:			 ; CODE	XREF: MONITOR_PROMPT+Cp
ROM:12A7					 ; MONITOR_sub_12A7+17j
ROM:12A7					 ; MONITOR_sub_12A7+2Ej
ROM:12A7		 ld	 a, (byte_0_26D6)
ROM:12AA		 and	 1
ROM:12AC		 add	 a, 3
ROM:12AE		 ld	 (byte_0_26D6),	a
ROM:12B1		 ld	 e, 3
ROM:12B3		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:12B6		 call	 BUS_READ8	 ; hl=host address
ROM:12B6					 ; returns b=value
ROM:12B9		 bit	 0, b
ROM:12BB		 call	 z, CHECK_STUFF	 ; Called from *many* sites
ROM:12BE		 jr	 z, MONITOR_sub_12A7
ROM:12C0		 ld	 a, (byte_0_26D6)
ROM:12C3		 ld	 e, 12h
ROM:12C5		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:12C8		 call	 BUS_READ8	 ; hl=host address
ROM:12C8					 ; returns b=value
ROM:12CB		 ld	 a, b
ROM:12CC		 push	 af
ROM:12CD		 ld	 b, 83h	; 'â'
ROM:12CF		 call	 MONITOR_sub_1322
ROM:12D2		 pop	 af
ROM:12D3		 cp	 0Ah
ROM:12D5		 jr	 z, MONITOR_sub_12A7
ROM:12D7		 ret	 
ROM:12D7 ; End of function MONITOR_sub_12A7
ROM:12D7 
ROM:12D8 
ROM:12D8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:12D8 
ROM:12D8 ; Attributes: bp-based	frame
ROM:12D8 
ROM:12D8 MONITOR_PUTCHAR:			 ; CODE	XREF: MONITOR_PROMPT+26p
ROM:12D8					 ; MONITOR_PROMPT+2Bp
ROM:12D8					 ; MONITOR_PROMPT+30p
ROM:12D8					 ; MONITOR_PROMPT+47p
ROM:12D8					 ; MONITOR_PROMPT+50p ...
ROM:12D8		 ld	 b, a
ROM:12D9		 push	 hl
ROM:12DA		 push	 af
ROM:12DB		 push	 bc
ROM:12DC 
ROM:12DC loc_0_12DC:				 ; CODE	XREF: MONITOR_PUTCHAR+14j
ROM:12DC		 ld	 a, (ix+IX_STRUCT)
ROM:12DF		 ld	 e, 3
ROM:12E1		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:12E4		 call	 BUS_READ8	 ; hl=host address
ROM:12E4					 ; returns b=value
ROM:12E7		 bit	 4, b
ROM:12E9		 call	 z, CHECK_STUFF	 ; Called from *many* sites
ROM:12EC		 jr	 z, loc_0_12DC
ROM:12EE		 ld	 a, (ix+IX_STRUCT)
ROM:12F1		 ld	 e, 5
ROM:12F3		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:12F6		 ld	 de, BUS_ADDR
ROM:12F9		 ld	 bc, 5
ROM:12FC		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:12FC					 ; ix=24-bit host mem address pointer (for window)
ROM:12FC					 ; c=count, (de)=source
ROM:12FC					 ; ix=preserved, interrupts off/on
ROM:12FF		 ld	 e, SYS_FW_VER	 ; SYS - Firmware Version Register
ROM:1301		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1301					 ; e=offset from CCB (0x0416)
ROM:1301					 ; returns hl=host address de=original hl
ROM:1304		 pop	 bc
ROM:1305		 call	 BUS_WRITE8	 ; b=data byte
ROM:1308		 ld	 b, 82h	; 'é'
ROM:130A		 call	 MONITOR_sub_1310
ROM:130D		 pop	 af
ROM:130E		 pop	 hl
ROM:130F		 ret	 
ROM:130F ; End of function MONITOR_PUTCHAR
ROM:130F 
ROM:1310 
ROM:1310 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1310 
ROM:1310 ; Attributes: bp-based	frame
ROM:1310 
ROM:1310 MONITOR_sub_1310:			 ; CODE	XREF: MONITOR_PUTCHAR+32p
ROM:1310		 ld	 a, (byte_0_26D6)
ROM:1313		 push	 af
ROM:1314		 ld	 a, (ix+IX_STRUCT)
ROM:1317		 ld	 (byte_0_26D6),	a
ROM:131A		 call	 MONITOR_sub_1322
ROM:131D		 pop	 af
ROM:131E		 ld	 (byte_0_26D6),	a
ROM:1321		 ret	 
ROM:1321 ; End of function MONITOR_sub_1310
ROM:1321 
ROM:1322 
ROM:1322 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1322 
ROM:1322 ; Attributes: bp-based	frame
ROM:1322 
ROM:1322 MONITOR_sub_1322:			 ; CODE	XREF: MONITOR_sub_12A7+28p
ROM:1322					 ; MONITOR_sub_1310+Ap
ROM:1322		 push	 bc
ROM:1323 
ROM:1323 loc_0_1323:				 ; CODE	XREF: MONITOR_sub_1322+11j
ROM:1323		 ld	 a, (byte_0_26D6)
ROM:1326		 ld	 e, 4
ROM:1328		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:132B		 call	 BUS_READ8	 ; hl=host address
ROM:132B					 ; returns b=value
ROM:132E		 bit	 7, b
ROM:1330		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1333		 jr	 nz, loc_0_1323
ROM:1335		 ld	 a, (byte_0_26D6)
ROM:1338		 ld	 e, 4
ROM:133A		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:133D		 pop	 bc
ROM:133E		 call	 BUS_WRITE8	 ; b=data byte
ROM:1341 
ROM:1341 loc_0_1341:				 ; CODE	XREF: MONITOR_sub_1322+2Fj
ROM:1341		 ld	 a, (byte_0_26D6)
ROM:1344		 ld	 e, 4
ROM:1346		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:1349		 call	 BUS_READ8	 ; hl=host address
ROM:1349					 ; returns b=value
ROM:134C		 bit	 7, b
ROM:134E		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1351		 jr	 nz, loc_0_1341
ROM:1353		 ret	 
ROM:1353 ; End of function MONITOR_sub_1322
ROM:1353 
ROM:1354 
ROM:1354 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1354 
ROM:1354 ; Attributes: bp-based	frame
ROM:1354 
ROM:1354 MONITOR_PUTS:				 ; CODE	XREF: MONITOR_ENTRY+5Bp
ROM:1354					 ; MONITOR_PROMPT+9p
ROM:1354					 ; MONITOR_PUTS+9j
ROM:1354					 ; MONITOR_ILLEGAL_INPUT+3p
ROM:1354					 ; MONITOR_PRINT_STH+3p ...
ROM:1354		 ld	 a, (hl)
ROM:1355		 or	 a
ROM:1356		 ret	 z
ROM:1357		 push	 hl
ROM:1358		 call	 MONITOR_PUTCHAR
ROM:135B		 pop	 hl
ROM:135C		 inc	 hl
ROM:135D		 jr	 MONITOR_PUTS
ROM:135D ; End of function MONITOR_PUTS
ROM:135D 
ROM:135F 
ROM:135F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:135F 
ROM:135F ; Attributes: bp-based	frame
ROM:135F 
ROM:135F MONITOR_sub_135F:			 ; CODE	XREF: MONITOR_ENTRY+61p
ROM:135F		 ld	 hl, unk_0_267E
ROM:1362		 ld	 (FDC_COMMAND_BITS_ALSO), hl
ROM:1365		 ld	 hl, 1
ROM:1368		 ld	 (word_0_26CF),	hl
ROM:136B		 dec	 hl
ROM:136C		 ld	 (word_0_26D1),	hl
ROM:136F		 ld	 (word_0_26D3),	hl
ROM:1372		 call	 MONITOR_sub_13EC
ROM:1375		 jp	 c, MONITOR_ILLEGAL_INPUT
ROM:1378		 jr	 loc_0_137D
ROM:137A ; ───────────────────────────────────────────────────────────────────────────
ROM:137A 
ROM:137A loc_0_137A:				 ; CODE	XREF: MONITOR_sub_135F+29j
ROM:137A					 ; MONITOR_sub_135F+2Dj
ROM:137A		 call	 MONITOR_sub_1433
ROM:137D 
ROM:137D loc_0_137D:				 ; CODE	XREF: MONITOR_sub_135F+19j
ROM:137D		 call	 sub_0_1429
ROM:1380		 jr	 z, loc_0_138E
ROM:1382		 cp	 3Dh ; '='
ROM:1384		 jr	 z, loc_0_13C2
ROM:1386		 cp	 20h ; ' '
ROM:1388		 jr	 z, loc_0_137A
ROM:138A		 cp	 2Ch ; ','
ROM:138C		 jr	 z, loc_0_137A
ROM:138E 
ROM:138E loc_0_138E:				 ; CODE	XREF: MONITOR_sub_135F+21j
ROM:138E		 call	 MONITOR_sub_14FC
ROM:1391		 call	 MONITOR_sub_1408
ROM:1394		 jr	 c, MONITOR_ILLEGAL_INPUT
ROM:1396		 ld	 hl, (word_0_26CF)
ROM:1399		 ld	 a, l
ROM:139A		 or	 h
ROM:139B		 ret	 z
ROM:139C 
ROM:139C loc_0_139C:				 ; CODE	XREF: MONITOR_sub_135F+5Fj
ROM:139C		 call	 MONITOR_PRINT_STH
ROM:139F 
ROM:139F loc_0_139F:				 ; CODE	XREF: MONITOR_sub_135F+61j
ROM:139F		 call	 MONITOR_sub_148D
ROM:13A2		 call	 MONITOR_HEX_NUMBER
ROM:13A5		 ld	 a, 20h	; ' '
ROM:13A7		 call	 MONITOR_PUTCHAR
ROM:13AA		 ld	 hl, (word_0_26CF)
ROM:13AD		 dec	 hl
ROM:13AE		 ld	 (word_0_26CF),	hl
ROM:13B1		 ld	 a, l
ROM:13B2		 or	 h
ROM:13B3		 ret	 z
ROM:13B4		 ld	 hl, (word_0_26D3)
ROM:13B7		 inc	 hl
ROM:13B8		 ld	 (word_0_26D3),	hl
ROM:13BB		 ld	 a, l
ROM:13BC		 and	 0Fh
ROM:13BE		 jr	 z, loc_0_139C
ROM:13C0		 jr	 loc_0_139F
ROM:13C2 ; ───────────────────────────────────────────────────────────────────────────
ROM:13C2 
ROM:13C2 loc_0_13C2:				 ; CODE	XREF: MONITOR_sub_135F+25j
ROM:13C2					 ; MONITOR_sub_135F+8Bj
ROM:13C2		 call	 MONITOR_sub_14FC
ROM:13C5		 ret	 z
ROM:13C6		 call	 MONITOR_sub_14C3
ROM:13C9		 jr	 c, MONITOR_ILLEGAL_INPUT
ROM:13CB		 ld	 a, h
ROM:13CC		 or	 a
ROM:13CD		 jr	 nz, MONITOR_ILLEGAL_INPUT
ROM:13CF		 ld	 b, l
ROM:13D0		 ld	 a, (_00_FROM_BEGINNING_0)
ROM:13D3		 cp	 3Ah ; ':'
ROM:13D5		 jr	 z, loc_0_13DD
ROM:13D7		 ld	 hl, (word_0_26D3)
ROM:13DA		 ld	 (hl), b
ROM:13DB		 jr	 loc_0_13E3
ROM:13DD ; ───────────────────────────────────────────────────────────────────────────
ROM:13DD 
ROM:13DD loc_0_13DD:				 ; CODE	XREF: MONITOR_sub_135F+76j
ROM:13DD		 call	 MONITOR_sub_14A1
ROM:13E0		 call	 BUS_WRITE8	 ; b=data byte
ROM:13E3 
ROM:13E3 loc_0_13E3:				 ; CODE	XREF: MONITOR_sub_135F+7Cj
ROM:13E3		 ld	 hl, (word_0_26D3)
ROM:13E6		 inc	 hl
ROM:13E7		 ld	 (word_0_26D3),	hl
ROM:13EA		 jr	 loc_0_13C2
ROM:13EA ; End of function MONITOR_sub_135F
ROM:13EA 
ROM:13EC 
ROM:13EC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:13EC 
ROM:13EC ; Attributes: bp-based	frame
ROM:13EC 
ROM:13EC MONITOR_sub_13EC:			 ; CODE	XREF: MONITOR_sub_135F+13p
ROM:13EC		 ld	 a, 20h	; ' '
ROM:13EE		 ld	 (_00_FROM_BEGINNING_0), a
ROM:13F1		 call	 MONITOR_sub_14C3
ROM:13F4		 ret	 c
ROM:13F5		 cp	 3Ah ; ':'
ROM:13F7		 jr	 nz, loc_0_1403
ROM:13F9		 ld	 (_00_FROM_BEGINNING_0), a
ROM:13FC		 ld	 (word_0_26D1),	hl
ROM:13FF		 call	 MONITOR_sub_14C3
ROM:1402		 ret	 c
ROM:1403 
ROM:1403 loc_0_1403:				 ; CODE	XREF: MONITOR_sub_13EC+Bj
ROM:1403		 ld	 (word_0_26D3),	hl
ROM:1406		 or	 a
ROM:1407		 ret	 
ROM:1407 ; End of function MONITOR_sub_13EC
ROM:1407 
ROM:1408 
ROM:1408 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1408 
ROM:1408 ; Attributes: bp-based	frame
ROM:1408 
ROM:1408 MONITOR_sub_1408:			 ; CODE	XREF: MONITOR_sub_135F+32p
ROM:1408		 call	 MONITOR_sub_14C3
ROM:140B		 ld	 (word_0_26CF),	hl
ROM:140E		 ret	 
ROM:140E ; End of function MONITOR_sub_1408
ROM:140E 
ROM:140F 
ROM:140F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:140F 
ROM:140F ; Attributes: bp-based	frame
ROM:140F 
ROM:140F MONITOR_ILLEGAL_INPUT:			 ; CODE	XREF: MONITOR_sub_135F+16j
ROM:140F					 ; MONITOR_sub_135F+35j
ROM:140F					 ; MONITOR_sub_135F+6Aj
ROM:140F					 ; MONITOR_sub_135F+6Ej
ROM:140F		 ld	 hl, MONITOR_ILLEGAL_MESSAGE ; "\r\n\nIllegal input\r\n"
ROM:1412		 call	 MONITOR_PUTS
ROM:1415		 ret	 
ROM:1415 ; End of function MONITOR_ILLEGAL_INPUT
ROM:1415 
ROM:1415 ; ───────────────────────────────────────────────────────────────────────────
ROM:1416 MONITOR_ILLEGAL_MESSAGE:.db 0Dh	 ; DATA	XREF: MONITOR_ILLEGAL_INPUTo
ROM:1416		 .db 0Ah
ROM:1416		 .db 0Ah
ROM:1416		 .text "Illegal input"
ROM:1416		 .db 0Dh
ROM:1416		 .db 0Ah
ROM:1416		 .db 0
ROM:1429 
ROM:1429 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1429 
ROM:1429 ; Attributes: bp-based	frame
ROM:1429 
ROM:1429 sub_0_1429:				 ; CODE	XREF: MONITOR_sub_135F+1Ep
ROM:1429					 ; MONITOR_sub_1433p
ROM:1429					 ; MONITOR_sub_14C3+7p
ROM:1429		 ld	 hl, (FDC_COMMAND_BITS_ALSO)
ROM:142C		 ld	 a, (hl)
ROM:142D		 call	 MONITOR_sub_143C
ROM:1430		 cp	 0Dh
ROM:1432		 ret	 
ROM:1432 ; End of function sub_0_1429
ROM:1432 
ROM:1433 
ROM:1433 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1433 
ROM:1433 ; Attributes: bp-based	frame
ROM:1433 
ROM:1433 MONITOR_sub_1433:			 ; CODE	XREF: MONITOR_sub_135F+1Bp
ROM:1433					 ; MONITOR_sub_14C3+19p
ROM:1433		 call	 sub_0_1429
ROM:1436		 ret	 z
ROM:1437		 inc	 hl
ROM:1438		 ld	 (FDC_COMMAND_BITS_ALSO), hl
ROM:143B		 ret	 
ROM:143B ; End of function MONITOR_sub_1433
ROM:143B 
ROM:143C 
ROM:143C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:143C 
ROM:143C ; Attributes: bp-based	frame
ROM:143C 
ROM:143C MONITOR_sub_143C:			 ; CODE	XREF: sub_0_1429+4p
ROM:143C		 cp	 61h ; 'a'
ROM:143E		 ret	 c
ROM:143F		 cp	 7Bh ; '{'
ROM:1441		 ret	 nc
ROM:1442		 sub	 20h ; ' '
ROM:1444		 ret	 
ROM:1444 ; End of function MONITOR_sub_143C
ROM:1444 
ROM:1445 
ROM:1445 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1445 
ROM:1445 ; Attributes: bp-based	frame
ROM:1445 
ROM:1445 MONITOR_PRINT_STH:			 ; CODE	XREF: MONITOR_sub_135F+3Dp
ROM:1445		 ld	 hl, MONITOR_BANNER+23h
ROM:1448		 call	 MONITOR_PUTS
ROM:144B		 ld	 a, (_00_FROM_BEGINNING_0)
ROM:144E		 cp	 3Ah ; ':'
ROM:1450		 push	 af
ROM:1451		 ld	 hl, MONITOR_Z80 ; "Z80- "
ROM:1454		 call	 nz, MONITOR_PUTS
ROM:1457		 pop	 af
ROM:1458		 jr	 nz, loc_0_146B
ROM:145A		 ld	 a, (word_0_26D1+1)
ROM:145D		 call	 MONITOR_HEX_NUMBER
ROM:1460		 ld	 a, (word_0_26D1)
ROM:1463		 call	 MONITOR_HEX_NUMBER
ROM:1466		 ld	 a, 3Ah	; ':'
ROM:1468		 call	 MONITOR_PUTCHAR
ROM:146B 
ROM:146B loc_0_146B:				 ; CODE	XREF: MONITOR_PRINT_STH+13j
ROM:146B		 ld	 a, (word_0_26D3+1)
ROM:146E		 call	 MONITOR_HEX_NUMBER
ROM:1471		 ld	 a, (word_0_26D3)
ROM:1474		 call	 MONITOR_HEX_NUMBER
ROM:1477		 ld	 hl, MONITOR_SPACES ; "    "
ROM:147A		 call	 MONITOR_PUTS
ROM:147D		 ret	 
ROM:147D ; End of function MONITOR_PRINT_STH
ROM:147D 
ROM:147E 
ROM:147E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:147E 
ROM:147E ; Attributes: bp-based	frame
ROM:147E 
ROM:147E MONITOR_HEX_NUMBER:			 ; CODE	XREF: MONITOR_sub_135F+43p
ROM:147E					 ; MONITOR_PRINT_STH+18p
ROM:147E					 ; MONITOR_PRINT_STH+1Ep
ROM:147E					 ; MONITOR_PRINT_STH+29p
ROM:147E					 ; MONITOR_PRINT_STH+2Fp
ROM:147E		 push	 af
ROM:147F		 call	 MONITOR_TOP_DIGIT
ROM:1482		 call	 MONITOR_PUTCHAR
ROM:1485		 pop	 af
ROM:1486		 call	 MONITOR_HEX_DIGIT
ROM:1489		 call	 MONITOR_PUTCHAR
ROM:148C		 ret	 
ROM:148C ; End of function MONITOR_HEX_NUMBER
ROM:148C 
ROM:148D 
ROM:148D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:148D 
ROM:148D ; Attributes: bp-based	frame
ROM:148D 
ROM:148D MONITOR_sub_148D:			 ; CODE	XREF: MONITOR_sub_135F+40p
ROM:148D		 ld	 a, (_00_FROM_BEGINNING_0)
ROM:1490		 cp	 3Ah ; ':'
ROM:1492		 jr	 z, loc_0_1499
ROM:1494		 ld	 hl, (word_0_26D3)
ROM:1497		 ld	 a, (hl)
ROM:1498		 ret	 
ROM:1499 ; ───────────────────────────────────────────────────────────────────────────
ROM:1499 
ROM:1499 loc_0_1499:				 ; CODE	XREF: MONITOR_sub_148D+5j
ROM:1499		 call	 MONITOR_sub_14A1
ROM:149C		 call	 BUS_READ8	 ; hl=host address
ROM:149C					 ; returns b=value
ROM:149F		 ld	 a, b
ROM:14A0		 ret	 
ROM:14A0 ; End of function MONITOR_sub_148D
ROM:14A0 
ROM:14A1 
ROM:14A1 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14A1 
ROM:14A1 ; Attributes: bp-based	frame
ROM:14A1 
ROM:14A1 MONITOR_sub_14A1:			 ; CODE	XREF: MONITOR_sub_135F+7Ep
ROM:14A1					 ; MONITOR_sub_148D+Cp
ROM:14A1		 ld	 hl, (word_0_26D1)
ROM:14A4		 xor	 a
ROM:14A5		 add	 hl, hl
ROM:14A6		 adc	 a, a
ROM:14A7		 add	 hl, hl
ROM:14A8		 adc	 a, a
ROM:14A9		 add	 hl, hl
ROM:14AA		 adc	 a, a
ROM:14AB		 add	 hl, hl
ROM:14AC		 adc	 a, a
ROM:14AD		 ld	 de, (word_0_26D3)
ROM:14B1		 add	 hl, de
ROM:14B2		 adc	 a, 0
ROM:14B4		 ret	 
ROM:14B4 ; End of function MONITOR_sub_14A1
ROM:14B4 
ROM:14B5 
ROM:14B5 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14B5 
ROM:14B5 ; Attributes: bp-based	frame
ROM:14B5 
ROM:14B5 MONITOR_TOP_DIGIT:			 ; CODE	XREF: MONITOR_HEX_NUMBER+1p
ROM:14B5		 rrca	 
ROM:14B6		 rrca	 
ROM:14B7		 rrca	 
ROM:14B8		 rrca	 
ROM:14B8 ; End of function MONITOR_TOP_DIGIT
ROM:14B8 
ROM:14B9 
ROM:14B9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14B9 
ROM:14B9 ; Attributes: bp-based	frame
ROM:14B9 
ROM:14B9 MONITOR_HEX_DIGIT:			 ; CODE	XREF: MONITOR_HEX_NUMBER+8p
ROM:14B9		 and	 0Fh
ROM:14BB		 add	 a, '7'
ROM:14BD		 cp	 'A'
ROM:14BF		 ret	 nc
ROM:14C0		 add	 a, 249
ROM:14C2		 ret	 
ROM:14C2 ; End of function MONITOR_HEX_DIGIT
ROM:14C2 
ROM:14C3 
ROM:14C3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14C3 
ROM:14C3 ; Attributes: bp-based	frame
ROM:14C3 
ROM:14C3 MONITOR_sub_14C3:			 ; CODE	XREF: MONITOR_sub_135F+67p
ROM:14C3					 ; MONITOR_sub_13EC+5p
ROM:14C3					 ; MONITOR_sub_13EC+13p
ROM:14C3					 ; MONITOR_sub_1408p
ROM:14C3		 call	 MONITOR_sub_14FC
ROM:14C6		 ld	 hl, 0
ROM:14C9 
ROM:14C9 loc_0_14C9:				 ; CODE	XREF: MONITOR_sub_14C3+27j
ROM:14C9		 push	 hl
ROM:14CA		 call	 sub_0_1429
ROM:14CD		 pop	 hl
ROM:14CE		 ret	 z
ROM:14CF		 cp	 ' '
ROM:14D1		 ret	 z
ROM:14D2		 cp	 ','
ROM:14D4		 ret	 z
ROM:14D5		 cp	 ':'
ROM:14D7		 ret	 z
ROM:14D8		 cp	 '='
ROM:14DA		 ret	 z
ROM:14DB		 push	 hl
ROM:14DC		 call	 MONITOR_sub_1433
ROM:14DF		 pop	 hl
ROM:14E0		 call	 MONITOR_sub_14EC
ROM:14E3		 ret	 c
ROM:14E4		 add	 hl, hl
ROM:14E5		 add	 hl, hl
ROM:14E6		 add	 hl, hl
ROM:14E7		 add	 hl, hl
ROM:14E8		 add	 a, l
ROM:14E9		 ld	 l, a
ROM:14EA		 jr	 loc_0_14C9
ROM:14EA ; End of function MONITOR_sub_14C3
ROM:14EA 
ROM:14EC 
ROM:14EC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14EC 
ROM:14EC ; Attributes: bp-based	frame
ROM:14EC 
ROM:14EC MONITOR_sub_14EC:			 ; CODE	XREF: MONITOR_sub_14C3+1Dp
ROM:14EC		 cp	 ':'
ROM:14EE		 jr	 nc, loc_0_14F3
ROM:14F0		 sub	 '0'
ROM:14F2		 ret	 
ROM:14F3 ; ───────────────────────────────────────────────────────────────────────────
ROM:14F3 
ROM:14F3 loc_0_14F3:				 ; CODE	XREF: MONITOR_sub_14EC+2j
ROM:14F3		 cp	 'G'
ROM:14F5		 ccf	 
ROM:14F6		 ret	 c
ROM:14F7		 sub	 '7'
ROM:14F9		 cp	 0Ah
ROM:14FB		 ret	 
ROM:14FB ; End of function MONITOR_sub_14EC
ROM:14FB 
ROM:14FC 
ROM:14FC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14FC 
ROM:14FC ; Attributes: bp-based	frame
ROM:14FC 
ROM:14FC MONITOR_sub_14FC:			 ; CODE	XREF: MONITOR_sub_135F+2Fp
ROM:14FC					 ; MONITOR_sub_135F+63p
ROM:14FC					 ; MONITOR_sub_14C3p
ROM:14FC		 ld	 hl, (FDC_COMMAND_BITS_ALSO)
ROM:14FF		 dec	 hl
ROM:1500 
ROM:1500 loc_0_1500:				 ; CODE	XREF: MONITOR_sub_14FC+8j
ROM:1500					 ; MONITOR_sub_14FC+Cj
ROM:1500					 ; MONITOR_sub_14FC+10j
ROM:1500					 ; MONITOR_sub_14FC+14j
ROM:1500		 inc	 hl
ROM:1501		 ld	 a, (hl)
ROM:1502		 cp	 ' '
ROM:1504		 jr	 z, loc_0_1500
ROM:1506		 cp	 ','
ROM:1508		 jr	 z, loc_0_1500
ROM:150A		 cp	 ':'
ROM:150C		 jr	 z, loc_0_1500
ROM:150E		 cp	 '='
ROM:1510		 jr	 z, loc_0_1500
ROM:1512		 ld	 (FDC_COMMAND_BITS_ALSO), hl
ROM:1515		 cp	 0Dh
ROM:1517		 ret	 
ROM:1517 ; End of function MONITOR_sub_14FC
ROM:1517 
ROM:1518 
ROM:1518 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1518 
ROM:1518 ; Attributes: bp-based	frame
ROM:1518 
ROM:1518 orphan_sub_1518:
ROM:1518		 ex	 (sp), hl
ROM:1519		 ld	 (word_0_26DE),	hl
ROM:151C		 ex	 (sp), hl
ROM:151D		 push	 af
ROM:151E		 ld	 a, (byte_0_26DC)
ROM:1521		 or	 a
ROM:1522		 jr	 z, loc_0_1545
ROM:1524		 ex	 (sp), hl
ROM:1525		 ld	 (word_0_26E0),	hl
ROM:1528		 ex	 (sp), hl
ROM:1529		 ld	 (word_0_26E6),	hl
ROM:152C		 push	 hl
ROM:152D		 ld	 (word_0_26E4),	de
ROM:1531		 push	 de
ROM:1532		 ld	 (word_0_26E2),	bc
ROM:1536		 push	 bc
ROM:1537		 ld	 hl, unk_0_26DD
ROM:153A 
ROM:153A loc_0_153A:				 ; CODE	XREF: orphan_sub_1518+27j
ROM:153A		 ld	 a, (hl)
ROM:153B		 or	 a
ROM:153C		 call	 z, CHECK_STUFF	 ; Called from *many* sites
ROM:153F		 jr	 z, loc_0_153A
ROM:1541		 dec	 (hl)
ROM:1542		 pop	 bc
ROM:1543		 pop	 de
ROM:1544		 pop	 hl
ROM:1545 
ROM:1545 loc_0_1545:				 ; CODE	XREF: orphan_sub_1518+Aj
ROM:1545		 pop	 af
ROM:1546		 ret	 
ROM:1546 ; End of function orphan_sub_1518
ROM:1546 
ROM:1547 
ROM:1547 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1547 
ROM:1547 ; On init
ROM:1547 ; Attributes: bp-based	frame
ROM:1547 
ROM:1547 HANDLER08_FDC_sub_1547:		 ; DATA	XREF: ROM:0143o
ROM:1547		 ld	 iy, FLOPPY_PARAMS_0
ROM:154B		 ld	 a, 3
ROM:154D		 ld	 (FDC_byte_2687), a ; Written on error
ROM:1550		 xor	 a
ROM:1551		 ld	 (FDC_COMMAND_BITS_ALSO), a
ROM:1554		 ld	 (FDC_COMMAND_BITS), a ; Some bits to OR with command. (Seen 0x2 = r1)
ROM:1557		 ld	 hl, 7D0h
ROM:155A		 ld	 (FDC_07D0_word_2689), hl
ROM:155D		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1560		 ei	 
ROM:1561		 xor	 a
ROM:1562		 ld	 (FDC_byte_268B), a
ROM:1565		 call	 FDC_SELECT_DRIVE
ROM:1568		 in	 a, (39h)
ROM:156A		 out	 (3Bh),	a
ROM:156C		 ld	 a, 10h		 ; Seek
ROM:156E		 call	 FDC_RUN_CMD	 ; Write command read status (a=i/o value)
ROM:156E					 ; Called on init
ROM:1571		 ld	 b, 8
ROM:1573		 ld	 a, 4
ROM:1575		 call	 sub_0_458
ROM:1578		 call	 FDC_sub_1957
ROM:157B		 jr	 loc_0_15A9
ROM:157D ; ───────────────────────────────────────────────────────────────────────────
ROM:157D 
ROM:157D loc_0_157D:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+8Fj
ROM:157D					 ; HANDLER08_FDC_sub_1547+98j
ROM:157D		 ld	 b, 8
ROM:157F		 ld	 a, 4
ROM:1581		 call	 sub_0_458
ROM:1584		 call	 FDC_sub_1957
ROM:1587		 ld	 hl, (FDC_07D0_word_2689)
ROM:158A 
ROM:158A loc_0_158A:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+50j
ROM:158A		 push	 hl
ROM:158B		 call	 FDC_sub_1930
ROM:158E		 pop	 hl
ROM:158F		 jr	 nz, loc_0_15C2
ROM:1591		 dec	 hl
ROM:1592		 ld	 a, l
ROM:1593		 or	 h
ROM:1594		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1597		 jr	 nz, loc_0_158A
ROM:1599		 xor	 a
ROM:159A		 ld	 (FDC_byte_268B), a
ROM:159D		 call	 FDC_SELECT_DRIVE
ROM:15A0		 in	 a, (39h)
ROM:15A2		 out	 (3Bh),	a
ROM:15A4		 ld	 a, 10h		 ; Seek
ROM:15A6		 call	 FDC_RUN_CMD	 ; Write command read status (a=i/o value)
ROM:15A6					 ; Called on init
ROM:15A9 
ROM:15A9 loc_0_15A9:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+34j
ROM:15A9		 call	 ZERO_SAVED_TASK_sub_028C
ROM:15AC		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:15AF		 ld	 a, (byte_0_268E)
ROM:15B2		 and	 1
ROM:15B4		 call	 FDC_NEVIEM_sub_03B6 ; A=param (2?)
ROM:15B7		 ld	 a, 0C8h ; '╚'
ROM:15B9 
ROM:15B9 loc_0_15B9:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+79j
ROM:15B9		 dec	 a
ROM:15BA		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:15BD		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:15C0		 jr	 nz, loc_0_15B9
ROM:15C2 
ROM:15C2 loc_0_15C2:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+48j
ROM:15C2					 ; HANDLER08_FDC_sub_1547+E4j
ROM:15C2					 ; HANDLER08_FDC_sub_1547+F9j
ROM:15C2					 ; HANDLER08_FDC_sub_1547+112j
ROM:15C2					 ; HANDLER08_FDC_sub_1547+122j	...
ROM:15C2		 ld	 b, 8
ROM:15C4		 ld	 a, 4
ROM:15C6		 call	 loc_0_460
ROM:15C9		 call	 FDC_sub_1930
ROM:15CC		 jr	 nz, loc_0_15F2
ROM:15CE		 call	 FDC_sub_1957
ROM:15D1		 ld	 a, (FDC_COMMAND_BITS_ALSO)
ROM:15D4		 and	 0Fh
ROM:15D6		 jr	 z, loc_0_157D
ROM:15D8		 ld	 a, (FDC_COMMAND_BITS_ALSO)
ROM:15DB		 and	 0A0h ;	'á'
ROM:15DD		 xor	 0A0h ;	'á'
ROM:15DF		 jr	 z, loc_0_157D
ROM:15E1		 ld	 a, (FDC_COMMAND_BITS_ALSO)
ROM:15E4		 bit	 0, a		 ; ----	0x01 ----
ROM:15E6		 jr	 nz, loc_0_162D
ROM:15E8		 bit	 1, a		 ; ----	0x02 ---- <========
ROM:15EA		 jr	 nz, loc_0_1643
ROM:15EC		 bit	 2, a		 ; ----	0x04 ----
ROM:15EE		 jr	 nz, loc_0_165C
ROM:15F0		 jr	 loc_0_166C
ROM:15F2 ; ───────────────────────────────────────────────────────────────────────────
ROM:15F2 
ROM:15F2 loc_0_15F2:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+85j
ROM:15F2		 ld	 e, 0
ROM:15F4		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:15F7		 ld	 bc, 1
ROM:15FA		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:15FA					 ; bc=count, (de)=source
ROM:15FA					 ; ix=preserved, interrupts off/on
ROM:15FD		 ld	 e, 0
ROM:15FF		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1602		 ex	 de, hl
ROM:1603		 res	 7, (hl)
ROM:1605		 ld	 b, (hl)
ROM:1606		 ld	 (hl), 0
ROM:1608		 ld	 hl, unk_0_2707
ROM:160B		 res	 3, (hl)
ROM:160D		 bit	 6, b
ROM:160F		 jr	 z, loc_0_1613
ROM:1611		 set	 3, (hl)
ROM:1613 
ROM:1613 loc_0_1613:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+C8j
ROM:1613		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:1616		 res	 7, (hl)
ROM:1618		 ld	 a, 0Fh
ROM:161A		 and	 (hl)
ROM:161B		 or	 b
ROM:161C		 ld	 (hl), a	 ; <==== |= 0x02
ROM:161D		 call	 FDC_sub_1957
ROM:1620		 ld	 e, 0
ROM:1622		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1625		 ld	 bc, 1
ROM:1628		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1628					 ; ix=24-bit host mem address pointer (for window)
ROM:1628					 ; c=count, (de)=source
ROM:1628					 ; ix=preserved, interrupts off/on
ROM:162B		 jr	 loc_0_15C2
ROM:162D ; ───────────────────────────────────────────────────────────────────────────
ROM:162D 
ROM:162D loc_0_162D:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+9Fj
ROM:162D		 ld	 e, 0Ah
ROM:162F		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1632		 ld	 bc, 64
ROM:1635		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:1635					 ; bc=count, (de)=source
ROM:1635					 ; ix=preserved, interrupts off/on
ROM:1638		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:163B		 res	 0, (hl)
ROM:163D		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1640		 jp	 loc_0_15C2
ROM:1643 ; ───────────────────────────────────────────────────────────────────────────
ROM:1643 
ROM:1643 loc_0_1643:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+A3j
ROM:1643		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:1646		 res	 1, (hl)
ROM:1648		 xor	 a
ROM:1649		 ld	 hl, unk_0_2304
ROM:164C		 ld	 c, 16
ROM:164E		 call	 MEMSET		 ; hl=dest, c=count, a=fill
ROM:1651		 ld	 hl, FDC_ARR_16_byte_2324
ROM:1654		 ld	 c, 16
ROM:1656		 call	 MEMSET		 ; hl=dest, c=count, a=fill
ROM:1659		 jp	 loc_0_15C2
ROM:165C ; ───────────────────────────────────────────────────────────────────────────
ROM:165C 
ROM:165C loc_0_165C:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+A7j
ROM:165C		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:165F		 res	 2, (hl)
ROM:1661		 ld	 a, 3
ROM:1663		 ld	 (FDC_byte_2687), a ; Written on error
ROM:1666		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1669		 jp	 loc_0_15C2
ROM:166C ; ───────────────────────────────────────────────────────────────────────────
ROM:166C 
ROM:166C loc_0_166C:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+A9j
ROM:166C		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:166F		 bit	 4, (hl)
ROM:1671		 jr	 z, loc_0_1675
ROM:1673		 res	 3, (hl)
ROM:1675 
ROM:1675 loc_0_1675:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+12Aj
ROM:1675		 call	 FDC_sub_1969
ROM:1678		 jr	 c, GO_OUT
ROM:167A		 call	 FDC_PICK_HANDLER_FROM_VECTOR
ROM:167D		 ld	 (byte_0_268D),	a
ROM:1680		 call	 FDC_sub_1971
ROM:1683		 ld	 a, (iy+FDC_IY_PARAMS.field_7)
ROM:1686		 inc	 a
ROM:1687		 cp	 (iy+FDC_IY_PARAMS.field_5)
ROM:168A		 jr	 nz, loc_0_168D
ROM:168C		 xor	 a
ROM:168D 
ROM:168D loc_0_168D:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+143j
ROM:168D		 ld	 (iy+FDC_IY_PARAMS.field_7), a
ROM:1690		 ld	 b, a
ROM:1691		 ld	 e, 7
ROM:1693		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1696		 call	 BUS_WRITE8	 ; b=data byte
ROM:1699		 jr	 loc_0_16A0
ROM:169B ; ───────────────────────────────────────────────────────────────────────────
ROM:169B 
ROM:169B GO_OUT:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+131j
ROM:169B		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:169E		 res	 3, (hl)
ROM:16A0 
ROM:16A0 loc_0_16A0:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+152j
ROM:16A0		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:16A3		 jp	 loc_0_15C2
ROM:16A3 ; End of function HANDLER08_FDC_sub_1547
ROM:16A3 
ROM:16A6 
ROM:16A6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:16A6 
ROM:16A6 ; Attributes: bp-based	frame
ROM:16A6 
ROM:16A6 FDC_PICK_HANDLER_FROM_VECTOR:		 ; CODE	XREF: HANDLER08_FDC_sub_1547+133p
ROM:16A6		 ld	 a, (FDC_SUB_COMMAND_BUFFER)
ROM:16A9		 push	 af
ROM:16AA		 inc	 a
ROM:16AB		 and	 1111b
ROM:16AD		 jr	 nz, A_IS_VALID_COMMAND
ROM:16AF		 ld	 a, 1111b
ROM:16B1 
ROM:16B1 A_IS_VALID_COMMAND:			 ; CODE	XREF: FDC_PICK_HANDLER_FROM_VECTOR+7j
ROM:16B1		 ld	 (FDC_SUBCOMMAND), a
ROM:16B4		 xor	 a
ROM:16B5		 ld	 (FDC_ZERO), a
ROM:16B8		 pop	 af
ROM:16B9		 rrca	 
ROM:16BA		 rrca	 
ROM:16BB		 rrca	 
ROM:16BC		 and	 1110b
ROM:16BE		 ld	 hl, FDC_SUBHANDLER_VECTOR
ROM:16C1		 call	 ADD_WORD16	 ; hl+=a
ROM:16C4		 ld	 e, (hl)
ROM:16C5		 inc	 hl
ROM:16C6		 ld	 d, (hl)
ROM:16C7		 ex	 de, hl
ROM:16C8		 ld	 (FDC_HANDLER_ADDRESS),	hl ; FALLTHRU
ROM:16C8 ; End of function FDC_PICK_HANDLER_FROM_VECTOR
ROM:16C8 
ROM:16CB 
ROM:16CB ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:16CB 
ROM:16CB ; Attributes: bp-based	frame
ROM:16CB 
ROM:16CB FDC_HANDLER_ERROR_TAIL:		 ; CODE	XREF: FDC_SUBHANDLER00_07_NOTHING+3j
ROM:16CB					 ; FDC_SUBHANDLER01_SEEK+3j
ROM:16CB					 ; FDC_SUBHANDLER01_SEEK+9j
ROM:16CB					 ; FDC_SUBHANDLER02_READ_SECTOR+3j
ROM:16CB					 ; FDC_SUBHANDLER02_READ_SECTOR+9j ...
ROM:16CB		 ld	 b, a
ROM:16CC		 ld	 hl, FDC_ZERO
ROM:16CF		 ld	 a, (FDC_SUBCOMMAND)
ROM:16D2		 cp	 (hl)
ROM:16D3		 ld	 a, b
ROM:16D4		 jr	 nz, loc_0_16DC
ROM:16D6		 ld	 hl, FDC_COMMAND_BITS_ALSO
ROM:16D9		 set	 7, (hl)
ROM:16DB		 ret	 
ROM:16DC ; ───────────────────────────────────────────────────────────────────────────
ROM:16DC 
ROM:16DC loc_0_16DC:				 ; CODE	XREF: FDC_HANDLER_ERROR_TAIL+9j
ROM:16DC		 inc	 (hl)
ROM:16DD		 ld	 hl, (FDC_HANDLER_ADDRESS) ; Handler address
ROM:16E0		 jp	 (hl)		 ; Call	the handler
ROM:16E0 ; End of function FDC_HANDLER_ERROR_TAIL
ROM:16E0 
ROM:16E0 ; ───────────────────────────────────────────────────────────────────────────
ROM:16E1 FDC_SUBHANDLER_VECTOR:.dw FDC_SUBHANDLER00_07_NOTHING,	FDC_SUBHANDLER01_SEEK
ROM:16E1					 ; DATA	XREF: FDC_PICK_HANDLER_FROM_VECTOR+18o
ROM:16E1		 .dw FDC_SUBHANDLER02_READ_SECTOR, FDC_SUBHANDLER03_WRITE_SECTOR
ROM:16E1		 .dw FDC_SUBHANDLER04_CHECK_IS_ZERO, FDC_SUBHANDLER05_READ_TRACK
ROM:16E1		 .dw FDC_SUBHANDLER06_WRITE_TRACK, FDC_SUBHANDLER00_07_NOTHING
ROM:16F1 
ROM:16F1 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:16F1 
ROM:16F1 ; Attributes: bp-based	frame
ROM:16F1 
ROM:16F1 FDC_SUBHANDLER00_07_NOTHING:		 ; DATA	XREF: ROM:16E1o
ROM:16F1		 call	 FDC_COMMON_HANDLER ; Called at	the beginning of all floppy handlers
ROM:16F4		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:16F7		 ret	 
ROM:16F7 ; End of function FDC_SUBHANDLER00_07_NOTHING
ROM:16F7 
ROM:16F8 
ROM:16F8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:16F8 
ROM:16F8 ; Attributes: bp-based	frame
ROM:16F8 
ROM:16F8 FDC_SUBHANDLER01_SEEK:			 ; DATA	XREF: ROM:16E1o
ROM:16F8		 call	 FDC_COMMON_HANDLER ; Called at	the beginning of all floppy handlers
ROM:16FB		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:16FE		 call	 FDC_SEEK_AND_LOAD_HEAD
ROM:1701		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:1704		 ret	 
ROM:1704 ; End of function FDC_SUBHANDLER01_SEEK
ROM:1704 
ROM:1705 
ROM:1705 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1705 
ROM:1705 ; Attributes: bp-based	frame
ROM:1705 
ROM:1705 FDC_SUBHANDLER02_READ_SECTOR:		 ; DATA	XREF: ROM:16E1o
ROM:1705		 call	 FDC_COMMON_HANDLER ; Called at	the beginning of all floppy handlers
ROM:1708		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:170B		 call	 FDC_SEEK_AND_LOAD_HEAD
ROM:170E		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:1711		 ld	 hl, 2048
ROM:1714		 call	 FDC_sub_0360	 ; Called on sector/track read write. PORTB low	2 bits touched
ROM:1717		 call	 FDC_READ_SECTOR_DMA_sub_183D
ROM:171A		 jp	 c, FDC_ERROR_COMMON_sub_1781 ;	Called in the midst of most FDC	handlers
ROM:171D		 call	 FDC_WRITE_BUS
ROM:1720		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:1723		 or	 a
ROM:1724		 ret	 
ROM:1724 ; End of function FDC_SUBHANDLER02_READ_SECTOR
ROM:1724 
ROM:1725 
ROM:1725 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1725 
ROM:1725 ; Attributes: bp-based	frame
ROM:1725 
ROM:1725 FDC_SUBHANDLER03_WRITE_SECTOR:		 ; DATA	XREF: ROM:16E1o
ROM:1725		 call	 FDC_COMMON_HANDLER ; Called at	the beginning of all floppy handlers
ROM:1728		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:172B		 call	 FDC_SEEK_AND_LOAD_HEAD
ROM:172E		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:1731		 ld	 hl, 2048
ROM:1734		 call	 FDC_sub_0360	 ; Called on sector/track read write. PORTB low	2 bits touched
ROM:1737		 call	 FDC_READ_BUS
ROM:173A		 call	 FDC_WRITE_SECTOR_DMA_sub_1864
ROM:173D		 jp	 c, FDC_ERROR_COMMON_sub_1781 ;	Called in the midst of most FDC	handlers
ROM:1740		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:1743		 or	 a
ROM:1744		 ret	 
ROM:1744 ; End of function FDC_SUBHANDLER03_WRITE_SECTOR
ROM:1744 
ROM:1745 
ROM:1745 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1745 
ROM:1745 ; Attributes: bp-based	frame
ROM:1745 
ROM:1745 FDC_SUBHANDLER04_CHECK_IS_ZERO:	 ; DATA	XREF: ROM:16E1o
ROM:1745		 or	 a
ROM:1746		 ret	 
ROM:1746 ; End of function FDC_SUBHANDLER04_CHECK_IS_ZERO
ROM:1746 
ROM:1747 
ROM:1747 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1747 
ROM:1747 ; Attributes: bp-based	frame
ROM:1747 
ROM:1747 FDC_SUBHANDLER05_READ_TRACK:		 ; DATA	XREF: ROM:16E1o
ROM:1747		 call	 FDC_COMMON_HANDLER ; Called at	the beginning of all floppy handlers
ROM:174A		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:174D		 call	 FDC_SEEK_AND_LOAD_HEAD
ROM:1750		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:1753		 ld	 hl, 2048
ROM:1756		 call	 FDC_sub_0360	 ; Called on sector/track read write. PORTB low	2 bits touched
ROM:1759		 call	 FDC_READ_TRACK
ROM:175C		 jp	 c, FDC_ERROR_COMMON_sub_1781 ;	Called in the midst of most FDC	handlers
ROM:175F		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:1762		 or	 a
ROM:1763		 ret	 
ROM:1763 ; End of function FDC_SUBHANDLER05_READ_TRACK
ROM:1763 
ROM:1764 
ROM:1764 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1764 
ROM:1764 ; Attributes: bp-based	frame
ROM:1764 
ROM:1764 FDC_SUBHANDLER06_WRITE_TRACK:		 ; DATA	XREF: ROM:16E1o
ROM:1764		 call	 FDC_COMMON_HANDLER ; Called at	the beginning of all floppy handlers
ROM:1767		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:176A		 call	 FDC_SEEK_AND_LOAD_HEAD
ROM:176D		 jp	 c, FDC_HANDLER_ERROR_TAIL
ROM:1770		 ld	 hl, 2048
ROM:1773		 call	 FDC_sub_0360	 ; Called on sector/track read write. PORTB low	2 bits touched
ROM:1776		 call	 FDC_WRITE_TRACK
ROM:1779		 jp	 c, FDC_ERROR_COMMON_sub_1781 ;	Called in the midst of most FDC	handlers
ROM:177C		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:177F		 or	 a
ROM:1780		 ret	 
ROM:1780 ; End of function FDC_SUBHANDLER06_WRITE_TRACK
ROM:1780 
ROM:1781 
ROM:1781 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1781 
ROM:1781 ; Called in the midst of most FDC handlers
ROM:1781 ; Attributes: bp-based	frame
ROM:1781 
ROM:1781 FDC_ERROR_COMMON_sub_1781:		 ; CODE	XREF: FDC_SUBHANDLER02_READ_SECTOR+15j
ROM:1781					 ; FDC_SUBHANDLER03_WRITE_SECTOR+18j
ROM:1781					 ; FDC_SUBHANDLER05_READ_TRACK+15j
ROM:1781					 ; FDC_SUBHANDLER06_WRITE_TRACK+15j
ROM:1781		 push	 af
ROM:1782		 call	 CLOSE_BUS_WINDOW
ROM:1785		 call	 ZERO_TO_SOME_VAR_sub_03AC
ROM:1788		 pop	 af
ROM:1789		 jp	 FDC_HANDLER_ERROR_TAIL
ROM:1789 ; End of function FDC_ERROR_COMMON_sub_1781
ROM:1789 
ROM:178C 
ROM:178C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:178C 
ROM:178C ; Called at the beginning of all floppy handlers
ROM:178C ; Attributes: bp-based	frame
ROM:178C 
ROM:178C FDC_COMMON_HANDLER:			 ; CODE	XREF: FDC_SUBHANDLER00_07_NOTHINGp
ROM:178C					 ; FDC_SUBHANDLER01_SEEKp
ROM:178C					 ; FDC_SUBHANDLER02_READ_SECTORp
ROM:178C					 ; FDC_SUBHANDLER03_WRITE_SECTORp
ROM:178C					 ; FDC_SUBHANDLER05_READ_TRACKp ...
ROM:178C		 ld	 a, (byte_0_268E)
ROM:178F		 call	 FDC_NEVIEM_sub_03B6 ; A=param (2?)
ROM:1792		 ld	 a, 80h	; 'Ç'
ROM:1794		 ret	 c
ROM:1795		 ld	 hl, FDC_byte_268B
ROM:1798		 ld	 a, (byte_0_268E)
ROM:179B		 inc	 a
ROM:179C		 cp	 (hl)
ROM:179D		 jr	 z, loc_0_17C6
ROM:179F		 ld	 (hl), a
ROM:17A0		 in	 a, (39h)
ROM:17A2		 out	 (3Bh),	a
ROM:17A4		 ld	 a, 18h		 ; Seek	with head load
ROM:17A6		 call	 FDC_RUN_CMD	 ; Write command read status (a=i/o value)
ROM:17A6					 ; Called on init
ROM:17A9		 ld	 a, 0C8h ; '╚'
ROM:17AB 
ROM:17AB LOOP_AROUND_FOR_A_WHILE:		 ; CODE	XREF: FDC_COMMON_HANDLER+38j
ROM:17AB		 dec	 a
ROM:17AC		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17AF		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17B2		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17B5		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17B8		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17BB		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17BE		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17C1		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:17C4		 jr	 nz, LOOP_AROUND_FOR_A_WHILE
ROM:17C6 
ROM:17C6 loc_0_17C6:				 ; CODE	XREF: FDC_COMMON_HANDLER+11j
ROM:17C6		 ld	 a, (byte_0_2690)
ROM:17C9		 and	 1
ROM:17CB		 add	 a, a
ROM:17CC		 ld	 b, a
ROM:17CD		 ld	 a, (FDC_COMMAND_BITS) ; Some bits to OR with command. (Seen 0x2 = r1)
ROM:17D0		 res	 1, a
ROM:17D2		 or	 b
ROM:17D3		 ld	 (FDC_COMMAND_BITS), a ; Some bits to OR with command. (Seen 0x2 = r1)
ROM:17D6		 ld	 a, (byte_0_2690)
ROM:17D9		 call	 FDC_SET_SIDE
ROM:17DC		 ld	 a, 80h	; 'Ç'
ROM:17DE		 ret	 c
ROM:17DF		 in	 a, (39h)
ROM:17E1		 out	 (3Bh),	a
ROM:17E3		 ld	 a, 18h		 ; Seek	with head load
ROM:17E5		 call	 FDC_RUN_CMD	 ; Write command read status (a=i/o value)
ROM:17E5					 ; Called on init
ROM:17E8		 and	 0C0h ;	'└'
ROM:17EA		 bit	 7, a
ROM:17EC		 scf	 
ROM:17ED		 ret	 nz
ROM:17EE		 ld	 e, 0
ROM:17F0		 call	 FDC_sub_04AA_FALLTHRU
ROM:17F3		 push	 de		 ; de=FDC_IX_STRUCT
ROM:17F4		 pop	 ix		 ; ix=FDC_IX_STRUCT
ROM:17F6		 ld	 a, (byte_0_268E)
ROM:17F9		 inc	 a
ROM:17FA		 ld	 hl, FDC_byte_2687 ; Written on	error
ROM:17FD		 and	 (hl)
ROM:17FE		 ret	 z
ROM:17FF		 cpl	 
ROM:1800		 and	 (hl)
ROM:1801		 ld	 (hl), a
ROM:1802		 ld	 a, 8		 ; Restore (seek zero) with head load
ROM:1804		 call	 FDC_RUN_CMD	 ; Write command read status (a=i/o value)
ROM:1804					 ; Called on init
ROM:1807		 ld	 a, (byte_0_268E)
ROM:180A		 ld	 hl, unk_0_267E
ROM:180D		 call	 ADD_WORD16	 ; hl+=a
ROM:1810		 xor	 a
ROM:1811		 ld	 (hl), a
ROM:1812		 ret	 
ROM:1812 ; End of function FDC_COMMON_HANDLER
ROM:1812 
ROM:1813 
ROM:1813 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1813 
ROM:1813 ; Attributes: bp-based	frame
ROM:1813 
ROM:1813 FDC_SEEK_AND_LOAD_HEAD:		 ; CODE	XREF: FDC_SUBHANDLER01_SEEK+6p
ROM:1813					 ; FDC_SUBHANDLER02_READ_SECTOR+6p
ROM:1813					 ; FDC_SUBHANDLER03_WRITE_SECTOR+6p
ROM:1813					 ; FDC_SUBHANDLER05_READ_TRACK+6p
ROM:1813					 ; FDC_SUBHANDLER06_WRITE_TRACK+6p
ROM:1813		 ld	 a, (byte_0_268E)
ROM:1816		 ld	 hl, unk_0_267E
ROM:1819		 call	 ADD_WORD16	 ; hl+=a
ROM:181C		 ld	 a, (hl)
ROM:181D		 call	 FDC_ADJUST_TRACK_NUM
ROM:1820		 out	 (39h),	a
ROM:1822		 ld	 a, (byte_0_268F)
ROM:1825		 ld	 (hl), a
ROM:1826		 push	 af
ROM:1827		 call	 FDC_ADJUST_TRACK_NUM
ROM:182A		 out	 (3Bh),	a
ROM:182C		 ld	 a, 18h		 ; Seek	with head load
ROM:182E		 call	 FDC_RUN_CMD	 ; Write command read status (a=i/o value)
ROM:182E					 ; Called on init
ROM:1831		 pop	 af
ROM:1832		 out	 (39h),	a
ROM:1834		 xor	 a
ROM:1835		 ret	 
ROM:1835 ; End of function FDC_SEEK_AND_LOAD_HEAD
ROM:1835 
ROM:1836 
ROM:1836 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1836 
ROM:1836 ; Attributes: bp-based	frame
ROM:1836 
ROM:1836 FDC_ADJUST_TRACK_NUM:			 ; CODE	XREF: FDC_SEEK_AND_LOAD_HEAD+Ap
ROM:1836					 ; FDC_SEEK_AND_LOAD_HEAD+14p
ROM:1836		 ld	 e, (ix+FDC_IX_STRUCT.DOUBLE_STEP)
ROM:1839		 dec	 e
ROM:183A		 ret	 nz
ROM:183B		 add	 a, a		 ; Double spacing?
ROM:183C		 ret	 
ROM:183C ; End of function FDC_ADJUST_TRACK_NUM
ROM:183C 
ROM:183D 
ROM:183D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:183D 
ROM:183D ; Attributes: bp-based	frame
ROM:183D 
ROM:183D FDC_READ_SECTOR_DMA_sub_183D:		 ; CODE	XREF: FDC_SUBHANDLER02_READ_SECTOR+12p
ROM:183D		 call	 FDC_COMMON_SETUP_SECTOR_DMA ; Writes buffer address and length	to DMA controller
ROM:1840		 ld	 hl, DMA_ENABLE	 ; 0x87	Group 6	DMA Enable
ROM:1843		 ld	 b, 1
ROM:1845		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:1847		 otir	 
ROM:1849		 ld	 a, 0
ROM:184B		 call	 FDC_DMA_WHAT
ROM:184E		 ld	 a, (byte_0_2690)
ROM:1851		 call	 FDC_SET_SIDE
ROM:1854		 ld	 a, (byte_0_2691)
ROM:1857		 out	 (3Ah),	a
ROM:1859		 ld	 a, 88h	; 'ê'    ; Read sector, sector size = 512
ROM:185B		 call	 FDC_RUN_CMD_WITH_BITS ; Write command read status (a=i/o value)
ROM:185E		 and	 10011100b	 ; 1001	1100 --	error bits
ROM:1860		 jp	 nz, FDC_SECTOR_IO_ERROR
ROM:1863		 ret	 
ROM:1863 ; End of function FDC_READ_SECTOR_DMA_sub_183D
ROM:1863 
ROM:1864 
ROM:1864 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1864 
ROM:1864 ; Attributes: bp-based	frame
ROM:1864 
ROM:1864 FDC_WRITE_SECTOR_DMA_sub_1864:		 ; CODE	XREF: FDC_SUBHANDLER03_WRITE_SECTOR+15p
ROM:1864		 call	 FDC_COMMON_SETUP_SECTOR_DMA ; Writes buffer address and length	to DMA controller
ROM:1867		 ld	 hl, DMA_FROM_MEMORY ; 0x05 Group 5 Port A -> Port B transfer
ROM:1867					 ; 0xcf	Group 6	Load Addresses,	Reset Count
ROM:186A		 ld	 b, 3
ROM:186C		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:186E		 otir	 
ROM:1870		 ld	 a, 0
ROM:1872		 call	 FDC_DMA_WHAT
ROM:1875		 ld	 a, (byte_0_2690)
ROM:1878		 call	 FDC_SET_SIDE
ROM:187B		 ld	 a, (byte_0_2691)
ROM:187E		 out	 (3Ah),	a
ROM:1880		 ld	 a, 0A8h ; '¿'   ; Write sector, sector size = 512
ROM:1882		 call	 FDC_RUN_CMD_WITH_BITS ; Write command read status (a=i/o value)
ROM:1885		 and	 11011100b	 ; error bits
ROM:1887		 jp	 nz, FDC_SECTOR_IO_ERROR
ROM:188A		 ret	 
ROM:188A ; End of function FDC_WRITE_SECTOR_DMA_sub_1864
ROM:188A 
ROM:188B 
ROM:188B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:188B 
ROM:188B ; Attributes: bp-based	frame
ROM:188B 
ROM:188B FDC_WRITE_BUS:				 ; CODE	XREF: FDC_SUBHANDLER02_READ_SECTOR+18p
ROM:188B		 call	 FDC_READ_LEN_AND_STH_FROM_BUF_sub_189B
ROM:188E		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:188E					 ; ix=24-bit host mem address pointer (for window)
ROM:188E					 ; c=count, (de)=source
ROM:188E					 ; ix=preserved, interrupts off/on
ROM:1891		 xor	 a
ROM:1892		 ret	 
ROM:1892 ; End of function FDC_WRITE_BUS
ROM:1892 
ROM:1893 
ROM:1893 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1893 
ROM:1893 ; Attributes: bp-based	frame
ROM:1893 
ROM:1893 FDC_READ_BUS:				 ; CODE	XREF: FDC_SUBHANDLER03_WRITE_SECTOR+12p
ROM:1893		 call	 FDC_READ_LEN_AND_STH_FROM_BUF_sub_189B
ROM:1896		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:1896					 ; bc=count, (de)=source
ROM:1896					 ; ix=preserved, interrupts off/on
ROM:1899		 xor	 a
ROM:189A		 ret	 
ROM:189A ; End of function FDC_READ_BUS
ROM:189A 
ROM:189B 
ROM:189B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:189B 
ROM:189B ; Attributes: bp-based	frame
ROM:189B 
ROM:189B FDC_READ_LEN_AND_STH_FROM_BUF_sub_189B: ; CODE	XREF: FDC_WRITE_BUSp
ROM:189B					 ; FDC_READ_BUSp
ROM:189B		 ld	 hl, word_0_2692
ROM:189E		 ld	 e, (hl)
ROM:189F		 inc	 hl
ROM:18A0		 ld	 d, (hl)
ROM:18A1		 inc	 hl
ROM:18A2		 ld	 a, (hl)
ROM:18A3		 ex	 de, hl
ROM:18A4		 ld	 de, DATA_BUFFER ; Used	as FDC sector buffer, perhaps elsewhere
ROM:18A7		 ld	 c, (ix+FDC_IX_STRUCT.LEN_C_LO)
ROM:18AA		 ld	 b, (ix+FDC_IX_STRUCT.LEN_B_HI)
ROM:18AD		 ret	 
ROM:18AD ; End of function FDC_READ_LEN_AND_STH_FROM_BUF_sub_189B
ROM:18AD 
ROM:18AE 
ROM:18AE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:18AE 
ROM:18AE ; Attributes: bp-based	frame
ROM:18AE 
ROM:18AE FDC_READ_TRACK:			 ; CODE	XREF: FDC_SUBHANDLER05_READ_TRACK+12p
ROM:18AE		 call	 FDC_DMA_READ_TRACK
ROM:18B1		 di	 
ROM:18B2		 ld	 a, 0E0h ; 'Ó'   ; Read track
ROM:18B4		 out	 (38h),	a
ROM:18B6 
ROM:18B6 WAIT_FOR_INTRQ:			 ; CODE	XREF: FDC_READ_TRACK+Bj
ROM:18B6		 call	 PIO_A_GET_BIT7_FDC_INTRQ ; result: a, z flag
ROM:18B9		 jr	 z, WAIT_FOR_INTRQ
ROM:18BB		 call	 CLOSE_BUS_WINDOW
ROM:18BE		 ei	 
ROM:18BF		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:18C2		 in	 a, (38h)
ROM:18C4		 and	 84h ; 'ä'       ; Error bits
ROM:18C6		 ret	 z
ROM:18C7		 scf	 
ROM:18C8		 ret	 
ROM:18C8 ; End of function FDC_READ_TRACK
ROM:18C8 
ROM:18C9 
ROM:18C9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:18C9 
ROM:18C9 ; Attributes: bp-based	frame
ROM:18C9 
ROM:18C9 FDC_WRITE_TRACK:			 ; CODE	XREF: FDC_SUBHANDLER06_WRITE_TRACK+12p
ROM:18C9		 call	 FDC_DMA_WRITE_TRACK
ROM:18CC		 di	 
ROM:18CD		 ld	 a, 0F0h ; '­'   ; Write track
ROM:18CF		 out	 (38h),	a
ROM:18D1 
ROM:18D1 loc_0_18D1:				 ; CODE	XREF: FDC_WRITE_TRACK+Bj
ROM:18D1		 call	 PIO_A_GET_BIT7_FDC_INTRQ ; result: a, z flag
ROM:18D4		 jr	 z, loc_0_18D1
ROM:18D6		 call	 CLOSE_BUS_WINDOW
ROM:18D9		 ei	 
ROM:18DA		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:18DD		 in	 a, (38h)
ROM:18DF		 and	 0C4h ;	'─'      ; Error bits
ROM:18E1		 ret	 z
ROM:18E2		 scf	 
ROM:18E3		 ret	 
ROM:18E3 ; End of function FDC_WRITE_TRACK
ROM:18E3 
ROM:18E4 
ROM:18E4 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:18E4 
ROM:18E4 ; Attributes: bp-based	frame
ROM:18E4 
ROM:18E4 orphan_sub_18E4:
ROM:18E4		 ld	 bc, 0
ROM:18E7		 call	 orphan_sub_18F2
ROM:18EA		 ret	 nz
ROM:18EB		 ld	 c, (ix+FDC_IX_STRUCT.LEN_C_LO)
ROM:18EE		 ld	 b, (ix+FDC_IX_STRUCT.LEN_B_HI)
ROM:18F1		 dec	 bc		 ; FALLTHROUGH
ROM:18F1 ; End of function orphan_sub_18E4
ROM:18F1 
ROM:18F2 
ROM:18F2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:18F2 
ROM:18F2 ; Attributes: bp-based	frame
ROM:18F2 
ROM:18F2 orphan_sub_18F2:			 ; CODE	XREF: orphan_sub_18E4+3p
ROM:18F2		 ld	 hl, word_0_2692
ROM:18F5		 push	 hl
ROM:18F6		 ld	 e, (hl)
ROM:18F7		 inc	 hl
ROM:18F8		 ld	 d, (hl)
ROM:18F9		 inc	 hl
ROM:18FA		 ld	 a, (hl)
ROM:18FB		 ex	 de, hl
ROM:18FC		 add	 hl, bc
ROM:18FD		 adc	 a, 0
ROM:18FF		 ex	 de, hl
ROM:1900		 ld	 e, a
ROM:1901		 ld	 hl, (CCB_PTR+1)
ROM:1904		 ld	 a, (hl)
ROM:1905		 xor	 d
ROM:1906		 and	 80h ; 'Ç'
ROM:1908		 inc	 hl
ROM:1909		 xor	 (hl)
ROM:190A		 xor	 e
ROM:190B		 pop	 hl
ROM:190C		 ret	 
ROM:190C ; End of function orphan_sub_18F2
ROM:190C 
ROM:190D 
ROM:190D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:190D 
ROM:190D ; Write command read status (a=i/o value)
ROM:190D ; Attributes: bp-based	frame
ROM:190D 
ROM:190D FDC_RUN_CMD_WITH_BITS:			 ; CODE	XREF: FDC_READ_SECTOR_DMA_sub_183D+1Ep
ROM:190D					 ; FDC_WRITE_SECTOR_DMA_sub_1864+1Ep
ROM:190D		 push	 hl
ROM:190E		 ld	 hl, FDC_COMMAND_BITS ;	Some bits to OR	with command. (Seen 0x2	= r1)
ROM:1911		 or	 (hl)
ROM:1912		 pop	 hl		 ; FALL_THROUGH
ROM:1912 ; End of function FDC_RUN_CMD_WITH_BITS
ROM:1912 
ROM:1913 
ROM:1913 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1913 
ROM:1913 ; Write command read status (a=i/o value)
ROM:1913 ; Called on init
ROM:1913 ; Attributes: bp-based	frame
ROM:1913 
ROM:1913 FDC_RUN_CMD:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+27p
ROM:1913					 ; HANDLER08_FDC_sub_1547+5Fp
ROM:1913					 ; FDC_COMMON_HANDLER+1Ap
ROM:1913					 ; FDC_COMMON_HANDLER+59p
ROM:1913					 ; FDC_COMMON_HANDLER+78p ...
ROM:1913		 out	 (38h),	a
ROM:1915 
ROM:1915 loc_0_1915:				 ; CODE	XREF: FDC_RUN_CMD+8j
ROM:1915		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1918		 call	 PIO_A_GET_BIT7_FDC_INTRQ ; result: a, z flag
ROM:191B		 jr	 z, loc_0_1915
ROM:191D		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1920		 in	 a, (38h)
ROM:1922		 ret	 
ROM:1922 ; End of function FDC_RUN_CMD
ROM:1922 
ROM:1923 
ROM:1923 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1923 
ROM:1923 ; Attributes: bp-based	frame
ROM:1923 
ROM:1923 FDC_SECTOR_IO_ERROR:			 ; CODE	XREF: FDC_READ_SECTOR_DMA_sub_183D+23j
ROM:1923					 ; FDC_WRITE_SECTOR_DMA_sub_1864+23j
ROM:1923		 ld	 b, a
ROM:1924		 ld	 a, (byte_0_268E)
ROM:1927		 inc	 a
ROM:1928		 ld	 hl, FDC_byte_2687 ; Written on	error
ROM:192B		 or	 (hl)
ROM:192C		 ld	 (hl), a
ROM:192D		 scf	 
ROM:192E		 ld	 a, b
ROM:192F		 ret	 
ROM:192F ; End of function FDC_SECTOR_IO_ERROR
ROM:192F 
ROM:1930 
ROM:1930 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1930 
ROM:1930 ; Attributes: bp-based	frame
ROM:1930 
ROM:1930 FDC_sub_1930:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+44p
ROM:1930					 ; HANDLER08_FDC_sub_1547+82p
ROM:1930		 ld	 e, 0
ROM:1932		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1935		 call	 BUS_READ8	 ; hl=host address
ROM:1935					 ; returns b=value
ROM:1938		 bit	 7, b
ROM:193A		 ret	 
ROM:193A ; End of function FDC_sub_1930
ROM:193A 
ROM:193B 
ROM:193B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:193B 
ROM:193B ; Attributes: bp-based	frame
ROM:193B 
ROM:193B orphan_sub_193B:
ROM:193B		 ld	 e, 0
ROM:193D		 call	 FDC_sub_04AA_FALLTHRU
ROM:1940		 ld	 bc, 20h ; ' '
ROM:1943		 jp	 WRITE_BUS_MEMORY ; hl=host address
ROM:1943 ; End of function orphan_sub_193B	 ; ix=24-bit host mem address pointer (for window)
ROM:1943					 ; c=count, (de)=source
ROM:1943					 ; ix=preserved, interrupts off/on
ROM:1946 
ROM:1946 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1946 
ROM:1946 ; Attributes: bp-based	frame
ROM:1946 
ROM:1946 orphan_sub_1946:
ROM:1946		 ld	 e, 0
ROM:1948		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:194B		 ex	 de, hl
ROM:194C		 inc	 hl
ROM:194D		 ld	 b, (hl)
ROM:194E		 dec	 hl
ROM:194F		 ld	 (hl), b
ROM:1950		 ex	 de, hl
ROM:1951		 ld	 bc, 4Ah ; 'J'
ROM:1954		 jp	 WRITE_BUS_MEMORY ; hl=host address
ROM:1954 ; End of function orphan_sub_1946	 ; ix=24-bit host mem address pointer (for window)
ROM:1954					 ; c=count, (de)=source
ROM:1954					 ; ix=preserved, interrupts off/on
ROM:1957 
ROM:1957 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1957 
ROM:1957 ; Attributes: bp-based	frame
ROM:1957 
ROM:1957 FDC_sub_1957:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+31p
ROM:1957					 ; HANDLER08_FDC_sub_1547+3Dp
ROM:1957					 ; HANDLER08_FDC_sub_1547+87p
ROM:1957					 ; HANDLER08_FDC_sub_1547+D6p
ROM:1957		 ld	 a, (FDC_COMMAND_BITS_ALSO)
ROM:195A		 ld	 b, a
ROM:195B		 ld	 e, 1
ROM:195D		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1960		 ex	 de, hl
ROM:1961		 ld	 (hl), b
ROM:1962		 ex	 de, hl
ROM:1963		 ld	 bc, 1
ROM:1966		 jp	 WRITE_BUS_MEMORY ; hl=host address
ROM:1966 ; End of function FDC_sub_1957		 ; ix=24-bit host mem address pointer (for window)
ROM:1966					 ; c=count, (de)=source
ROM:1966					 ; ix=preserved, interrupts off/on
ROM:1969 
ROM:1969 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1969 
ROM:1969 ; Attributes: bp-based	frame
ROM:1969 
ROM:1969 FDC_sub_1969:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+12Ep
ROM:1969		 call	 FDC_sub_1978	 ; ret:	c=bad
ROM:196C		 ret	 c
ROM:196D		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:196D					 ; bc=count, (de)=source
ROM:196D					 ; ix=preserved, interrupts off/on
ROM:1970		 ret	 
ROM:1970 ; End of function FDC_sub_1969
ROM:1970 
ROM:1971 
ROM:1971 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1971 
ROM:1971 ; Attributes: bp-based	frame
ROM:1971 
ROM:1971 FDC_sub_1971:				 ; CODE	XREF: HANDLER08_FDC_sub_1547+139p
ROM:1971		 call	 FDC_sub_1978	 ; ret:	c=bad
ROM:1974		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1974					 ; ix=24-bit host mem address pointer (for window)
ROM:1974					 ; c=count, (de)=source
ROM:1974					 ; ix=preserved, interrupts off/on
ROM:1977		 ret	 
ROM:1977 ; End of function FDC_sub_1971
ROM:1977 
ROM:1978 
ROM:1978 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1978 
ROM:1978 ; ret:	c=bad
ROM:1978 ; Attributes: bp-based	frame
ROM:1978 
ROM:1978 FDC_sub_1978:				 ; CODE	XREF: FDC_sub_1969p
ROM:1978					 ; FDC_sub_1971p
ROM:1978		 ld	 e, 2
ROM:197A		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:197D		 ld	 bc, 6
ROM:1980		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:1980					 ; bc=count, (de)=source
ROM:1980					 ; ix=preserved, interrupts off/on
ROM:1983		 ld	 a, (iy+FDC_IY_PARAMS.field_7)
ROM:1986		 cp	 (iy+FDC_IY_PARAMS.field_6)
ROM:1989		 scf	 
ROM:198A		 ret	 z
ROM:198B		 add	 a, a
ROM:198C		 add	 a, a
ROM:198D		 add	 a, (iy+FDC_IY_PARAMS.field_2)
ROM:1990		 ld	 l, a
ROM:1991		 ld	 a, 0
ROM:1993		 adc	 a, (iy+FDC_IY_PARAMS.field_3)
ROM:1996		 ld	 h, a
ROM:1997		 ld	 a, 0
ROM:1999		 adc	 a, (iy+FDC_IY_PARAMS.field_4)
ROM:199C		 ld	 de, FDC_SOME_BUS_BUF3
ROM:199F		 ld	 bc, 3
ROM:19A2		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:19A2					 ; bc=count, (de)=source
ROM:19A2					 ; ix=preserved, interrupts off/on
ROM:19A5		 ld	 hl, FDC_SOME_BUS_BUF3
ROM:19A8		 ld	 e, (hl)
ROM:19A9		 inc	 hl
ROM:19AA		 ld	 d, (hl)
ROM:19AB		 inc	 hl
ROM:19AC		 ld	 a, (hl)
ROM:19AD		 ex	 de, hl
ROM:19AE		 ld	 de, FDC_SUB_COMMAND_BUFFER
ROM:19B1		 ld	 bc, 9
ROM:19B4		 ret	 
ROM:19B4 ; End of function FDC_sub_1978
ROM:19B4 
ROM:19B5 
ROM:19B5 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:19B5 
ROM:19B5 ; Writes buffer address and length to DMA controller
ROM:19B5 ; Attributes: bp-based	frame
ROM:19B5 
ROM:19B5 FDC_COMMON_SETUP_SECTOR_DMA:		 ; CODE	XREF: FDC_READ_SECTOR_DMA_sub_183Dp
ROM:19B5					 ; FDC_WRITE_SECTOR_DMA_sub_1864p
ROM:19B5		 ld	 hl, DMA_BEGIN_SETUP ; 0xc3 Group 6 DMA	Reset
ROM:19B5					 ; 0x14	Group 1	Port A:	Memory,	Incrementing
ROM:19B5					 ; 0x28	Group 2	Port B:	I/O, Fixed
ROM:19B5					 ; 0x92	Group 5	DMA Parameters
ROM:19B5					 ; 0x79	Group 0	Port B -> Port A
ROM:19B8		 ld	 b, 5
ROM:19BA		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:19BC		 otir	 
ROM:19BE		 ld	 de, DATA_BUFFER ; Used	as FDC sector buffer, perhaps elsewhere
ROM:19C1		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:19C3		 out	 (c), e
ROM:19C5		 out	 (c), d
ROM:19C7		 ld	 e, (ix+FDC_IX_STRUCT.LEN_C_LO)
ROM:19CA		 ld	 d, (ix+FDC_IX_STRUCT.LEN_B_HI)
ROM:19CD		 dec	 de
ROM:19CE		 out	 (c), e
ROM:19D0		 out	 (c), d
ROM:19D2		 ld	 hl, DMA_FLOPPY_ADDRESS	; 0x85 Group 4 DMA Port	B Address:
ROM:19D2					 ; 0x3b		  FDC Data Register
ROM:19D2					 ; 0xcf	Group 6	Load Addresses,	Reset Count
ROM:19D5		 ld	 b, 3
ROM:19D7		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:19D9		 otir	 
ROM:19DB		 ret	 
ROM:19DB ; End of function FDC_COMMON_SETUP_SECTOR_DMA
ROM:19DB 
ROM:19DC 
ROM:19DC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:19DC 
ROM:19DC ; Attributes: bp-based	frame
ROM:19DC 
ROM:19DC FDC_DMA_READ_TRACK:			 ; CODE	XREF: FDC_READ_TRACKp
ROM:19DC		 ld	 hl, DMA_BEGIN_SETUP ; 0xc3 Group 6 DMA	Reset
ROM:19DC					 ; 0x14	Group 1	Port A:	Memory,	Incrementing
ROM:19DC					 ; 0x28	Group 2	Port B:	I/O, Fixed
ROM:19DC					 ; 0x92	Group 5	DMA Parameters
ROM:19DC					 ; 0x79	Group 0	Port B -> Port A
ROM:19DF		 ld	 b, 5
ROM:19E1		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:19E3		 otir	 
ROM:19E5		 ld	 hl, (word_0_2692)
ROM:19E8		 ld	 a, (byte_0_2694)
ROM:19EB		 push	 hl
ROM:19EC		 push	 bc
ROM:19ED		 call	 BUS_READ8	 ; hl=host address
ROM:19ED					 ; returns b=value
ROM:19F0		 pop	 bc
ROM:19F1		 pop	 hl		 ; The destination buffer
ROM:19F2		 set	 7, h		 ; In the 0x8000 range -- host memory
ROM:19F4		 out	 (c), l		 ; Set DMA address
ROM:19F6		 out	 (c), h
ROM:19F8		 ld	 a, 0FFh
ROM:19FA		 out	 (c), a		 ; Set DMA length -- always 0xffff
ROM:19FC		 out	 (c), a
ROM:19FE		 ld	 hl, DMA_FLOPPY_ADDRESS	; 0x85 Group 4 DMA Port	B Address:
ROM:19FE					 ; 0x3b		  FDC Data Register
ROM:19FE					 ; 0xcf	Group 6	Load Addresses,	Reset Count
ROM:1A01		 ld	 b, 3
ROM:1A03		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:1A05		 otir	 
ROM:1A07		 ret	 
ROM:1A07 ; End of function FDC_DMA_READ_TRACK
ROM:1A07 
ROM:1A08 
ROM:1A08 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1A08 
ROM:1A08 ; Attributes: bp-based	frame
ROM:1A08 
ROM:1A08 FDC_DMA_WRITE_TRACK:			 ; CODE	XREF: FDC_WRITE_TRACKp
ROM:1A08		 ld	 hl, DMA_BEGIN_SETUP ; 0xc3 Group 6 DMA	Reset
ROM:1A08					 ; 0x14	Group 1	Port A:	Memory,	Incrementing
ROM:1A08					 ; 0x28	Group 2	Port B:	I/O, Fixed
ROM:1A08					 ; 0x92	Group 5	DMA Parameters
ROM:1A08					 ; 0x79	Group 0	Port B -> Port A
ROM:1A0B		 ld	 b, 5
ROM:1A0D		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:1A0F		 otir	 
ROM:1A11		 ld	 hl, (word_0_2692)
ROM:1A14		 ld	 a, (byte_0_2694)
ROM:1A17		 push	 hl
ROM:1A18		 call	 OPEN_BUS_WINDOW ; Set 0x8000 window to	access A:HL bus	address
ROM:1A1B		 pop	 hl
ROM:1A1C		 set	 7, h
ROM:1A1E		 out	 (c), l
ROM:1A20		 out	 (c), h
ROM:1A22		 ld	 a, 0FFh	 ; DMA length =	0xffff
ROM:1A24		 out	 (c), a
ROM:1A26		 out	 (c), a
ROM:1A28		 ld	 hl, DMA_FLOPPY_ADDRESS	; 0x85 Group 4 DMA Port	B Address:
ROM:1A28					 ; 0x3b		  FDC Data Register
ROM:1A28					 ; 0xcf	Group 6	Load Addresses,	Reset Count
ROM:1A2B		 ld	 b, 6
ROM:1A2D		 ld	 c, DMA_ALL	 ; DMA - All read and write registers
ROM:1A2F		 otir	 
ROM:1A31		 ret	 
ROM:1A31 ; End of function FDC_DMA_WRITE_TRACK
ROM:1A31 
ROM:1A31 ; ───────────────────────────────────────────────────────────────────────────
ROM:1A32 DMA_BEGIN_SETUP:.db 0C3h, 14h,	28h, 92h, 79h
ROM:1A32					 ; DATA	XREF: FDC_COMMON_SETUP_SECTOR_DMAo
ROM:1A32					 ; FDC_DMA_READ_TRACKo
ROM:1A32					 ; FDC_DMA_WRITE_TRACKo
ROM:1A32					 ; 0xc3	Group 6	DMA Reset
ROM:1A32					 ; 0x14	Group 1	Port A:	Memory,	Incrementing
ROM:1A32					 ; 0x28	Group 2	Port B:	I/O, Fixed
ROM:1A32					 ; 0x92	Group 5	DMA Parameters
ROM:1A32					 ; 0x79	Group 0	Port B -> Port A
ROM:1A37 DMA_FLOPPY_ADDRESS:.db	85h, 3Bh, 0CFh	 ; DATA	XREF: FDC_COMMON_SETUP_SECTOR_DMA+1Do
ROM:1A37					 ; FDC_DMA_READ_TRACK+22o
ROM:1A37					 ; FDC_DMA_WRITE_TRACK+20o
ROM:1A37					 ; 0x85	Group 4	DMA Port B Address:
ROM:1A37					 ; 0x3b		  FDC Data Register
ROM:1A37					 ; 0xcf	Group 6	Load Addresses,	Reset Count
ROM:1A3A DMA_FROM_MEMORY:.db 5,	0CFh		 ; DATA	XREF: FDC_WRITE_SECTOR_DMA_sub_1864+3o
ROM:1A3A					 ; 0x05	Group 5	Port A -> Port B transfer
ROM:1A3A					 ; 0xcf	Group 6	Load Addresses,	Reset Count
ROM:1A3C DMA_ENABLE:	 .db 87h		 ; DATA	XREF: FDC_READ_SECTOR_DMA_sub_183D+3o
ROM:1A3C					 ; 0x87	Group 6	DMA Enable
ROM:1A3D 
ROM:1A3D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1A3D 
ROM:1A3D ; Attributes: bp-based	frame
ROM:1A3D 
ROM:1A3D HANDLER00_sub_1A3D:			 ; CODE	XREF: HANDLER00_sub_1A3D+10j
ROM:1A3D					 ; HANDLER00_sub_1A3D+6Aj
ROM:1A3D					 ; DATA	XREF: ROM:012Bo
ROM:1A3D		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1A40		 ld	 e, SYS_NEW_CMD	 ; SYS - New Command Register
ROM:1A42		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1A42					 ; e=offset from CCB (0x0416)
ROM:1A42					 ; returns hl=host address de=original hl
ROM:1A45		 call	 BUS_READ8	 ; hl=host address
ROM:1A45					 ; returns b=value
ROM:1A48		 ld	 hl, LAST_CMD_COUNTER
ROM:1A4B		 ld	 a, b
ROM:1A4C		 cp	 (hl)
ROM:1A4D		 jr	 z, HANDLER00_sub_1A3D ; Wait for next command
ROM:1A4F		 ld	 (hl), a	 ; New command found!
ROM:1A4F					 ; Take	a note of this command.
ROM:1A50		 ld	 e, SYS_SYS_CMD	 ; SYS - System	Command	Register
ROM:1A52		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1A52					 ; e=offset from CCB (0x0416)
ROM:1A52					 ; returns hl=host address de=original hl
ROM:1A55		 push	 de
ROM:1A56		 call	 BUS_READ8	 ; hl=host address
ROM:1A56					 ; returns b=value
ROM:1A59		 pop	 hl
ROM:1A5A		 ld	 (hl), b
ROM:1A5B		 ld	 l, 1
ROM:1A5D		 bit	 7, b
ROM:1A5F		 call	 nz, sub_0_280
ROM:1A62		 ld	 hl, byte_0_1AA9
ROM:1A65 
ROM:1A65 loc_0_1A65:				 ; CODE	XREF: HANDLER00_sub_1A3D+40j
ROM:1A65					 ; HANDLER00_sub_1A3D+49j
ROM:1A65		 ld	 a, (hl)
ROM:1A66		 inc	 hl
ROM:1A67		 cp	 0FFh
ROM:1A69		 jp	 z, loc_0_1A89
ROM:1A6C		 ld	 e, 4
ROM:1A6E		 push	 hl
ROM:1A6F		 call	 MAKE_CCB_ADDR_FALLTHRU
ROM:1A72		 push	 de
ROM:1A73		 call	 BUS_READ8	 ; hl=host address
ROM:1A73					 ; returns b=value
ROM:1A76		 pop	 hl
ROM:1A77		 ld	 (hl), b
ROM:1A78		 pop	 hl
ROM:1A79		 ld	 e, (hl)
ROM:1A7A		 inc	 hl
ROM:1A7B		 bit	 7, b
ROM:1A7D		 jp	 z, loc_0_1A65
ROM:1A80		 push	 hl
ROM:1A81		 ld	 l, e
ROM:1A82		 call	 sub_0_280
ROM:1A85		 pop	 hl
ROM:1A86		 jp	 loc_0_1A65
ROM:1A89 ; ───────────────────────────────────────────────────────────────────────────
ROM:1A89 
ROM:1A89 loc_0_1A89:				 ; CODE	XREF: HANDLER00_sub_1A3D+2Cj
ROM:1A89		 ld	 e, 0
ROM:1A8B		 call	 FDC_SET_A_TO_6_MAKE_CCB_FALLTHRU
ROM:1A8E		 call	 BUS_READ8	 ; hl=host address
ROM:1A8E					 ; returns b=value
ROM:1A91		 bit	 7, b
ROM:1A93		 ld	 l, 8
ROM:1A95		 call	 nz, sub_0_280
ROM:1A98		 ld	 e, 0
ROM:1A9A		 call	 UNKNOWN_SYS_REG_ADDR ;	Maybe RTC?
ROM:1A9D		 call	 BUS_READ8	 ; hl=host address
ROM:1A9D					 ; returns b=value
ROM:1AA0		 bit	 7, b
ROM:1AA2		 ld	 l, 9
ROM:1AA4		 call	 nz, sub_0_280
ROM:1AA7		 jr	 HANDLER00_sub_1A3D
ROM:1AA7 ; End of function HANDLER00_sub_1A3D
ROM:1AA7 
ROM:1AA7 ; ───────────────────────────────────────────────────────────────────────────
ROM:1AA9 byte_0_1AA9:	 .db 0,	2, 1, 3, 2, 4, 3, 5, 4,	6, 5, 7
ROM:1AA9					 ; DATA	XREF: HANDLER00_sub_1A3D+25o
ROM:1AB5		 .dw 11FFh
ROM:1AB7		 .dw DO_PIO_A_GET_BIT6
ROM:1AB9 
ROM:1AB9 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1AB9 
ROM:1AB9 ; Attributes: bp-based	frame
ROM:1AB9 
ROM:1AB9 orphan_sub_1AB9:
ROM:1AB9		 call	 STH_INT_RELATED_PERHAPS
ROM:1ABC		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1ABF		 ei	 
ROM:1AC0 
ROM:1AC0 loc_0_1AC0:				 ; CODE	XREF: orphan_sub_1AB9+17j
ROM:1AC0		 call	 ZERO_SAVED_TASK_sub_028C
ROM:1AC3		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1AC6		 ld	 e, SYS_SYS_STAT ; SYS - System	Status Register
ROM:1AC8		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1AC8					 ; e=offset from CCB (0x0416)
ROM:1AC8					 ; returns hl=host address de=original hl
ROM:1ACB		 ld	 b, 8
ROM:1ACD		 call	 BUS_WRITE8	 ; b=data byte
ROM:1AD0		 jr	 loc_0_1AC0
ROM:1AD0 ; End of function orphan_sub_1AB9
ROM:1AD0 
ROM:1AD2 
ROM:1AD2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1AD2 
ROM:1AD2 ; Attributes: bp-based	frame
ROM:1AD2 
ROM:1AD2 DO_PIO_A_GET_BIT6:			 ; DATA	XREF: ROM:1AB7o
ROM:1AD2		 call	 PIO_A_GET_BIT6	 ; a=result
ROM:1AD5		 ret	 z
ROM:1AD6		 ret	 
ROM:1AD6 ; End of function DO_PIO_A_GET_BIT6
ROM:1AD6 
ROM:1AD7 
ROM:1AD7 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1AD7 
ROM:1AD7 ; Attributes: bp-based	frame
ROM:1AD7 
ROM:1AD7 HANDLER09_RTC_sub_1AD7:		 ; DATA	XREF: ROM:0146o
ROM:1AD7		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1ADA		 ld	 e, SYS_FW_VER	 ; SYS - Firmware Version Register
ROM:1ADC		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1ADC					 ; e=offset from CCB (0x0416)
ROM:1ADC					 ; returns hl=host address de=original hl
ROM:1ADF		 ld	 b, 50
ROM:1AE1		 call	 BUS_WRITE8	 ; b=data byte
ROM:1AE4 
ROM:1AE4 loc_0_1AE4:				 ; CODE	XREF: HANDLER09_RTC_sub_1AD7+C4j
ROM:1AE4		 call	 ZERO_SAVED_TASK_sub_028C
ROM:1AE7		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1AEA		 ld	 e, 0
ROM:1AEC		 call	 UNKNOWN_SYS_REG_ADDR ;	Maybe RTC?
ROM:1AEF		 ld	 bc, 8
ROM:1AF2		 push	 de
ROM:1AF3		 call	 READ_BUS_MEMORY ; ix=24-bit host mem address pointer
ROM:1AF3					 ; bc=count, (de)=source
ROM:1AF3					 ; ix=preserved, interrupts off/on
ROM:1AF6		 pop	 hl
ROM:1AF7		 res	 7, (hl)
ROM:1AF9		 ld	 a, (hl)
ROM:1AFA		 cp	 2
ROM:1AFC		 jr	 nz, loc_0_1B1E
ROM:1AFE		 push	 hl
ROM:1AFF		 out	 (95h),	a
ROM:1B01		 inc	 hl
ROM:1B02		 ld	 a, (hl)
ROM:1B03		 out	 (82h),	a
ROM:1B05		 inc	 hl
ROM:1B06		 ld	 a, (hl)
ROM:1B07		 out	 (83h),	a
ROM:1B09		 inc	 hl
ROM:1B0A		 ld	 a, (hl)
ROM:1B0B		 out	 (84h),	a
ROM:1B0D		 inc	 hl
ROM:1B0E		 ld	 a, (hl)
ROM:1B0F		 out	 (85h),	a
ROM:1B11		 inc	 hl
ROM:1B12		 ld	 a, (hl)
ROM:1B13		 out	 (86h),	a
ROM:1B15		 inc	 hl
ROM:1B16		 ld	 a, (hl)
ROM:1B17		 out	 (87h),	a
ROM:1B19		 inc	 hl
ROM:1B1A		 ld	 a, (hl)
ROM:1B1B		 out	 (89h),	a
ROM:1B1D		 pop	 hl
ROM:1B1E 
ROM:1B1E loc_0_1B1E:				 ; CODE	XREF: HANDLER09_RTC_sub_1AD7+25j
ROM:1B1E		 push	 hl
ROM:1B1F 
ROM:1B1F loc_0_1B1F:				 ; CODE	XREF: HANDLER09_RTC_sub_1AD7+51j
ROM:1B1F					 ; HANDLER09_RTC_sub_1AD7+5Ej
ROM:1B1F					 ; HANDLER09_RTC_sub_1AD7+6Bj
ROM:1B1F					 ; HANDLER09_RTC_sub_1AD7+78j
ROM:1B1F					 ; HANDLER09_RTC_sub_1AD7+85j ...
ROM:1B1F		 pop	 hl
ROM:1B20		 push	 hl
ROM:1B21		 in	 a, (94h)
ROM:1B23		 bit	 0, a
ROM:1B25		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B28		 jr	 nz, loc_0_1B1F
ROM:1B2A		 inc	 hl
ROM:1B2B		 in	 a, (82h)
ROM:1B2D		 ld	 (hl), a
ROM:1B2E		 in	 a, (94h)
ROM:1B30		 bit	 0, a
ROM:1B32		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B35		 jr	 nz, loc_0_1B1F
ROM:1B37		 inc	 hl
ROM:1B38		 in	 a, (83h)
ROM:1B3A		 ld	 (hl), a
ROM:1B3B		 in	 a, (94h)
ROM:1B3D		 bit	 0, a
ROM:1B3F		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B42		 jr	 nz, loc_0_1B1F
ROM:1B44		 inc	 hl
ROM:1B45		 in	 a, (84h)
ROM:1B47		 ld	 (hl), a
ROM:1B48		 in	 a, (94h)
ROM:1B4A		 bit	 0, a
ROM:1B4C		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B4F		 jr	 nz, loc_0_1B1F
ROM:1B51		 inc	 hl
ROM:1B52		 in	 a, (85h)
ROM:1B54		 ld	 (hl), a
ROM:1B55		 in	 a, (94h)
ROM:1B57		 bit	 0, a
ROM:1B59		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B5C		 jr	 nz, loc_0_1B1F
ROM:1B5E		 inc	 hl
ROM:1B5F		 in	 a, (86h)
ROM:1B61		 ld	 (hl), a
ROM:1B62		 in	 a, (94h)
ROM:1B64		 bit	 0, a
ROM:1B66		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B69		 jr	 nz, loc_0_1B1F
ROM:1B6B		 inc	 hl
ROM:1B6C		 in	 a, (87h)
ROM:1B6E		 ld	 (hl), a
ROM:1B6F		 in	 a, (94h)
ROM:1B71		 bit	 0, a
ROM:1B73		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B76		 jr	 nz, loc_0_1B1F
ROM:1B78		 inc	 hl
ROM:1B79		 in	 a, (89h)
ROM:1B7B		 ld	 (hl), a
ROM:1B7C		 in	 a, (94h)
ROM:1B7E		 bit	 0, a
ROM:1B80		 call	 nz, CHECK_STUFF ; Called from *many* sites
ROM:1B83		 jr	 nz, loc_0_1B1F
ROM:1B85		 pop	 hl
ROM:1B86		 ld	 e, 1
ROM:1B88		 call	 UNKNOWN_SYS_REG_ADDR ;	Maybe RTC?
ROM:1B8B		 ld	 bc, 7
ROM:1B8E		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1B8E					 ; ix=24-bit host mem address pointer (for window)
ROM:1B8E					 ; c=count, (de)=source
ROM:1B8E					 ; ix=preserved, interrupts off/on
ROM:1B91		 ld	 e, 0
ROM:1B93		 call	 UNKNOWN_SYS_REG_ADDR ;	Maybe RTC?
ROM:1B96		 ld	 b, 0
ROM:1B98		 call	 BUS_WRITE8	 ; b=data byte
ROM:1B9B		 jp	 loc_0_1AE4
ROM:1B9B ; End of function HANDLER09_RTC_sub_1AD7
ROM:1B9B 
ROM:1B9E 
ROM:1B9E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1B9E 
ROM:1B9E ; Attributes: bp-based	frame
ROM:1B9E 
ROM:1B9E HANDLER01_SYS_COMMAND:			 ; CODE	XREF: HANDLER01_SYS_COMMAND+4Fj
ROM:1B9E					 ; DATA	XREF: ROM:012Eo
ROM:1B9E		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1BA1		 ld	 e, SYS_SYS_CMD	 ; SYS - System	Command	Register
ROM:1BA3		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1BA3					 ; e=offset from CCB (0x0416)
ROM:1BA3					 ; returns hl=host address de=original hl
ROM:1BA6		 call	 BUS_READ8	 ; hl=host address
ROM:1BA6					 ; returns b=value
ROM:1BA9		 bit	 7, b
ROM:1BAB		 jr	 z, loc_0_1BE7
ROM:1BAD		 ld	 a, b
ROM:1BAE		 and	 7Fh ; ''
ROM:1BB0		 ld	 hl, HANDLER01_unk_1BF0
ROM:1BB3		 call	 ADD_WORD16	 ; hl+=a
ROM:1BB6		 ld	 b, (hl)
ROM:1BB7		 ld	 a, b
ROM:1BB8		 and	 7Fh ; ''
ROM:1BBA		 bit	 7, b
ROM:1BBC		 ld	 hl, _00_FROM_BEGINNING
ROM:1BBF		 jp	 nz, loc_0_1BC7
ROM:1BC2		 cpl	 
ROM:1BC3		 and	 (hl)
ROM:1BC4		 jp	 loc_0_1BC8
ROM:1BC7 ; ───────────────────────────────────────────────────────────────────────────
ROM:1BC7 
ROM:1BC7 loc_0_1BC7:				 ; CODE	XREF: HANDLER01_SYS_COMMAND+21j
ROM:1BC7		 or	 (hl)
ROM:1BC8 
ROM:1BC8 loc_0_1BC8:				 ; CODE	XREF: HANDLER01_SYS_COMMAND+26j
ROM:1BC8		 ld	 (hl), a
ROM:1BC9		 dec	 hl
ROM:1BCA		 ld	 (hl), 0
ROM:1BCC		 ld	 e, SYS_SYS_STAT ; SYS - System	Status Register
ROM:1BCE		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1BCE					 ; e=offset from CCB (0x0416)
ROM:1BCE					 ; returns hl=host address de=original hl
ROM:1BD1		 ld	 bc, 1
ROM:1BD4		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1BD4					 ; ix=24-bit host mem address pointer (for window)
ROM:1BD4					 ; c=count, (de)=source
ROM:1BD4					 ; ix=preserved, interrupts off/on
ROM:1BD7		 ld	 e, SYS_SYS_CMD	 ; SYS - System	Command	Register
ROM:1BD9		 call	 MAKE_CCB_ADDRESS ; ???
ROM:1BD9					 ; e=offset from CCB (0x0416)
ROM:1BD9					 ; returns hl=host address de=original hl
ROM:1BDC		 ld	 bc, 1
ROM:1BDF		 call	 WRITE_BUS_MEMORY ; hl=host address
ROM:1BDF					 ; ix=24-bit host mem address pointer (for window)
ROM:1BDF					 ; c=count, (de)=source
ROM:1BDF					 ; ix=preserved, interrupts off/on
ROM:1BE2		 ld	 a, 1
ROM:1BE4		 ld	 (HOST_MEM_byte_26FE), a
ROM:1BE7 
ROM:1BE7 loc_0_1BE7:				 ; CODE	XREF: HANDLER01_SYS_COMMAND+Dj
ROM:1BE7		 call	 ZERO_SAVED_TASK_sub_028C
ROM:1BEA		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1BED		 jp	 HANDLER01_SYS_COMMAND
ROM:1BED ; End of function HANDLER01_SYS_COMMAND
ROM:1BED 
ROM:1BF0 ; ───────────────────────────────────────────────────────────────────────────
ROM:1BF0 
ROM:1BF0 HANDLER01_unk_1BF0:			 ; DATA	XREF: HANDLER01_SYS_COMMAND+12o
ROM:1BF0		 ld	 bc, 281h
ROM:1BF3		 add	 a, d
ROM:1BF4		 inc	 b
ROM:1BF5		 call	 ZERO_SAVED_TASK_sub_028C
ROM:1BF8		 call	 CHECK_STUFF	 ; Called from *many* sites
ROM:1BFB		 jp	 2800h
ROM:1BFE ; ───────────────────────────────────────────────────────────────────────────
ROM:1BFE 
ROM:1BFE IX_stru_1BFE:				 ; DATA	XREF: HANDLER02_SIO_sub_0A26o
ROM:1BFE		 nop	 
ROM:1BFF		 ld	 (bc), a
ROM:1C00		 inc	 l
ROM:1C01		 inc	 l
ROM:1C02		 ex	 af, af'
ROM:1C03		 inc	 hl
ROM:1C04		 or	 (hl)
ROM:1C05		 ld	 (word_0_2266),	hl
ROM:1C08		 ld	 d, h
ROM:1C09		 dec	 h
ROM:1C0A		 nop	 
ROM:1C0B 
ROM:1C0B IX_stru_1C0B:				 ; DATA	XREF: HANDLER03_SIO_sub_0A30o
ROM:1C0B		 ld	 bc, 2E03h
ROM:1C0E		 inc	 l
ROM:1C0F		 nop	 
ROM:1C10		 daa	 
ROM:1C11		 ld	 (hl), 24h ; '$'
ROM:1C13		 ld	 a, h
ROM:1C14		 ld	 (word_0_2554),	hl
ROM:1C17		 nop	 
ROM:1C18 
ROM:1C18 IX_stru_1C18:				 ; DATA	XREF: HANDLER04_SIO_sub_0A3Ao
ROM:1C18		 ld	 (bc), a
ROM:1C19		 inc	 b
ROM:1C1A		 jr	 z, loc_0_1C44
ROM:1C1C		 ex	 af, af'
ROM:1C1D		 inc	 hl
ROM:1C1E		 ld	 (hl), 20h ; ' '
ROM:1C20		 sub	 d
ROM:1C21		 ld	 (word_0_2554),	hl
ROM:1C24		 ld	 (bc), a
ROM:1C25 
ROM:1C25 IX_stru_1C25:				 ; DATA	XREF: HANDLER05_SIO_sub_0A44o
ROM:1C25					 ; MONITOR_ENTRYo
ROM:1C25		 inc	 bc
ROM:1C26		 dec	 b
ROM:1C27		 ld	 hl, (byte_0_21+7)
ROM:1C2A		 inc	 hl
ROM:1C2B		 halt	 
ROM:1C2C		 ld	 hl, 22A8h
ROM:1C2F		 ld	 d, h
ROM:1C30		 dec	 h
ROM:1C31		 nop	 
ROM:1C32 
ROM:1C32 IX_stru_1C32:				 ; DATA	XREF: HANDLER06_SIO_sub_0A4Eo
ROM:1C32		 inc	 b
ROM:1C33		 ld	 b, 30h	; '0'
ROM:1C35		 jr	 nc, IX_stru_1C3F
ROM:1C37		 daa	 
ROM:1C38		 halt	 
ROM:1C39		 dec	 h
ROM:1C3A		 cp	 (hl)
ROM:1C3B		 ld	 (word_0_2554),	hl
ROM:1C3E		 dec	 b
ROM:1C3F 
ROM:1C3F IX_stru_1C3F:				 ; CODE	XREF: ROM:1C35j
ROM:1C3F					 ; DATA	XREF: HANDLER07_SIO_sub_0A58o
ROM:1C3F		 dec	 b
ROM:1C40		 rlca	 
ROM:1C41		 ld	 (byte_0_21+0Fh), a
ROM:1C44 
ROM:1C44 loc_0_1C44:				 ; CODE	XREF: ROM:1C1Aj
ROM:1C44		 rst	 38h		 ; Mode	1 interrupt handler
ROM:1C45		 rst	 38h		 ; Mode	1 interrupt handler
ROM:1C46		 rst	 38h		 ; Mode	1 interrupt handler
ROM:1C47		 call	 nc, 6822h
ROM:1C4A		 dec	 h
ROM:1C4B		 nop	 
ROM:1C4C 
ROM:1C4C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C4C 
ROM:1C4C ; Attributes: bp-based	frame
ROM:1C4C 
ROM:1C4C STH_INT_RELATED_PERHAPS:		 ; CODE	XREF: HANDLER_SIO_L0_COMMON+15p
ROM:1C4C					 ; orphan_sub_1AB9p
ROM:1C4C		 ld	 hl, byte_0_2698
ROM:1C4F		 ld	 a, (hl)
ROM:1C50		 cp	 0Ah
ROM:1C52		 scf	 
ROM:1C53		 ret	 z
ROM:1C54		 inc	 (hl)
ROM:1C55		 add	 a, a
ROM:1C56		 ld	 b, a
ROM:1C57		 add	 a, a
ROM:1C58		 add	 a, b
ROM:1C59		 ld	 hl, unk_0_2699
ROM:1C5C		 call	 ADD_WORD16	 ; hl+=a
ROM:1C5F		 push	 ix
ROM:1C61		 pop	 bc
ROM:1C62		 ld	 (hl), c
ROM:1C63		 inc	 hl
ROM:1C64		 ld	 (hl), b
ROM:1C65		 inc	 hl
ROM:1C66		 push	 iy
ROM:1C68		 pop	 bc
ROM:1C69		 ld	 (hl), c
ROM:1C6A		 inc	 hl
ROM:1C6B		 ld	 (hl), b
ROM:1C6C		 inc	 hl
ROM:1C6D		 ld	 (hl), e
ROM:1C6E		 inc	 hl
ROM:1C6F		 ld	 (hl), d
ROM:1C70		 or	 a
ROM:1C71		 ret	 
ROM:1C71 ; End of function STH_INT_RELATED_PERHAPS
ROM:1C71 
ROM:1C72 
ROM:1C72 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C72 
ROM:1C72 ; Attributes: bp-based	frame
ROM:1C72 
ROM:1C72 DO_INT_HANDLER:			 ; CODE	XREF: INT_HANDLERj
ROM:1C72		 exx	 
ROM:1C73		 ex	 af, af'
ROM:1C74		 push	 ix
ROM:1C76		 push	 iy
ROM:1C78		 ld	 a, 0FFh
ROM:1C7A		 ld	 (FF_FROM_BEGINNING), a	; NMI handler puts FF here first
ROM:1C7D		 ld	 hl, unk_0_2699
ROM:1C80		 ld	 a, (byte_0_2698)
ROM:1C83		 ld	 b, a
ROM:1C84 
ROM:1C84 loc_0_1C84:				 ; CODE	XREF: DO_INT_HANDLER+19j
ROM:1C84		 dec	 b
ROM:1C85		 jp	 m, loc_0_1C8D
ROM:1C88		 call	 INT_sub_1C9A
ROM:1C8B		 jr	 nc, loc_0_1C84
ROM:1C8D 
ROM:1C8D loc_0_1C8D:				 ; CODE	XREF: DO_INT_HANDLER+13j
ROM:1C8D		 xor	 a
ROM:1C8E		 ld	 (FF_FROM_BEGINNING), a	; NMI handler puts FF here first
ROM:1C91		 exx	 
ROM:1C92		 ex	 af, af'
ROM:1C93		 pop	 iy
ROM:1C95		 pop	 ix
ROM:1C97		 ei	 
ROM:1C98		 reti	 
ROM:1C98 ; End of function DO_INT_HANDLER
ROM:1C98 
ROM:1C9A 
ROM:1C9A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C9A 
ROM:1C9A ; Attributes: bp-based	frame
ROM:1C9A 
ROM:1C9A INT_sub_1C9A:				 ; CODE	XREF: DO_INT_HANDLER+16p
ROM:1C9A		 ld	 e, (hl)
ROM:1C9B		 inc	 hl
ROM:1C9C		 ld	 d, (hl)
ROM:1C9D		 inc	 hl
ROM:1C9E		 push	 de
ROM:1C9F		 pop	 ix
ROM:1CA1		 ld	 e, (hl)
ROM:1CA2		 inc	 hl
ROM:1CA3		 ld	 d, (hl)
ROM:1CA4		 inc	 hl
ROM:1CA5		 push	 de
ROM:1CA6		 pop	 iy
ROM:1CA8		 ld	 e, (hl)
ROM:1CA9		 inc	 hl
ROM:1CAA		 ld	 d, (hl)
ROM:1CAB		 inc	 hl
ROM:1CAC		 push	 hl
ROM:1CAD		 push	 bc
ROM:1CAE		 ld	 hl, INT_RET_sub_1CB4
ROM:1CB1		 push	 hl
ROM:1CB2		 ex	 de, hl
ROM:1CB3		 jp	 (hl)
ROM:1CB3 ; End of function INT_sub_1C9A
ROM:1CB3 
ROM:1CB4 
ROM:1CB4 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CB4 
ROM:1CB4 ; Attributes: bp-based	frame
ROM:1CB4 
ROM:1CB4 INT_RET_sub_1CB4:			 ; DATA	XREF: INT_sub_1C9A+14o
ROM:1CB4		 pop	 bc
ROM:1CB5		 pop	 hl
ROM:1CB6		 ret	 
ROM:1CB6 ; End of function INT_RET_sub_1CB4
ROM:1CB6 
ROM:1CB6 ; ───────────────────────────────────────────────────────────────────────────
ROM:1CB7 off_0_1CB7:	 .dw byte_0_26DC	 ; DATA	XREF: sub_0_2DB+3o
ROM:1CB9		 .dw unk_0_26F7
ROM:1CBB		 .dw word_0_26DE+1
ROM:1CBD		 .dw unk_0_26E8
ROM:1CBF		 .dw unk_0_26EE
ROM:1CC1		 .dw word_0_26E2
ROM:1CC3		 .dw word_0_26E4+1
ROM:1CC5		 .dw unk_0_26EB
ROM:1CC7		 .dw unk_0_26F1
ROM:1CC9		 .dw unk_0_26F4
ROM:1CCB word_0_1CCB:	 .dw 0FFFCh		 ; DATA	XREF: DO_NMI_HANDLER+3Ar
ROM:1CCD byte_0_1CCD:	 .db 1			 ; DATA	XREF: DO_NMI_HANDLER+3Dr
ROM:1CCE byte_0_1CCE:	 .db 1Fh, 7Fh, 3Fh, 0FFh ; DATA	XREF: SIO_L1H_sub_0D4C+23o
ROM:1CD2 byte_0_1CD2:	 .db 0,	16h, 2Ch, 42h, 58h, 6Eh, 84h
ROM:1CD2					 ; DATA	XREF: MAKE_CCB_ADDR_FALLTHRUo
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
ROM:1CD9		 .db 0,	0, 0, 0, 0, 0, 0, 0
ROM:1CD9 ; end of 'ROM'
ROM:1CD9 
RAM:2000 ; ═══════════════════════════════════════════════════════════════════════════
RAM:2000 
RAM:2000 ; Segment type: Regular
RAM:2000 ; segment 'RAM'
RAM:2000		 .org 2000h
RAM:2000 SRAM_JUMP_SLOT1:.block	1		 ; CODE	XREF: DO_NMI_HANDLERp
RAM:2000					 ; DATA	XREF: STARTo
RAM:2001		 .block	1
RAM:2002		 .block	1
RAM:2003 SRAM_JUMP_SLOT2:.block	1		 ; CODE	XREF: FH_JUMP_SLOT2_sub_116E+4j
RAM:2004		 .block	1
RAM:2005		 .block	1
RAM:2006 SRAM_JUMP_SLOT3:.block	1		 ; CODE	XREF: FH_JUMP_SLOT3_sub_10F3+4j
RAM:2007		 .block	1
RAM:2008		 .block	1
RAM:2009 SRAM_JUMP_SLOT4:.block	1		 ; CODE	XREF: FH_JUMP_SLOT4_sub_1133+4j
RAM:200A		 .block	1
RAM:200B		 .block	1
RAM:200C SRAM_JUMP_SLOT5:.block	1		 ; CODE	XREF: FH_JUMP_SLOT5_sub_1097+4j
RAM:200D		 .block	1
RAM:200E		 .block	1
RAM:200F CCB_PTR:	 .block	3		 ; DATA	XREF: DO_NMI_HANDLER+4o
RAM:200F					 ; DO_NMI_HANDLER+40o
RAM:200F					 ; DO_NMI_HANDLER+4Co
RAM:200F					 ; MAKE_CCB_ADDRESS+9o
RAM:200F					 ; orphan_sub_18F2+Fr
RAM:2012		 .block	1
RAM:2013		 .block	1
RAM:2014		 .block	1
RAM:2015		 .block	1
RAM:2016		 .block	1
RAM:2017		 .block	1
RAM:2018		 .block	1
RAM:2019		 .block	1
RAM:201A		 .block	1
RAM:201B		 .block	1
RAM:201C DATA_BUFFER:	 .block	200h		 ; DATA	XREF: SIO0_sub_070B+3Bo
RAM:201C					 ; FDC_READ_LEN_AND_STH_FROM_BUF_sub_189B+9o
RAM:201C					 ; FDC_COMMON_SETUP_SECTOR_DMA+9o
RAM:201C					 ; Used	as FDC sector buffer, perhaps elsewhere
RAM:221C		 .block	1
RAM:221D		 .block	1
RAM:221E		 .block	1
RAM:221F		 .block	1
RAM:2220		 .block	1
RAM:2221		 .block	1
RAM:2222		 .block	1
RAM:2223		 .block	1
RAM:2224		 .block	1
RAM:2225		 .block	1
RAM:2226		 .block	1
RAM:2227		 .block	1
RAM:2228		 .block	1
RAM:2229		 .block	1
RAM:222A		 .block	1
RAM:222B		 .block	1
RAM:222C		 .block	1
RAM:222D		 .block	1
RAM:222E		 .block	1
RAM:222F		 .block	1
RAM:2230		 .block	1
RAM:2231		 .block	1
RAM:2232		 .block	1
RAM:2233		 .block	1
RAM:2234		 .block	1
RAM:2235		 .block	1
RAM:2236		 .block	1
RAM:2237		 .block	1
RAM:2238		 .block	1
RAM:2239		 .block	1
RAM:223A		 .block	1
RAM:223B		 .block	1
RAM:223C		 .block	1
RAM:223D		 .block	1
RAM:223E		 .block	1
RAM:223F		 .block	1
RAM:2240		 .block	1
RAM:2241		 .block	1
RAM:2242		 .block	1
RAM:2243		 .block	1
RAM:2244		 .block	1
RAM:2245		 .block	1
RAM:2246		 .block	1
RAM:2247		 .block	1
RAM:2248		 .block	1
RAM:2249		 .block	1
RAM:224A		 .block	1
RAM:224B		 .block	1
RAM:224C		 .block	1
RAM:224D		 .block	1
RAM:224E		 .block	1
RAM:224F		 .block	1
RAM:2250		 .block	1
RAM:2251		 .block	1
RAM:2252		 .block	1
RAM:2253		 .block	1
RAM:2254		 .block	1
RAM:2255		 .block	1
RAM:2256		 .block	1
RAM:2257		 .block	1
RAM:2258		 .block	1
RAM:2259		 .block	1
RAM:225A		 .block	1
RAM:225B		 .block	1
RAM:225C		 .block	1
RAM:225D		 .block	1
RAM:225E		 .block	1
RAM:225F		 .block	1
RAM:2260 XXX_word_2260:	 .block	2		 ; DATA	XREF: DO_CHECK_STUFF+Do
RAM:2260					 ; MAKE_CCB_ADDRESS+1o
RAM:2262*_00_FROM_BEGINNING:.block 1		 ; DATA	XREF: DO_NMI_HANDLER+26w
RAM:2262*					 ; HANDLER_SIO_L0_COMMON+26r
RAM:2262*					 ; MONITOR_ENTRY+8r
RAM:2262*					 ; HANDLER01_SYS_COMMAND+1Eo
RAM:2263*_00_FROM_BEGINNING_1:.block 2		 ; DATA	XREF: DO_NMI_HANDLER+37w
RAM:2263*					 ; FDC_CHECK_sub_0478+2Cw
RAM:2265		 .block	1
RAM:2266*word_0_2266:	 .block	2		 ; DATA	XREF: ROM:1C05w
RAM:2268		 .block	1
RAM:2269		 .block	1
RAM:226A		 .block	1
RAM:226B		 .block	1
RAM:226C		 .block	1
RAM:226D		 .block	1
RAM:226E		 .block	1
RAM:226F		 .block	1
RAM:2270		 .block	1
RAM:2271		 .block	1
RAM:2272		 .block	1
RAM:2273		 .block	1
RAM:2274		 .block	1
RAM:2275		 .block	1
RAM:2276		 .block	1
RAM:2277		 .block	1
RAM:2278		 .block	1
RAM:2279		 .block	1
RAM:227A		 .block	1
RAM:227B		 .block	1
RAM:227C		 .block	1
RAM:227D		 .block	1
RAM:227E		 .block	1
RAM:227F		 .block	1
RAM:2280		 .block	1
RAM:2281		 .block	1
RAM:2282		 .block	1
RAM:2283		 .block	1
RAM:2284		 .block	1
RAM:2285		 .block	1
RAM:2286		 .block	1
RAM:2287		 .block	1
RAM:2288		 .block	1
RAM:2289		 .block	1
RAM:228A		 .block	1
RAM:228B		 .block	1
RAM:228C		 .block	1
RAM:228D		 .block	1
RAM:228E		 .block	1
RAM:228F		 .block	1
RAM:2290		 .block	1
RAM:2291		 .block	1
RAM:2292		 .block	1
RAM:2293		 .block	1
RAM:2294		 .block	1
RAM:2295		 .block	1
RAM:2296		 .block	1
RAM:2297		 .block	1
RAM:2298		 .block	1
RAM:2299		 .block	1
RAM:229A		 .block	1
RAM:229B		 .block	1
RAM:229C		 .block	1
RAM:229D		 .block	1
RAM:229E		 .block	1
RAM:229F		 .block	1
RAM:22A0		 .block	1
RAM:22A1		 .block	1
RAM:22A2		 .block	1
RAM:22A3		 .block	1
RAM:22A4		 .block	1
RAM:22A5		 .block	1
RAM:22A6		 .block	1
RAM:22A7		 .block	1
RAM:22A8		 .block	1
RAM:22A9		 .block	1
RAM:22AA		 .block	1
RAM:22AB		 .block	1
RAM:22AC		 .block	1
RAM:22AD		 .block	1
RAM:22AE		 .block	1
RAM:22AF		 .block	1
RAM:22B0		 .block	1
RAM:22B1		 .block	1
RAM:22B2		 .block	1
RAM:22B3		 .block	1
RAM:22B4		 .block	1
RAM:22B5		 .block	1
RAM:22B6		 .block	1
RAM:22B7		 .block	1
RAM:22B8		 .block	1
RAM:22B9		 .block	1
RAM:22BA		 .block	1
RAM:22BB		 .block	1
RAM:22BC		 .block	1
RAM:22BD		 .block	1
RAM:22BE		 .block	1
RAM:22BF		 .block	1
RAM:22C0		 .block	1
RAM:22C1		 .block	1
RAM:22C2		 .block	1
RAM:22C3		 .block	1
RAM:22C4		 .block	1
RAM:22C5		 .block	1
RAM:22C6		 .block	1
RAM:22C7		 .block	1
RAM:22C8		 .block	1
RAM:22C9		 .block	1
RAM:22CA		 .block	1
RAM:22CB		 .block	1
RAM:22CC		 .block	1
RAM:22CD		 .block	1
RAM:22CE		 .block	1
RAM:22CF		 .block	1
RAM:22D0		 .block	1
RAM:22D1		 .block	1
RAM:22D2		 .block	1
RAM:22D3		 .block	1
RAM:22D4		 .block	1
RAM:22D5		 .block	1
RAM:22D6		 .block	1
RAM:22D7		 .block	1
RAM:22D8		 .block	1
RAM:22D9		 .block	1
RAM:22DA		 .block	1
RAM:22DB		 .block	1
RAM:22DC		 .block	1
RAM:22DD		 .block	1
RAM:22DE		 .block	1
RAM:22DF		 .block	1
RAM:22E0		 .block	1
RAM:22E1		 .block	1
RAM:22E2		 .block	1
RAM:22E3		 .block	1
RAM:22E4		 .block	1
RAM:22E5		 .block	1
RAM:22E6		 .block	1
RAM:22E7		 .block	1
RAM:22E8		 .block	1
RAM:22E9		 .block	1
RAM:22EA FLOPPY_PARAMS_0:.block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547o
RAM:22EB		 .block	1
RAM:22EC		 .block	1
RAM:22ED		 .block	1
RAM:22EE		 .block	1
RAM:22EF		 .block	1
RAM:22F0		 .block	1
RAM:22F1		 .block	1
RAM:22F2		 .block	1
RAM:22F3		 .block	1
RAM:22F4		 .block	1
RAM:22F5		 .block	1
RAM:22F6		 .block	1
RAM:22F7		 .block	1
RAM:22F8		 .block	1
RAM:22F9		 .block	1
RAM:22FA		 .block	1
RAM:22FB		 .block	1
RAM:22FC		 .block	1
RAM:22FD		 .block	1
RAM:22FE		 .block	1
RAM:22FF		 .block	1
RAM:2300		 .block	1
RAM:2301		 .block	1
RAM:2302		 .block	1
RAM:2303		 .block	1
RAM:2304 unk_0_2304:	 .block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+102o
RAM:2305		 .block	1
RAM:2306		 .block	1
RAM:2307		 .block	1
RAM:2308		 .block	1
RAM:2309		 .block	1
RAM:230A		 .block	1
RAM:230B		 .block	1
RAM:230C		 .block	1
RAM:230D		 .block	1
RAM:230E		 .block	1
RAM:230F		 .block	1
RAM:2310		 .block	1
RAM:2311		 .block	1
RAM:2312		 .block	1
RAM:2313		 .block	1
RAM:2314		 .block	1
RAM:2315		 .block	1
RAM:2316		 .block	1
RAM:2317		 .block	1
RAM:2318		 .block	1
RAM:2319		 .block	1
RAM:231A		 .block	1
RAM:231B		 .block	1
RAM:231C		 .block	1
RAM:231D		 .block	1
RAM:231E		 .block	1
RAM:231F		 .block	1
RAM:2320		 .block	1
RAM:2321		 .block	1
RAM:2322		 .block	1
RAM:2323		 .block	1
RAM:2324 FDC_ARR_16_byte_2324:.block 1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+10Ao
RAM:2325		 .block	1
RAM:2326		 .block	1
RAM:2327		 .block	1
RAM:2328		 .block	1
RAM:2329		 .block	1
RAM:232A		 .block	1
RAM:232B		 .block	1
RAM:232C		 .block	1
RAM:232D		 .block	1
RAM:232E		 .block	1
RAM:232F		 .block	1
RAM:2330		 .block	1
RAM:2331		 .block	1
RAM:2332		 .block	1
RAM:2333		 .block	1
RAM:2334		 .block	1
RAM:2335		 .block	1
RAM:2336		 .block	1
RAM:2337		 .block	1
RAM:2338		 .block	1
RAM:2339		 .block	1
RAM:233A		 .block	1
RAM:233B		 .block	1
RAM:233C		 .block	1
RAM:233D		 .block	1
RAM:233E		 .block	1
RAM:233F		 .block	1
RAM:2340		 .block	1
RAM:2341		 .block	1
RAM:2342		 .block	1
RAM:2343		 .block	1
RAM:2344		 .block	1
RAM:2345		 .block	1
RAM:2346		 .block	1
RAM:2347		 .block	1
RAM:2348		 .block	1
RAM:2349		 .block	1
RAM:234A		 .block	1
RAM:234B		 .block	1
RAM:234C		 .block	1
RAM:234D		 .block	1
RAM:234E		 .block	1
RAM:234F		 .block	1
RAM:2350		 .block	1
RAM:2351		 .block	1
RAM:2352		 .block	1
RAM:2353		 .block	1
RAM:2354		 .block	1
RAM:2355		 .block	1
RAM:2356		 .block	1
RAM:2357		 .block	1
RAM:2358		 .block	1
RAM:2359		 .block	1
RAM:235A		 .block	1
RAM:235B		 .block	1
RAM:235C		 .block	1
RAM:235D		 .block	1
RAM:235E		 .block	1
RAM:235F		 .block	1
RAM:2360		 .block	1
RAM:2361		 .block	1
RAM:2362		 .block	1
RAM:2363		 .block	1
RAM:2364		 .block	1
RAM:2365		 .block	1
RAM:2366		 .block	1
RAM:2367		 .block	1
RAM:2368		 .block	1
RAM:2369		 .block	1
RAM:236A		 .block	1
RAM:236B		 .block	1
RAM:236C		 .block	1
RAM:236D		 .block	1
RAM:236E		 .block	1
RAM:236F		 .block	1
RAM:2370		 .block	1
RAM:2371		 .block	1
RAM:2372		 .block	1
RAM:2373		 .block	1
RAM:2374		 .block	1
RAM:2375		 .block	1
RAM:2376		 .block	1
RAM:2377		 .block	1
RAM:2378		 .block	1
RAM:2379		 .block	1
RAM:237A		 .block	1
RAM:237B		 .block	1
RAM:237C		 .block	1
RAM:237D		 .block	1
RAM:237E		 .block	1
RAM:237F		 .block	1
RAM:2380		 .block	1
RAM:2381		 .block	1
RAM:2382		 .block	1
RAM:2383		 .block	1
RAM:2384		 .block	1
RAM:2385		 .block	1
RAM:2386		 .block	1
RAM:2387		 .block	1
RAM:2388		 .block	1
RAM:2389		 .block	1
RAM:238A		 .block	1
RAM:238B		 .block	1
RAM:238C		 .block	1
RAM:238D		 .block	1
RAM:238E		 .block	1
RAM:238F		 .block	1
RAM:2390		 .block	1
RAM:2391		 .block	1
RAM:2392		 .block	1
RAM:2393		 .block	1
RAM:2394		 .block	1
RAM:2395		 .block	1
RAM:2396		 .block	1
RAM:2397		 .block	1
RAM:2398		 .block	1
RAM:2399		 .block	1
RAM:239A		 .block	1
RAM:239B		 .block	1
RAM:239C		 .block	1
RAM:239D		 .block	1
RAM:239E		 .block	1
RAM:239F		 .block	1
RAM:23A0		 .block	1
RAM:23A1		 .block	1
RAM:23A2		 .block	1
RAM:23A3		 .block	1
RAM:23A4		 .block	1
RAM:23A5		 .block	1
RAM:23A6		 .block	1
RAM:23A7		 .block	1
RAM:23A8		 .block	1
RAM:23A9		 .block	1
RAM:23AA		 .block	1
RAM:23AB		 .block	1
RAM:23AC		 .block	1
RAM:23AD		 .block	1
RAM:23AE		 .block	1
RAM:23AF		 .block	1
RAM:23B0		 .block	1
RAM:23B1		 .block	1
RAM:23B2		 .block	1
RAM:23B3		 .block	1
RAM:23B4		 .block	1
RAM:23B5		 .block	1
RAM:23B6		 .block	1
RAM:23B7		 .block	1
RAM:23B8		 .block	1
RAM:23B9		 .block	1
RAM:23BA		 .block	1
RAM:23BB		 .block	1
RAM:23BC		 .block	1
RAM:23BD		 .block	1
RAM:23BE		 .block	1
RAM:23BF		 .block	1
RAM:23C0		 .block	1
RAM:23C1		 .block	1
RAM:23C2		 .block	1
RAM:23C3		 .block	1
RAM:23C4		 .block	1
RAM:23C5		 .block	1
RAM:23C6		 .block	1
RAM:23C7		 .block	1
RAM:23C8		 .block	1
RAM:23C9		 .block	1
RAM:23CA		 .block	1
RAM:23CB		 .block	1
RAM:23CC		 .block	1
RAM:23CD		 .block	1
RAM:23CE		 .block	1
RAM:23CF		 .block	1
RAM:23D0		 .block	1
RAM:23D1		 .block	1
RAM:23D2		 .block	1
RAM:23D3		 .block	1
RAM:23D4		 .block	1
RAM:23D5		 .block	1
RAM:23D6		 .block	1
RAM:23D7		 .block	1
RAM:23D8		 .block	1
RAM:23D9		 .block	1
RAM:23DA		 .block	1
RAM:23DB		 .block	1
RAM:23DC		 .block	1
RAM:23DD		 .block	1
RAM:23DE		 .block	1
RAM:23DF		 .block	1
RAM:23E0		 .block	1
RAM:23E1		 .block	1
RAM:23E2		 .block	1
RAM:23E3		 .block	1
RAM:23E4		 .block	1
RAM:23E5		 .block	1
RAM:23E6		 .block	1
RAM:23E7		 .block	1
RAM:23E8		 .block	1
RAM:23E9		 .block	1
RAM:23EA		 .block	1
RAM:23EB		 .block	1
RAM:23EC		 .block	1
RAM:23ED		 .block	1
RAM:23EE		 .block	1
RAM:23EF		 .block	1
RAM:23F0		 .block	1
RAM:23F1		 .block	1
RAM:23F2		 .block	1
RAM:23F3		 .block	1
RAM:23F4		 .block	1
RAM:23F5		 .block	1
RAM:23F6		 .block	1
RAM:23F7		 .block	1
RAM:23F8		 .block	1
RAM:23F9		 .block	1
RAM:23FA		 .block	1
RAM:23FB		 .block	1
RAM:23FC		 .block	1
RAM:23FD		 .block	1
RAM:23FE		 .block	1
RAM:23FF		 .block	1
RAM:2400		 .block	1
RAM:2401		 .block	1
RAM:2402		 .block	1
RAM:2403		 .block	1
RAM:2404		 .block	1
RAM:2405		 .block	1
RAM:2406		 .block	1
RAM:2407		 .block	1
RAM:2408		 .block	1
RAM:2409		 .block	1
RAM:240A		 .block	1
RAM:240B		 .block	1
RAM:240C		 .block	1
RAM:240D		 .block	1
RAM:240E		 .block	1
RAM:240F		 .block	1
RAM:2410		 .block	1
RAM:2411		 .block	1
RAM:2412		 .block	1
RAM:2413		 .block	1
RAM:2414		 .block	1
RAM:2415		 .block	1
RAM:2416		 .block	1
RAM:2417		 .block	1
RAM:2418		 .block	1
RAM:2419		 .block	1
RAM:241A		 .block	1
RAM:241B		 .block	1
RAM:241C		 .block	1
RAM:241D		 .block	1
RAM:241E		 .block	1
RAM:241F		 .block	1
RAM:2420		 .block	1
RAM:2421		 .block	1
RAM:2422		 .block	1
RAM:2423		 .block	1
RAM:2424		 .block	1
RAM:2425		 .block	1
RAM:2426		 .block	1
RAM:2427		 .block	1
RAM:2428		 .block	1
RAM:2429		 .block	1
RAM:242A		 .block	1
RAM:242B		 .block	1
RAM:242C		 .block	1
RAM:242D		 .block	1
RAM:242E		 .block	1
RAM:242F		 .block	1
RAM:2430		 .block	1
RAM:2431		 .block	1
RAM:2432		 .block	1
RAM:2433		 .block	1
RAM:2434		 .block	1
RAM:2435		 .block	1
RAM:2436		 .block	1
RAM:2437		 .block	1
RAM:2438		 .block	1
RAM:2439		 .block	1
RAM:243A		 .block	1
RAM:243B		 .block	1
RAM:243C		 .block	1
RAM:243D		 .block	1
RAM:243E		 .block	1
RAM:243F		 .block	1
RAM:2440		 .block	1
RAM:2441		 .block	1
RAM:2442		 .block	1
RAM:2443		 .block	1
RAM:2444		 .block	1
RAM:2445		 .block	1
RAM:2446		 .block	1
RAM:2447		 .block	1
RAM:2448		 .block	1
RAM:2449		 .block	1
RAM:244A		 .block	1
RAM:244B		 .block	1
RAM:244C		 .block	1
RAM:244D		 .block	1
RAM:244E		 .block	1
RAM:244F		 .block	1
RAM:2450		 .block	1
RAM:2451		 .block	1
RAM:2452		 .block	1
RAM:2453		 .block	1
RAM:2454		 .block	1
RAM:2455		 .block	1
RAM:2456		 .block	1
RAM:2457		 .block	1
RAM:2458		 .block	1
RAM:2459		 .block	1
RAM:245A		 .block	1
RAM:245B		 .block	1
RAM:245C		 .block	1
RAM:245D		 .block	1
RAM:245E		 .block	1
RAM:245F		 .block	1
RAM:2460		 .block	1
RAM:2461		 .block	1
RAM:2462		 .block	1
RAM:2463		 .block	1
RAM:2464		 .block	1
RAM:2465		 .block	1
RAM:2466		 .block	1
RAM:2467		 .block	1
RAM:2468		 .block	1
RAM:2469		 .block	1
RAM:246A		 .block	1
RAM:246B		 .block	1
RAM:246C		 .block	1
RAM:246D		 .block	1
RAM:246E		 .block	1
RAM:246F		 .block	1
RAM:2470		 .block	1
RAM:2471		 .block	1
RAM:2472		 .block	1
RAM:2473		 .block	1
RAM:2474		 .block	1
RAM:2475		 .block	1
RAM:2476		 .block	1
RAM:2477		 .block	1
RAM:2478		 .block	1
RAM:2479		 .block	1
RAM:247A		 .block	1
RAM:247B		 .block	1
RAM:247C		 .block	1
RAM:247D		 .block	1
RAM:247E		 .block	1
RAM:247F		 .block	1
RAM:2480		 .block	1
RAM:2481		 .block	1
RAM:2482		 .block	1
RAM:2483		 .block	1
RAM:2484		 .block	1
RAM:2485		 .block	1
RAM:2486		 .block	1
RAM:2487		 .block	1
RAM:2488		 .block	1
RAM:2489		 .block	1
RAM:248A		 .block	1
RAM:248B		 .block	1
RAM:248C		 .block	1
RAM:248D		 .block	1
RAM:248E		 .block	1
RAM:248F		 .block	1
RAM:2490		 .block	1
RAM:2491		 .block	1
RAM:2492		 .block	1
RAM:2493		 .block	1
RAM:2494		 .block	1
RAM:2495		 .block	1
RAM:2496		 .block	1
RAM:2497		 .block	1
RAM:2498		 .block	1
RAM:2499		 .block	1
RAM:249A		 .block	1
RAM:249B		 .block	1
RAM:249C		 .block	1
RAM:249D		 .block	1
RAM:249E		 .block	1
RAM:249F		 .block	1
RAM:24A0		 .block	1
RAM:24A1		 .block	1
RAM:24A2		 .block	1
RAM:24A3		 .block	1
RAM:24A4		 .block	1
RAM:24A5		 .block	1
RAM:24A6		 .block	1
RAM:24A7		 .block	1
RAM:24A8		 .block	1
RAM:24A9		 .block	1
RAM:24AA		 .block	1
RAM:24AB		 .block	1
RAM:24AC		 .block	1
RAM:24AD		 .block	1
RAM:24AE		 .block	1
RAM:24AF		 .block	1
RAM:24B0		 .block	1
RAM:24B1		 .block	1
RAM:24B2		 .block	1
RAM:24B3		 .block	1
RAM:24B4		 .block	1
RAM:24B5		 .block	1
RAM:24B6		 .block	1
RAM:24B7		 .block	1
RAM:24B8		 .block	1
RAM:24B9		 .block	1
RAM:24BA		 .block	1
RAM:24BB		 .block	1
RAM:24BC		 .block	1
RAM:24BD		 .block	1
RAM:24BE		 .block	1
RAM:24BF		 .block	1
RAM:24C0		 .block	1
RAM:24C1		 .block	1
RAM:24C2		 .block	1
RAM:24C3		 .block	1
RAM:24C4		 .block	1
RAM:24C5		 .block	1
RAM:24C6		 .block	1
RAM:24C7		 .block	1
RAM:24C8		 .block	1
RAM:24C9		 .block	1
RAM:24CA		 .block	1
RAM:24CB		 .block	1
RAM:24CC		 .block	1
RAM:24CD		 .block	1
RAM:24CE		 .block	1
RAM:24CF		 .block	1
RAM:24D0		 .block	1
RAM:24D1		 .block	1
RAM:24D2		 .block	1
RAM:24D3		 .block	1
RAM:24D4		 .block	1
RAM:24D5		 .block	1
RAM:24D6		 .block	1
RAM:24D7		 .block	1
RAM:24D8		 .block	1
RAM:24D9		 .block	1
RAM:24DA		 .block	1
RAM:24DB		 .block	1
RAM:24DC		 .block	1
RAM:24DD		 .block	1
RAM:24DE		 .block	1
RAM:24DF		 .block	1
RAM:24E0		 .block	1
RAM:24E1		 .block	1
RAM:24E2		 .block	1
RAM:24E3		 .block	1
RAM:24E4		 .block	1
RAM:24E5		 .block	1
RAM:24E6		 .block	1
RAM:24E7		 .block	1
RAM:24E8		 .block	1
RAM:24E9		 .block	1
RAM:24EA		 .block	1
RAM:24EB		 .block	1
RAM:24EC		 .block	1
RAM:24ED		 .block	1
RAM:24EE		 .block	1
RAM:24EF		 .block	1
RAM:24F0		 .block	1
RAM:24F1		 .block	1
RAM:24F2		 .block	1
RAM:24F3		 .block	1
RAM:24F4		 .block	1
RAM:24F5		 .block	1
RAM:24F6		 .block	1
RAM:24F7		 .block	1
RAM:24F8		 .block	1
RAM:24F9		 .block	1
RAM:24FA		 .block	1
RAM:24FB		 .block	1
RAM:24FC		 .block	1
RAM:24FD		 .block	1
RAM:24FE		 .block	1
RAM:24FF		 .block	1
RAM:2500		 .block	1
RAM:2501		 .block	1
RAM:2502		 .block	1
RAM:2503		 .block	1
RAM:2504		 .block	1
RAM:2505		 .block	1
RAM:2506		 .block	1
RAM:2507		 .block	1
RAM:2508		 .block	1
RAM:2509		 .block	1
RAM:250A		 .block	1
RAM:250B		 .block	1
RAM:250C		 .block	1
RAM:250D		 .block	1
RAM:250E		 .block	1
RAM:250F		 .block	1
RAM:2510		 .block	1
RAM:2511		 .block	1
RAM:2512		 .block	1
RAM:2513		 .block	1
RAM:2514		 .block	1
RAM:2515		 .block	1
RAM:2516		 .block	1
RAM:2517		 .block	1
RAM:2518		 .block	1
RAM:2519		 .block	1
RAM:251A		 .block	1
RAM:251B		 .block	1
RAM:251C		 .block	1
RAM:251D		 .block	1
RAM:251E		 .block	1
RAM:251F		 .block	1
RAM:2520		 .block	1
RAM:2521		 .block	1
RAM:2522		 .block	1
RAM:2523		 .block	1
RAM:2524		 .block	1
RAM:2525		 .block	1
RAM:2526		 .block	1
RAM:2527		 .block	1
RAM:2528		 .block	1
RAM:2529		 .block	1
RAM:252A		 .block	1
RAM:252B		 .block	1
RAM:252C		 .block	1
RAM:252D		 .block	1
RAM:252E		 .block	1
RAM:252F		 .block	1
RAM:2530		 .block	1
RAM:2531		 .block	1
RAM:2532		 .block	1
RAM:2533		 .block	1
RAM:2534		 .block	1
RAM:2535		 .block	1
RAM:2536		 .block	1
RAM:2537		 .block	1
RAM:2538		 .block	1
RAM:2539		 .block	1
RAM:253A		 .block	1
RAM:253B		 .block	1
RAM:253C		 .block	1
RAM:253D		 .block	1
RAM:253E		 .block	1
RAM:253F		 .block	1
RAM:2540		 .block	1
RAM:2541		 .block	1
RAM:2542		 .block	1
RAM:2543		 .block	1
RAM:2544		 .block	1
RAM:2545		 .block	1
RAM:2546		 .block	1
RAM:2547		 .block	1
RAM:2548		 .block	1
RAM:2549		 .block	1
RAM:254A		 .block	1
RAM:254B		 .block	1
RAM:254C		 .block	1
RAM:254D		 .block	1
RAM:254E		 .block	1
RAM:254F		 .block	1
RAM:2550*FF_FROM_BEGINNING:.block 1		 ; DATA	XREF: DO_NMI_HANDLER+14w
RAM:2550*					 ; DO_NMI_HANDLER+72o
RAM:2550*					 ; DO_NMI_HANDLER+9Fw
RAM:2550*					 ; TAIL_EI+1r
RAM:2550*					 ; DO_INT_HANDLER+8w ...
RAM:2550*					 ; NMI handler puts FF here first
RAM:2551*byte_0_2551:	 .block	1		 ; DATA	XREF: FDC_sub_0360+8r
RAM:2551*					 ; FDC_sub_0360+1Dr
RAM:2551*					 ; FDC_sub_0360+30w
RAM:2551*					 ; SIO_sub_0807+44r
RAM:2552 unk_0_2552:	 .block	1		 ; DATA	XREF: FDC_sub_0360+1o
RAM:2552					 ; SIO_sub_03A6o
RAM:2553 unk_0_2553:	 .block	1		 ; DATA	XREF: FDC_sub_0360+16o
RAM:2553					 ; ZERO_TO_SOME_VAR_sub_03ACo
RAM:2554*word_0_2554:	 .block	2		 ; DATA	XREF: ROM:1C14w
RAM:2554*					 ; ROM:1C21w ROM:1C3Bw
RAM:2556		 .block	1
RAM:2557		 .block	1
RAM:2558		 .block	1
RAM:2559		 .block	1
RAM:255A		 .block	1
RAM:255B		 .block	1
RAM:255C		 .block	1
RAM:255D		 .block	1
RAM:255E		 .block	1
RAM:255F		 .block	1
RAM:2560		 .block	1
RAM:2561		 .block	1
RAM:2562		 .block	1
RAM:2563		 .block	1
RAM:2564		 .block	1
RAM:2565		 .block	1
RAM:2566		 .block	1
RAM:2567		 .block	1
RAM:2568 IY_CH0_stru_2568:.block 1		 ; DATA	XREF: HANDLER02_SIO_sub_0A26+4o
RAM:2569		 .block	1
RAM:256A		 .block	1
RAM:256B		 .block	1
RAM:256C		 .block	1
RAM:256D		 .block	1
RAM:256E		 .block	1
RAM:256F		 .block	1
RAM:2570 unk_0_2570:	 .block	1		 ; DATA	XREF: ROM:0149o
RAM:2571		 .block	1
RAM:2572		 .block	1
RAM:2573		 .block	1
RAM:2574		 .block	1
RAM:2575		 .block	1
RAM:2576		 .block	1
RAM:2577		 .block	1
RAM:2578		 .block	1
RAM:2579		 .block	1
RAM:257A		 .block	1
RAM:257B		 .block	1
RAM:257C		 .block	1
RAM:257D		 .block	1
RAM:257E		 .block	1
RAM:257F		 .block	1
RAM:2580		 .block	1
RAM:2581		 .block	1
RAM:2582		 .block	1
RAM:2583		 .block	1
RAM:2584		 .block	1
RAM:2585		 .block	1
RAM:2586		 .block	1
RAM:2587		 .block	1
RAM:2588		 .block	1
RAM:2589		 .block	1
RAM:258A		 .block	1
RAM:258B		 .block	1
RAM:258C		 .block	1
RAM:258D		 .block	1
RAM:258E		 .block	1
RAM:258F		 .block	1
RAM:2590		 .block	1
RAM:2591		 .block	1
RAM:2592		 .block	1
RAM:2593		 .block	1
RAM:2594		 .block	1
RAM:2595		 .block	1
RAM:2596 IY_CH1_stru_2596:.block 1		 ; DATA	XREF: HANDLER03_SIO_sub_0A30+4o
RAM:2597		 .block	1
RAM:2598		 .block	1
RAM:2599		 .block	1
RAM:259A		 .block	1
RAM:259B		 .block	1
RAM:259C		 .block	1
RAM:259D		 .block	1
RAM:259E unk_0_259E:	 .block	1		 ; DATA	XREF: ROM:0149o
RAM:259F		 .block	1
RAM:25A0		 .block	1
RAM:25A1		 .block	1
RAM:25A2		 .block	1
RAM:25A3		 .block	1
RAM:25A4		 .block	1
RAM:25A5		 .block	1
RAM:25A6		 .block	1
RAM:25A7		 .block	1
RAM:25A8		 .block	1
RAM:25A9		 .block	1
RAM:25AA		 .block	1
RAM:25AB		 .block	1
RAM:25AC		 .block	1
RAM:25AD		 .block	1
RAM:25AE		 .block	1
RAM:25AF		 .block	1
RAM:25B0		 .block	1
RAM:25B1		 .block	1
RAM:25B2		 .block	1
RAM:25B3		 .block	1
RAM:25B4		 .block	1
RAM:25B5		 .block	1
RAM:25B6		 .block	1
RAM:25B7		 .block	1
RAM:25B8		 .block	1
RAM:25B9		 .block	1
RAM:25BA		 .block	1
RAM:25BB		 .block	1
RAM:25BC		 .block	1
RAM:25BD		 .block	1
RAM:25BE		 .block	1
RAM:25BF		 .block	1
RAM:25C0		 .block	1
RAM:25C1		 .block	1
RAM:25C2		 .block	1
RAM:25C3		 .block	1
RAM:25C4 IY_CH2_stru_25C4:.block 1		 ; DATA	XREF: HANDLER04_SIO_sub_0A3A+4o
RAM:25C5		 .block	1
RAM:25C6		 .block	1
RAM:25C7		 .block	1
RAM:25C8		 .block	1
RAM:25C9		 .block	1
RAM:25CA		 .block	1
RAM:25CB		 .block	1
RAM:25CC unk_0_25CC:	 .block	1		 ; DATA	XREF: ROM:0149o
RAM:25CD		 .block	1
RAM:25CE		 .block	1
RAM:25CF		 .block	1
RAM:25D0		 .block	1
RAM:25D1		 .block	1
RAM:25D2		 .block	1
RAM:25D3		 .block	1
RAM:25D4		 .block	1
RAM:25D5		 .block	1
RAM:25D6		 .block	1
RAM:25D7		 .block	1
RAM:25D8		 .block	1
RAM:25D9		 .block	1
RAM:25DA		 .block	1
RAM:25DB		 .block	1
RAM:25DC		 .block	1
RAM:25DD		 .block	1
RAM:25DE		 .block	1
RAM:25DF		 .block	1
RAM:25E0		 .block	1
RAM:25E1		 .block	1
RAM:25E2		 .block	1
RAM:25E3		 .block	1
RAM:25E4		 .block	1
RAM:25E5		 .block	1
RAM:25E6		 .block	1
RAM:25E7		 .block	1
RAM:25E8		 .block	1
RAM:25E9		 .block	1
RAM:25EA		 .block	1
RAM:25EB		 .block	1
RAM:25EC		 .block	1
RAM:25ED		 .block	1
RAM:25EE		 .block	1
RAM:25EF		 .block	1
RAM:25F0		 .block	1
RAM:25F1		 .block	1
RAM:25F2 IY_CH3_stru_25F2:.block 1		 ; DATA	XREF: HANDLER05_SIO_sub_0A44+4o
RAM:25F2					 ; MONITOR_ENTRY+4o
RAM:25F3		 .block	1
RAM:25F4		 .block	1
RAM:25F5		 .block	1
RAM:25F6		 .block	1
RAM:25F7		 .block	1
RAM:25F8		 .block	1
RAM:25F9		 .block	1
RAM:25FA unk_0_25FA:	 .block	1		 ; DATA	XREF: ROM:0149o
RAM:25FB		 .block	1
RAM:25FC		 .block	1
RAM:25FD		 .block	1
RAM:25FE		 .block	1
RAM:25FF		 .block	1
RAM:2600		 .block	1
RAM:2601		 .block	1
RAM:2602		 .block	1
RAM:2603		 .block	1
RAM:2604		 .block	1
RAM:2605		 .block	1
RAM:2606		 .block	1
RAM:2607		 .block	1
RAM:2608		 .block	1
RAM:2609		 .block	1
RAM:260A		 .block	1
RAM:260B		 .block	1
RAM:260C		 .block	1
RAM:260D		 .block	1
RAM:260E		 .block	1
RAM:260F		 .block	1
RAM:2610		 .block	1
RAM:2611		 .block	1
RAM:2612		 .block	1
RAM:2613		 .block	1
RAM:2614		 .block	1
RAM:2615		 .block	1
RAM:2616		 .block	1
RAM:2617		 .block	1
RAM:2618		 .block	1
RAM:2619		 .block	1
RAM:261A		 .block	1
RAM:261B		 .block	1
RAM:261C		 .block	1
RAM:261D		 .block	1
RAM:261E		 .block	1
RAM:261F		 .block	1
RAM:2620 IY_CH4_stru_2620:.block 1		 ; DATA	XREF: HANDLER06_SIO_sub_0A4E+4o
RAM:2621		 .block	1
RAM:2622		 .block	1
RAM:2623		 .block	1
RAM:2624		 .block	1
RAM:2625		 .block	1
RAM:2626		 .block	1
RAM:2627		 .block	1
RAM:2628 unk_0_2628:	 .block	1		 ; DATA	XREF: ROM:0149o
RAM:2629		 .block	1
RAM:262A		 .block	1
RAM:262B		 .block	1
RAM:262C		 .block	1
RAM:262D		 .block	1
RAM:262E		 .block	1
RAM:262F		 .block	1
RAM:2630		 .block	1
RAM:2631		 .block	1
RAM:2632		 .block	1
RAM:2633		 .block	1
RAM:2634		 .block	1
RAM:2635		 .block	1
RAM:2636		 .block	1
RAM:2637		 .block	1
RAM:2638		 .block	1
RAM:2639		 .block	1
RAM:263A		 .block	1
RAM:263B		 .block	1
RAM:263C		 .block	1
RAM:263D		 .block	1
RAM:263E		 .block	1
RAM:263F		 .block	1
RAM:2640		 .block	1
RAM:2641		 .block	1
RAM:2642		 .block	1
RAM:2643		 .block	1
RAM:2644		 .block	1
RAM:2645		 .block	1
RAM:2646		 .block	1
RAM:2647		 .block	1
RAM:2648		 .block	1
RAM:2649		 .block	1
RAM:264A		 .block	1
RAM:264B		 .block	1
RAM:264C		 .block	1
RAM:264D		 .block	1
RAM:264E IY_CH5_stru_264E:.block 1		 ; DATA	XREF: HANDLER07_SIO_sub_0A58+4o
RAM:264F		 .block	1
RAM:2650		 .block	1
RAM:2651		 .block	1
RAM:2652		 .block	1
RAM:2653		 .block	1
RAM:2654		 .block	1
RAM:2655		 .block	1
RAM:2656 unk_0_2656:	 .block	1		 ; DATA	XREF: ROM:0149o
RAM:2657		 .block	1
RAM:2658		 .block	1
RAM:2659		 .block	1
RAM:265A		 .block	1
RAM:265B		 .block	1
RAM:265C		 .block	1
RAM:265D		 .block	1
RAM:265E		 .block	1
RAM:265F		 .block	1
RAM:2660		 .block	1
RAM:2661		 .block	1
RAM:2662		 .block	1
RAM:2663		 .block	1
RAM:2664		 .block	1
RAM:2665		 .block	1
RAM:2666		 .block	1
RAM:2667		 .block	1
RAM:2668		 .block	1
RAM:2669		 .block	1
RAM:266A		 .block	1
RAM:266B		 .block	1
RAM:266C		 .block	1
RAM:266D		 .block	1
RAM:266E		 .block	1
RAM:266F		 .block	1
RAM:2670		 .block	1
RAM:2671		 .block	1
RAM:2672		 .block	1
RAM:2673		 .block	1
RAM:2674		 .block	1
RAM:2675		 .block	1
RAM:2676		 .block	1
RAM:2677		 .block	1
RAM:2678		 .block	1
RAM:2679		 .block	1
RAM:267A		 .block	1
RAM:267B		 .block	1
RAM:267C*FDC_COMMAND_BITS_ALSO:.block 1		 ; DATA	XREF: MONITOR_PROMPT+3w
RAM:267C*					 ; MONITOR_PROMPT+19r
RAM:267C*					 ; MONITOR_PROMPT+21w
RAM:267C*					 ; MONITOR_PROMPT+3Fr
RAM:267C*					 ; MONITOR_PROMPT+44w ...
RAM:267D*FDC_DRIVE_OR_WHAT:.block 1		 ; DATA	XREF: FDC_SET_DRIVE_SELECT+2w
RAM:267D*					 ; FDC_sub_04AA_FALLTHRUr
RAM:267E unk_0_267E:	 .block	1		 ; DATA	XREF: MONITOR_PROMPTo
RAM:267E					 ; MONITOR_sub_135Fo
RAM:267E					 ; FDC_COMMON_HANDLER+7Eo
RAM:267E					 ; FDC_SEEK_AND_LOAD_HEAD+3o
RAM:267F		 .block	1
RAM:2680*FDC_HANDLER_ADDRESS:.block 2		 ; DATA	XREF: FDC_PICK_HANDLER_FROM_VECTOR+22w
RAM:2680*					 ; FDC_HANDLER_ERROR_TAIL+12r
RAM:2680*					 ; Handler address
RAM:2682*FDC_SUBCOMMAND: .block	1		 ; DATA	XREF: FDC_PICK_HANDLER_FROM_VECTOR+Bw
RAM:2682*					 ; FDC_HANDLER_ERROR_TAIL+4r
RAM:2683*FDC_ZERO:	 .block	1		 ; DATA	XREF: FDC_PICK_HANDLER_FROM_VECTOR+Fw
RAM:2683*					 ; FDC_HANDLER_ERROR_TAIL+1o
RAM:2684 FDC_SOME_BUS_BUF3:.block 3		 ; DATA	XREF: FDC_sub_1978+24o
RAM:2684					 ; FDC_sub_1978+2Do
RAM:2687*FDC_byte_2687:	 .block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+6w
RAM:2687*					 ; HANDLER08_FDC_sub_1547+11Cw
RAM:2687*					 ; FDC_COMMON_HANDLER+6Eo
RAM:2687*					 ; FDC_SECTOR_IO_ERROR+5o
RAM:2687*					 ; Written on error
RAM:2688*FDC_COMMAND_BITS:.block 1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+Dw
RAM:2688*					 ; FDC_COMMON_HANDLER+41r
RAM:2688*					 ; FDC_COMMON_HANDLER+47w
RAM:2688*					 ; FDC_RUN_CMD_WITH_BITS+1o
RAM:2688*					 ; Some	bits to	OR with	command. (Seen 0x2 = r1)
RAM:2689*FDC_07D0_word_2689:.block 2		 ; DATA	XREF: HANDLER08_FDC_sub_1547+13w
RAM:2689*					 ; HANDLER08_FDC_sub_1547+40r
RAM:268B*FDC_byte_268B:	 .block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+1Bw
RAM:268B*					 ; HANDLER08_FDC_sub_1547+53w
RAM:268B*					 ; FDC_COMMON_HANDLER+9o
RAM:268C FDC_SUB_COMMAND_BUFFER:.block 1	 ; DATA	XREF: FDC_PICK_HANDLER_FROM_VECTORr
RAM:268C					 ; FDC_sub_1978+36o
RAM:268D*byte_0_268D:	 .block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+136w
RAM:268E byte_0_268E:	 .block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+68r
RAM:268E					 ; FDC_COMMON_HANDLERr
RAM:268E					 ; FDC_COMMON_HANDLER+Cr
RAM:268E					 ; FDC_COMMON_HANDLER+6Ar
RAM:268E					 ; FDC_COMMON_HANDLER+7Br ...
RAM:268F byte_0_268F:	 .block	1		 ; DATA	XREF: FDC_SEEK_AND_LOAD_HEAD+Fr
RAM:2690 byte_0_2690:	 .block	1		 ; DATA	XREF: FDC_COMMON_HANDLER+3Ar
RAM:2690					 ; FDC_COMMON_HANDLER+4Ar
RAM:2690					 ; FDC_READ_SECTOR_DMA_sub_183D+11r
RAM:2690					 ; FDC_WRITE_SECTOR_DMA_sub_1864+11r
RAM:2691 byte_0_2691:	 .block	1		 ; DATA	XREF: FDC_READ_SECTOR_DMA_sub_183D+17r
RAM:2691					 ; FDC_WRITE_SECTOR_DMA_sub_1864+17r
RAM:2692 word_0_2692:	 .block	2		 ; DATA	XREF: FDC_READ_LEN_AND_STH_FROM_BUF_sub_189Bo
RAM:2692					 ; orphan_sub_18F2o
RAM:2692					 ; FDC_DMA_READ_TRACK+9r
RAM:2692					 ; FDC_DMA_WRITE_TRACK+9r
RAM:2694 byte_0_2694:	 .block	1		 ; DATA	XREF: FDC_DMA_READ_TRACK+Cr
RAM:2694					 ; FDC_DMA_WRITE_TRACK+Cr
RAM:2695		 .block	1
RAM:2696*ADDRESS_LATCH_SET_VALUE:.block	1	 ; DATA	XREF: SET_BUS_ADDRESS_LATCH+Cw
RAM:2697 LAST_CMD_COUNTER:.block 1		 ; DATA	XREF: HANDLER00_sub_1A3D+Bo
RAM:2698 byte_0_2698:	 .block	1		 ; DATA	XREF: STH_INT_RELATED_PERHAPSo
RAM:2698					 ; DO_INT_HANDLER+Er
RAM:2699 unk_0_2699:	 .block	1		 ; DATA	XREF: STH_INT_RELATED_PERHAPS+Do
RAM:2699					 ; DO_INT_HANDLER+Bo
RAM:269A		 .block	1
RAM:269B		 .block	1
RAM:269C		 .block	1
RAM:269D		 .block	1
RAM:269E		 .block	1
RAM:269F		 .block	1
RAM:26A0		 .block	1
RAM:26A1		 .block	1
RAM:26A2		 .block	1
RAM:26A3		 .block	1
RAM:26A4		 .block	1
RAM:26A5		 .block	1
RAM:26A6		 .block	1
RAM:26A7		 .block	1
RAM:26A8		 .block	1
RAM:26A9		 .block	1
RAM:26AA		 .block	1
RAM:26AB		 .block	1
RAM:26AC		 .block	1
RAM:26AD		 .block	1
RAM:26AE		 .block	1
RAM:26AF		 .block	1
RAM:26B0		 .block	1
RAM:26B1		 .block	1
RAM:26B2		 .block	1
RAM:26B3		 .block	1
RAM:26B4		 .block	1
RAM:26B5		 .block	1
RAM:26B6		 .block	1
RAM:26B7		 .block	1
RAM:26B8		 .block	1
RAM:26B9		 .block	1
RAM:26BA		 .block	1
RAM:26BB		 .block	1
RAM:26BC		 .block	1
RAM:26BD		 .block	1
RAM:26BE		 .block	1
RAM:26BF		 .block	1
RAM:26C0		 .block	1
RAM:26C1		 .block	1
RAM:26C2		 .block	1
RAM:26C3		 .block	1
RAM:26C4		 .block	1
RAM:26C5		 .block	1
RAM:26C6		 .block	1
RAM:26C7		 .block	1
RAM:26C8		 .block	1
RAM:26C9		 .block	1
RAM:26CA		 .block	1
RAM:26CB		 .block	1
RAM:26CC		 .block	1
RAM:26CD		 .block	1
RAM:26CE		 .block	1
RAM:26CF*word_0_26CF:	 .block	2		 ; DATA	XREF: MONITOR_sub_135F+9w
RAM:26CF*					 ; MONITOR_sub_135F+37r
RAM:26CF*					 ; MONITOR_sub_135F+4Br
RAM:26CF*					 ; MONITOR_sub_135F+4Fw
RAM:26CF*					 ; MONITOR_sub_1408+3w
RAM:26D1*word_0_26D1:	 .block	2		 ; DATA	XREF: MONITOR_sub_135F+Dw
RAM:26D1*					 ; MONITOR_sub_13EC+10w
RAM:26D1*					 ; MONITOR_PRINT_STH+1Br
RAM:26D1*					 ; MONITOR_sub_14A1r
RAM:26D1*					 ; MONITOR_PRINT_STH+15r
RAM:26D3*word_0_26D3:	 .block	2		 ; DATA	XREF: MONITOR_sub_135F+10w
RAM:26D3*					 ; MONITOR_sub_135F+55r
RAM:26D3*					 ; MONITOR_sub_135F+59w
RAM:26D3*					 ; MONITOR_sub_135F+78r
RAM:26D3*					 ; MONITOR_sub_135F+84r ...
RAM:26D5*_00_FROM_BEGINNING_0:.block 1		 ; DATA	XREF: DO_NMI_HANDLER+29w
RAM:26D5*					 ; DO_NMI_HANDLER+5Eo
RAM:26D5*					 ; NEXT_BUS_BYTE+8r
RAM:26D5*					 ; SET_BUS_ADDRESS_LATCH+1Ar
RAM:26D5*					 ; MONITOR_sub_135F+71r ...
RAM:26D6*byte_0_26D6:	 .block	1		 ; DATA	XREF: DO_NMI_HANDLER+64o
RAM:26D6*					 ; MONITOR_sub_12A7r
RAM:26D6*					 ; MONITOR_sub_12A7+7w
RAM:26D6*					 ; MONITOR_sub_12A7+19r
RAM:26D6*					 ; MONITOR_sub_1310r ...
RAM:26D7*BUS_ADDR:	 .block	2		 ; DATA	XREF: HOST_MEM_WINDOWo
RAM:26D7*					 ; NEXT_BUS_BYTEo
RAM:26D7*					 ; MONITOR_ENTRY+1Aw
RAM:26D7*					 ; MONITOR_PUTCHAR+1Eo
RAM:26D9*byte_0_26D9:	 .block	1		 ; DATA	XREF: MONITOR_ENTRY+1Dw
RAM:26DA*MONITOR_unk_26DA:.block 2		 ; DATA	XREF: MONITOR_ENTRY+23w
RAM:26DA*					 ; DO_NMI_HANDLER+22w
RAM:26DA*					 ; sub_0_2C9o
RAM:26DC byte_0_26DC:	 .block	1		 ; DATA	XREF: sub_0_292+6o
RAM:26DC					 ; sub_0_2E9+Fo
RAM:26DC					 ; orphan_sub_1518+6r
RAM:26DC					 ; ROM:1CB7o
RAM:26DD unk_0_26DD:	 .block	1		 ; DATA	XREF: orphan_sub_1518+1Fo
RAM:26DE*word_0_26DE:	 .block	2		 ; DATA	XREF: orphan_sub_1518+1w
RAM:26DE*					 ; ROM:1CBBo
RAM:26E0*word_0_26E0:	 .block	2		 ; DATA	XREF: orphan_sub_1518+Dw
RAM:26E2*word_0_26E2:	 .block	2		 ; DATA	XREF: orphan_sub_1518+1Aw
RAM:26E2*					 ; ROM:1CC1o
RAM:26E4*word_0_26E4:	 .block	2		 ; DATA	XREF: orphan_sub_1518+15w
RAM:26E4*					 ; ROM:1CC3o
RAM:26E6*word_0_26E6:	 .block	2		 ; DATA	XREF: orphan_sub_1518+11w
RAM:26E8 unk_0_26E8:	 .block	1		 ; DATA	XREF: ROM:1CBDo
RAM:26E9		 .block	1
RAM:26EA		 .block	1
RAM:26EB unk_0_26EB:	 .block	1		 ; DATA	XREF: ROM:1CC5o
RAM:26EC		 .block	1
RAM:26ED		 .block	1
RAM:26EE unk_0_26EE:	 .block	1		 ; DATA	XREF: ROM:1CBFo
RAM:26EF		 .block	1
RAM:26F0		 .block	1
RAM:26F1 unk_0_26F1:	 .block	1		 ; DATA	XREF: ROM:1CC7o
RAM:26F2		 .block	1
RAM:26F3		 .block	1
RAM:26F4 unk_0_26F4:	 .block	1		 ; DATA	XREF: ROM:1CC9o
RAM:26F5		 .block	1
RAM:26F6		 .block	1
RAM:26F7 unk_0_26F7:	 .block	1		 ; DATA	XREF: ROM:1CB9o
RAM:26F8		 .block	1
RAM:26F9		 .block	1
RAM:26FA*SAVED_TASK_XXX: .block	2		 ; DATA	XREF: ZERO_SAVED_TASK_sub_028Cr
RAM:26FA*					 ; CHECK_STUFF+10r
RAM:26FA*					 ; TAIL_sub_02B4+3w
RAM:26FC*SAVE_DE_ADDR:	 .block	2		 ; DATA	XREF: DO_NMI_HANDLER+75w
RAM:26FC*					 ; sub_0_2E9r sub_0_2E9+20w
RAM:26FE*HOST_MEM_byte_26FE:.block 1		 ; DATA	XREF: DO_CHECK_STUFFo
RAM:26FE*					 ; sub_0_458+11w
RAM:26FE*					 ; HANDLER01_SYS_COMMAND+46w
RAM:26FF ARR12:		 .block	1		 ; DATA	XREF: DO_NMI_HANDLER+2Co
RAM:26FF					 ; HANDLER_SIO_L0_COMMON+5Bo
RAM:2700 unk_0_2700:	 .block	1		 ; DATA	XREF: sub_0_46Fo
RAM:2701 unk_0_2701:	 .block	1		 ; DATA	XREF: SIO_L1H_sub_065F+15o
RAM:2702		 .block	1
RAM:2703 unk_0_2703:	 .block	1		 ; DATA	XREF: SIO_L1H_sub_065F+20o
RAM:2704		 .block	1
RAM:2705		 .block	1
RAM:2706		 .block	1
RAM:2707 unk_0_2707:	 .block	1		 ; DATA	XREF: HANDLER08_FDC_sub_1547+C1o
RAM:2708		 .block	1
RAM:2709		 .block	1
RAM:270A unk_0_270A:	 .block	1		 ; DATA	XREF: BUS_READ8+7o
RAM:270A					 ; BUS_WRITE8+7o
RAM:270A					 ; READ_BUS_MEMORY+Do
RAM:270A					 ; WRITE_BUS_MEMORY+Do
RAM:270A					 ; FDC_CHECK_sub_0478+6o ...
RAM:270B*word_0_270B:	 .block	2		 ; DATA	XREF: OPEN_BUS_WINDOW+1r
RAM:270B*					 ; OPEN_BUS_WINDOW+Ew
RAM:270B*					 ; OPEN_BUS_WINDOW+8w
RAM:270D*SAVED_BUS_MID_LO:.block 1		 ; DATA	XREF: CLOSE_BUS_WINDOW+3r
RAM:270D*					 ; OPEN_BUS_WINDOW+4w
RAM:270E SAVED_BUS_HI:	 .block	1		 ; DATA	XREF: CLOSE_BUS_WINDOWr
RAM:270F CH0_BUF:	 .block	40		 ; DATA	XREF: ROM:0149o
RAM:2737 CH1_BUF:	 .block	40		 ; DATA	XREF: ROM:0149o
RAM:275F CH2_BUF:	 .block	40		 ; DATA	XREF: ROM:0149o
RAM:2787 CH3_BUF:	 .block	40		 ; DATA	XREF: ROM:0149o
RAM:27AF CH4_BUF:	 .block	40		 ; DATA	XREF: ROM:0149o
RAM:27D7 CH5_BUF:	 .block	40		 ; DATA	XREF: ROM:0149o
RAM:27FF STACK_TOP:	 .block	1		 ; DATA	XREF: START+9o
RAM:27FF					 ; DO_NMI_HANDLER+17o
RAM:27FF ; end of 'RAM'
RAM:27FF 
RAM:27FF 
RAM:27FF		 .end
