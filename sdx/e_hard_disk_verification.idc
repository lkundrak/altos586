//
// ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
// บ     This file is generated by The Interactive Disassembler (IDA)        บ
// บ     Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>           บ
// บ                      Licensed to: Freeware version                      บ
// ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        GenInfo();              // various settings
        Segments();             // segmentation
        Enums();                // enumerations
        Structures();           // structure types
        Bytes();                // individual bytes (code,data)
        Functions();            // function definitions
        SegRegs();              // segment register values
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("metapc");
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0X100);
	;
	SegCreate(0X1000,0X7D80,0X1,0,1,2);
	SegRename(0X1000,"CODE");
	SegClass (0X1000,"CODE");
	SegDefReg(0x1000,"es",0x0);
	SegDefReg(0x1000,"ss",0x0);
	SegDefReg(0x1000,"ds",0x7D8);
	SegDefReg(0x1000,"fs",0x0);
	SegDefReg(0x1000,"gs",0x0);
	SetSegmentType(0X1000,2);
	SegCreate(0X7D80,0X17D80,0X7D8,0,1,2);
	SegRename(0X7D80,"DATA");
	SegClass (0X7D80,"DATA");
	SegDefReg(0x7D80,"ds",0x7D8);
	SetSegmentType(0X7D80,3);
	LowVoids(0x0);
	HighVoids(0xB200);
}

static Enums_0(id) {

	id = AddEnum(-1,"IO_PORT",0x1100000);
	AddConstEx(id,"UNKNOWN",	0X40,	-1);
	AddConstEx(id,"Z80_CHAN_ATTN",	0X50,	-1);
	SetConstCmt(GetConstEx(id,0X50,0,-1),"Z80A I/O Processor Chan att. ",1);
	AddConstEx(id,"CONTROL_BITS",	0X58,	-1);
	SetConstCmt(GetConstEx(id,0X58,0,-1),"Control Bits Port - Write Only. ",1);
	AddConstEx(id,"MMU_ERROR",	0X60,	-1);
	SetConstCmt(GetConstEx(id,0X60,0,-1),"MMU - Error Address 2 - Read Only. ",1);
	AddConstEx(id,"MMU_MEMV_CLEAR",	0X70,	-1);
	SetConstCmt(GetConstEx(id,0X70,0,-1),"MMU - Clear Violation Port",1);
	AddConstEx(id,"MMU_MEMV",	0X78,	-1);
	SetConstCmt(GetConstEx(id,0X78,0,-1),"MMU - Violation Port - Read Only. ",1);
	AddConstEx(id,"PIC_2",	0X80,	-1);
	SetConstCmt(GetConstEx(id,0X80,0,-1),"PIC - ICW2, ICW3, ICW4, or OCW1",1);
	AddConstEx(id,"PIC_1",	0X82,	-1);
	SetConstCmt(GetConstEx(id,0X82,0,-1),"PIC - ICW1, OCW2, or OCW3",1);
	AddConstEx(id,"PIT_CTRL",	0X101,	-1);
	SetConstCmt(GetConstEx(id,0X101,0,-1),"PIT - Control Word Register - Write Only",1);
	AddConstEx(id,"PIT_CNT_2",	0X103,	-1);
	SetConstCmt(GetConstEx(id,0X103,0,-1),"PIT - Counter 2",1);
	AddConstEx(id,"PIT_CNT_1",	0X105,	-1);
	SetConstCmt(GetConstEx(id,0X105,0,-1),"PIT - Counter 1",1);
	AddConstEx(id,"PIT_CNT_0",	0X107,	-1);
	SetConstCmt(GetConstEx(id,0X107,0,-1),"PIT - Counter 0",1);
	AddConstEx(id,"MMU_BASE",	0X200,	-1);
	AddConstEx(id,"IO_HDD",	0X7000,	-1);
	SetConstCmt(GetConstEx(id,0X7000,0,-1),"Requests hard disk or memory-to-memory operation",1);
	AddConstEx(id,"IO_FDD",	0X7008,	-1);
	SetConstCmt(GetConstEx(id,0X7008,0,-1),"Requests floppy disk operation",1);
	AddConstEx(id,"IO_TAPE",	0X7010,	-1);
	SetConstCmt(GetConstEx(id,0X7010,0,-1),"Requests tape operation",1);
	AddConstEx(id,"BUS_RSVD_0",	0XFF00,	-1);
	SetConstCmt(GetConstEx(id,0XFF00,0,-1),"Reserved for system bus I/O. ",1);
	AddConstEx(id,"BUS_RSVD_1",	0XFF80,	-1);
	SetConstCmt(GetConstEx(id,0XFF80,0,-1),"Reserved for system bus I/O. ",1);
	id = AddEnum(-1,"FDC_COMMANDS",0x1100000);
	AddConstEx(id,"FDC_BUSY",	0X80,	-1);
	AddConstEx(id,"FDC_FLOPPY_PARAMS",	0X87,	-1);
	AddConstEx(id,"FDC_RUN_IO",	0X88,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
	id = Enums_0(id);
}

static Structures_0(id) {

	id = AddStrucEx(-1,"COMMAND_BLOCK",0);
	id = AddStrucEx(-1,"VRFY_RESULT",0);
	
	id = GetStrucIdByName("COMMAND_BLOCK");
	AddStrucMember(id,"CB_OP",	0X0,	0x085400,	-1,	1);
	AddStrucMember(id,"CB_STAT",	0X1,	0x085400,	-1,	1);
	AddStrucMember(id,"CB_CYL",	0X2,	0x10085400,	-1,	2);
	AddStrucMember(id,"CB_DRV_HD",	0X4,	0x085400,	-1,	1);
	SetMemberComment(id,	0X4,	"Drive << 4 | Head",	1);
	AddStrucMember(id,"CB_SEC",	0X5,	0x085400,	-1,	1);
	AddStrucMember(id,"CB_LEN",	0X6,	0x10085400,	-1,	2);
	AddStrucMember(id,"CB_BUF_ADDR_OFF",	0X8,	0x10685400,	-1,	2);
	AddStrucMember(id,"CB_BUF_ADDR_SEG",	0XA,	0x10085400,	-1,	2);
	AddStrucMember(id,"CB_REG28H",	0XC,	0x000400,	-1,	1);
	SetMemberComment(id,	0XC,	"What is this???",	1);
	AddStrucMember(id,"CB_NUM_SECS",	0XD,	0x085400,	-1,	1);
	AddStrucMember(id,"CB_RETRIES",	0XE,	0x085400,	-1,	1);
	SetMemberComment(id,	0XE,	"Always zero?",	1);
	AddStrucMember(id,"field_F",	0XF,	0x000400,	-1,	1);
	SetMemberComment(id,	0XF,	"Reserved",	1);
	AddStrucMember(id,"UNK_x",	0X10,	0x085400,	-1,	1);
	SetMemberComment(id,	0X10,	"5d sometimes",	1);
	AddStrucMember(id,"field_11",	0X11,	0x000400,	-1,	1);
	
	id = GetStrucIdByName("VRFY_RESULT");
	AddStrucMember(id,"VRFY_CYLINDER_LO",	0X0,	0x085500,	-1,	1);
	AddStrucMember(id,"VRFY_CYLINDER_HI_HEAD",	0X1,	0x085500,	-1,	1);
	AddStrucMember(id,"VRFY_SECTOR_NUM",	0X2,	0x085500,	-1,	1);
	AddStrucMember(id,"field_3",	0X3,	0x000400,	-1,	1);
	AddStrucMember(id,"field_4",	0X4,	0x000400,	-1,	1);
	AddStrucMember(id,"field_5",	0X5,	0x000400,	-1,	1);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X1000,	0,	"; File Name   : Z:\\home\\lkundrak\\altos\\sdx\\e_hard_disk_verification.bin");
	ExtLinA		(0X1000,	1,	"; Format      : Binary file");
	ExtLinA		(0X1000,	2,	"; Base Address: 8000h Range: 80000h - 8B200h Loaded length: B200h");
	MakeCode	(0X1000);
	MakeName	(0X1000,	"MAIN");
	MakeCode	(x=0X1026);
	OpOff		(x,	1,	0X1000);
	OpOff		(x,	129,	0X1000);
	MakeCode	(0X103F);
	MakeCode	(0X1066);
	MakeName	(0X1066,	"NOT_REACHED");
	MakeName	(0X1078,	"MAIN_1_SET_SEGS");
	MakeCode	(x=0X10BD);
	OpHex		(x,	1);
	MakeCode	(x=0X10C3);
	OpOff		(x,	1,	0X1000);
	OpOff		(x,	129,	0X1000);
	MakeCode	(x=0X10CA);
	OpHex		(x,	1);
	MakeCode	(x=0X10E1);
	OpHex		(x,	1);
	MakeRptCmt	(0X10E7,	"wtf is this");
	MakeCode	(x=0X10E7);
	OpOff		(x,	1,	0X1000);
	OpOff		(x,	129,	0X1000);
	MakeCode	(0X10F2);
	MakeName	(0X10F2,	"PROCEED");
	MakeCode	(0X1123);
	MakeName	(0X1123,	"SETUPSTACK");
	MakeCode	(0X1134);
	MakeCode	(0X1148);
	MakeCode	(0X114C);
	MakeCode	(x=0X1153);
	OpOff		(x,	1,	0X1000);
	OpOff		(x,	129,	0X1000);
	MakeCode	(0X1172);
	MakeName	(0X1172,	"USELESS");
	MakeCode	(0X117E);
	MakeCode	(0X1182);
	MakeName	(0X1182,	"DISPLAY_BUFFER");
	MakeCode	(x=0X1193);
	OpHex		(x,	1);
	MakeCode	(x=0X119F);
	OpHex		(x,	1);
	MakeCode	(x=0X11AB);
	OpHex		(x,	1);
	MakeCode	(x=0X11AE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X11B5);
	OpHex		(x,	1);
	MakeCode	(x=0X11BF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X11C7);
	OpHex		(x,	1);
	MakeCode	(x=0X11D0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X11D8);
	OpHex		(x,	1);
	MakeCode	(x=0X11E4);
	OpHex		(x,	1);
	MakeCode	(x=0X11E7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X11EE);
	OpHex		(x,	1);
	MakeCode	(0X11F8);
	MakeName	(0X11F8,	"BAD_SEC_sub_11F8");
	MakeCode	(x=0X11FD);
	OpHex		(x,	1);
	MakeCode	(x=0X1200);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1207);
	OpHex		(x,	1);
	MakeCode	(x=0X120A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1215);
	OpHex		(x,	1);
	MakeCode	(x=0X1223);
	OpHex		(x,	1);
	MakeCode	(x=0X1229);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1230);
	OpHex		(x,	1);
	MakeCode	(x=0X1233);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1237);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X123B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X124A);
	OpHex		(x,	1);
	MakeCode	(0X1253);
	MakeCode	(x=0X1256);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1262);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1269);
	OpHex		(x,	1);
	MakeCode	(x=0X1274);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X127B);
	OpHex		(x,	1);
	MakeCode	(x=0X1282);
	OpStkvar	(x,	1);
	MakeCode	(x=0X128D);
	OpHex		(x,	1);
	MakeCode	(x=0X1294);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X129B);
	OpHex		(x,	1);
	MakeCode	(0X12A6);
	MakeCode	(x=0X12B5);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X12BC);
	OpHex		(x,	1);
	MakeCode	(x=0X12C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X12D8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X12DF);
	OpHex		(x,	1);
	MakeCode	(x=0X12E9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X12ED);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X12F4);
	OpHex		(x,	1);
	MakeCode	(x=0X12F7);
	OpDecimal	(x,	1);
	MakeCode	(x=0X12FB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X12FF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1306);
	OpHex		(x,	1);
	MakeCode	(x=0X130D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1314);
	OpHex		(x,	1);
	MakeCode	(0X131F);
	MakeComm	(0X1323,	"switch 2 cases ");
	MakeCode	(x=0X132B);
	OpHex		(x,	1);
	MakeComm	(0X132D,	"switch jump");
	MakeCode	(x=0X132D);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(x=0X1332);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1335);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1338);
	OpStkvar	(x,	0);
	MakeCode	(x=0X133D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1342);
	OpStkvar	(x,	0);
	MakeCode	(x=0X134B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1357);
	OpStkvar	(x,	1);
	MakeCode	(x=0X135F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X136B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1373);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1382);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1392);
	OpStkvar	(x,	1);
	MakeCode	(x=0X13A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X13B6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X13BD);
	OpHex		(x,	1);
	MakeCode	(x=0X13C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X13C6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X13CD);
	OpHex		(x,	1);
	MakeCode	(x=0X13D0);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X13D9,	"case 0x0");
	MakeCode	(0X13D9);
	MakeCode	(x=0X13E3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X13E7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X13EE);
	OpHex		(x,	1);
	MakeCode	(x=0X13F5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X13F9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1400);
	OpHex		(x,	1);
	MakeCode	(x=0X140A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1411);
	OpHex		(x,	1);
	MakeCode	(x=0X141A);
	OpHex		(x,	1);
	MakeCode	(0X141F);
	MakeCode	(x=0X1427);
	OpStkvar	(x,	0);
	MakeCode	(x=0X142E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1434);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1448);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X144F);
	OpHex		(x,	1);
	MakeRptCmt	(0X1452,	"case 0x1");
	MakeCode	(x=0X1459);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X145D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1464);
	OpHex		(x,	1);
	MakeCode	(x=0X146B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X146F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1476);
	OpHex		(x,	1);
	MakeCode	(x=0X147D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1484);
	OpHex		(x,	1);
	MakeCode	(0X148F);
	MakeComm	(0X1499,	"jump table for switch statement");
	MakeWord	(x=0X1499);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X149B);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X149D,	"default");
	MakeCode	(0X149D);
	MakeCode	(x=0X14A0);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X14AA);
	MakeName	(0X14AA,	"CHECK_SECTOR");
	MakeCode	(x=0X14AF);
	OpHex		(x,	1);
	MakeCode	(0X14BB);
	MakeCode	(x=0X14BF);
	OpHex		(x,	1);
	MakeCode	(x=0X14C1);
	OpHex		(x,	1);
	MakeCode	(x=0X14CC);
	OpHex		(x,	1);
	MakeCode	(x=0X14CE);
	OpHex		(x,	1);
	MakeCode	(x=0X14F0);
	OpHex		(x,	1);
	MakeCode	(x=0X14F2);
	OpHex		(x,	1);
	MakeCode	(0X150E);
	MakeCode	(x=0X1512);
	OpHex		(x,	1);
	MakeCode	(x=0X1514);
	OpHex		(x,	1);
	MakeCode	(x=0X152A);
	OpHex		(x,	1);
	MakeCode	(x=0X1536);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X153D);
	OpHex		(x,	1);
	MakeCode	(x=0X1544);
	OpHex		(x,	1);
	MakeCode	(x=0X1546);
	OpHex		(x,	1);
	MakeCode	(0X1561);
	MakeCode	(x=0X1569);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X156D);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1584);
	OpHex		(x,	1);
	MakeCode	(x=0X158A);
	OpHex		(x,	1);
	MakeCode	(x=0X158F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1596);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1599);
	OpHex		(x,	1);
	MakeCode	(x=0X159B);
	OpHex		(x,	1);
	MakeCode	(x=0X159D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X15A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15AB);
	OpHex		(x,	1);
	MakeCode	(x=0X15AD);
	OpHex		(x,	1);
	MakeCode	(x=0X15AF);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	OpHex		(x,	1);
	MakeCode	(x=0X15B4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X15BB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X15CE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X15E1);
	OpHex		(x,	1);
	MakeCode	(x=0X15EA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X15F1);
	OpStkvar	(x,	1);
	MakeComm	(0X15F4,	"FILLER");
	MakeCode	(x=0X15F4);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X15F9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X15FC);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X160B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X160F);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1626);
	OpHex		(x,	1);
	MakeCode	(x=0X162C);
	OpHex		(x,	1);
	MakeCode	(0X1654);
	MakeName	(0X1654,	"FORMAT_DISK");
	MakeCode	(x=0X1659);
	OpHex		(x,	1);
	MakeCode	(x=0X165C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1663);
	OpHex		(x,	1);
	MakeCode	(x=0X166A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X166E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1675);
	OpHex		(x,	1);
	MakeCode	(x=0X1678);
	OpStkvar	(x,	0);
	MakeCode	(x=0X167D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1682);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1685);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X168A);
	OpHex		(x,	1);
	MakeCode	(x=0X168F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1692);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X169B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X169E);
	OpStkvar	(x,	0);
	MakeComm	(0X16A1,	"strlen(\"sotla\")");
	MakeCode	(x=0X16A1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X16A7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X16B0);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X16B7);
	OpHex		(x,	1);
	MakeCode	(x=0X16BA);
	OpDecimal	(x,	1);
	MakeCode	(x=0X16C5);
	OpHex		(x,	1);
	MakeCode	(0X16CF);
	MakeCode	(x=0X16D6);
	OpHex		(x,	1);
	MakeCode	(x=0X16D9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X16E0);
	OpHex		(x,	1);
	MakeCode	(x=0X16EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X16F3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X16FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1702);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1705);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X170A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X170D);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1714);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X1717,	"SECTORS");
	MakeCode	(x=0X1717);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(0X1725);
	MakeCode	(x=0X1729);
	OpHex		(x,	1);
	MakeCode	(x=0X172B);
	OpHex		(x,	1);
	MakeCode	(x=0X172D);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(0X1749);
	MakeCode	(x=0X174D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1754);
	OpHex		(x,	1);
	MakeCode	(0X175F);
	MakeCode	(x=0X1763);
	OpHex		(x,	1);
	MakeCode	(x=0X1765);
	OpHex		(x,	1);
	MakeCode	(x=0X176B);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(0X1786);
	MakeCode	(x=0X178C);
	OpHex		(x,	1);
	MakeCode	(x=0X178F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X179C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X179F);
	OpHex		(x,	1);
	MakeCode	(x=0X17A1);
	OpHex		(x,	1);
	MakeCode	(x=0X17B7);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X17BB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17BE);
	OpHex		(x,	1);
	MakeCode	(x=0X17C0);
	OpHex		(x,	1);
	MakeCode	(x=0X17C6);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X17CA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X17CD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X17E7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X17FA);
	OpHex		(x,	1);
	MakeCode	(x=0X1803);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1823);
	OpHex		(x,	1);
	MakeCode	(0X183E);
	MakeCode	(x=0X184F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1856);
	OpHex		(x,	1);
	MakeCode	(0X185C);
	MakeName	(0X185C,	"VERIFY_SECTORS");
	MakeCode	(x=0X1861);
	OpHex		(x,	1);
	MakeCode	(x=0X186B);
	OpHex		(x,	1);
	MakeCode	(x=0X186E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1875);
	OpHex		(x,	1);
	MakeCode	(x=0X1881);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X189B);
	OpHex		(x,	1);
	MakeCode	(x=0X18A7);
	OpHex		(x,	1);
	MakeCode	(x=0X18AE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X18B5);
	OpHex		(x,	1);
	MakeCode	(0X18C0);
	MakeCode	(0X18C8);
	MakeCode	(x=0X18CB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X18CF,	"Length");
	MakeCode	(x=0X18E6);
	OpHex		(x,	1);
	MakeCode	(x=0X18EC);
	OpHex		(x,	1);
	MakeCode	(0X18F6);
	MakeCode	(x=0X18FE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1905);
	OpHex		(x,	1);
	MakeCode	(x=0X1914);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X191B);
	OpHex		(x,	1);
	MakeCode	(0X1920);
	MakeCode	(0X1942);
	MakeCode	(x=0X1953);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X195A);
	OpHex		(x,	1);
	MakeCode	(0X1960);
	MakeName	(0X1960,	"CK_ADDRESS_sub_1960");
	MakeCode	(x=0X196F);
	OpHex		(x,	1);
	MakeCode	(x=0X1984);
	OpHex		(x,	1);
	MakeCode	(x=0X1990);
	OpHex		(x,	1);
	MakeCode	(x=0X19B4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X19BB);
	OpHex		(x,	1);
	MakeCode	(x=0X19CA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X19D1);
	OpHex		(x,	1);
	MakeCode	(0X19D8);
	MakeCode	(x=0X19DD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X19E4);
	OpHex		(x,	1);
	MakeCode	(0X19EE);
	MakeName	(0X19EE,	"RESET_VRFY_RESULT_BUF");
	MakeCode	(x=0X19F3);
	OpHex		(x,	1);
	MakeCode	(0X1A08);
	MakeName	(0X1A08,	"VRFY_ONE_sub_1A08");
	MakeCode	(x=0X1A0D);
	OpHex		(x,	1);
	MakeRptCmt	(0X1A24,	"Buffer");
	MakeCode	(x=0X1A24);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X1A28,	"Length");
	MakeCode	(x=0X1A3F);
	OpHex		(x,	1);
	MakeCode	(x=0X1A42);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1A52);
	OpHex		(x,	1);
	MakeCode	(x=0X1A67);
	OpHex		(x,	1);
	MakeCode	(x=0X1A75);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1A7C);
	OpHex		(x,	1);
	MakeCode	(0X1A82);
	MakeName	(0X1A82,	"SEEK_TEST");
	MakeCode	(x=0X1A87);
	OpHex		(x,	1);
	MakeCode	(x=0X1A9A);
	OpHex		(x,	1);
	MakeCode	(x=0X1A9D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1AA4);
	OpHex		(x,	1);
	MakeCode	(0X1AAA);
	MakeCode	(x=0X1AB8);
	OpHex		(x,	1);
	MakeCode	(x=0X1ABB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1ACF);
	OpHex		(x,	1);
	MakeCode	(x=0X1AD9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1AE0);
	OpHex		(x,	1);
	MakeCode	(x=0X1AF7);
	OpHex		(x,	1);
	MakeCode	(x=0X1AFA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B0E);
	OpHex		(x,	1);
	MakeCode	(x=0X1B18);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B1F);
	OpHex		(x,	1);
	MakeCode	(0X1B2E);
	MakeName	(0X1B2E,	"READ_SEEK_TEST");
	MakeCode	(x=0X1B33);
	OpHex		(x,	1);
	MakeCode	(0X1B38);
	MakeCode	(x=0X1B3C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B40);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B47);
	OpHex		(x,	1);
	MakeCode	(x=0X1B4E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B52);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B59);
	OpHex		(x,	1);
	MakeCode	(x=0X1B60);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B67);
	OpHex		(x,	1);
	MakeCode	(x=0X1B6F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B87);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1B8E);
	OpHex		(x,	1);
	MakeCode	(x=0X1B9B);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1BA3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1BAA);
	OpHex		(x,	1);
	MakeCode	(x=0X1BB7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1BBB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1BC2);
	OpHex		(x,	1);
	MakeCode	(x=0X1BC9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1BCD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1BD4);
	OpHex		(x,	1);
	MakeCode	(x=0X1BDB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1BE2);
	OpHex		(x,	1);
	MakeCode	(x=0X1BE7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1BFF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1C0A);
	OpHex		(x,	1);
	MakeCode	(0X1C1A);
	MakeName	(0X1C1A,	"UNUSED_INDIR_CALL_sub_1C1A");
	MakeCode	(x=0X1C22);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C2B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X1C35);
	MakeName	(0X1C35,	"GET_DS");
	MakeCode	(0X1C38);
	MakeCode	(0X1C3F);
	MakeCode	(x=0X1C43);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C48);
	OpStkvar	(x,	1);
	MakeCode	(0X1C53);
	MakeCode	(x=0X1C57);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C5C);
	OpStkvar	(x,	1);
	MakeCode	(0X1C69);
	MakeCode	(x=0X1C6D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C77);
	OpStkvar	(x,	1);
	MakeCode	(0X1C80);
	MakeCode	(x=0X1C84);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C89);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C8E);
	OpStkvar	(x,	1);
	MakeCode	(0X1C98);
	MakeName	(0X1C98,	"MAIN_BUSINESS");
	MakeCode	(x=0X1C9D);
	OpHex		(x,	1);
	MakeCode	(x=0X1CA0);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X1CA3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1CAA);
	OpHex		(x,	1);
	MakeCode	(x=0X1CC1);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1CE8);
	OpHex		(x,	1);
	MakeCode	(x=0X1CF6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1CFD);
	OpHex		(x,	1);
	MakeCode	(x=0X1D00);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1D07);
	OpHex		(x,	1);
	MakeRptCmt	(0X1D17,	"case 0xA");
	MakeCode	(x=0X1D17);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1D1E);
	OpHex		(x,	1);
	MakeCode	(0X1D31);
	MakeRptCmt	(0X1D37,	"case 0x0");
	MakeCode	(0X1D37);
	MakeRptCmt	(0X1D3D,	"case 0x1");
	MakeCode	(0X1D3D);
	MakeRptCmt	(0X1D43,	"case 0x2");
	MakeCode	(0X1D43);
	MakeRptCmt	(0X1D49,	"case 0x3");
	MakeCode	(0X1D49);
	MakeRptCmt	(0X1D4F,	"case 0x4");
	MakeCode	(0X1D4F);
	MakeRptCmt	(0X1D55,	"case 0x5");
	MakeCode	(0X1D55);
	MakeRptCmt	(0X1D5B,	"case 0x6");
	MakeCode	(0X1D5B);
	MakeRptCmt	(0X1D61,	"case 0x7");
	MakeCode	(0X1D61);
	MakeRptCmt	(0X1D67,	"case 0x8");
	MakeCode	(0X1D67);
	MakeRptCmt	(0X1D6D,	"case 0x9");
	MakeCode	(x=0X1D6D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1D74);
	OpHex		(x,	1);
	MakeCode	(x=0X1D7E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1D85);
	OpHex		(x,	1);
	MakeCode	(0X1D8B);
	MakeCode	(x=0X1D92);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1D96);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1D9D);
	OpHex		(x,	1);
	MakeCode	(x=0X1DA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1DAF);
	OpHex		(x,	1);
	MakeCode	(x=0X1DB6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1DBD);
	OpHex		(x,	1);
	MakeCode	(x=0X1DC2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1DC5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1DCE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1DD5);
	OpHex		(x,	1);
	MakeCode	(x=0X1DE0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1DEB);
	OpHex		(x,	1);
	MakeCode	(x=0X1DF6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeComm	(0X1DFD,	"jump table for switch statement");
	MakeWord	(x=0X1DFD);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1DFF);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E01);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E03);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E05);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E07);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E09);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E0B);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E0D);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E0F);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X1E11);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X1E13,	"default");
	MakeCode	(0X1E13);
	MakeCode	(x=0X1E16);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E1A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E1E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E22);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E26);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E2A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E2E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E32);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E36);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E3A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E3E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E42);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E51);
	OpHex		(x,	1);
	MakeComm	(0X1E59,	"switch 11 cases ");
	MakeCode	(x=0X1E5E);
	OpHex		(x,	1);
	MakeComm	(0X1E60,	"switch jump");
	MakeCode	(x=0X1E60);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(0X1E66);
	MakeName	(0X1E66,	"SELECT_DISK_UNIT");
	MakeCode	(x=0X1E6B);
	OpHex		(x,	1);
	MakeCode	(x=0X1E6E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E72);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E76);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1E85);
	OpHex		(x,	1);
	MakeComm	(0X1E8D,	"switch 2 cases ");
	MakeCode	(x=0X1E92);
	OpHex		(x,	1);
	MakeComm	(0X1E94,	"switch jump");
	MakeCode	(x=0X1E94);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X1E99,	"case 0x0");
	MakeRptCmt	(0X1EA1,	"case 0x1");
	MakeCode	(0X1EA1);
	MakeCode	(x=0X1EA7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1EAE);
	OpHex		(x,	1);
	MakeComm	(0X1EB3,	"jump table for switch statement");
	MakeWord	(x=0X1EB3);
	MakeArray	(x,	0X2);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X1EB7,	"default");
	MakeCode	(0X1EB7);
	MakeCode	(x=0X1EBD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1EC4);
	OpHex		(x,	1);
	MakeCode	(x=0X1EC7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1ECE);
	OpHex		(x,	1);
	MakeCode	(x=0X1ED1);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1ED8);
	OpHex		(x,	1);
	MakeCode	(x=0X1EDB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1EE2);
	OpHex		(x,	1);
	MakeCode	(x=0X1EE5);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1EEC);
	OpHex		(x,	1);
	MakeCode	(x=0X1EF2);
	OpHex		(x,	1);
	MakeCode	(x=0X1F02);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1F09);
	OpHex		(x,	1);
	MakeCode	(0X1F0E);
	MakeCode	(x=0X1F12);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1F19);
	OpHex		(x,	1);
	MakeComm	(0X1F28,	"switch 6 cases ");
	MakeCode	(x=0X1F28);
	OpHex		(x,	1);
	MakeCode	(x=0X1F34);
	OpHex		(x,	1);
	MakeComm	(0X1F36,	"switch jump");
	MakeCode	(x=0X1F36);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X1F3B,	"case 0x41");
	MakeCode	(x=0X1F41);
	OpDecimal	(x,	1);
	MakeRptCmt	(0X1F4A,	"case 0x42");
	MakeCode	(0X1F4A);
	MakeRptCmt	(0X1F52,	"case 0x43");
	MakeCode	(0X1F52);
	MakeCode	(x=0X1F58);
	OpDecimal	(x,	1);
	MakeRptCmt	(0X1F61,	"case 0x44");
	MakeCode	(0X1F61);
	MakeRptCmt	(0X1F69,	"case 0x45");
	MakeCode	(0X1F69);
	MakeCode	(x=0X1F6F);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1F78);
	OpStkvar	(x,	0);
	MakeCode	(x=0X1F7E);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1F84);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1F8B);
	OpHex		(x,	1);
	MakeRptCmt	(0X1F8E,	"case 0x46");
	MakeCode	(x=0X1F95);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1F99);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FA0);
	OpHex		(x,	1);
	MakeCode	(x=0X1FA7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1FAB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FB2);
	OpHex		(x,	1);
	MakeCode	(x=0X1FB9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FBF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1FCE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FD2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FD9);
	OpHex		(x,	1);
	MakeCode	(x=0X1FE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1FE4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FEB);
	OpHex		(x,	1);
	MakeCode	(x=0X1FF2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FF8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X1FFF);
	OpHex		(x,	1);
	MakeCode	(x=0X2004);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X200A,	"Max Cylinders");
	MakeCode	(x=0X200A);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2011);
	OpStkvar	(x,	1);
	MakeComm	(0X201A,	"jump table for switch statement");
	MakeWord	(x=0X201A);
	MakeArray	(x,	0X6);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X2026,	"default");
	MakeWord	(x=0X2026);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(0X202A);
	MakeName	(0X202A,	"READ_SECTORS");
	MakeCode	(x=0X202F);
	OpHex		(x,	1);
	MakeCode	(x=0X2032);
	OpStkvar	(x,	0);
	MakeCode	(x=0X203A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X203E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2042);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2051);
	OpHex		(x,	1);
	MakeCode	(x=0X2054);
	OpStkvar	(x,	0);
	MakeComm	(0X2059,	"switch 2 cases ");
	MakeCode	(x=0X2061);
	OpHex		(x,	1);
	MakeComm	(0X2063,	"switch jump");
	MakeCode	(x=0X2063);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X2068,	"case 0x0");
	MakeCode	(x=0X2068);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X206F);
	OpHex		(x,	1);
	MakeCode	(x=0X2079);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X207D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2084);
	OpHex		(x,	1);
	MakeCode	(x=0X208B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X208F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2096);
	OpHex		(x,	1);
	MakeCode	(x=0X209D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X20A4);
	OpHex		(x,	1);
	MakeCode	(x=0X20AF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X20C3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X20C9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X20DD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X20E4);
	OpHex		(x,	1);
	MakeCode	(x=0X20EE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X20F2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X20F9);
	OpHex		(x,	1);
	MakeCode	(x=0X2100);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2104);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X210B);
	OpHex		(x,	1);
	MakeCode	(x=0X2112);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2119);
	OpHex		(x,	1);
	MakeCode	(x=0X2124);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2138);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X213F);
	OpHex		(x,	1);
	MakeCode	(x=0X2149);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X214D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2154);
	OpHex		(x,	1);
	MakeCode	(x=0X215B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X215F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2166);
	OpHex		(x,	1);
	MakeCode	(x=0X216D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2174);
	OpHex		(x,	1);
	MakeCode	(x=0X217F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2183);
	OpDecimal	(x,	1);
	MakeCode	(x=0X219A);
	OpHex		(x,	1);
	MakeRptCmt	(0X21A5,	"Bad sector flag");
	MakeCode	(x=0X21A5);
	OpHex		(x,	1);
	MakeCode	(x=0X21AA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X21B1);
	OpHex		(x,	1);
	MakeCode	(0X21B6);
	MakeCode	(x=0X21BB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X21C6,	"case 0x1");
	MakeCode	(x=0X21C6);
	OpStkvar	(x,	0);
	MakeWord	(x=0X21CD);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X21CF);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X21D1,	"default");
	MakeCode	(x=0X21D1);
	OpStkvar	(x,	0);
	MakeCode	(0X21DA);
	MakeCode	(0X21DE);
	MakeCode	(x=0X21E3);
	OpHex		(x,	1);
	MakeCode	(x=0X21E9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X21F0);
	OpHex		(x,	1);
	MakeCode	(x=0X21F3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X21FA);
	OpHex		(x,	1);
	MakeCode	(x=0X21FD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2204);
	OpHex		(x,	1);
	MakeCode	(x=0X220F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2216);
	OpHex		(x,	1);
	MakeCode	(x=0X2227);
	OpStkvar	(x,	0);
	MakeCode	(x=0X222C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2235);
	OpStkvar	(x,	0);
	MakeCode	(x=0X223C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2244);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2247);
	OpHex		(x,	1);
	MakeCode	(x=0X224A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2252);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2255);
	OpHex		(x,	1);
	MakeCode	(x=0X2257);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2263);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2266);
	OpStkvar	(x,	0);
	MakeCode	(x=0X226D);
	OpStkvar	(x,	0);
	MakeCode	(0X2272);
	MakeCode	(x=0X2276);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2281);
	OpHex		(x,	1);
	MakeCode	(x=0X2288);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X228C);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X228F);
	OpHex		(x,	1);
	MakeCode	(x=0X2295);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2298);
	OpStkvar	(x,	0);
	MakeCode	(x=0X229B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X22A0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X22A7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X22AF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X22B2);
	OpHex		(x,	1);
	MakeCode	(x=0X22B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X22C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X22C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X22CB);
	OpHex		(x,	1);
	MakeCode	(x=0X22CD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X22D4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X22D7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X22DE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X22E1);
	OpStkvar	(x,	0);
	MakeCode	(0X22EA);
	MakeName	(0X22EA,	"READ_ALL");
	MakeCode	(x=0X22EF);
	OpHex		(x,	1);
	MakeCode	(x=0X22F2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X22F9);
	OpHex		(x,	1);
	MakeCode	(x=0X2303);
	OpHex		(x,	1);
	MakeCode	(0X230F);
	MakeCode	(x=0X2313);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X231A);
	OpHex		(x,	1);
	MakeCode	(0X2325);
	MakeCode	(x=0X232B);
	OpHex		(x,	1);
	MakeCode	(x=0X232E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X2332,	"Length = 10 Sectors");
	MakeCode	(x=0X2332);
	OpDecimal	(x,	1);
	MakeRptCmt	(0X2336,	"Start at Sector 0");
	MakeCode	(x=0X2348);
	OpHex		(x,	1);
	MakeCode	(x=0X235B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X235F);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2376);
	OpHex		(x,	1);
	MakeCode	(x=0X2383);
	OpDecimal	(x,	1);
	MakeCode	(0X23A9);
	MakeCode	(0X23AC);
	MakeName	(0X23AC,	"HANDLE_READ_ERROR");
	MakeCode	(x=0X23B1);
	OpHex		(x,	1);
	MakeCode	(0X23BE);
	MakeCode	(x=0X23D2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X23D9);
	OpHex		(x,	1);
	MakeCode	(x=0X23DC);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X23E2);
	MakeCode	(x=0X23EE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X23F5);
	OpHex		(x,	1);
	MakeCode	(x=0X23F8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X23FF);
	OpHex		(x,	1);
	MakeCode	(0X2407);
	MakeCode	(x=0X2431);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2438);
	OpHex		(x,	1);
	MakeCode	(x=0X243B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2441);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2448);
	OpHex		(x,	1);
	MakeWord	(0X244E);
	MakeCode	(0X2450);
	MakeName	(0X2450,	"OP_44H_WRITE_ID");
	MakeCode	(x=0X2458);
	OpStkvar	(x,	1);
	MakeComm	(0X245B,	"switch 2 cases ");
	MakeCode	(x=0X245B);
	OpHex		(x,	1);
	MakeCode	(x=0X2467);
	OpHex		(x,	1);
	MakeComm	(0X2469,	"switch jump");
	MakeCode	(x=0X2469);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X246E,	"case 0x1");
	MakeCode	(x=0X2478);
	OpStkvar	(x,	1);
	MakeCode	(x=0X247F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2487);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2493);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24A4);
	OpHex		(x,	1);
	MakeCode	(x=0X24A6);
	OpHex		(x,	1);
	MakeRptCmt	(0X24C9,	"case 0x2");
	MakeCode	(0X24C9);
	MakeCode	(x=0X24D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24FF);
	OpHex		(x,	1);
	MakeCode	(x=0X2501);
	OpHex		(x,	1);
	MakeComm	(0X2520,	"jump table for switch statement");
	MakeWord	(x=0X2520);
	MakeArray	(x,	0X2);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X2524,	"default");
	MakeWord	(x=0X2524);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X2526);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(0X2528);
	MakeName	(0X2528,	"OP_60H_sub_2528");
	MakeCode	(x=0X2530);
	OpStkvar	(x,	1);
	MakeComm	(0X2533,	"switch 2 cases ");
	MakeCode	(x=0X2533);
	OpHex		(x,	1);
	MakeCode	(x=0X253C);
	OpHex		(x,	1);
	MakeComm	(0X253E,	"switch jump");
	MakeCode	(x=0X253E);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X2543,	"case 0x1");
	MakeCode	(x=0X254D);
	OpStkvar	(x,	1);
	MakeRptCmt	(0X2560,	"case 0x2");
	MakeCode	(0X2560);
	MakeCode	(x=0X256A);
	OpStkvar	(x,	1);
	MakeComm	(0X257D,	"jump table for switch statement");
	MakeWord	(x=0X257D);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X257F);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X2581,	"Start the IOP");
	MakeCode	(0X2581);
	MakeCode	(x=0X2584);
	OpStkvar	(x,	0);
	MakeCode	(0X2595);
	MakeCode	(0X259C);
	MakeName	(0X259C,	"OP_49H_READ_LONG");
	MakeCode	(x=0X25A4);
	OpStkvar	(x,	0);
	MakeCode	(0X25AD);
	MakeCode	(x=0X25B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25C1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25D4);
	OpDecimal	(x,	1);
	MakeCode	(x=0X25DD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25E7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X25EC);
	OpDecimal	(x,	1);
	MakeCode	(x=0X25FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2605);
	OpStkvar	(x,	1);
	MakeCode	(0X2620);
	MakeCode	(x=0X2625);
	OpStkvar	(x,	1);
	MakeCode	(x=0X262D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2634);
	OpStkvar	(x,	1);
	MakeCode	(x=0X263B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2642);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2647);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2650);
	OpStkvar	(x,	1);
	MakeCode	(x=0X265A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2676);
	OpStkvar	(x,	1);
	MakeCode	(x=0X267D);
	OpStkvar	(x,	1);
	MakeCode	(0X2694);
	MakeName	(0X2694,	"OP_41H_READ_DATA");
	MakeCode	(x=0X269C);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X26A5,	"Read!");
	MakeCode	(0X26A5);
	MakeCode	(x=0X26AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26B9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26C7);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X26CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26D9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26FD);
	OpStkvar	(x,	1);
	MakeCode	(0X2718);
	MakeCode	(x=0X271D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2725);
	OpStkvar	(x,	1);
	MakeCode	(x=0X272C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2733);
	OpStkvar	(x,	1);
	MakeCode	(x=0X273A);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X2741);
	OpStkvar	(x,	1);
	MakeCode	(x=0X274C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2769);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2770);
	OpStkvar	(x,	1);
	MakeCode	(0X2788);
	MakeName	(0X2788,	"OP_42H_WRITE_DATA");
	MakeCode	(x=0X2790);
	OpStkvar	(x,	0);
	MakeCode	(0X2799);
	MakeCode	(x=0X279E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27AD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27BB);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X27C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27CD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X27F1);
	OpStkvar	(x,	1);
	MakeCode	(0X280C);
	MakeCode	(x=0X2811);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2819);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2820);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2827);
	OpStkvar	(x,	1);
	MakeCode	(x=0X282E);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X2835);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2840);
	OpStkvar	(x,	1);
	MakeCode	(x=0X285D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2864);
	OpStkvar	(x,	1);
	MakeCode	(0X287C);
	MakeName	(0X287C,	"PRINT_IO_ERROR");
	MakeRptCmt	(0X2896,	"Status");
	MakeRptCmt	(0X28A0,	"Sector");
	MakeRptCmt	(0X28A1,	"Cylinder");
	MakeRptCmt	(0X28A5,	"Head");
	MakeRptCmt	(0X28A9,	"Drive");
	MakeRptCmt	(0X28B3,	"Command");
	MakeCode	(x=0X28B4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X28BA);
	MakeCode	(x=0X28D8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X28DF);
	OpHex		(x,	1);
	MakeCode	(0X28E6);
	MakeCode	(x=0X28EB);
	OpHex		(x,	1);
	MakeCode	(x=0X28EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X28F5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X28F8);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(0X2902);
	MakeName	(0X2902,	"LOAD_IDC");
	MakeCode	(x=0X2907);
	OpHex		(x,	1);
	MakeRptCmt	(0X2912,	"Read the IOP system block pointer: FFFF8h");
	MakeCode	(x=0X2915);
	OpHex		(x,	1);
	MakeRptCmt	(0X291C,	"0410");
	MakeRptCmt	(0X2920,	"0000");
	MakeRptCmt	(0X292E,	"Read SCB pointer: 00412h");
	MakeCode	(x=0X2931);
	OpHex		(x,	1);
	MakeComm	(0X2934,	"0400h");
	MakeRptCmt	(0X2937,	"0000h");
	MakeCode	(x=0X293B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2942);
	OpHex		(x,	1);
	MakeRptCmt	(0X294B,	"0400h");
	MakeComm	(0X294F,	"0000h");
	MakeRptCmt	(0X2953,	"0402h");
	MakeRptCmt	(0X2959,	"Write PB1_OFFSET (0905:0002) to 0402h");
	MakeCode	(x=0X295C);
	OpHex		(x,	1);
	MakeCode	(x=0X295F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2966);
	OpHex		(x,	1);
	MakeCode	(x=0X296B);
	OpDecimal	(x,	1);
	MakeRptCmt	(0X296F,	"0400h");
	MakeRptCmt	(0X2973,	"0000h");
	MakeRptCmt	(0X297D,	"Write PB2_OFFSET (0905:0002) to 0410h");
	MakeCode	(x=0X2980);
	OpHex		(x,	1);
	MakeRptCmt	(0X299D,	"0400h");
	MakeRptCmt	(0X29A1,	"0000h");
	MakeRptCmt	(0X29AB,	"Write 7 to 0408h");
	MakeCode	(x=0X29AE);
	OpHex		(x,	1);
	MakeRptCmt	(0X29C6,	"Write 0 to 0409h");
	MakeCode	(x=0X29C9);
	OpHex		(x,	1);
	MakeRptCmt	(0X29D8,	"Write 18h to 0400h");
	MakeCode	(x=0X29DB);
	OpHex		(x,	1);
	MakeRptCmt	(0X29F4,	"Write FFh to 0401h");
	MakeCode	(x=0X29F7);
	OpHex		(x,	1);
	MakeComm	(0X29FA,	"TASK POINTER");
	MakeCode	(x=0X29FA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X2A03,	"TASK POINTER SEGMENT");
	MakeRptCmt	(0X2A09,	"VAL");
	MakeCode	(x=0X2A0A);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeRptCmt	(0X2A0D,	"PORT");
	MakeCode	(x=0X2A11);
	OpHex		(x,	1);
	MakeCode	(x=0X2A14);
	OpStkvar	(x,	0);
	MakeCode	(0X2A1B);
	MakeRptCmt	(0X2A2D,	"Read 0401h");
	MakeCode	(x=0X2A30);
	OpHex		(x,	1);
	MakeRptCmt	(0X2A33,	"Is it zero now?");
	MakeCode	(x=0X2A37);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2A3A);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2A41);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2A48);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2A4F);
	OpHex		(x,	1);
	MakeCode	(x=0X2A57);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2A5E);
	OpHex		(x,	1);
	MakeCode	(0X2A6E);
	MakeName	(0X2A6E,	"DO_IO_OP");
	MakeCode	(x=0X2A73);
	OpHex		(x,	1);
	MakeCode	(x=0X2A85);
	OpHex		(x,	1);
	MakeCode	(x=0X2AA1);
	OpHex		(x,	1);
	MakeRptCmt	(0X2AA8,	"PORT");
	MakeCode	(x=0X2AA8);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X2AAF);
	OpHex		(x,	1);
	MakeCode	(x=0X2AB2);
	OpStkvar	(x,	0);
	MakeCode	(0X2AB9);
	MakeCode	(x=0X2ACE);
	OpHex		(x,	1);
	MakeCode	(x=0X2AD5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2AD8);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2ADF);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2AE6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2AED);
	OpHex		(x,	1);
	MakeCode	(0X2AF4);
	MakeName	(0X2AF4,	"IO_ATTENTION");
	MakeCode	(x=0X2B08);
	OpHex		(x,	1);
	MakeCode	(x=0X2B24);
	OpHex		(x,	1);
	MakeCode	(x=0X2B2B);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X2B32);
	OpHex		(x,	1);
	MakeCode	(x=0X2B4A);
	OpHex		(x,	1);
	MakeCode	(0X2B54);
	MakeName	(0X2B54,	"ZERO_COMMAND");
	MakeCode	(0X2B66);
	MakeName	(0X2B66,	"RW_CHECK_PATTERNS");
	MakeCode	(x=0X2B6B);
	OpHex		(x,	1);
	MakeCode	(x=0X2B6E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2B75);
	OpHex		(x,	1);
	MakeCode	(x=0X2B78);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2B83);
	OpHex		(x,	1);
	MakeCode	(0X2B8D);
	MakeCode	(x=0X2B90);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2B97);
	OpHex		(x,	1);
	MakeCode	(x=0X2BA6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2BAD);
	OpHex		(x,	1);
	MakeCode	(x=0X2BB6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2BC1);
	OpHex		(x,	1);
	MakeCode	(x=0X2BD5);
	OpHex		(x,	1);
	MakeCode	(0X2C02);
	MakeCode	(0X2C0C);
	MakeCode	(x=0X2C13);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2C1A);
	OpHex		(x,	1);
	MakeCode	(x=0X2C1D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2C24);
	OpHex		(x,	1);
	MakeCode	(0X2C47);
	MakeCode	(x=0X2C4E);
	OpHex		(x,	1);
	MakeCode	(x=0X2C71);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2C78);
	OpHex		(x,	1);
	MakeCode	(0X2C85);
	MakeCode	(x=0X2C8F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2C93);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2C9A);
	OpHex		(x,	1);
	MakeCode	(x=0X2C9D);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2CA1);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2CA5);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2CAC);
	OpHex		(x,	1);
	MakeCode	(x=0X2CC4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2CCB);
	OpHex		(x,	1);
	MakeCode	(0X2CD0);
	MakeCode	(x=0X2CD8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2CDF);
	OpHex		(x,	1);
	MakeCode	(x=0X2CF0);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2CF7);
	OpHex		(x,	1);
	MakeCode	(x=0X2CFE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2D05);
	OpHex		(x,	1);
	MakeCode	(0X2D1E);
	MakeCode	(x=0X2D28);
	OpStkvar	(x,	0);
	MakeCode	(0X2D38);
	MakeCode	(0X2D4C);
	MakeCode	(x=0X2D61);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2D68);
	OpHex		(x,	1);
	MakeCode	(x=0X2D6B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2D72);
	OpHex		(x,	1);
	MakeCode	(0X2D7F);
	MakeCode	(x=0X2D89);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2D90);
	OpHex		(x,	1);
	MakeCode	(x=0X2D96);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2D9D);
	OpHex		(x,	1);
	MakeCode	(x=0X2DA6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2DAD);
	OpHex		(x,	1);
	MakeCode	(x=0X2DBA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2DC5);
	OpHex		(x,	1);
	MakeCode	(x=0X2DD2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2DD9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2DE3);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	OpHex		(x,	1);
	MakeCode	(x=0X2DE9);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(x=0X2DEB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2DF2);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X2DF9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E00);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2E07);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E0E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2E15);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E1C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2E2F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2E36);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2E3B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2E42);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E4C);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	OpHex		(x,	1);
	MakeCode	(x=0X2E54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E5B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2E62);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E69);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2E70);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2E77);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2E8A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2E91);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2E9B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2EA2);
	OpHex		(x,	1);
	MakeCode	(x=0X2EAF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2EB6);
	OpHex		(x,	1);
	MakeCode	(x=0X2EB9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2EC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2EC3);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X2EC8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2ECB);
	OpStkvar	(x,	0);
	MakeCode	(0X2EE6);
	MakeCode	(x=0X2EEC);
	OpHex		(x,	1);
	MakeCode	(x=0X2EF3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2EFA);
	OpHex		(x,	1);
	MakeCode	(x=0X2F05);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2F0A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2F0F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2F12);
	OpHex		(x,	1);
	MakeCode	(x=0X2F14);
	OpHex		(x,	1);
	MakeCode	(x=0X2F16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2F1D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2F21);
	OpDecimal	(x,	1);
	MakeCode	(x=0X2F38);
	OpHex		(x,	1);
	MakeCode	(x=0X2F3E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2F41);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2F47);
	OpStkvar	(x,	0);
	MakeCode	(x=0X2F4A);
	OpStkvar	(x,	0);
	MakeCode	(0X2F70);
	MakeCode	(x=0X2F86);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2F8D);
	OpHex		(x,	1);
	MakeCode	(x=0X2F90);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2F97);
	OpHex		(x,	1);
	MakeCode	(0X2F9E);
	MakeName	(0X2F9E,	"GET_PATTERNS");
	MakeCode	(x=0X2FA3);
	OpHex		(x,	1);
	MakeCode	(x=0X2FA6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2FB1);
	OpHex		(x,	1);
	MakeCode	(0X2FCC);
	MakeCode	(0X2FED);
	MakeCode	(x=0X2FF7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X2FFE);
	OpHex		(x,	1);
	MakeCode	(x=0X3001);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3008);
	OpHex		(x,	1);
	MakeCode	(x=0X3014);
	OpHex		(x,	1);
	MakeCode	(x=0X301B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X301F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3026);
	OpHex		(x,	1);
	MakeCode	(x=0X302D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3031);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3038);
	OpHex		(x,	1);
	MakeCode	(x=0X303F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X3045);
	MakeCode	(x=0X304D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3050);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3061);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3064);
	OpStkvar	(x,	1);
	MakeCode	(x=0X306A);
	OpHex		(x,	1);
	MakeCode	(x=0X306C);
	OpHex		(x,	1);
	MakeCode	(x=0X3087);
	OpHex		(x,	1);
	MakeCode	(x=0X308E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3092);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3099);
	OpHex		(x,	1);
	MakeCode	(x=0X30A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X30A4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X30AB);
	OpHex		(x,	1);
	MakeCode	(x=0X30B2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X30B9);
	OpHex		(x,	1);
	MakeCode	(0X30BE);
	MakeCode	(x=0X30C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X30C9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X30DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X30DD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X30E3);
	OpHex		(x,	1);
	MakeCode	(x=0X30E5);
	OpHex		(x,	1);
	MakeCode	(x=0X3100);
	OpHex		(x,	1);
	MakeCode	(x=0X3107);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X310B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3112);
	OpHex		(x,	1);
	MakeCode	(x=0X3119);
	OpStkvar	(x,	1);
	MakeCode	(x=0X311D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3124);
	OpHex		(x,	1);
	MakeCode	(x=0X312B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3132);
	OpHex		(x,	1);
	MakeCode	(0X3137);
	MakeCode	(x=0X313F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3142);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3153);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3156);
	OpStkvar	(x,	1);
	MakeCode	(x=0X315C);
	OpHex		(x,	1);
	MakeCode	(x=0X315E);
	OpHex		(x,	1);
	MakeCode	(x=0X3179);
	OpHex		(x,	1);
	MakeCode	(x=0X3180);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3184);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X318B);
	OpHex		(x,	1);
	MakeCode	(x=0X3192);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3196);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X319D);
	OpHex		(x,	1);
	MakeCode	(x=0X31A4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X31AB);
	OpHex		(x,	1);
	MakeCode	(0X31B0);
	MakeCode	(x=0X31B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X31BB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X31CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X31CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X31D5);
	OpHex		(x,	1);
	MakeCode	(x=0X31D7);
	OpHex		(x,	1);
	MakeCode	(0X31F3);
	MakeCode	(x=0X31FC);
	OpHex		(x,	1);
	MakeCode	(x=0X3203);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3207);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X320E);
	OpHex		(x,	1);
	MakeCode	(x=0X3215);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3219);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3220);
	OpHex		(x,	1);
	MakeCode	(x=0X3227);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X322E);
	OpHex		(x,	1);
	MakeCode	(0X3233);
	MakeCode	(x=0X323B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X323E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X324F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3252);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3258);
	OpHex		(x,	1);
	MakeCode	(x=0X325A);
	OpHex		(x,	1);
	MakeCode	(0X328E);
	MakeName	(0X328E,	"XXX_RWCK_sub_328E");
	MakeCode	(x=0X3293);
	OpHex		(x,	1);
	MakeCode	(x=0X32AA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X32B1);
	OpHex		(x,	1);
	MakeCode	(0X32C3);
	MakeCode	(x=0X32CD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X32E5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32EA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X32F1);
	OpHex		(x,	1);
	MakeCode	(0X330B);
	MakeCode	(x=0X3314);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3318);
	OpDecimal	(x,	1);
	MakeCode	(x=0X332B);
	OpHex		(x,	1);
	MakeCode	(0X3341);
	MakeCode	(x=0X3347);
	OpHex		(x,	1);
	MakeCode	(x=0X334A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3350);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3356);
	OpStkvar	(x,	1);
	MakeCode	(x=0X335C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3360);
	OpHex		(x,	1);
	MakeCode	(x=0X3362);
	OpHex		(x,	1);
	MakeCode	(x=0X336D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3370);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3376);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3379);
	OpStkvar	(x,	0);
	MakeCode	(0X33A8);
	MakeCode	(x=0X33AE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X33B2);
	OpDecimal	(x,	1);
	MakeCode	(x=0X33C5);
	OpHex		(x,	1);
	MakeCode	(0X33F0);
	MakeCode	(0X33F8);
	MakeCode	(x=0X33FD);
	OpHex		(x,	1);
	MakeCode	(x=0X3400);
	OpStkvar	(x,	0);
	MakeCode	(0X340E);
	MakeCode	(x=0X3426);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X342A);
	OpDecimal	(x,	1);
	MakeCode	(x=0X3441);
	OpHex		(x,	1);
	MakeCode	(x=0X3447);
	OpHex		(x,	1);
	MakeCode	(x=0X3479);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X347D);
	OpDecimal	(x,	1);
	MakeCode	(x=0X3494);
	OpHex		(x,	1);
	MakeCode	(x=0X34AB);
	OpHex		(x,	1);
	MakeCode	(x=0X34C6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X34CD);
	OpHex		(x,	1);
	MakeCode	(x=0X34D0);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X34D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X34DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X34E4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X34E9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X34EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X34F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X34F9);
	OpHex		(x,	1);
	MakeCode	(x=0X34FD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3501);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3509);
	OpStkvar	(x,	1);
	MakeCode	(x=0X350C);
	OpHex		(x,	1);
	MakeCode	(x=0X3510);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3514);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3517);
	OpStkvar	(x,	0);
	MakeCode	(x=0X351D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3520);
	OpStkvar	(x,	0);
	MakeCode	(x=0X352A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X352D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3534);
	OpStkvar	(x,	1);
	MakeCode	(x=0X353C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3540);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3545);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3558);
	OpStkvar	(x,	0);
	MakeCode	(x=0X355B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X355E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X356D);
	OpHex		(x,	1);
	MakeCode	(x=0X357E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3583);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3588);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3590);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3593);
	OpHex		(x,	1);
	MakeCode	(x=0X3597);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X359B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X35A3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X35A6);
	OpHex		(x,	1);
	MakeCode	(x=0X35AA);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X35AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35B1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35BA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35C7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X35CF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X35D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X35D8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X35EB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35F2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X35F7);
	OpStkvar	(x,	1);
	MakeCode	(0X3604);
	MakeCode	(x=0X3609);
	OpHex		(x,	1);
	MakeCode	(x=0X360C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3611);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3614);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3627);
	OpStkvar	(x,	1);
	MakeCode	(x=0X362A);
	OpHex		(x,	1);
	MakeCode	(x=0X362E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3632);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3635);
	OpStkvar	(x,	0);
	MakeCode	(x=0X364C);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(0X3656);
	MakeCode	(x=0X365B);
	OpHex		(x,	1);
	MakeCode	(x=0X365E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3663);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3666);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3679);
	OpStkvar	(x,	1);
	MakeCode	(x=0X367C);
	OpHex		(x,	1);
	MakeCode	(x=0X3680);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3684);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3687);
	OpStkvar	(x,	0);
	MakeCode	(x=0X369E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(0X36A8);
	MakeName	(0X36A8,	"XXX_RWCK_sub_36A8");
	MakeCode	(x=0X36AD);
	OpHex		(x,	1);
	MakeCode	(x=0X36B0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X36B7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36BA);
	OpHex		(x,	1);
	MakeCode	(x=0X36BD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36C0);
	OpHex		(x,	1);
	MakeCode	(x=0X36C2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X36C7);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X36CB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36CE);
	OpHex		(x,	1);
	MakeCode	(x=0X36D1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36D4);
	OpHex		(x,	1);
	MakeCode	(x=0X36D6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X36DB);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X36DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X36E2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X36E9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36EC);
	OpHex		(x,	1);
	MakeCode	(x=0X36EE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X36F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36F9);
	OpHex		(x,	1);
	MakeCode	(x=0X36FB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X3706);
	MakeCode	(x=0X370B);
	OpHex		(x,	1);
	MakeCode	(x=0X370E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3713);
	OpStkvar	(x,	0);
	MakeCode	(x=0X371C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3721);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3738);
	OpStkvar	(x,	1);
	MakeCode	(x=0X374C);
	OpStkvar	(x,	1);
	MakeCode	(0X3760);
	MakeCode	(x=0X3764);
	OpStkvar	(x,	1);
	MakeCode	(x=0X376F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X377A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X377F);
	OpStkvar	(x,	0);
	MakeCode	(0X3788);
	MakeCode	(0X3792);
	MakeCode	(0X37EC);
	MakeCode	(x=0X37F0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X37F3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X37FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X380A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X381A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3825);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3832);
	OpStkvar	(x,	1);
	MakeCode	(x=0X383D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X384A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3858);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3868);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3873);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3885);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3890);
	OpStkvar	(x,	1);
	MakeCode	(0X38A0);
	MakeCode	(x=0X38A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X38BF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X38CB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X38E3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3902);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3908);
	OpStkvar	(x,	0);
	MakeCode	(0X390E);
	MakeCode	(0X3912);
	MakeCode	(x=0X3917);
	OpHex		(x,	1);
	MakeCode	(x=0X391A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X391F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3928);
	OpStkvar	(x,	0);
	MakeCode	(x=0X392D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3937);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3944);
	OpStkvar	(x,	1);
	MakeCode	(x=0X394B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3958);
	OpStkvar	(x,	1);
	MakeCode	(x=0X395F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X396C);
	MakeCode	(x=0X3970);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3977);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X397B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3982);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3986);
	OpStkvar	(x,	0);
	MakeCode	(x=0X398B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3994);
	OpDecimal	(x,	1);
	MakeCode	(0X399E);
	MakeCode	(x=0X39AC);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X39BB);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X39CA);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X39D9);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X39E4);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(0X39F8);
	MakeCode	(x=0X39FC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X39FF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3A08);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A12);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A1D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A26);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A2D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A31);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A38);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A45);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A49);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A50);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A56);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A60);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A6B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A7B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A7F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A86);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A8F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3A96);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3A9A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3AA1);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3AAA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3AAE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3AB6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3AC9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3AD1);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3AD5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3ADA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3AED);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3AF5);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3AFA);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3B0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B12);
	OpStkvar	(x,	0);
	MakeCode	(0X3B18);
	MakeCode	(0X3B1C);
	MakeCode	(x=0X3B21);
	OpHex		(x,	1);
	MakeCode	(x=0X3B24);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B29);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B2E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3B36);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3B39);
	OpHex		(x,	1);
	MakeCode	(x=0X3B43);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3B4B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3B4E);
	OpHex		(x,	1);
	MakeCode	(x=0X3B58);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B5B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B61);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B64);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B88);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3B8D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3B99);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3BB1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3BB4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3BBA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3BBF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3BCB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3BE3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3BE6);
	OpStkvar	(x,	0);
	MakeCode	(0X3C02);
	MakeName	(0X3C02,	"CHECK_RESULTS_sub_3C02");
	MakeCode	(x=0X3C07);
	OpHex		(x,	1);
	MakeCode	(x=0X3C14);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3C1B);
	OpHex		(x,	1);
	MakeCode	(x=0X3C2C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3C33);
	OpHex		(x,	1);
	MakeCode	(x=0X3C36);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X3C3D);
	MakeCode	(x=0X3C47);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3C4E);
	OpHex		(x,	1);
	MakeCode	(x=0X3C51);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3C58);
	OpHex		(x,	1);
	MakeCode	(x=0X3C65);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3C6A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C74);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C7F);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3C83);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C8A);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3C8E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C95);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3C99);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CA0);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3CA4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3CAB);
	OpHex		(x,	1);
	MakeCode	(x=0X3CAE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3CB1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3CB7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3CBE);
	OpHex		(x,	1);
	MakeCode	(x=0X3CCE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3CD5);
	OpHex		(x,	1);
	MakeCode	(x=0X3CD8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3CDD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CE7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3CEF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CF6);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3CFA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D01);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D05);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D0C);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D10);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D17);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D1B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D22);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D26);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3D2D);
	OpHex		(x,	1);
	MakeCode	(x=0X3D30);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3D33);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3D39);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3D40);
	OpHex		(x,	1);
	MakeCode	(x=0X3D46);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3D4D);
	OpHex		(x,	1);
	MakeCode	(x=0X3D50);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3D59);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3D61);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D6B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3D76);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D7D);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D81);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D88);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D93);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3D97);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D9E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3DA2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DA9);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3DAD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3DB4);
	OpHex		(x,	1);
	MakeCode	(x=0X3DB7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3DBC);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3DC3);
	OpHex		(x,	1);
	MakeCode	(x=0X3DC6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3DCF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3DD7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DE1);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3DEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DF3);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3DF7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DFE);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E02);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E09);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E0D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E14);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E18);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E1F);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E23);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3E2A);
	OpHex		(x,	1);
	MakeCode	(x=0X3E2D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3E32);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3E3B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3E40);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E4A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3E52);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E59);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E5D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E64);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E68);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E6F);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E73);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E7A);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E7E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E85);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3E89);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3E90);
	OpHex		(x,	1);
	MakeCode	(x=0X3E93);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3E98);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3E9F);
	OpHex		(x,	1);
	MakeCode	(x=0X3EA2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3EA9);
	OpHex		(x,	1);
	MakeCode	(x=0X3EB9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3EC0);
	OpHex		(x,	1);
	MakeCode	(x=0X3EC3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3ECA);
	OpHex		(x,	1);
	MakeCode	(x=0X3ED7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3EDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EE6);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3EEA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EF1);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3EF5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EFC);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F00);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F07);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F0B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F12);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F16);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3F1D);
	OpHex		(x,	1);
	MakeCode	(x=0X3F20);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3F23);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3F29);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3F30);
	OpHex		(x,	1);
	MakeCode	(x=0X3F40);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3F47);
	OpHex		(x,	1);
	MakeCode	(x=0X3F4A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3F4F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F59);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3F61);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F68);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F73);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F77);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F7E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F82);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F89);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F8D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F94);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3F98);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3F9F);
	OpHex		(x,	1);
	MakeCode	(x=0X3FA2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3FA5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3FAB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3FB2);
	OpHex		(x,	1);
	MakeCode	(x=0X3FB8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3FBF);
	OpHex		(x,	1);
	MakeCode	(x=0X3FC2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3FCB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X3FD3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3FDD);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X3FE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3FEF);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3FF3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3FFA);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X3FFE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4005);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4009);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4010);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4014);
	OpStkvar	(x,	1);
	MakeCode	(x=0X401B);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X401F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4026);
	OpHex		(x,	1);
	MakeCode	(x=0X4029);
	OpStkvar	(x,	0);
	MakeCode	(x=0X402E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4035);
	OpHex		(x,	1);
	MakeCode	(x=0X4038);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4041);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4049);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4053);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X405E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4065);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4069);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4070);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4074);
	OpStkvar	(x,	1);
	MakeCode	(x=0X407B);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X407F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4086);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X408A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4091);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4095);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X409C);
	OpHex		(x,	1);
	MakeCode	(x=0X409F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X40A4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X40AD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X40B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40BC);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X40C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40CB);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X40CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40D6);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X40DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40E1);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X40E5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40EC);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X40F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40F7);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X40FB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4102);
	OpHex		(x,	1);
	MakeCode	(x=0X4105);
	OpStkvar	(x,	0);
	MakeCode	(x=0X410A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4111);
	OpHex		(x,	1);
	MakeCode	(0X4118);
	MakeName	(0X4118,	"CW_CHECK_STATS_sub_4118");
	MakeCode	(x=0X411D);
	OpHex		(x,	1);
	MakeCode	(x=0X4120);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4127);
	OpHex		(x,	1);
	MakeCode	(x=0X412A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4131);
	OpHex		(x,	1);
	MakeCode	(x=0X413B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4140);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4149);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4153);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4157);
	OpStkvar	(x,	1);
	MakeCode	(x=0X415E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4162);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4169);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X416D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4174);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4178);
	OpStkvar	(x,	1);
	MakeCode	(x=0X417F);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4183);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4186);
	OpHex		(x,	1);
	MakeCode	(x=0X4188);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X418F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4192);
	OpHex		(x,	1);
	MakeCode	(x=0X4194);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X419B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X41A2);
	OpHex		(x,	1);
	MakeCode	(x=0X41A5);
	OpStkvar	(x,	0);
	MakeCode	(0X41AA);
	MakeCode	(x=0X41CC);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X41D3);
	OpHex		(x,	1);
	MakeCode	(x=0X41D6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X41DD);
	OpHex		(x,	1);
	MakeCode	(x=0X41E0);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X41E7);
	OpHex		(x,	1);
	MakeCode	(x=0X41F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X41F6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X41FF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4209);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X420D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4214);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4218);
	OpStkvar	(x,	1);
	MakeCode	(x=0X421F);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4223);
	OpStkvar	(x,	1);
	MakeCode	(x=0X422A);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X422E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4235);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4239);
	OpStkvar	(x,	1);
	MakeCode	(x=0X423C);
	OpHex		(x,	1);
	MakeCode	(x=0X423E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4245);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4248);
	OpHex		(x,	1);
	MakeCode	(x=0X424A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4251);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4258);
	OpHex		(x,	1);
	MakeCode	(x=0X425B);
	OpStkvar	(x,	0);
	MakeCode	(0X4260);
	MakeCode	(x=0X4282);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4289);
	OpHex		(x,	1);
	MakeCode	(0X4290);
	MakeCode	(x=0X4295);
	OpHex		(x,	1);
	MakeCode	(x=0X429C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X42A3);
	OpHex		(x,	1);
	MakeCode	(x=0X42B4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X42C9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X42CC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X42D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X42D7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X42DE);
	OpHex		(x,	1);
	MakeCode	(x=0X42F8);
	OpHex		(x,	1);
	MakeCode	(x=0X42FB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4301);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4307);
	OpStkvar	(x,	1);
	MakeCode	(x=0X430D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4311);
	OpHex		(x,	1);
	MakeCode	(x=0X4313);
	OpHex		(x,	1);
	MakeCode	(x=0X431E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4321);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4327);
	OpStkvar	(x,	0);
	MakeCode	(x=0X432A);
	OpStkvar	(x,	0);
	MakeCode	(0X4336);
	MakeName	(0X4336,	"FILL_SECTOR_BUFFER_5E");
	MakeCode	(x=0X433B);
	OpHex		(x,	1);
	MakeCode	(x=0X433E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4345);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4348);
	OpStkvar	(x,	1);
	MakeCode	(x=0X434E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4353);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X4357);
	OpStkvar	(x,	0);
	MakeCode	(x=0X435A);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(0X4364);
	MakeName	(0X4364,	"WRITE_PATTERN");
	MakeCode	(x=0X4369);
	OpHex		(x,	1);
	MakeCode	(x=0X436C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4373);
	OpHex		(x,	1);
	MakeCode	(x=0X4376);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4381);
	OpHex		(x,	1);
	MakeCode	(x=0X438B);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4396);
	OpHex		(x,	1);
	MakeCode	(x=0X439D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X43A2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X43A8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X43AF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X43B7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X43BF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X43C2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X43C9);
	OpStkvar	(x,	0);
	MakeCode	(0X43CE);
	MakeCode	(x=0X43D8);
	OpHex		(x,	1);
	MakeCode	(x=0X43F9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4400);
	OpHex		(x,	1);
	MakeCode	(0X440C);
	MakeCode	(x=0X4410);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4417);
	OpHex		(x,	1);
	MakeCode	(x=0X4420);
	OpHex		(x,	1);
	MakeCode	(0X442B);
	MakeCode	(x=0X4445);
	OpHex		(x,	1);
	MakeCode	(0X4458);
	MakeCode	(x=0X4473);
	OpHex		(x,	1);
	MakeCode	(x=0X44A6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X44AD);
	OpHex		(x,	1);
	MakeCode	(0X44B4);
	MakeName	(0X44B4,	"CHECK_RECONNECT");
	MakeCode	(x=0X44B9);
	OpHex		(x,	1);
	MakeCode	(x=0X44C3);
	OpStkvar	(x,	0);
	MakeCode	(0X44D1);
	MakeCode	(x=0X44DA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X44E0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X44F0);
	OpHex		(x,	1);
	MakeCode	(x=0X44F3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X44F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X452D);
	OpStkvar	(x,	0);
	MakeCode	(0X453B);
	MakeCode	(0X4546);
	MakeCode	(0X454F);
	MakeCode	(x=0X4555);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X455C);
	OpHex		(x,	1);
	MakeCode	(0X4561);
	MakeCode	(x=0X4568);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X456F);
	OpHex		(x,	1);
	MakeCode	(0X457A);
	MakeCode	(0X4582);
	MakeCode	(0X4587);
	MakeCode	(x=0X458F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(0X4598);
	MakeName	(0X4598,	"STR_TO_NUM");
	MakeCode	(x=0X459D);
	OpHex		(x,	1);
	MakeCode	(x=0X45A3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45A6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45A9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45B4);
	OpHex		(x,	1);
	MakeCode	(x=0X45B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45BC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45C2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45C7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45D5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45D8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X45E1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45ED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45F4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X45FA);
	OpHex		(x,	1);
	MakeCode	(x=0X4603);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4606);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4609);
	OpStkvar	(x,	1);
	MakeCode	(x=0X460D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4610);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4613);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4618);
	OpStkvar	(x,	0);
	MakeCode	(x=0X461B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X461E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4624);
	OpStkvar	(x,	0);
	MakeCode	(x=0X462A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X462D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4630);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4638);
	OpStkvar	(x,	1);
	MakeCode	(0X463E);
	MakeCode	(x=0X4649);
	OpStkvar	(x,	0);
	MakeCode	(x=0X464E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4651);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4654);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4657);
	OpStkvar	(x,	0);
	MakeCode	(x=0X465A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4663);
	OpHex		(x,	1);
	MakeCode	(x=0X4667);
	OpHex		(x,	1);
	MakeCode	(x=0X466B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X466E);
	OpStkvar	(x,	0);
	MakeCode	(0X4674);
	MakeCode	(x=0X4676);
	OpStkvar	(x,	1);
	MakeCode	(x=0X467E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4682);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4686);
	OpStkvar	(x,	0);
	MakeCode	(x=0X468C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X468F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4692);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4695);
	OpStkvar	(x,	1);
	MakeCode	(x=0X469E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46A4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46A7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46B5);
	OpHex		(x,	1);
	MakeCode	(x=0X46B8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46BC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46C3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46D0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46DB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46E1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X46E9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46EF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46FB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4701);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4708);
	OpStkvar	(x,	1);
	MakeCode	(x=0X470D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4710);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4716);
	OpHex		(x,	1);
	MakeCode	(x=0X4719);
	OpStkvar	(x,	0);
	MakeCode	(x=0X471E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4722);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4729);
	OpHex		(x,	1);
	MakeCode	(x=0X472E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4734);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4738);
	OpStkvar	(x,	0);
	MakeCode	(x=0X473F);
	OpHex		(x,	1);
	MakeCode	(x=0X4742);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4746);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4749);
	OpHex		(x,	1);
	MakeCode	(x=0X4752);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X475A);
	OpHex		(x,	1);
	MakeCode	(x=0X475D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4761);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4768);
	OpStkvar	(x,	0);
	MakeCode	(x=0X476F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4772);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4775);
	OpStkvar	(x,	1);
	MakeCode	(x=0X477F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4782);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4789);
	OpStkvar	(x,	0);
	MakeCode	(x=0X478C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X478F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4793);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4796);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4799);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47A1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47A5);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X47A9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47B0);
	OpHex		(x,	1);
	MakeCode	(x=0X47B3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47B7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47BF);
	OpHex		(x,	1);
	MakeCode	(x=0X47C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47C5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47C8);
	OpStkvar	(x,	1);
	MakeCode	(0X47D0);
	MakeCode	(0X47D4);
	MakeCode	(x=0X47DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47E7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47EA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47ED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47F0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X47F9);
	OpHex		(x,	1);
	MakeCode	(x=0X47FD);
	OpHex		(x,	1);
	MakeCode	(x=0X4801);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4804);
	OpStkvar	(x,	0);
	MakeCode	(0X480A);
	MakeCode	(x=0X480C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4814);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4818);
	OpStkvar	(x,	0);
	MakeCode	(x=0X481C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4826);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4829);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4830);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4833);
	OpStkvar	(x,	1);
	MakeCode	(x=0X483C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4842);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4845);
	OpStkvar	(x,	0);
	MakeCode	(x=0X484C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4853);
	OpHex		(x,	1);
	MakeCode	(x=0X4856);
	OpStkvar	(x,	0);
	MakeCode	(x=0X485A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4861);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4864);
	OpStkvar	(x,	1);
	MakeCode	(x=0X486A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X486E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4871);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4874);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4879);
	OpStkvar	(x,	1);
	MakeCode	(x=0X487F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4887);
	OpStkvar	(x,	1);
	MakeCode	(x=0X488A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X488D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4894);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4899);
	OpStkvar	(x,	1);
	MakeCode	(x=0X489C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X489F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48AB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48B4);
	OpHex		(x,	1);
	MakeCode	(x=0X48B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48C7);
	OpHex		(x,	1);
	MakeCode	(x=0X48CC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48DD);
	OpHex		(x,	1);
	MakeCode	(x=0X48E0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48E7);
	OpHex		(x,	1);
	MakeCode	(x=0X48F8);
	OpHex		(x,	1);
	MakeCode	(x=0X48FB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X48FF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4906);
	OpStkvar	(x,	0);
	MakeCode	(x=0X490D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4910);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4913);
	OpStkvar	(x,	1);
	MakeCode	(x=0X491D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4920);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4927);
	OpStkvar	(x,	0);
	MakeCode	(x=0X492A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X492D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4931);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4934);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4937);
	OpStkvar	(x,	0);
	MakeCode	(x=0X493F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4947);
	OpStkvar	(x,	0);
	MakeCode	(x=0X494E);
	OpHex		(x,	1);
	MakeCode	(x=0X4951);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4955);
	OpStkvar	(x,	1);
	MakeCode	(x=0X495D);
	OpHex		(x,	1);
	MakeCode	(x=0X4960);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4963);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4966);
	OpStkvar	(x,	1);
	MakeCode	(0X496E);
	MakeCode	(0X4972);
	MakeName	(0X4972,	"READ_KEY");
	MakeCode	(x=0X4977);
	OpHex		(x,	1);
	MakeCode	(x=0X4987);
	OpHex		(x,	1);
	MakeCode	(x=0X4994);
	OpStkvar	(x,	0);
	MakeCode	(0X49A0);
	MakeName	(0X49A0,	"SHOW_MENU");
	MakeCode	(x=0X49AB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X49AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49B5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49BB);
	OpHex		(x,	1);
	MakeCode	(x=0X49BE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49C1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49C8);
	OpHex		(x,	1);
	MakeCode	(x=0X49CB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49CE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X49E3);
	OpHex		(x,	1);
	MakeCode	(x=0X49E6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49ED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49F3);
	OpHex		(x,	1);
	MakeCode	(x=0X49F6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X49F9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A00);
	OpHex		(x,	1);
	MakeCode	(x=0X4A03);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A07);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A0D);
	OpHex		(x,	1);
	MakeCode	(x=0X4A10);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4A17);
	OpHex		(x,	1);
	MakeCode	(x=0X4A1D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A2F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A32);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A3E);
	OpStkvar	(x,	1);
	MakeCode	(0X4A47);
	MakeCode	(x=0X4A4A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A57);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A5D);
	OpHex		(x,	1);
	MakeCode	(x=0X4A60);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4A67);
	OpHex		(x,	1);
	MakeCode	(x=0X4A6A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A73);
	OpStkvar	(x,	1);
	MakeCode	(0X4A7C);
	MakeCode	(x=0X4A87);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A8D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4A95);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A99);
	OpHex		(x,	1);
	MakeCode	(x=0X4A9B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AA3);
	OpHex		(x,	1);
	MakeCode	(x=0X4AAB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4AB1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AB6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4ABA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4ABD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4AC3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AD0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4AD4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4ADD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AE1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4AE5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4AEE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AF6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AFA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4AFE);
	OpStkvar	(x,	1);
	MakeCode	(0X4B08);
	MakeCode	(x=0X4B10);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B17);
	OpHex		(x,	1);
	MakeCode	(x=0X4B1A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B1E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B22);
	OpHex		(x,	1);
	MakeCode	(x=0X4B24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B37);
	OpHex		(x,	1);
	MakeCode	(x=0X4B3A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B42);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B49);
	OpHex		(x,	1);
	MakeCode	(x=0X4B4C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B59);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B5D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B61);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B67);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B72);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X4B79);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B7E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4B85);
	OpHex		(x,	1);
	MakeCode	(x=0X4B8A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4B95);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B9C);
	OpHex		(x,	1);
	MakeCode	(x=0X4B9F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BA5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BB0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4BB7);
	OpHex		(x,	1);
	MakeCode	(x=0X4BBA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4BBE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BC3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4BC7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BCB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4BD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BD9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4BDD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BE1);
	OpStkvar	(x,	0);
	MakeCode	(0X4BEA);
	MakeCode	(0X4BEE);
	MakeName	(0X4BEE,	"PUTCHAR");
	MakeCode	(x=0X4BF3);
	OpHex		(x,	1);
	MakeCode	(x=0X4BF6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BFB);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X4BFE,	"Terminating NUL");
	MakeCode	(x=0X4BFE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C02);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C09);
	OpHex		(x,	1);
	MakeCode	(0X4C10);
	MakeName	(0X4C10,	"PROMPT");
	MakeCode	(x=0X4C15);
	OpHex		(x,	1);
	MakeCode	(x=0X4C18);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C1E);
	OpHex		(x,	1);
	MakeCode	(x=0X4C21);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C24);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C2D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C33);
	OpHex		(x,	1);
	MakeCode	(x=0X4C36);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C41);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C47);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C53);
	OpHex		(x,	1);
	MakeCode	(x=0X4C59);
	OpHex		(x,	1);
	MakeCode	(x=0X4C5C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C6B);
	OpHex		(x,	1);
	MakeCode	(x=0X4C71);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C74);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X4C8D,	"Beginning of line?");
	MakeCode	(x=0X4C8D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C93);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C97);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4C9A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4CA1);
	OpHex		(x,	1);
	MakeCode	(x=0X4CA6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4CA9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4CB0);
	OpHex		(x,	1);
	MakeCode	(x=0X4CB6);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4CBD);
	OpHex		(x,	1);
	MakeCode	(x=0X4CC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CC6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4CCC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4CD2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CD5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4CDA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4CDD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CE2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CE5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CF1);
	OpHex		(x,	1);
	MakeCode	(x=0X4CF4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4CFA);
	OpHex		(x,	1);
	MakeCode	(x=0X4CFD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D01);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X4D07,	"Terminal Bell");
	MakeCode	(0X4D07);
	MakeCode	(0X4D10);
	MakeCode	(x=0X4D15);
	OpHex		(x,	1);
	MakeCode	(x=0X4D1F);
	OpStkvar	(x,	0);
	MakeCode	(0X4D26);
	MakeCode	(x=0X4D29);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4D2C);
	OpStkvar	(x,	1);
	MakeCode	(0X4D32);
	MakeName	(0X4D32,	"YES_OR_NO");
	MakeCode	(x=0X4D37);
	OpHex		(x,	1);
	MakeCode	(x=0X4D3A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D42);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4D47);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4D4A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4D51);
	OpHex		(x,	1);
	MakeCode	(x=0X4D57);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4D69);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4D6C);
	OpStkvar	(x,	1);
	MakeCode	(0X4D81);
	MakeCode	(x=0X4D86);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4D8E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4D95);
	OpHex		(x,	1);
	MakeCode	(x=0X4D98);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4D9E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DA1);
	OpHex		(x,	1);
	MakeCode	(x=0X4DA3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4DA8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4DAF);
	OpHex		(x,	1);
	MakeCode	(x=0X4DB2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4DB9);
	OpHex		(x,	1);
	MakeCode	(x=0X4DBC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4DC5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DCB);
	OpStkvar	(x,	0);
	MakeCode	(0X4DD5);
	MakeCode	(x=0X4DD8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4DDB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DDF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4DE4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4DE9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4DF0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4DF5);
	OpStkvar	(x,	0);
	MakeCode	(0X4DFC);
	MakeName	(0X4DFC,	"SELF_CK_sub_4DFC");
	MakeCode	(x=0X4E6D);
	OpHex		(x,	1);
	MakeCode	(x=0X4E70);
	OpDecimal	(x,	1);
	MakeCode	(x=0X4E77);
	OpHex		(x,	1);
	MakeCode	(0X4E8A);
	MakeCode	(x=0X4E8F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4E95);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E98);
	OpHex		(x,	1);
	MakeCode	(x=0X4EA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EAB);
	OpHex		(x,	1);
	MakeCode	(x=0X4EB2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EB5);
	OpHex		(x,	1);
	MakeCode	(0X4EBE);
	MakeName	(0X4EBE,	"READ_DWORD");
	MakeCode	(x=0X4EC3);
	OpHex		(x,	1);
	MakeCode	(x=0X4EC6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4EC9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4ECF);
	OpHex		(x,	1);
	MakeCode	(x=0X4EDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EDF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EEB);
	OpHex		(x,	1);
	MakeCode	(x=0X4EF5);
	OpHex		(x,	1);
	MakeCode	(x=0X4EF7);
	OpHex		(x,	1);
	MakeCode	(x=0X4F01);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4F04);
	OpStkvar	(x,	0);
	MakeCode	(0X4F0E);
	MakeName	(0X4F0E,	"WRITE_DWORD");
	MakeCode	(x=0X4F13);
	OpHex		(x,	1);
	MakeCode	(x=0X4F16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F19);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F1F);
	OpHex		(x,	1);
	MakeCode	(x=0X4F21);
	OpHex		(x,	1);
	MakeCode	(x=0X4F25);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4F28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F2B);
	OpHex		(x,	1);
	MakeCode	(x=0X4F2F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4F33);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4F36);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4F3C);
	OpHex		(x,	1);
	MakeCode	(x=0X4F3F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4F46);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F49);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F55);
	OpHex		(x,	1);
	MakeCode	(0X4F5C);
	MakeName	(0X4F5C,	"ERROR_MENU_sub_4F5C");
	MakeCode	(x=0X4F61);
	OpHex		(x,	1);
	MakeComm	(0X4F68,	"switch 3 cases ");
	MakeCode	(x=0X4F70);
	OpHex		(x,	1);
	MakeComm	(0X4F72,	"switch jump");
	MakeCode	(x=0X4F72);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X4F77,	"case 0x2");
	MakeCode	(0X4F77);
	MakeRptCmt	(0X4F7A,	"case 0x1");
	MakeCode	(x=0X4F7D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4F81);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4F85);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4F89);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4F8D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4F91);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X4FA0);
	OpHex		(x,	1);
	MakeCode	(x=0X4FA3);
	OpStkvar	(x,	0);
	MakeComm	(0X4FA8,	"switch 5 cases ");
	MakeCode	(x=0X4FAD);
	OpHex		(x,	1);
	MakeComm	(0X4FAF,	"switch jump");
	MakeCode	(x=0X4FAF);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X4FB4,	"case 0x3");
	MakeRptCmt	(0X4FB9,	"case 0x4");
	MakeCode	(0X4FB9);
	MakeComm	(0X4FBE,	"jump table for switch statement");
	MakeWord	(x=0X4FBE);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X4FC8);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X4FCA,	"case 0x2");
	MakeCode	(0X4FCA);
	MakeComm	(0X4FCF,	"jump table for switch statement");
	MakeWord	(x=0X4FCF);
	MakeArray	(x,	0X3);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X4FD5,	"default");
	MakeCode	(0X4FD5);
	MakeCode	(0X4FDC);
	MakeName	(0X4FDC,	"PRINTF");
	MakeCode	(x=0X4FE7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4FEB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X4FEE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4FFA);
	OpHex		(x,	1);
	MakeCode	(x=0X4FFD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5005);
	OpHex		(x,	1);
	MakeCode	(0X500C);
	MakeCode	(x=0X5011);
	OpHex		(x,	1);
	MakeCode	(x=0X5014);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5018);
	OpStkvar	(x,	0);
	MakeCode	(x=0X501B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5025);
	OpHex		(x,	1);
	MakeCode	(x=0X5029);
	OpStkvar	(x,	0);
	MakeCode	(0X5030);
	MakeCode	(x=0X503B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X503F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5043);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5046);
	OpStkvar	(x,	1);
	MakeCode	(x=0X504E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5051);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5059);
	OpStkvar	(x,	1);
	MakeCode	(x=0X505C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5064);
	OpStkvar	(x,	1);
	MakeCode	(x=0X506E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5078);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5085);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5092);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50DD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X50E4);
	OpHex		(x,	1);
	MakeCode	(x=0X50E7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50F5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X50FB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X510B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5118);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5122);
	OpStkvar	(x,	1);
	MakeCode	(x=0X512C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5136);
	OpStkvar	(x,	1);
	MakeCode	(x=0X513E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5148);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5150);
	OpStkvar	(x,	1);
	MakeCode	(x=0X515D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5165);
	OpStkvar	(x,	1);
	MakeCode	(x=0X516D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X517A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5189);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5191);
	OpStkvar	(x,	1);
	MakeCode	(x=0X519D);
	OpHex		(x,	1);
	MakeCode	(x=0X51A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51D7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51E3);
	OpHex		(x,	1);
	MakeCode	(x=0X51E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5215);
	OpHex		(x,	1);
	MakeCode	(x=0X5219);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(x=0X521E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5225);
	OpHex		(x,	1);
	MakeCode	(x=0X522C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5233);
	OpHex		(x,	1);
	MakeCode	(x=0X5239);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5240);
	OpHex		(x,	1);
	MakeCode	(x=0X5247);
	OpStkvar	(x,	0);
	MakeCode	(x=0X524D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5254);
	OpHex		(x,	1);
	MakeCode	(x=0X525B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5261);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5268);
	OpHex		(x,	1);
	MakeCode	(x=0X526F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5275);
	OpStkvar	(x,	0);
	MakeCode	(x=0X527C);
	OpHex		(x,	1);
	MakeCode	(x=0X5283);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5289);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5290);
	OpHex		(x,	1);
	MakeCode	(x=0X5297);
	OpStkvar	(x,	0);
	MakeCode	(x=0X529D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X52A4);
	OpHex		(x,	1);
	MakeCode	(x=0X52AB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X52B2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X52B9);
	OpHex		(x,	1);
	MakeCode	(x=0X52C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X52C7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X52D1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X52DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X52FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5305);
	OpStkvar	(x,	1);
	MakeCode	(x=0X530F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X531E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5326);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5332);
	OpStkvar	(x,	1);
	MakeCode	(x=0X533C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5344);
	OpStkvar	(x,	1);
	MakeCode	(x=0X534C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X535D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X536C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5379);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5380);
	OpHex		(x,	1);
	MakeCode	(x=0X5383);
	OpStkvar	(x,	1);
	MakeCode	(x=0X538D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X539B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53A2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53A9);
	OpHex		(x,	1);
	MakeCode	(x=0X53B0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53BE);
	OpHex		(x,	1);
	MakeCode	(x=0X53C5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53CC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53D3);
	OpHex		(x,	1);
	MakeCode	(x=0X53DA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53E1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X53E8);
	OpHex		(x,	1);
	MakeCode	(x=0X53EF);
	OpStkvar	(x,	0);
	MakeWord	(x=0X53F6);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X53F8);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X53FA);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X53FC);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X53FE);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(0X5400);
	MakeCode	(0X5408);
	MakeCode	(0X5410);
	MakeCode	(0X5418);
	MakeCode	(x=0X5420);
	OpStkvar	(x,	1);
	MakeCode	(x=0X542D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X543B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X544B);
	OpHex		(x,	1);
	MakeCode	(0X5451);
	MakeCode	(0X5459);
	MakeCode	(x=0X5463);
	OpStkvar	(x,	0);
	MakeCode	(x=0X546A);
	OpHex		(x,	1);
	MakeCode	(x=0X5471);
	OpStkvar	(x,	0);
	MakeCode	(0X5478);
	MakeCode	(0X5480);
	MakeCode	(x=0X5485);
	OpStkvar	(x,	0);
	MakeCode	(x=0X548C);
	OpHex		(x,	1);
	MakeCode	(x=0X5493);
	OpStkvar	(x,	0);
	MakeCode	(0X549A);
	MakeCode	(0X54A2);
	MakeCode	(0X54AA);
	MakeCode	(0X54B2);
	MakeCode	(x=0X54BA);
	OpStkvar	(x,	1);
	MakeCode	(0X54D2);
	MakeCode	(0X54DA);
	MakeCode	(0X54E2);
	MakeCode	(x=0X54EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X54F2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X54F9);
	OpHex		(x,	1);
	MakeCode	(x=0X5500);
	OpStkvar	(x,	0);
	MakeCode	(0X5507);
	MakeCode	(0X550F);
	MakeCode	(0X5517);
	MakeCode	(x=0X551F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5529);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5531);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5540);
	OpStkvar	(x,	1);
	MakeCode	(0X554C);
	MakeCode	(x=0X5551);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5554);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5560);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5565);
	OpStkvar	(x,	1);
	MakeCode	(0X556C);
	MakeCode	(x=0X5570);
	OpStkvar	(x,	1);
	MakeCode	(x=0X557D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5580);
	OpStkvar	(x,	1);
	MakeCode	(x=0X558A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5594);
	OpHex		(x,	1);
	MakeCode	(x=0X5597);
	OpStkvar	(x,	0);
	MakeCode	(x=0X559A);
	OpStkvar	(x,	1);
	MakeCode	(0X55AC);
	MakeCode	(x=0X55B1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X55C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X55CD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X55DC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X55DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X55E5);
	OpHex		(x,	1);
	MakeCode	(0X55EC);
	MakeCode	(x=0X55F1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X55F9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5609);
	OpHex		(x,	1);
	MakeCode	(x=0X5613);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5623);
	OpHex		(x,	1);
	MakeCode	(x=0X5626);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5631);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5645);
	OpStkvar	(x,	0);
	MakeCode	(x=0X564B);
	OpHex		(x,	1);
	MakeCode	(x=0X5653);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5667);
	OpStkvar	(x,	1);
	MakeCode	(0X567E);
	MakeCode	(x=0X5683);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5693);
	OpStkvar	(x,	1);
	MakeCode	(0X56A2);
	MakeCode	(x=0X56A7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X56B9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X56C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X56D7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X56E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X56F8);
	OpStkvar	(x,	1);
	MakeCode	(0X5706);
	MakeCode	(x=0X570B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5717);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5722);
	OpStkvar	(x,	1);
	MakeCode	(x=0X572A);
	OpStkvar	(x,	1);
	MakeCode	(0X5736);
	MakeCode	(x=0X573B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5747);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5752);
	OpStkvar	(x,	1);
	MakeCode	(x=0X575A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5762);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5775);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5784);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5796);
	OpStkvar	(x,	1);
	MakeCode	(0X57A4);
	MakeCode	(x=0X57A9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X57AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X57BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X57C2);
	OpStkvar	(x,	1);
	MakeCode	(0X57D6);
	MakeCode	(0X57DA);
	MakeCode	(x=0X57F8);
	OpStkvar	(x,	1);
	MakeCode	(0X5802);
	MakeName	(0X5802,	"SERIAL_PUT");
	MakeCode	(x=0X5807);
	OpStkvar	(x,	1);
	MakeCode	(x=0X580A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X580D);
	OpHex		(x,	1);
	MakeCode	(x=0X5810);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5815);
	OpStkvar	(x,	0);
	MakeCode	(0X581A);
	MakeCode	(x=0X581F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5825);
	OpStkvar	(x,	1);
	MakeCode	(x=0X582C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5831);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5834);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5839);
	OpStkvar	(x,	0);
	MakeCode	(x=0X583C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X583F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5847);
	OpStkvar	(x,	1);
	MakeComm	(0X584C,	"PUT CHAR INTO BUF");
	MakeCode	(x=0X584E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5857);
	OpStkvar	(x,	1);
	MakeCode	(x=0X585A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X585F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5862);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5865);
	OpStkvar	(x,	0);
	MakeCode	(x=0X586B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X586E);
	OpStkvar	(x,	1);
	MakeCode	(0X5876);
	MakeCode	(x=0X587B);
	OpHex		(x,	1);
	MakeCode	(x=0X587E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5881);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5884);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5887);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5890);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5893);
	OpStkvar	(x,	1);
	MakeCode	(0X589A);
	MakeCode	(x=0X589F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X58A2);
	OpHex		(x,	1);
	MakeCode	(x=0X58A9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X58AC);
	OpHex		(x,	1);
	MakeCode	(x=0X58B2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X58B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X58BB);
	OpHex		(x,	1);
	MakeCode	(x=0X58CC);
	OpHex		(x,	1);
	MakeCode	(x=0X58CF);
	OpStkvar	(x,	0);
	MakeCode	(0X58E2);
	MakeName	(0X58E2,	"EXTENDED_TRACES_MENU");
	MakeCode	(x=0X58E7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X58EB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X58EF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X58F3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X58F7);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X58FB);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X58FF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X590E);
	OpHex		(x,	1);
	MakeCode	(0X5918);
	MakeCode	(x=0X591D);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5924);
	OpHex		(x,	1);
	MakeCode	(0X592A);
	MakeCode	(0X5932);
	MakeName	(0X5932,	"ERROR_HISTORY_SUMMARY");
	MakeCode	(x=0X5937);
	OpHex		(x,	1);
	MakeCode	(x=0X593A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X593E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5942);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5946);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X594A);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X594E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5952);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5961);
	OpHex		(x,	1);
	MakeCode	(x=0X5964);
	OpStkvar	(x,	0);
	MakeComm	(0X5969,	"switch 3 cases ");
	MakeCode	(x=0X5969);
	OpHex		(x,	1);
	MakeCode	(x=0X5975);
	OpHex		(x,	1);
	MakeComm	(0X5977,	"switch jump");
	MakeCode	(x=0X5977);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X597C,	"case 0x3");
	MakeCode	(x=0X5984);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X598B);
	OpHex		(x,	1);
	MakeCode	(x=0X599C);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X59A3);
	OpHex		(x,	1);
	MakeCode	(x=0X59B4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X59BB);
	OpHex		(x,	1);
	MakeCode	(x=0X59E2);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X59E9);
	OpHex		(x,	1);
	MakeRptCmt	(0X59EF,	"case 0x4");
	MakeCode	(0X59EF);
	MakeRptCmt	(0X59F4,	"case 0x5");
	MakeCode	(0X59F4);
	MakeRptCmt	(0X5A0B,	"default");
	MakeCode	(x=0X5A0B);
	OpStkvar	(x,	1);
	MakeComm	(0X5A14,	"jump table for switch statement");
	MakeWord	(x=0X5A14);
	MakeArray	(x,	0X3);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(0X5A1A);
	MakeCode	(0X5A1C);
	MakeCode	(x=0X5A27);
	OpHex		(x,	1);
	MakeCode	(x=0X5A3E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5A44);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5A4B);
	OpHex		(x,	1);
	MakeCode	(x=0X5A59);
	OpHex		(x,	1);
	MakeCode	(x=0X5A7D);
	OpHex		(x,	1);
	MakeCode	(x=0X5A80);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X5A87);
	OpHex		(x,	1);
	MakeCode	(x=0X5A90);
	OpHex		(x,	1);
	MakeCode	(0X5A96);
	MakeCode	(x=0X5AA2);
	OpHex		(x,	1);
	MakeCode	(x=0X5AC1);
	OpHex		(x,	1);
	MakeCode	(x=0X5AEA);
	OpHex		(x,	1);
	MakeCode	(0X5AF0);
	MakeCode	(x=0X5AFB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5AFE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B04);
	OpHex		(x,	1);
	MakeCode	(x=0X5B07);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B10);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B13);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B1B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B1F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B26);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B29);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B30);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B33);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B3B);
	OpHex		(x,	1);
	MakeCode	(x=0X5B3E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B41);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B47);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5B4D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B53);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5B5B);
	OpHex		(x,	1);
	MakeCode	(x=0X5B5E);
	OpStkvar	(x,	0);
	MakeCode	(0X5B68);
	MakeCode	(x=0X5B6D);
	OpHex		(x,	1);
	MakeCode	(x=0X5B77);
	OpHex		(x,	1);
	MakeComm	(0X5B7E,	"switch 3 cases ");
	MakeCode	(x=0X5B83);
	OpHex		(x,	1);
	MakeComm	(0X5B85,	"switch jump");
	MakeCode	(x=0X5B85);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X5B8A,	"case 0x1");
	MakeCode	(x=0X5B90);
	OpHex		(x,	1);
	MakeCode	(x=0X5B93);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X5B98,	"case 0x0");
	MakeCode	(0X5B98);
	MakeRptCmt	(0X5B9E,	"default");
	MakeCode	(0X5B9E);
	MakeComm	(0X5BAB,	"jump table for switch statement");
	MakeWord	(x=0X5BAB);
	MakeArray	(x,	0X3);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X5BB1);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X5BB3);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(x=0X5BB8);
	OpHex		(x,	1);
	MakeCode	(x=0X5BBB);
	OpStkvar	(x,	1);
	MakeCode	(0X5BC2);
	MakeCode	(x=0X5BC7);
	OpHex		(x,	1);
	MakeCode	(x=0X5BE3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5BE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5BEB);
	OpHex		(x,	1);
	MakeCode	(x=0X5BED);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeCode	(x=0X5BF3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5BF7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5C06);
	OpHex		(x,	1);
	MakeCode	(x=0X5C1A);
	OpHex		(x,	1);
	MakeCode	(x=0X5C34);
	OpHex		(x,	1);
	MakeCode	(x=0X5C4B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5C6E);
	OpHex		(x,	1);
	MakeCode	(0X5C74);
	MakeCode	(x=0X5C79);
	OpHex		(x,	1);
	MakeCode	(x=0X5C83);
	OpHex		(x,	1);
	MakeComm	(0X5C91,	"switch 3 cases ");
	MakeCode	(x=0X5C96);
	OpHex		(x,	1);
	MakeComm	(0X5C98,	"switch jump");
	MakeCode	(x=0X5C98);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X5C9D,	"case 0x1");
	MakeCode	(x=0X5CA3);
	OpHex		(x,	1);
	MakeCode	(x=0X5CA6);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X5CAB,	"case 0x0");
	MakeCode	(0X5CAB);
	MakeRptCmt	(0X5CB1,	"default");
	MakeCode	(0X5CB1);
	MakeComm	(0X5CBE,	"jump table for switch statement");
	MakeWord	(x=0X5CBE);
	MakeArray	(x,	0X3);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X5CC4);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeWord	(x=0X5CC6);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeCode	(x=0X5CCB);
	OpHex		(x,	1);
	MakeCode	(x=0X5CCE);
	OpStkvar	(x,	1);
	MakeCode	(0X5CD4);
	MakeName	(0X5CD4,	"DO_PRINTF");
	MakeCode	(x=0X5CD9);
	OpHex		(x,	1);
	MakeCode	(x=0X5CE3);
	OpHex		(x,	1);
	MakeCode	(x=0X5CEC);
	OpHex		(x,	1);
	MakeCode	(x=0X5CEF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5CF5);
	OpHex		(x,	1);
	MakeCode	(x=0X5D02);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5D07);
	OpStkvar	(x,	1);
	MakeComm	(0X5D0A,	"switch 2 cases ");
	MakeCode	(x=0X5D0A);
	OpHex		(x,	1);
	MakeCode	(x=0X5D13);
	OpHex		(x,	1);
	MakeComm	(0X5D15,	"switch jump");
	MakeCode	(x=0X5D15);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X5D1A,	"case 0x1");
	MakeCode	(x=0X5D1E);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X5D23,	"case 0x2");
	MakeCode	(0X5D23);
	MakeComm	(0X5D29,	"jump table for switch statement");
	MakeWord	(x=0X5D29);
	MakeArray	(x,	0X2);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X5D2D,	"default");
	MakeWord	(x=0X5D2D);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeComm	(0X5D30,	"switch 3 cases ");
	MakeCode	(x=0X5D35);
	OpHex		(x,	1);
	MakeComm	(0X5D37,	"switch jump");
	MakeCode	(x=0X5D37);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X5D3C,	"case 0x1");
	MakeCode	(x=0X5D3C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5D45);
	OpHex		(x,	1);
	MakeRptCmt	(0X5D4A,	"case 0x2");
	MakeCode	(x=0X5D4A);
	OpStkvar	(x,	0);
	MakeRptCmt	(0X5D53,	"default");
	MakeCode	(x=0X5D53);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5D56);
	OpStkvar	(x,	1);
	MakeComm	(0X5D62,	"jump table for switch statement");
	MakeWord	(x=0X5D62);
	MakeArray	(x,	0X3);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X5D68,	"case 0x0");
	MakeCode	(x=0X5D68);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5D6C);
	OpStkvar	(x,	0);
	MakeCode	(0X5D77);
	MakeCode	(x=0X5D7E);
	OpHex		(x,	1);
	MakeCode	(0X5D84);
	MakeCode	(0X5D8C);
	MakeCode	(x=0X5D91);
	OpHex		(x,	1);
	MakeCode	(x=0X5D94);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5D9A);
	OpHex		(x,	1);
	MakeCode	(0X5DA5);
	MakeCode	(x=0X5DBC);
	OpHex		(x,	1);
	MakeCode	(x=0X5DD8);
	OpHex		(x,	1);
	MakeCode	(x=0X5DDB);
	OpStkvar	(x,	0);
	MakeCode	(0X5DE6);
	MakeCode	(x=0X5DF9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5E05);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5E08);
	OpHex		(x,	1);
	MakeCode	(0X5E16);
	MakeCode	(x=0X5E1B);
	OpHex		(x,	1);
	MakeCode	(x=0X5E1E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5E24);
	OpHex		(x,	1);
	MakeCode	(x=0X5E32);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5E38);
	OpHex		(x,	1);
	MakeCode	(x=0X5E58);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5E62);
	OpHex		(x,	1);
	MakeCode	(x=0X5E68);
	OpStkvar	(x,	1);
	MakeCode	(0X5E6E);
	MakeCode	(x=0X5E73);
	OpHex		(x,	1);
	MakeCode	(x=0X5E7D);
	OpHex		(x,	1);
	MakeCode	(x=0X5E80);
	OpStkvar	(x,	0);
	MakeCode	(0X5E8E);
	MakeCode	(x=0X5E92);
	OpHex		(x,	1);
	MakeCode	(x=0X5EA6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5EB2);
	OpHex		(x,	1);
	MakeCode	(x=0X5EB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5EBC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X5ED2);
	OpHex		(x,	1);
	MakeCode	(x=0X5EE3);
	OpHex		(x,	1);
	MakeCode	(x=0X5EEF);
	OpStkvar	(x,	0);
	MakeCode	(0X5EF9);
	MakeCode	(x=0X5F08);
	OpHex		(x,	1);
	MakeCode	(x=0X5F1C);
	OpHex		(x,	1);
	MakeCode	(x=0X5F3F);
	OpHex		(x,	1);
	MakeCode	(0X5F4B);
	MakeCode	(x=0X5FCF);
	OpHex		(x,	1);
	MakeCode	(x=0X5FE0);
	OpHex		(x,	1);
	MakeCode	(x=0X5FE6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6003);
	OpHex		(x,	1);
	MakeCode	(x=0X601F);
	OpHex		(x,	1);
	MakeCode	(x=0X6031);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6041);
	OpHex		(x,	1);
	MakeCode	(0X6050);
	MakeCode	(0X6063);
	MakeCode	(x=0X606A);
	OpHex		(x,	1);
	MakeCode	(x=0X606D);
	OpStkvar	(x,	1);
	MakeCode	(0X6074);
	MakeCode	(x=0X6079);
	OpHex		(x,	1);
	MakeCode	(x=0X607C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6082);
	OpHex		(x,	1);
	MakeCode	(0X608C);
	MakeCode	(x=0X60A3);
	OpHex		(x,	1);
	MakeCode	(x=0X60AB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X60B1);
	OpHex		(x,	1);
	MakeCode	(x=0X60B4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X60B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X60BD);
	OpHex		(x,	1);
	MakeCode	(x=0X60DA);
	OpHex		(x,	1);
	MakeCode	(x=0X60E2);
	OpHex		(x,	1);
	MakeCode	(x=0X60E5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6100);
	OpHex		(x,	1);
	MakeCode	(x=0X6108);
	OpHex		(x,	1);
	MakeCode	(x=0X6112);
	OpHex		(x,	1);
	MakeCode	(0X611C);
	MakeCode	(0X6124);
	MakeCode	(x=0X6130);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6144);
	OpHex		(x,	1);
	MakeCode	(x=0X6154);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6157);
	OpHex		(x,	1);
	MakeCode	(0X617E);
	MakeCode	(x=0X6183);
	OpHex		(x,	1);
	MakeCode	(x=0X618A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6191);
	OpHex		(x,	1);
	MakeCode	(x=0X619B);
	OpStkvar	(x,	0);
	MakeCode	(0X61A2);
	MakeCode	(x=0X61B0);
	OpHex		(x,	1);
	MakeCode	(x=0X61BC);
	OpHex		(x,	1);
	MakeCode	(x=0X61BF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61C3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X61C6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X61D8);
	OpHex		(x,	1);
	MakeCode	(x=0X61E4);
	OpStkvar	(x,	0);
	MakeCode	(0X61EE);
	MakeCode	(x=0X61FD);
	OpHex		(x,	1);
	MakeCode	(x=0X6211);
	OpHex		(x,	1);
	MakeCode	(x=0X6245);
	OpHex		(x,	1);
	MakeCode	(x=0X624F);
	OpStkvar	(x,	1);
	MakeCode	(0X625A);
	MakeCode	(x=0X625F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6262);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6265);
	OpStkvar	(x,	0);
	MakeCode	(x=0X626B);
	OpHex		(x,	1);
	MakeCode	(x=0X626E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6271);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6277);
	OpHex		(x,	1);
	MakeCode	(x=0X6279);
	OpHex		(x,	1);
	MakeCode	(x=0X6282);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6285);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6291);
	OpHex		(x,	1);
	MakeCode	(x=0X6294);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6297);
	OpStkvar	(x,	1);
	MakeCode	(x=0X629D);
	OpHex		(x,	1);
	MakeCode	(x=0X629F);
	OpHex		(x,	1);
	MakeCode	(x=0X62A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62AB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62B7);
	OpHex		(x,	1);
	MakeCode	(0X62BE);
	MakeCode	(x=0X62C3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X62C6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X62C9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X62CF);
	OpHex		(x,	1);
	MakeCode	(x=0X62D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62DF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62EE);
	OpHex		(x,	1);
	MakeCode	(0X62F4);
	MakeCode	(x=0X6306);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6319);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6321);
	OpHex		(x,	1);
	MakeCode	(x=0X6331);
	OpStkvar	(x,	1);
	MakeComm	(0X6334,	"switch 2 cases ");
	MakeCode	(x=0X6334);
	OpHex		(x,	1);
	MakeCode	(x=0X6340);
	OpHex		(x,	1);
	MakeComm	(0X6342,	"switch jump");
	MakeCode	(x=0X6342);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X6347,	"case 0x2");
	MakeCode	(x=0X635F);
	OpHex		(x,	1);
	MakeCode	(x=0X6367);
	OpHex		(x,	1);
	MakeCode	(x=0X6383);
	OpHex		(x,	1);
	MakeCode	(x=0X638B);
	OpHex		(x,	1);
	MakeCode	(x=0X6390);
	OpStkvar	(x,	1);
	MakeCode	(x=0X63A0);
	OpHex		(x,	1);
	MakeRptCmt	(0X63A6,	"case 0x3");
	MakeCode	(0X63A6);
	MakeCode	(x=0X63BD);
	OpHex		(x,	1);
	MakeCode	(x=0X63C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X63CE);
	OpHex		(x,	1);
	MakeCode	(0X63D3);
	MakeCode	(x=0X63EC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X63F0);
	OpHex		(x,	1);
	MakeCode	(x=0X63F3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X63FC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6402);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6406);
	OpStkvar	(x,	0);
	MakeCode	(x=0X640A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X641A);
	OpHex		(x,	1);
	MakeComm	(0X641F,	"jump table for switch statement");
	MakeWord	(x=0X641F);
	MakeArray	(x,	0X2);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X6423,	"default");
	MakeCode	(0X6423);
	MakeCode	(x=0X644E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6451);
	OpHex		(x,	1);
	MakeRptCmt	(0X6469,	"COMMAND");
	MakeRptCmt	(0X646F,	"SERIAL COMMAND");
	MakeCode	(0X6476);
	MakeCode	(x=0X647B);
	OpHex		(x,	1);
	MakeCode	(x=0X6484);
	OpStkvar	(x,	0);
	MakeCode	(0X648B);
	MakeCode	(x=0X64A2);
	OpHex		(x,	1);
	MakeCode	(x=0X64BE);
	OpHex		(x,	1);
	MakeCode	(x=0X64CA);
	OpHex		(x,	1);
	MakeCode	(x=0X64CD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X64D1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X64D4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X64E6);
	OpHex		(x,	1);
	MakeCode	(x=0X64F2);
	OpStkvar	(x,	0);
	MakeCode	(0X64FC);
	MakeCode	(x=0X650B);
	OpHex		(x,	1);
	MakeCode	(x=0X6513);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6530);
	OpHex		(x,	1);
	MakeCode	(0X6538);
	MakeCode	(0X653C);
	MakeCode	(x=0X6541);
	OpHex		(x,	1);
	MakeCode	(x=0X6547);
	OpStkvar	(x,	0);
	MakeCode	(0X654E);
	MakeCode	(x=0X6565);
	OpHex		(x,	1);
	MakeCode	(x=0X6571);
	OpHex		(x,	1);
	MakeCode	(x=0X6574);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6578);
	OpStkvar	(x,	0);
	MakeCode	(x=0X657B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X658D);
	OpHex		(x,	1);
	MakeCode	(x=0X6599);
	OpStkvar	(x,	0);
	MakeCode	(0X65A3);
	MakeCode	(x=0X65B2);
	OpHex		(x,	1);
	MakeCode	(x=0X65BA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X65D7);
	OpHex		(x,	1);
	MakeCode	(0X65DF);
	MakeCode	(0X65E2);
	MakeCode	(x=0X65E7);
	OpHex		(x,	1);
	MakeCode	(x=0X65EA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X65ED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X65F3);
	OpHex		(x,	1);
	MakeCode	(x=0X6600);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6603);
	OpStkvar	(x,	1);
	MakeCode	(x=0X660F);
	OpHex		(x,	1);
	MakeCode	(x=0X6619);
	OpHex		(x,	1);
	MakeCode	(x=0X661B);
	OpHex		(x,	1);
	MakeCode	(x=0X6627);
	OpStkvar	(x,	1);
	MakeCode	(x=0X662A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6636);
	OpHex		(x,	1);
	MakeCode	(x=0X6640);
	OpHex		(x,	1);
	MakeCode	(x=0X6642);
	OpHex		(x,	1);
	MakeCode	(x=0X6652);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6655);
	OpStkvar	(x,	0);
	MakeCode	(0X6660);
	MakeCode	(x=0X6665);
	OpHex		(x,	1);
	MakeCode	(x=0X6668);
	OpStkvar	(x,	0);
	MakeCode	(x=0X666B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6671);
	OpHex		(x,	1);
	MakeCode	(x=0X6679);
	OpStkvar	(x,	1);
	MakeCode	(x=0X667C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6688);
	OpHex		(x,	1);
	MakeCode	(x=0X6693);
	OpStkvar	(x,	0);
	MakeCode	(0X669A);
	MakeCode	(x=0X669D);
	OpStkvar	(x,	1);
	MakeCode	(0X66B4);
	MakeName	(0X66B4,	"PRINT_BANNER");
	MakeCode	(x=0X66C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X66C3);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X66CA);
	OpHex		(x,	1);
	MakeCode	(0X66D0);
	MakeCode	(0X66D8);
	MakeCode	(x=0X66DD);
	OpHex		(x,	1);
	MakeCode	(x=0X66E4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X66EB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X66FB);
	OpHex		(x,	1);
	MakeCode	(x=0X670F);
	OpHex		(x,	1);
	MakeCode	(x=0X6717);
	OpHex		(x,	1);
	MakeCode	(x=0X6747);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6753);
	OpHex		(x,	1);
	MakeCode	(x=0X6758);
	OpStkvar	(x,	1);
	MakeCode	(x=0X675B);
	OpHex		(x,	1);
	MakeCode	(x=0X675D);
	OpHex		(x,	1);
	MakeCode	(x=0X6767);
	OpHex		(x,	1);
	MakeCode	(x=0X676F);
	OpHex		(x,	1);
	MakeCode	(x=0X6772);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6776);
	OpStkvar	(x,	0);
	MakeCode	(0X678D);
	MakeCode	(x=0X67A5);
	OpHex		(x,	1);
	MakeCode	(x=0X67B4);
	OpHex		(x,	1);
	MakeCode	(x=0X67D4);
	OpHex		(x,	1);
	MakeCode	(x=0X67DC);
	OpHex		(x,	1);
	MakeCode	(x=0X6818);
	OpHex		(x,	1);
	MakeCode	(x=0X682E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6833);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6839);
	OpHex		(x,	1);
	MakeCode	(x=0X683F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6846);
	OpStkvar	(x,	1);
	MakeCode	(0X6850);
	MakeName	(0X6850,	"CTRL_BITS_sub_6850");
	MakeCode	(x=0X6859);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6861);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6868);
	OpHex		(x,	1);
	MakeCode	(0X686E);
	MakeCode	(x=0X687A);
	OpHex		(x,	1);
	MakeCode	(x=0X687D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6880);
	OpHex		(x,	1);
	MakeCode	(x=0X6894);
	OpHex		(x,	1);
	MakeCode	(0X689A);
	MakeCode	(x=0X68AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X68AF);
	OpHex		(x,	1);
	MakeCode	(0X68D6);
	MakeName	(0X68D6,	"IOC_sub_68D6");
	MakeCode	(x=0X68DB);
	OpHex		(x,	1);
	MakeCode	(x=0X68DE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X68E3);
	OpStkvar	(x,	0);
	MakeCode	(0X68EA);
	MakeCode	(x=0X68F8);
	OpHex		(x,	1);
	MakeCode	(x=0X6904);
	OpHex		(x,	1);
	MakeCode	(x=0X6907);
	OpStkvar	(x,	1);
	MakeCode	(x=0X690B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X690E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6914);
	OpStkvar	(x,	0);
	MakeCode	(x=0X691A);
	OpStkvar	(x,	0);
	MakeCode	(0X6924);
	MakeCode	(x=0X6927);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6950);
	OpHex		(x,	1);
	MakeCode	(x=0X6953);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6958);
	OpStkvar	(x,	0);
	MakeCode	(0X695F);
	MakeCode	(x=0X696E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X697A);
	OpHex		(x,	1);
	MakeCode	(x=0X697D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6981);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6984);
	OpStkvar	(x,	0);
	MakeCode	(x=0X698A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6990);
	OpStkvar	(x,	0);
	MakeCode	(0X699A);
	MakeCode	(x=0X699D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X69BC);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X69C6);
	OpHex		(x,	1);
	MakeCode	(0X69CC);
	MakeCode	(x=0X69E3);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X69EA);
	OpHex		(x,	1);
	MakeCode	(x=0X69F5);
	OpHex		(x,	1);
	MakeCode	(0X69FC);
	MakeName	(0X69FC,	"PIT_STH_sub_69FC");
	MakeCode	(x=0X6A01);
	OpHex		(x,	1);
	MakeCode	(x=0X6A0F);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6A16);
	OpHex		(x,	1);
	MakeCode	(x=0X6A19);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6A1E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6A21);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6A28);
	OpHex		(x,	1);
	MakeCode	(x=0X6A2B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6A34);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6A3B);
	OpHex		(x,	1);
	MakeCode	(x=0X6A4D);
	OpHex		(x,	1);
	MakeCode	(x=0X6A5D);
	OpHex		(x,	1);
	MakeCode	(x=0X6A73);
	OpHex		(x,	1);
	MakeCode	(x=0X6A8F);
	OpHex		(x,	1);
	MakeCode	(x=0X6A98);
	OpHex		(x,	1);
	MakeCode	(x=0X6AA3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6AB2);
	OpHex		(x,	1);
	MakeCode	(0X6ABE);
	MakeCode	(x=0X6ADA);
	OpHex		(x,	1);
	MakeCode	(x=0X6ADD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6AE1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6AE4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6AF6);
	OpHex		(x,	1);
	MakeCode	(x=0X6B02);
	OpStkvar	(x,	0);
	MakeCode	(0X6B0C);
	MakeCode	(x=0X6B1B);
	OpHex		(x,	1);
	MakeCode	(x=0X6B2F);
	OpHex		(x,	1);
	MakeCode	(x=0X6B52);
	OpHex		(x,	1);
	MakeCode	(0X6B57);
	MakeCode	(x=0X6B67);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6B73);
	OpHex		(x,	1);
	MakeCode	(x=0X6B8F);
	OpHex		(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	MakeCode	(x=0X6B9E);
	OpHex		(x,	1);
	MakeCode	(0X6BAE);
	MakeCode	(0X6BB6);
	MakeCode	(x=0X6BBB);
	OpHex		(x,	1);
	MakeCode	(x=0X6BBE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6BC5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6BC8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6BCE);
	OpHex		(x,	1);
	MakeCode	(x=0X6BD5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6BDB);
	OpHex		(x,	1);
	MakeCode	(x=0X6BDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6BE2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6BE5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6BFD);
	OpHex		(x,	1);
	MakeCode	(x=0X6C05);
	OpHex		(x,	1);
	MakeCode	(x=0X6C09);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6C13);
	OpHex		(x,	1);
	MakeCode	(x=0X6C16);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6C1F);
	OpHex		(x,	1);
	MakeCode	(0X6C26);
	MakeCode	(x=0X6C29);
	OpStkvar	(x,	1);
	MakeCode	(0X6C2F);
	MakeCode	(0X6C3A);
	MakeName	(0X6C3A,	"OUTW");
	MakeCode	(x=0X6C3D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6C40);
	OpStkvar	(x,	1);
	MakeCode	(0X6C46);
	MakeName	(0X6C46,	"OUTB");
	MakeCode	(x=0X6C49);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6C4C);
	OpStkvar	(x,	1);
	MakeCode	(0X6C52);
	MakeName	(0X6C52,	"SET_CONTROL_BITS");
	MakeCode	(x=0X6C55);
	OpEnumEx		(x,	0,	GetEnum("IO_PORT"),0);
	MakeCode	(0X6C58);
	MakeCode	(0X6C64);
	MakeCode	(x=0X6C69);
	OpHex		(x,	1);
	MakeCode	(x=0X6C73);
	OpHex		(x,	1);
	MakeCode	(x=0X6C76);
	OpStkvar	(x,	1);
	MakeCode	(0X6C7C);
	MakeCode	(x=0X6C81);
	OpHex		(x,	1);
	MakeCode	(x=0X6C8B);
	OpHex		(x,	1);
	MakeCode	(x=0X6C8E);
	OpStkvar	(x,	1);
	MakeCode	(0X6C94);
	MakeCode	(0X6C9E);
	MakeCode	(x=0X6CAA);
	OpHex		(x,	1);
	MakeCode	(0X6CB0);
	MakeName	(0X6CB0,	"MMU_sub_6CB0");
	MakeCode	(x=0X6CB5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6CBB);
	OpStkvar	(x,	0);
	MakeCode	(0X6CC9);
	MakeCode	(x=0X6CDE);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6CE5);
	OpHex		(x,	1);
	MakeCode	(x=0X6CEB);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6CF2);
	OpHex		(x,	1);
	MakeCode	(x=0X6CF5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6CF8);
	OpStkvar	(x,	1);
	MakeCode	(0X6D13);
	MakeCode	(0X6D1C);
	MakeCode	(x=0X6D21);
	OpHex		(x,	1);
	MakeCode	(x=0X6D24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6D27);
	OpHex		(x,	1);
	MakeCode	(x=0X6D2D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6D34);
	OpHex		(x,	1);
	MakeCode	(x=0X6D39);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6D3C);
	OpHex		(x,	1);
	MakeCode	(x=0X6D43);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6D49);
	OpHex		(x,	1);
	MakeCode	(0X6D50);
	MakeCode	(0X6D64);
	MakeName	(0X6D64,	"PIC_STH_sub_6D64");
	MakeCode	(x=0X6D6D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6D77);
	OpHex		(x,	1);
	MakeCode	(x=0X6D7A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6D7D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6D83);
	OpHex		(x,	1);
	MakeCode	(x=0X6D8A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6D90);
	OpHex		(x,	1);
	MakeCode	(x=0X6D97);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6D9D);
	OpHex		(x,	1);
	MakeCode	(0X6DA4);
	MakeCode	(x=0X6DA9);
	OpHex		(x,	1);
	MakeCode	(x=0X6DAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6DAF);
	OpHex		(x,	1);
	MakeCode	(x=0X6DB5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6DBC);
	OpHex		(x,	1);
	MakeCode	(x=0X6DBF);
	OpHex		(x,	1);
	MakeCode	(x=0X6DC2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6DC5);
	OpHex		(x,	1);
	MakeCode	(x=0X6DCC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6DD2);
	OpHex		(x,	1);
	MakeCode	(0X6DD8);
	MakeCode	(x=0X6DDD);
	OpHex		(x,	1);
	MakeCode	(x=0X6DE4);
	OpHex		(x,	1);
	MakeCode	(x=0X6DE8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6DEE);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X6DF5);
	OpHex		(x,	1);
	MakeCode	(x=0X6E00);
	OpHex		(x,	1);
	MakeCode	(x=0X6E04);
	OpHex		(x,	1);
	MakeCode	(x=0X6E17);
	OpHex		(x,	1);
	MakeCode	(0X6E1D);
	MakeCode	(0X6E26);
	MakeCode	(0X6E2C);
	MakeName	(0X6E2C,	"RET_sub_6E2C");
	MakeCode	(0X6E44);
	MakeCode	(0X6E46);
	MakeCode	(0X6E4A);
	MakeCode	(0X6E4E);
	MakeCode	(x=0X6E51);
	OpStkvar	(x,	1);
	MakeCode	(0X6E58);
	MakeCode	(x=0X6E5D);
	OpHex		(x,	1);
	MakeCode	(x=0X6E6E);
	OpHex		(x,	1);
	MakeCode	(x=0X6E78);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E7B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E81);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E84);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E87);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6E8F);
	OpHex		(x,	1);
	MakeCode	(x=0X6E97);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E9A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6E9D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6EA0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6EA6);
	OpHex		(x,	1);
	MakeCode	(x=0X6EA9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6EAF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6EB7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6EBA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6EC1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6EC4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6EC7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6ECB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6ECE);
	OpStkvar	(x,	0);
	MakeCode	(0X6ED8);
	MakeName	(0X6ED8,	"READ_BYTE");
	MakeCode	(0X6EE2);
	MakeName	(0X6EE2,	"READ_WORD");
	MakeCode	(0X6EEA);
	MakeName	(0X6EEA,	"WRITE_BYTE");
	MakeCode	(0X6EF5);
	MakeName	(0X6EF5,	"WRITE_WORD");
	MakeCode	(0X6F00);
	MakeName	(0X6F00,	"FAR_ACCESS");
	MakeCode	(x=0X6F06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6F09);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6F12);
	OpStkvar	(x,	1);
	MakeCode	(0X6F1B);
	MakeName	(0X6F1B,	"RET_POP_DI_ES_BP");
	MakeCode	(0X6F20);
	MakeCode	(x=0X6F25);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6F28);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6F2B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6F31);
	OpHex		(x,	1);
	MakeCode	(x=0X6F34);
	OpStkvar	(x,	0);
	MakeCode	(x=0X6F3B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6F3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6F4A);
	OpHex		(x,	1);
	MakeCode	(0X6F50);
	MakeWord	(0X6F52);
	MakeWord	(0X6F54);
	MakeWord	(0X6F56);
	MakeWord	(0X6F58);
	MakeCode	(x=0X6F5B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6F61);
	OpHex		(x,	1);
	MakeCode	(x=0X6F63);
	OpHex		(x,	1);
	MakeCode	(x=0X6F67);
	OpStkvar	(x,	0);
	MakeWord	(0X6F6A);
	MakeWord	(0X6F6C);
	MakeWord	(0X6F6E);
	MakeCode	(0X6F70);
	MakeWord	(0X6F72);
	MakeWord	(0X6F74);
	MakeWord	(0X6F76);
	MakeWord	(0X6F78);
	MakeWord	(0X6F7A);
	MakeWord	(0X6F7C);
	MakeWord	(0X6F7E);
	MakeWord	(0X6F80);
	MakeWord	(0X6F82);
	MakeWord	(0X6F84);
	MakeWord	(0X6F86);
	MakeCode	(x=0X6F88);
	OpHex		(x,	1);
	MakeWord	(0X6F8C);
	MakeWord	(0X6F8E);
	MakeWord	(0X6F90);
	MakeWord	(0X6F92);
	MakeCode	(x=0X6F94);
	OpHex		(x,	1);
	MakeWord	(0X6F98);
	MakeCode	(0X6F9A);
	MakeCode	(x=0X6FA7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6FAB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6FAF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6FB5);
	OpHex		(x,	1);
	MakeCode	(x=0X6FB7);
	OpHex		(x,	1);
	MakeCode	(x=0X6FBD);
	OpHex		(x,	1);
	MakeCode	(x=0X6FC9);
	OpHex		(x,	1);
	MakeCode	(0X6FCD);
	MakeCode	(0X73CE);
	MakeCode	(x=0X73D3);
	OpHex		(x,	1);
	MakeCode	(x=0X73DA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X73DD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X73E0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X73E3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X73E6);
	OpStkvar	(x,	1);
	MakeCode	(0X73F8);
	MakeCode	(x=0X73FD);
	OpHex		(x,	1);
	MakeCode	(x=0X7400);
	OpStkvar	(x,	1);
	MakeCode	(x=0X740E);
	OpHex		(x,	1);
	MakeCode	(x=0X7410);
	OpHex		(x,	1);
	MakeCode	(x=0X741A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X741D);
	OpStkvar	(x,	0);
	MakeCode	(0X7428);
	MakeName	(0X7428,	"DS_TO_ABS_SEG_OFF");
	MakeCode	(x=0X742D);
	OpHex		(x,	1);
	MakeCode	(x=0X7430);
	OpStkvar	(x,	1);
	MakeCode	(x=0X743E);
	OpHex		(x,	1);
	MakeCode	(x=0X7440);
	OpHex		(x,	1);
	MakeCode	(x=0X744A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X744D);
	OpStkvar	(x,	0);
	MakeCode	(0X7458);
	MakeCode	(0X7460);
	MakeCode	(x=0X7465);
	OpHex		(x,	1);
	MakeCode	(0X7472);
	MakeCode	(x=0X7475);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7487);
	OpHex		(x,	1);
	MakeCode	(x=0X748A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X748E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X749C);
	OpHex		(x,	1);
	MakeCode	(x=0X74AE);
	OpHex		(x,	1);
	MakeCode	(x=0X74D0);
	OpHex		(x,	1);
	MakeCode	(x=0X74DF);
	OpHex		(x,	1);
	MakeCode	(x=0X74E2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X74E5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X74EB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X74F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7502);
	OpHex		(x,	1);
	MakeCode	(x=0X750F);
	OpStkvar	(x,	1);
	MakeCode	(0X751B);
	MakeCode	(0X751E);
	MakeCode	(x=0X7530);
	OpHex		(x,	1);
	MakeCode	(x=0X753A);
	OpHex		(x,	1);
	MakeCode	(x=0X7543);
	OpHex		(x,	1);
	MakeCode	(x=0X7546);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7549);
	OpHex		(x,	1);
	MakeCode	(x=0X754D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7550);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7553);
	OpHex		(x,	1);
	MakeCode	(x=0X7557);
	OpStkvar	(x,	0);
	MakeCode	(x=0X755E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7563);
	OpStkvar	(x,	0);
	MakeCode	(x=0X756C);
	OpStkvar	(x,	1);
	MakeComm	(0X756F,	"switch 6 cases ");
	MakeCode	(x=0X7577);
	OpHex		(x,	1);
	MakeComm	(0X7579,	"switch jump");
	MakeCode	(x=0X7579);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X757E,	"case 0x0");
	MakeCode	(x=0X75A0);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X75A7);
	OpHex		(x,	1);
	MakeRptCmt	(0X75AC,	"case 0x1");
	MakeCode	(x=0X75AC);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X75B3);
	OpHex		(x,	1);
	MakeRptCmt	(0X75B8,	"case 0x2");
	MakeCode	(x=0X75B8);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X75BE,	"case 0x4");
	MakeCode	(x=0X75BE);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeRptCmt	(0X75C4,	"case 0x5");
	MakeCode	(x=0X75C4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeComm	(0X75CA,	"jump table for switch statement");
	MakeWord	(x=0X75CA);
	MakeArray	(x,	0X6);
	OpOff		(x,	0,	0X1000);
	OpOff		(x,	128,	0X1000);
	MakeRptCmt	(0X75D6,	"default");
	MakeCode	(x=0X75D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X75DC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X75DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X75E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X75ED);
	OpStkvar	(x,	1);
	MakeCode	(x=0X75F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X75F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7600);
	OpHex		(x,	1);
	MakeCode	(x=0X7603);
	OpStkvar	(x,	1);
	MakeCode	(x=0X760B);
	OpHex		(x,	1);
	MakeCode	(x=0X760E);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7615);
	OpHex		(x,	1);
	MakeCode	(x=0X7618);
	OpStkvar	(x,	0);
	MakeCode	(x=0X761E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7624);
	OpStkvar	(x,	0);
	MakeCode	(0X7635);
	MakeCode	(x=0X7638);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7644);
	OpStkvar	(x,	0);
	MakeCode	(x=0X764F);
	OpHex		(x,	1);
	MakeCode	(x=0X7652);
	OpStkvar	(x,	1);
	MakeCode	(0X765A);
	MakeCode	(x=0X765F);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7665);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X766C);
	OpHex		(x,	1);
	MakeCode	(0X7672);
	MakeCode	(x=0X7676);
	OpStkvar	(x,	1);
	MakeCode	(x=0X767E);
	OpHex		(x,	1);
	MakeCode	(0X7688);
	MakeCode	(x=0X768F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7697);
	OpHex		(x,	1);
	MakeCode	(x=0X769E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76AA);
	OpHex		(x,	1);
	MakeCode	(x=0X76B5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76C2);
	OpHex		(x,	1);
	MakeCode	(x=0X76C5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X76D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76D8);
	OpHex		(x,	1);
	MakeCode	(x=0X76E3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76EB);
	OpHex		(x,	1);
	MakeCode	(0X76F5);
	MakeCode	(x=0X76FC);
	OpStkvar	(x,	1);
	MakeCode	(0X7706);
	MakeCode	(x=0X770A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7712);
	OpHex		(x,	1);
	MakeCode	(x=0X7719);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7724);
	OpStkvar	(x,	1);
	MakeCode	(x=0X772C);
	OpHex		(x,	1);
	MakeCode	(0X7732);
	MakeCode	(x=0X773D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7746);
	OpHex		(x,	1);
	MakeCode	(0X774C);
	MakeCode	(0X7755);
	MakeCode	(0X7758);
	MakeCode	(x=0X775D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7760);
	OpHex		(x,	1);
	MakeCode	(x=0X7764);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7769);
	OpStkvar	(x,	1);
	MakeCode	(x=0X776C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7771);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7775);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7778);
	OpStkvar	(x,	1);
	MakeCode	(x=0X777C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X777F);
	OpStkvar	(x,	0);
	MakeCode	(0X7788);
	MakeCode	(x=0X778D);
	OpHex		(x,	1);
	MakeCode	(x=0X7792);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7795);
	OpHex		(x,	1);
	MakeCode	(x=0X779A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77A3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77B2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X77B5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77B9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X77BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77BF);
	OpHex		(x,	1);
	MakeCode	(x=0X77C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77CB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77D4);
	OpStkvar	(x,	0);
	MakeCode	(0X77DA);
	MakeCode	(x=0X77DF);
	OpHex		(x,	1);
	MakeCode	(x=0X77E2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X77E9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77F1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77FF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7810);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7815);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7820);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7825);
	OpStkvar	(x,	1);
	MakeCode	(x=0X782E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7832);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7835);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7838);
	OpStkvar	(x,	0);
	MakeCode	(x=0X783D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7842);
	OpStkvar	(x,	0);
	MakeCode	(x=0X784A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7850);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7854);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7857);
	OpStkvar	(x,	0);
	MakeCode	(x=0X785E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X786A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7872);
	OpStkvar	(x,	1);
	MakeCode	(x=0X787B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7881);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7886);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7889);
	OpStkvar	(x,	1);
	MakeCode	(x=0X788D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7898);
	OpStkvar	(x,	1);
	MakeCode	(x=0X789C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X789F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78A7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78B6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X78B9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78BC);
	OpHex		(x,	1);
	MakeCode	(x=0X78C1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X78C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78DB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X78DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78E3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78EF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X78F9);
	OpHex		(x,	1);
	MakeCode	(x=0X78FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7906);
	OpStkvar	(x,	1);
	MakeCode	(x=0X790E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7912);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7915);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7918);
	OpStkvar	(x,	0);
	MakeCode	(x=0X791D);
	OpStkvar	(x,	0);
	MakeCode	(0X7926);
	MakeCode	(x=0X792F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7932);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7939);
	OpStkvar	(x,	0);
	MakeCode	(x=0X793C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7953);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7956);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7959);
	OpStkvar	(x,	1);
	MakeCode	(x=0X795C);
	OpStkvar	(x,	1);
	MakeCode	(0X7962);
	MakeCode	(x=0X7967);
	OpHex		(x,	1);
	MakeCode	(x=0X796A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X796F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7973);
	OpStkvar	(x,	0);
	MakeCode	(x=0X797B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X798D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7995);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79A0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79A3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79AA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79AF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79BB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79D2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79D5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79DB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79E3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X79F2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79F5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X79FE);
	OpHex		(x,	1);
	MakeCode	(0X7A04);
	MakeCode	(x=0X7A09);
	OpHex		(x,	1);
	MakeCode	(x=0X7A0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A11);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A15);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A1D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A2F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A37);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A42);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A45);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A4C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A4F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A57);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A6C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A6F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A87);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A8A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7A90);
	OpHex		(x,	1);
	MakeCode	(x=0X7A97);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A9A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AA1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7AA4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7AA7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AAB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7AAE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AB6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AC1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AC4);
	OpStkvar	(x,	0);
	MakeCode	(0X7ACC);
	MakeCode	(0X7AD0);
	MakeCode	(x=0X7AD5);
	OpHex		(x,	1);
	MakeCode	(x=0X7AD8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7ADD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AE0);
	OpHex		(x,	1);
	MakeCode	(x=0X7AE2);
	OpHex		(x,	1);
	MakeCode	(x=0X7AE4);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7AE9);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7AF0);
	OpHex		(x,	1);
	MakeCode	(x=0X7AF3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AF7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7AFF);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7B06);
	OpHex		(x,	1);
	MakeCode	(x=0X7B09);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B0F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B14);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B19);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7B20);
	OpHex		(x,	1);
	MakeCode	(x=0X7B23);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B29);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B30);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B38);
	OpOff		(x,	1,	0X7D80);
	OpOff		(x,	129,	0X7D80);
	MakeCode	(x=0X7B3F);
	OpHex		(x,	1);
	MakeCode	(0X7B46);
	MakeCode	(x=0X7B4B);
	OpHex		(x,	1);
	MakeCode	(x=0X7B4E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B51);
	OpHex		(x,	1);
	MakeCode	(x=0X7B57);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B5F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B62);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B65);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B68);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B6B);
	OpHex		(x,	1);
	MakeCode	(x=0X7B6E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B74);
	OpHex		(x,	1);
	MakeCode	(0X7B7A);
	MakeCode	(x=0X7B7F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B88);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X7B8F);
	OpHex		(x,	1);
	MakeCode	(x=0X7B92);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7B9B);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X7BA2);
	OpHex		(x,	1);
	MakeCode	(x=0X7BA5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7BAB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7BB5);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0X7BBC);
	OpHex		(x,	1);
	MakeCode	(0X7BC2);
	MakeCode	(x=0X7BC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BD2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BDA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BDD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BEB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7BFC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7C0D);
	OpStkvar	(x,	1);
	MakeCode	(0X7C15);
	MakeCode	(x=0X7C19);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C23);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7C2F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C38);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7C3E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7C44);
	OpHex		(x,	1);
	MakeCode	(x=0X7C46);
	OpHex		(x,	1);
	MakeCode	(x=0X7C48);
	OpHex		(x,	1);
	MakeCode	(x=0X7C50);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7C5A);
	OpStkvar	(x,	1);
	MakeCode	(0X7C68);
	MakeCode	(x=0X7C6E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C71);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C79);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C85);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C92);
	OpStkvar	(x,	1);
	MakeCode	(0X7C9A);
	MakeCode	(x=0X7CA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CAA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CB1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CD5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CDD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CF9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7D02);
	OpHex		(x,	1);
	MakeCode	(x=0X7D04);
	OpHex		(x,	1);
	MakeCode	(x=0X7D06);
	OpHex		(x,	1);
	MakeCode	(x=0X7D0E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X7D18);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D22);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X7D34);
	OpStkvar	(x,	1);
	MakeCode	(0X7D3C);
	MakeCode	(0X7D3E);
	MakeCode	(0X7D40);
	MakeStr		(0X7E84,	0X7E9C);
	MakeName	(0X7E84,	"aDoYouWantToCon");
	MakeStr		(0X7E9C,	0X7EC3);
	MakeName	(0X7E9C,	"aHardDiskFlagBa");
	MakeStr		(0X7EC3,	0X7ED2);
	MakeName	(0X7EC3,	"aDiskErrorMap");
	MakeStr		(0X7ED2,	0X7EE9);
	MakeName	(0X7ED2,	"aCylinderHeadSe");
	MakeStr		(0X7EE9,	0X7F00);
	MakeName	(0X7EE9,	"aEnterCylinderN");
	MakeStr		(0X7F00,	0X7F1A);
	MakeName	(0X7F00,	"aCylinder0IsPro");
	MakeStr		(0X7F1A,	0X7F2D);
	MakeName	(0X7F1A,	"aEnterHeadNumbe");
	MakeStr		(0X7F2D,	0X7F3F);
	MakeName	(0X7F2D,	"aEnterByteCount");
	MakeStr		(0X7F3F,	0X7F54);
	MakeName	(0X7F3F,	"aEnterSectorNum");
	MakeStr		(0X7F54,	0X7F69);
	MakeName	(0X7F54,	"aFlaggingSector");
	MakeStr		(0X7F6A,	0X7F70);
	MakeName	(0X7F6A,	"PASSWORD");
	MakeStr		(0X7F70,	0X7F7F);
	MakeName	(0X7F70,	"aYourPassword?");
	MakeStr		(0X7F7F,	0X7F82);
	MakeStr		(0X7F82,	0X7F9B);
	MakeName	(0X7F82,	"aDoYouWantToC_0");
	MakeStr		(0X7F9B,	0X7FA0);
	MakeName	(0X7F9B,	"a5d");
	MakeStr		(0X7FA0,	0X7FAA);
	MakeName	(0X7FA0,	"a5d_0");
	MakeStr		(0X7FAA,	0X7FD1);
	MakeName	(0X7FAA,	"aAtCylinderDHea");
	MakeStr		(0X7FD1,	0X7FFF);
	MakeName	(0X7FD1,	"aExpectedCylind");
	MakeStr		(0X8000,	0X8007);
	MakeName	(0X8000,	"a4d");
	MakeStr		(0X8007,	0X800F);
	MakeName	(0X8007,	"a4d_0");
	MakeStr		(0X800F,	0X8031);
	MakeName	(0X800F,	"aEnterSeekFirst");
	MakeStr		(0X8031,	0X8052);
	MakeName	(0X8031,	"aEnterSeekLastC");
	MakeStr		(0X8052,	0X8088);
	MakeName	(0X8052,	"aDoYouWantTestV");
	MakeName	(0X8088,	"UNUSED_INDIR_unk_8088");
	MakeStr		(0X808C,	0X80A4);
	MakeName	(0X808C,	"aDiskVerificati");
	MakeStr		(0X80A4,	0X80C8);
	MakeName	(0X80A4,	"aInitialization");
	MakeStr		(0X80C8,	0X80D2);
	MakeName	(0X80C8,	"aHitCrToContinu");
	MakeStr		(0X80D2,	0X80E1);
	MakeName	(0X80D2,	"aToContinue");
	MakeStr		(0X80E1,	0X8108);
	MakeName	(0X80E1,	"aHardDiskTestFa");
	MakeStr		(0X8108,	0X811A);
	MakeName	(0X8108,	"aFormatDiskDriv");
	MakeStr		(0X811A,	0X813B);
	MakeName	(0X811A,	"aVerifyAddresse");
	MakeStr		(0X813B,	0X815A);
	MakeName	(0X813B,	"aSeekTestWithOp");
	MakeStr		(0X815A,	0X816C);
	MakeName	(0X815A,	"aWriteEntireDis");
	MakeStr		(0X816C,	0X817D);
	MakeName	(0X816C,	"aReadEntireDisk");
	MakeStr		(0X817D,	0X81A1);
	MakeName	(0X817D,	"aSetFlagByteFor");
	MakeStr		(0X81A1,	0X81C1);
	MakeName	(0X81A1,	"aHardDiskReadWr");
	MakeStr		(0X81C1,	0X81D8);
	MakeName	(0X81C1,	"aReadASpecificS");
	MakeStr		(0X81D8,	0X81EF);
	MakeName	(0X81D8,	"aDriveUnitResel");
	MakeStr		(0X81EF,	0X8217);
	MakeName	(0X81EF,	"aSetUpParkingPo");
	MakeStr		(0X8217,	0X8232);
	MakeName	(0X8217,	"aTerminateThisT");
	MakeStr		(0X8232,	0X8272);
	MakeName	(0X8232,	"aSpecialFunctio");
	MakeStr		(0X8272,	0X8299);
	MakeName	(0X8272,	"aOptionFunction");
	MakeStr		(0X8299,	0X82B0);
	MakeName	(0X8299,	"aEnterCylinde_0");
	MakeStr		(0X82B0,	0X82C5);
	MakeName	(0X82B0,	"aDriveHeadsPark");
	MakeStr		(0X82C5,	0X82E6);
	MakeName	(0X82C5,	"aSpecifyTheHard");
	MakeStr		(0X82E6,	0X82F1);
	MakeName	(0X82E6,	"aFirstDisk");
	MakeStr		(0X82F1,	0X82FD);
	MakeName	(0X82F1,	"aSecondDisk");
	MakeStr		(0X82FD,	0X8326);
	MakeName	(0X82FD,	"aAreYouSureDriv");
	MakeStr		(0X8326,	0X8348);
	MakeName	(0X8326,	"aSpecifyTheSyst");
	MakeStr		(0X8348,	0X8390);
	MakeName	(0X8348,	"aAAcs586104hd30");
	MakeStr		(0X8390,	0X83D8);
	MakeName	(0X8390,	"aCAcs586306hd51");
	MakeStr		(0X83D8,	0X841D);
	MakeName	(0X83D8,	"aEHH20Mb4hd612c");
	MakeStr		(0X841D,	0X8425);
	MakeName	(0X841D,	"aEnter");
	MakeStr		(0X8425,	0X8438);
	MakeName	(0X8425,	"aInvalidEntry");
	MakeStr		(0X8438,	0X843D);
	MakeName	(0X8438,	"aC");
	MakeStr		(0X843D,	0X845F);
	MakeName	(0X843D,	"aEnterNumberOfH");
	MakeStr		(0X845F,	0X8485);
	MakeName	(0X845F,	"aEnterNumberOfC");
	MakeStr		(0X8486,	0X849B);
	MakeName	(0X8486,	"aMiscellaneousM");
	MakeStr		(0X849B,	0X84AC);
	MakeName	(0X849B,	"aDisplayASector");
	MakeStr		(0X84AC,	0X84C0);
	MakeName	(0X84AC,	"aTerminateThi_0");
	MakeStr		(0X84C0,	0X84D7);
	MakeName	(0X84C0,	"aEnterCylinde_1");
	MakeStr		(0X84D7,	0X84EA);
	MakeName	(0X84D7,	"aEnterHeadNum_0");
	MakeStr		(0X84EA,	0X84FF);
	MakeName	(0X84EA,	"aEnterSectorN_0");
	MakeStr		(0X8500,	0X8528);
	MakeName	(0X8500,	"aHitAnyKeyToDis");
	MakeStr		(0X8528,	0X8543);
	MakeName	(0X8528,	"aHitAnyKeyToCon");
	MakeStr		(0X8544,	0X857D);
	MakeName	(0X8544,	"aThisTestWillEr");
	MakeStr		(0X857E,	0X859E);
	MakeName	(0X857E,	"aEntryNumberOut");
	MakeStr		(0X859E,	0X85B7);
	MakeName	(0X859E,	"aInvalidEntry_0");
	MakeStr		(0X85B8,	0X85DF);
	MakeName	(0X85B8,	"aErrorNotWithin");
	MakeStr		(0X85E0,	0X860B);
	MakeName	(0X85E0,	"aErrorByteNotWi");
	MakeStr		(0X860C,	0X8637);
	MakeName	(0X860C,	"a____SpecifiedS");
	MakeStr		(0X8638,	0X8681);
	MakeName	(0X8638,	"aDoNotRunThisTe");
	MakeStr		(0X8682,	0X86B9);
	MakeName	(0X8682,	"aThisTestWill_0");
	MakeStr		(0X86BA,	0X86D2);
	MakeName	(0X86BA,	"aEntireDiskForm");
	MakeStr		(0X86D2,	0X86F1);
	MakeName	(0X86D2,	"aSectorVerifica");
	MakeStr		(0X86F2,	0X870A);
	MakeName	(0X86F2,	"aAddressError");
	MakeStr		(0X870A,	0X8723);
	MakeName	(0X870A,	"aPressAnyKeyToS");
	MakeStr		(0X8724,	0X8749);
	MakeName	(0X8724,	"aHitEscToEndThi");
	MakeStr		(0X874A,	0X8779);
	MakeName	(0X874A,	"a____StatusMess");
	MakeStr		(0X877A,	0X879D);
	MakeName	(0X877A,	"aDisplayHardDis");
	MakeStr		(0X879E,	0X87C3);
	MakeName	(0X879E,	"a____PreviousFl");
	MakeStr		(0X87C4,	0X87E4);
	MakeName	(0X87C4,	"aSpecifyPattern");
	MakeStr		(0X87E4,	0X880F);
	MakeName	(0X87E4,	"a1ForA256ByteHe");
	MakeStr		(0X8810,	0X8862);
	MakeName	(0X8810,	"aOrSelectAOneOr");
	MakeStr		(0X8862,	0X8878);
	MakeName	(0X8862,	"aStatusError");
	MakeStr		(0X8878,	0X888E);
	MakeName	(0X8878,	"aCompareError");
	MakeStr		(0X888E,	0X88A9);
	MakeName	(0X888E,	"aFlaggedBadSect");
	MakeStr		(0X88AA,	0X88B8);
	MakeName	(0X88AA,	"a8089Failed");
	MakeStr		(0X88B8,	0X88C5);
	MakeName	(0X88B8,	"aIdcLoaded");
	MakeStr		(0X88C6,	0X88F9);
	MakeName	(0X88C6,	"aHitControlAToT");
	MakeStr		(0X88FA,	0X890C);
	MakeName	(0X88FA,	"aCylinderCount");
	MakeStr		(0X890C,	0X8936);
	MakeName	(0X890C,	"aHitAnyKeyToD_0");
	MakeStr		(0X8936,	0X895E);
	MakeName	(0X8936,	"a____FillEntire");
	MakeStr		(0X895E,	0X898A);
	MakeName	(0X895E,	"aThisDiskHasNoH");
	MakeStr		(0X898A,	0X89B3);
	MakeName	(0X898A,	"a____DiskReliab");
	MakeStr		(0X89B4,	0X89CD);
	MakeName	(0X89B4,	"aPatternNotAcce");
	MakeStr		(0X89CE,	0X89E3);
	MakeName	(0X89CE,	"aSoftErrorSumma");
	MakeStr		(0X89E4,	0X8A0F);
	MakeName	(0X89E4,	"aCylinderHead_0");
	MakeStr		(0X8A10,	0X8A25);
	MakeName	(0X8A10,	"aHardErrorSumma");
	MakeStr		(0X8A26,	0X8A40);
	MakeName	(0X8A26,	"aNoSoftErrorsRe");
	MakeStr		(0X8A40,	0X8A5A);
	MakeName	(0X8A40,	"aNoHardErrorsRe");
	MakeStr		(0X8A5A,	0X8A72);
	MakeName	(0X8A5A,	"aSoftErrorStati");
	MakeStr		(0X8A72,	0X8AB0);
	MakeName	(0X8A72,	"aPatternWriteFa");
	MakeStr		(0X8AB0,	0X8AC9);
	MakeName	(0X8AB0,	"aHardErrorStati");
	MakeStr		(0X8ACA,	0X8AE8);
	MakeName	(0X8ACA,	"aEntireDiskWrit");
	MakeStr		(0X8AE8,	0X8B22);
	MakeName	(0X8AE8,	"aInsertAdxDiske");
	MakeStr		(0X8B22,	0X8B32);
	MakeName	(0X8B22,	"aSelectPattern");
	MakeStr		(0X8B32,	0X8B63);
	MakeName	(0X8B32,	"aReadOperationW");
	MakeStr		(0X8B63,	0X8B6E);
	MakeName	(0X8B63,	"aCyl4d");
	MakeStr		(0X8B6E,	0X8B8F);
	MakeName	(0X8B6E,	"aCyl4dHd2dSec3d");
	MakeStr		(0X8B8F,	0X8BB0);
	MakeName	(0X8B8F,	"aCyl4dHd2dSec_0");
	MakeStr		(0X8BB0,	0X8BC6);
	MakeName	(0X8BB0,	"aRecNotFound");
	MakeStr		(0X8BC6,	0X8BE7);
	MakeName	(0X8BC6,	"aCyl4dHd2dSec_1");
	MakeStr		(0X8BE7,	0X8BF9);
	MakeName	(0X8BE7,	"aCrcError");
	MakeComm	(0X8BFA,	"        lpd     ga,[pp].4h");
	MakeRptCmt	(0X8BFA,	"nop nop nop");
	MakeByte	(0X8BFA);
	MakeArray	(0X8BFA,	0X3);
	MakeName	(0X8BFA,	"IOP");
	MakeComm	(0X8BFD,	"        jzb     [ga].0h,x8c0e");
	MakeByte	(0X8BFD);
	MakeArray	(0X8BFD,	0X4);
	MakeComm	(0X8C01,	"        movi    gb,31eh");
	MakeByte	(0X8C01);
	MakeArray	(0X8C01,	0X4);
	MakeComm	(0X8C05,	"        movi    gc,31eh");
	MakeByte	(0X8C05);
	MakeArray	(0X8C05,	0X4);
	MakeComm	(0X8C09,	"        lcall   [gc].16h,x8df5");
	MakeByte	(0X8C09);
	MakeArray	(0X8C09,	0X5);
	MakeComm	(0X8C0E,	"x8c0e:  lpd     ga,[pp].8h");
	MakeByte	(0X8C0E);
	MakeArray	(0X8C0E,	0X3);
	MakeComm	(0X8C11,	"        jzb     [ga].0h,x8c22");
	MakeByte	(0X8C11);
	MakeArray	(0X8C11,	0X4);
	MakeComm	(0X8C15,	"        movi    gb,346h");
	MakeByte	(0X8C15);
	MakeArray	(0X8C15,	0X4);
	MakeComm	(0X8C19,	"        movi    gc,346h");
	MakeByte	(0X8C19);
	MakeArray	(0X8C19,	0X4);
	MakeComm	(0X8C1D,	"        lcall   [gc].16h,x8df5");
	MakeByte	(0X8C1D);
	MakeArray	(0X8C1D,	0X5);
	MakeComm	(0X8C22,	"x8c22:  movi    ga,0ffd0h");
	MakeByte	(0X8C22);
	MakeArray	(0X8C22,	0X4);
	MakeComm	(0X8C26,	"        movi    gc,31eh");
	MakeByte	(0X8C26);
	MakeArray	(0X8C26,	0X4);
	MakeComm	(0X8C2A,	"        jzb     [gc].0h,x8c44");
	MakeByte	(0X8C2A);
	MakeArray	(0X8C2A,	0X4);
	MakeComm	(0X8C2E,	"        lcall   [gc].16h,x8e1f");
	MakeByte	(0X8C2E);
	MakeArray	(0X8C2E,	0X5);
	MakeComm	(0X8C33,	"        jnbt    [gc].0h,5,x8c3f");
	MakeByte	(0X8C33);
	MakeArray	(0X8C33,	0X4);
	MakeComm	(0X8C37,	"        lcall   [gc].1ah,x8e6c");
	MakeByte	(0X8C37);
	MakeArray	(0X8C37,	0X5);
	MakeComm	(0X8C3C,	"        jmp     x8c44");
	MakeByte	(0X8C3C);
	MakeArray	(0X8C3C,	0X3);
	MakeComm	(0X8C3F,	"x8c3f:  lcall   [gc].1ah,x8e45");
	MakeByte	(0X8C3F);
	MakeArray	(0X8C3F,	0X5);
	MakeComm	(0X8C44,	"x8c44:  movi    gc,346h");
	MakeByte	(0X8C44);
	MakeArray	(0X8C44,	0X4);
	MakeComm	(0X8C48,	"        jzb     [gc].0h,x8c62");
	MakeByte	(0X8C48);
	MakeArray	(0X8C48,	0X4);
	MakeComm	(0X8C4C,	"        lcall   [gc].16h,x8e1f");
	MakeByte	(0X8C4C);
	MakeArray	(0X8C4C,	0X5);
	MakeComm	(0X8C51,	"        jnbt    [gc].0h,5,x8c5d");
	MakeByte	(0X8C51);
	MakeArray	(0X8C51,	0X4);
	MakeComm	(0X8C55,	"        lcall   [gc].1ah,x8e6c");
	MakeByte	(0X8C55);
	MakeArray	(0X8C55,	0X5);
	MakeComm	(0X8C5A,	"        jmp     x8c62");
	MakeByte	(0X8C5A);
	MakeArray	(0X8C5A,	0X3);
	MakeComm	(0X8C5D,	"x8c5d:  lcall   [gc].1ah,x8e45");
	MakeByte	(0X8C5D);
	MakeArray	(0X8C5D,	0X5);
	MakeComm	(0X8C62,	"x8c62:  movi    gc,31eh");
	MakeByte	(0X8C62);
	MakeArray	(0X8C62,	0X4);
	MakeComm	(0X8C66,	"        jzb     [gc].0h,x8c9a");
	MakeByte	(0X8C66);
	MakeArray	(0X8C66,	0X4);
	MakeComm	(0X8C6A,	"        jbt     [gc].0h,5,x8c8e");
	MakeByte	(0X8C6A);
	MakeArray	(0X8C6A,	0X4);
	MakeComm	(0X8C6E,	"        lcall   [gc].16h,x8e1f");
	MakeByte	(0X8C6E);
	MakeArray	(0X8C6E,	0X5);
	MakeComm	(0X8C73,	"        jbt     [gc].0h,0,x8c7c");
	MakeByte	(0X8C73);
	MakeArray	(0X8C73,	0X4);
	MakeComm	(0X8C77,	"        lcall   [gc].16h,x8ec5");
	MakeByte	(0X8C77);
	MakeArray	(0X8C77,	0X5);
	MakeComm	(0X8C7C,	"x8c7c:  jnbt    [ga].4h,1,x8c7c");
	MakeByte	(0X8C7C);
	MakeArray	(0X8C7C,	0X4);
	MakeComm	(0X8C80,	"        lcall   [gc].22h,x8cd6");
	MakeByte	(0X8C80);
	MakeArray	(0X8C80,	0X5);
	MakeComm	(0X8C85,	"        jnbt    [gc].0h,0,x8c8e");
	MakeByte	(0X8C85);
	MakeArray	(0X8C85,	0X4);
	MakeComm	(0X8C89,	"        lcall   [gc].16h,x8ef1");
	MakeByte	(0X8C89);
	MakeArray	(0X8C89,	0X5);
	MakeComm	(0X8C8E,	"x8c8e:  movi    ga,31eh");
	MakeByte	(0X8C8E);
	MakeArray	(0X8C8E,	0X4);
	MakeComm	(0X8C92,	"        lpd     gb,[pp].0ch");
	MakeByte	(0X8C92);
	MakeArray	(0X8C92,	0X3);
	MakeComm	(0X8C95,	"        lcall   [gc].16h,x8df5");
	MakeByte	(0X8C95);
	MakeArray	(0X8C95,	0X5);
	MakeComm	(0X8C9A,	"x8c9a:  movi    gc,346h");
	MakeByte	(0X8C9A);
	MakeArray	(0X8C9A,	0X4);
	MakeComm	(0X8C9E,	"        jzb     [gc].0h,x8cd2");
	MakeByte	(0X8C9E);
	MakeArray	(0X8C9E,	0X4);
	MakeComm	(0X8CA2,	"        jbt     [gc].0h,5,x8cc6");
	MakeByte	(0X8CA2);
	MakeArray	(0X8CA2,	0X4);
	MakeComm	(0X8CA6,	"        lcall   [gc].16h,x8e1f");
	MakeByte	(0X8CA6);
	MakeArray	(0X8CA6,	0X5);
	MakeComm	(0X8CAB,	"        jbt     [gc].0h,0,x8cb4");
	MakeByte	(0X8CAB);
	MakeArray	(0X8CAB,	0X4);
	MakeComm	(0X8CAF,	"        lcall   [gc].16h,x8ec5");
	MakeByte	(0X8CAF);
	MakeArray	(0X8CAF,	0X5);
	MakeComm	(0X8CB4,	"x8cb4:  jnbt    [ga].4h,1,x8cb4");
	MakeByte	(0X8CB4);
	MakeArray	(0X8CB4,	0X4);
	MakeComm	(0X8CB8,	"        lcall   [gc].22h,x8cd6");
	MakeByte	(0X8CB8);
	MakeArray	(0X8CB8,	0X5);
	MakeComm	(0X8CBD,	"        jnbt    [gc].0h,0,x8cc6");
	MakeByte	(0X8CBD);
	MakeArray	(0X8CBD,	0X4);
	MakeComm	(0X8CC1,	"        lcall   [gc].16h,x8ef1");
	MakeByte	(0X8CC1);
	MakeArray	(0X8CC1,	0X5);
	MakeComm	(0X8CC6,	"x8cc6:  movi    ga,346h");
	MakeByte	(0X8CC6);
	MakeArray	(0X8CC6,	0X4);
	MakeComm	(0X8CCA,	"        lpd     gb,[pp].10h");
	MakeByte	(0X8CCA);
	MakeArray	(0X8CCA,	0X3);
	MakeComm	(0X8CCD,	"        lcall   [gc].16h,x8df5");
	MakeByte	(0X8CCD);
	MakeArray	(0X8CCD,	0X5);
	MakeComm	(0X8CD2,	"x8cd2:  sintr   ");
	MakeByte	(0X8CD2);
	MakeArray	(0X8CD2,	0X2);
	MakeComm	(0X8CD4,	"        hlt     ");
	MakeByte	(0X8CD4);
	MakeArray	(0X8CD4,	0X2);
	MakeComm	(0X8CD6,	"x8cd6:  ljzb    [gc].0dh,x8d7f");
	MakeByte	(0X8CD6);
	MakeArray	(0X8CD6,	0X5);
	MakeComm	(0X8CDB,	"        movb    ix,[gc].0h");
	MakeByte	(0X8CDB);
	MakeArray	(0X8CDB,	0X3);
	MakeComm	(0X8CDE,	"        andi    ix,7h");
	MakeByte	(0X8CDE);
	MakeArray	(0X8CDE,	0X4);
	MakeComm	(0X8CE2,	"        ljz     ix,x8d7f");
	MakeByte	(0X8CE2);
	MakeArray	(0X8CE2,	0X4);
	MakeComm	(0X8CE6,	"        movbi   [gc].27h,0ffh");
	MakeByte	(0X8CE6);
	MakeArray	(0X8CE6,	0X4);
	MakeComm	(0X8CEA,	"        movi    gb,36eh");
	MakeByte	(0X8CEA);
	MakeArray	(0X8CEA,	0X4);
	MakeComm	(0X8CEE,	"        movi    [gc].1eh,200h");
	MakeByte	(0X8CEE);
	MakeArray	(0X8CEE,	0X5);
	MakeComm	(0X8CF3,	"        jnbt    [gc].0h,0,x8d11");
	MakeByte	(0X8CF3);
	MakeArray	(0X8CF3,	0X4);
	MakeComm	(0X8CF7,	"        movbi   [gc].20h,1h");
	MakeByte	(0X8CF7);
	MakeArray	(0X8CF7,	0X4);
	MakeComm	(0X8CFB,	"        jnbt    [gc].0h,3,x8d08");
	MakeByte	(0X8CFB);
	MakeArray	(0X8CFB,	0X4);
	MakeComm	(0X8CFF,	"        movbi   [gc].20h,9h");
	MakeByte	(0X8CFF);
	MakeArray	(0X8CFF,	0X4);
	MakeComm	(0X8D03,	"        addi    [gc].1eh,5h");
	MakeByte	(0X8D03);
	MakeArray	(0X8D03,	0X5);
	MakeComm	(0X8D08,	"x8d08:  movi    cc,8a28h");
	MakeByte	(0X8D08);
	MakeArray	(0X8D08,	0X4);
	MakeComm	(0X8D0C,	"        wid     8,16");
	MakeByte	(0X8D0C);
	MakeArray	(0X8D0C,	0X2);
	MakeComm	(0X8D0E,	"        jmp     x8d28");
	MakeByte	(0X8D0E);
	MakeArray	(0X8D0E,	0X3);
	MakeComm	(0X8D11,	"x8d11:  movbi   [gc].20h,2h");
	MakeByte	(0X8D11);
	MakeArray	(0X8D11,	0X4);
	MakeComm	(0X8D15,	"        movi    cc,5628h");
	MakeByte	(0X8D15);
	MakeArray	(0X8D15,	0X4);
	MakeComm	(0X8D19,	"        wid     16,8");
	MakeByte	(0X8D19);
	MakeArray	(0X8D19,	0X2);
	MakeComm	(0X8D1B,	"        jnbt    [gc].0h,2,x8d28");
	MakeByte	(0X8D1B);
	MakeArray	(0X8D1B,	0X4);
	MakeComm	(0X8D1F,	"        movbi   [gc].20h,4h");
	MakeByte	(0X8D1F);
	MakeArray	(0X8D1F,	0X4);
	MakeComm	(0X8D23,	"        movi    [gc].1eh,4h");
	MakeByte	(0X8D23);
	MakeArray	(0X8D23,	0X5);
	MakeComm	(0X8D28,	"x8d28:  movi    mc,0fe80h");
	MakeByte	(0X8D28);
	MakeArray	(0X8D28,	0X4);
	MakeComm	(0X8D2C,	"x8d2c:  movb    [ga],[gc].5h");
	MakeByte	(0X8D2C);
	MakeArray	(0X8D2C,	0X5);
	MakeComm	(0X8D31,	"        movp    [gc].12h,gb");
	MakeByte	(0X8D31);
	MakeArray	(0X8D31,	0X3);
	MakeComm	(0X8D34,	"        mov     bc,[gc].1eh");
	MakeByte	(0X8D34);
	MakeArray	(0X8D34,	0X3);
	MakeComm	(0X8D37,	"        xfer    ");
	MakeByte	(0X8D37);
	MakeArray	(0X8D37,	0X2);
	MakeComm	(0X8D39,	"        movb    [ga].6h,[gc].20h");
	MakeByte	(0X8D39);
	MakeArray	(0X8D39,	0X6);
	MakeComm	(0X8D3F,	"        jmcne   [ga].6h,x8d86");
	MakeByte	(0X8D3F);
	MakeArray	(0X8D3F,	0X4);
	MakeComm	(0X8D43,	"        decb    [gc].0dh");
	MakeByte	(0X8D43);
	MakeArray	(0X8D43,	0X3);
	MakeComm	(0X8D46,	"        jzb     [gc].0dh,x8d7f");
	MakeByte	(0X8D46);
	MakeArray	(0X8D46,	0X4);
	MakeComm	(0X8D4A,	"        incb    [gc].5h");
	MakeByte	(0X8D4A);
	MakeArray	(0X8D4A,	0X3);
	MakeComm	(0X8D4D,	"        jnbt    [gc].5h,4,x8d2c");
	MakeByte	(0X8D4D);
	MakeArray	(0X8D4D,	0X4);
	MakeComm	(0X8D51,	"        incb    [gc].4h");
	MakeByte	(0X8D51);
	MakeArray	(0X8D51,	0X3);
	MakeComm	(0X8D54,	"        movb    mc,[gc].21h");
	MakeByte	(0X8D54);
	MakeArray	(0X8D54,	0X3);
	MakeComm	(0X8D57,	"        ori     mc,0f00h");
	MakeByte	(0X8D57);
	MakeArray	(0X8D57,	0X4);
	MakeComm	(0X8D5B,	"        jmce    [gc].4h,x8d6c");
	MakeByte	(0X8D5B);
	MakeArray	(0X8D5B,	0X4);
	MakeComm	(0X8D5F,	"x8d5f:  movb    [ga].2h,[gc].4h");
	MakeByte	(0X8D5F);
	MakeArray	(0X8D5F,	0X6);
	MakeComm	(0X8D65,	"        movbi   [gc].5h,0h");
	MakeByte	(0X8D65);
	MakeArray	(0X8D65,	0X4);
	MakeComm	(0X8D69,	"        jmp     x8d28");
	MakeByte	(0X8D69);
	MakeArray	(0X8D69,	0X3);
	MakeComm	(0X8D6C,	"x8d6c:  inc     [gc].2h");
	MakeByte	(0X8D6C);
	MakeArray	(0X8D6C,	0X3);
	MakeComm	(0X8D6F,	"        lcall   [gc].1ah,x8e45");
	MakeByte	(0X8D6F);
	MakeArray	(0X8D6F,	0X5);
	MakeComm	(0X8D74,	"        andbi   [gc].4h,0f0h");
	MakeByte	(0X8D74);
	MakeArray	(0X8D74,	0X4);
	MakeComm	(0X8D78,	"x8d78:  jnbt    [ga].4h,1,x8d78");
	MakeByte	(0X8D78);
	MakeArray	(0X8D78,	0X4);
	MakeComm	(0X8D7C,	"        jmp     x8d5f");
	MakeByte	(0X8D7C);
	MakeArray	(0X8D7C,	0X3);
	MakeComm	(0X8D7F,	"x8d7f:  jbt     [ga].6h,0,x8d7f");
	MakeByte	(0X8D7F);
	MakeArray	(0X8D7F,	0X4);
	MakeComm	(0X8D83,	"        movp    tp,[gc].22h");
	MakeByte	(0X8D83);
	MakeArray	(0X8D83,	0X3);
	MakeComm	(0X8D86,	"x8d86:  jbt     [ga].6h,5,x8deb");
	MakeByte	(0X8D86);
	MakeArray	(0X8D86,	0X4);
	MakeComm	(0X8D8A,	"        jbt     [ga].6h,1,x8deb");
	MakeByte	(0X8D8A);
	MakeArray	(0X8D8A,	0X4);
	MakeComm	(0X8D8E,	"        jbt     [gc].0h,6,x8dd2");
	MakeByte	(0X8D8E);
	MakeArray	(0X8D8E,	0X4);
	MakeComm	(0X8D92,	"        movb    mc,[gc].5h");
	MakeByte	(0X8D92);
	MakeArray	(0X8D92,	0X3);
	MakeComm	(0X8D95,	"        ori     mc,0ff00h");
	MakeByte	(0X8D95);
	MakeArray	(0X8D95,	0X4);
	MakeComm	(0X8D99,	"        jmce    [gc].27h,x8da7");
	MakeByte	(0X8D99);
	MakeArray	(0X8D99,	0X4);
	MakeComm	(0X8D9D,	"        movb    [gc].27h,[gc].5h");
	MakeByte	(0X8D9D);
	MakeArray	(0X8D9D,	0X6);
	MakeComm	(0X8DA3,	"        movbi   [gc].26h,0h");
	MakeByte	(0X8DA3);
	MakeArray	(0X8DA3,	0X4);
	MakeComm	(0X8DA7,	"x8da7:  jbt     [ga].6h,2,x8dc8");
	MakeByte	(0X8DA7);
	MakeArray	(0X8DA7,	0X4);
	MakeComm	(0X8DAB,	"        jbt     [ga].6h,4,x8dc8");
	MakeByte	(0X8DAB);
	MakeArray	(0X8DAB,	0X4);
	MakeComm	(0X8DAF,	"        jnzb    [gc].26h,x8de5");
	MakeByte	(0X8DAF);
	MakeArray	(0X8DAF,	0X4);
	MakeComm	(0X8DB3,	"        movbi   [ga].4h,0h");
	MakeByte	(0X8DB3);
	MakeArray	(0X8DB3,	0X4);
	MakeComm	(0X8DB7,	"        lcall   [gc].1ah,x8e6c");
	MakeByte	(0X8DB7);
	MakeArray	(0X8DB7,	0X5);
	MakeComm	(0X8DBC,	"        lcall   [gc].1ah,x8e45");
	MakeByte	(0X8DBC);
	MakeArray	(0X8DBC,	0X5);
	MakeComm	(0X8DC1,	"x8dc1:  jnbt    [ga].4h,1,x8dc1");
	MakeByte	(0X8DC1);
	MakeArray	(0X8DC1,	0X4);
	MakeComm	(0X8DC5,	"        jmp     x8dcc");
	MakeByte	(0X8DC5);
	MakeArray	(0X8DC5,	0X3);
	MakeComm	(0X8DC8,	"x8dc8:  jbt     [gc].26h,4,x8de5");
	MakeByte	(0X8DC8);
	MakeArray	(0X8DC8,	0X4);
	MakeComm	(0X8DCC,	"x8dcc:  incb    [gc].0eh");
	MakeByte	(0X8DCC);
	MakeArray	(0X8DCC,	0X3);
	MakeComm	(0X8DCF,	"        incb    [gc].26h");
	MakeByte	(0X8DCF);
	MakeArray	(0X8DCF,	0X3);
	MakeComm	(0X8DD2,	"x8dd2:  movb    [gc].1h,[ga].6h");
	MakeByte	(0X8DD2);
	MakeArray	(0X8DD2,	0X6);
	MakeComm	(0X8DD8,	"        andbi   [gc].1h,7eh");
	MakeByte	(0X8DD8);
	MakeArray	(0X8DD8,	0X4);
	MakeComm	(0X8DDC,	"        movbi   [ga].6h,0h");
	MakeByte	(0X8DDC);
	MakeArray	(0X8DDC,	0X4);
	MakeComm	(0X8DE0,	"        ljnbt   [gc].0h,6,x8d28");
	MakeByte	(0X8DE0);
	MakeArray	(0X8DE0,	0X5);
	MakeComm	(0X8DE5,	"x8de5:  setb    [gc].1h,7");
	MakeByte	(0X8DE5);
	MakeArray	(0X8DE5,	0X3);
	MakeComm	(0X8DE8,	"        movp    tp,[gc].22h");
	MakeByte	(0X8DE8);
	MakeArray	(0X8DE8,	0X3);
	MakeComm	(0X8DEB,	"x8deb:  movb    [gc].1h,[ga].6h");
	MakeByte	(0X8DEB);
	MakeArray	(0X8DEB,	0X6);
	MakeComm	(0X8DF1,	"        ljmp    x8ea1");
	MakeByte	(0X8DF1);
	MakeArray	(0X8DF1,	0X4);
	MakeComm	(0X8DF5,	"x8df5:  movp    [gc].12h,ga");
	MakeByte	(0X8DF5);
	MakeArray	(0X8DF5,	0X3);
	MakeComm	(0X8DF8,	"        movi    bc,10h");
	MakeByte	(0X8DF8);
	MakeArray	(0X8DF8,	0X4);
	MakeComm	(0X8DFC,	"        call    [gc].1ah,x8e12");
	MakeByte	(0X8DFC);
	MakeArray	(0X8DFC,	0X4);
	MakeComm	(0X8E00,	"        movp    ga,[gc].12h");
	MakeByte	(0X8E00);
	MakeArray	(0X8E00,	0X3);
	MakeComm	(0X8E03,	"        movbi   [ga].0h,0h");
	MakeByte	(0X8E03);
	MakeArray	(0X8E03,	0X4);
	MakeComm	(0X8E07,	"        movi    ga,0ffd0h");
	MakeByte	(0X8E07);
	MakeArray	(0X8E07,	0X4);
	MakeComm	(0X8E0B,	"        jbt     [ga].6h,1,x8deb");
	MakeByte	(0X8E0B);
	MakeArray	(0X8E0B,	0X4);
	MakeComm	(0X8E0F,	"        movp    tp,[gc].16h");
	MakeByte	(0X8E0F);
	MakeArray	(0X8E0F,	0X3);
	MakeComm	(0X8E12,	"x8e12:  wid     16,16");
	MakeByte	(0X8E12);
	MakeArray	(0X8E12,	0X2);
	MakeComm	(0X8E14,	"        movi    cc,0c008h");
	MakeByte	(0X8E14);
	MakeArray	(0X8E14,	0X4);
	MakeComm	(0X8E18,	"        xfer    ");
	MakeByte	(0X8E18);
	MakeArray	(0X8E18,	0X2);
	MakeComm	(0X8E1A,	"        nop     ");
	MakeByte	(0X8E1A);
	MakeArray	(0X8E1A,	0X2);
	MakeComm	(0X8E1C,	"        movp    tp,[gc].1ah");
	MakeByte	(0X8E1C);
	MakeArray	(0X8E1C,	0X3);
	MakeComm	(0X8E1F,	"x8e1f:  movb    [ga].2h,[gc].4h");
	MakeByte	(0X8E1F);
	MakeArray	(0X8E1F,	0X6);
	MakeComm	(0X8E25,	"        movb    [ga].4h,[gc].10h");
	MakeByte	(0X8E25);
	MakeArray	(0X8E25,	0X6);
	MakeComm	(0X8E2B,	"        movb    [ga].4h,[gc].11h");
	MakeByte	(0X8E2B);
	MakeArray	(0X8E2B,	0X6);
	MakeComm	(0X8E31,	"        movbi   [gc].1h,0h");
	MakeByte	(0X8E31);
	MakeArray	(0X8E31,	0X4);
	MakeComm	(0X8E35,	"        movi    bc,0h");
	MakeByte	(0X8E35);
	MakeArray	(0X8E35,	0X4);
	MakeComm	(0X8E39,	"x8e39:  dec     bc");
	MakeByte	(0X8E39);
	MakeArray	(0X8E39,	0X2);
	MakeComm	(0X8E3B,	"        jz      bc,x8ea1");
	MakeByte	(0X8E3B);
	MakeArray	(0X8E3B,	0X3);
	MakeComm	(0X8E3E,	"        jnbt    [ga].6h,7,x8e39");
	MakeByte	(0X8E3E);
	MakeArray	(0X8E3E,	0X4);
	MakeComm	(0X8E42,	"        movp    tp,[gc].16h");
	MakeByte	(0X8E42);
	MakeArray	(0X8E42,	0X3);
	MakeComm	(0X8E45,	"x8e45:  movb    [ga],[gc].10h");
	MakeByte	(0X8E45);
	MakeArray	(0X8E45,	0X5);
	MakeComm	(0X8E4A,	"        movb    [ga],[gc].11h");
	MakeByte	(0X8E4A);
	MakeArray	(0X8E4A,	0X5);
	MakeComm	(0X8E4F,	"        movb    [ga].4h,[gc].2h");
	MakeByte	(0X8E4F);
	MakeArray	(0X8E4F,	0X6);
	MakeComm	(0X8E55,	"        movb    [ga].4h,[gc].3h");
	MakeByte	(0X8E55);
	MakeArray	(0X8E55,	0X6);
	MakeComm	(0X8E5B,	"        movbi   [ga].6h,10h");
	MakeByte	(0X8E5B);
	MakeArray	(0X8E5B,	0X4);
	MakeComm	(0X8E5F,	"        mov     [gc].10h,[gc].2h");
	MakeByte	(0X8E5F);
	MakeArray	(0X8E5F,	0X6);
	MakeComm	(0X8E65,	"x8e65:  jbt     [ga].6h,0,x8e65");
	MakeByte	(0X8E65);
	MakeArray	(0X8E65,	0X4);
	MakeComm	(0X8E69,	"        movp    tp,[gc].1ah");
	MakeByte	(0X8E69);
	MakeArray	(0X8E69,	0X3);
	MakeComm	(0X8E6C,	"x8e6c:  movbi   [ga].6h,80h");
	MakeByte	(0X8E6C);
	MakeArray	(0X8E6C,	0X4);
	MakeComm	(0X8E70,	"        movbi   [gc].1h,0h");
	MakeByte	(0X8E70);
	MakeArray	(0X8E70,	0X4);
	MakeComm	(0X8E74,	"        jnbt    [gc].0h,7,x8e7e");
	MakeByte	(0X8E74);
	MakeArray	(0X8E74,	0X4);
	MakeComm	(0X8E78,	"        movb    [gc].21h,[gc].4h");
	MakeByte	(0X8E78);
	MakeArray	(0X8E78,	0X6);
	MakeComm	(0X8E7E,	"x8e7e:  movb    [ga].2h,[gc].4h");
	MakeByte	(0X8E7E);
	MakeArray	(0X8E7E,	0X6);
	MakeComm	(0X8E84,	"        movi    bc,0h");
	MakeByte	(0X8E84);
	MakeArray	(0X8E84,	0X4);
	MakeComm	(0X8E88,	"x8e88:  dec     bc");
	MakeByte	(0X8E88);
	MakeArray	(0X8E88,	0X2);
	MakeComm	(0X8E8A,	"        jz      bc,x8ea1");
	MakeByte	(0X8E8A);
	MakeArray	(0X8E8A,	0X3);
	MakeComm	(0X8E8D,	"        jnbt    [ga].6h,7,x8e88");
	MakeByte	(0X8E8D);
	MakeArray	(0X8E8D,	0X4);
	MakeComm	(0X8E91,	"        movbi   [ga].6h,20h");
	MakeByte	(0X8E91);
	MakeArray	(0X8E91,	0X4);
	MakeComm	(0X8E95,	"        movi    [gc].10h,0h");
	MakeByte	(0X8E95);
	MakeArray	(0X8E95,	0X5);
	MakeComm	(0X8E9A,	"x8e9a:  jbt     [ga].6h,0,x8e9a");
	MakeByte	(0X8E9A);
	MakeArray	(0X8E9A,	0X4);
	MakeComm	(0X8E9E,	"        movp    tp,[gc].1ah");
	MakeByte	(0X8E9E);
	MakeArray	(0X8E9E,	0X3);
	MakeComm	(0X8EA1,	"x8ea1:  movi    ga,31eh");
	MakeByte	(0X8EA1);
	MakeArray	(0X8EA1,	0X4);
	MakeComm	(0X8EA5,	"        orbi    [ga].1h,81h");
	MakeByte	(0X8EA5);
	MakeArray	(0X8EA5,	0X4);
	MakeComm	(0X8EA9,	"        lpd     gb,[pp].0ch");
	MakeByte	(0X8EA9);
	MakeArray	(0X8EA9,	0X3);
	MakeComm	(0X8EAC,	"        lcall   [gc].16h,x8df5");
	MakeByte	(0X8EAC);
	MakeArray	(0X8EAC,	0X5);
	MakeComm	(0X8EB1,	"        movi    ga,346h");
	MakeByte	(0X8EB1);
	MakeArray	(0X8EB1,	0X4);
	MakeComm	(0X8EB5,	"        orbi    [ga].1h,81h");
	MakeByte	(0X8EB5);
	MakeArray	(0X8EB5,	0X4);
	MakeComm	(0X8EB9,	"        lpd     gb,[pp].10h");
	MakeByte	(0X8EB9);
	MakeArray	(0X8EB9,	0X3);
	MakeComm	(0X8EBC,	"        lcall   [gc].16h,x8df5");
	MakeByte	(0X8EBC);
	MakeArray	(0X8EBC,	0X5);
	MakeComm	(0X8EC1,	"        sintr   ");
	MakeByte	(0X8EC1);
	MakeArray	(0X8EC1,	0X2);
	MakeComm	(0X8EC3,	"        hlt     ");
	MakeByte	(0X8EC3);
	MakeArray	(0X8EC3,	0X2);
	MakeComm	(0X8EC5,	"x8ec5:  jz      [gc].6h,x8eee");
	MakeByte	(0X8EC5);
	MakeArray	(0X8EC5,	0X4);
	MakeComm	(0X8EC9,	"        setb    [gc].0ch,4");
	MakeByte	(0X8EC9);
	MakeArray	(0X8EC9,	0X3);
	MakeComm	(0X8ECC,	"        movb    [ga].28h,[gc].0ch");
	MakeByte	(0X8ECC);
	MakeArray	(0X8ECC,	0X6);
	MakeComm	(0X8ED2,	"        lpd     ga,[gc].8h");
	MakeByte	(0X8ED2);
	MakeArray	(0X8ED2,	0X3);
	MakeComm	(0X8ED5,	"        movi    gb,36eh");
	MakeByte	(0X8ED5);
	MakeArray	(0X8ED5,	0X4);
	MakeComm	(0X8ED9,	"        mov     bc,[gc].6h");
	MakeByte	(0X8ED9);
	MakeArray	(0X8ED9,	0X3);
	MakeComm	(0X8EDC,	"        lcall   [gc].1ah,x8e12");
	MakeByte	(0X8EDC);
	MakeWord	(0X8EDE);
	MakeComm	(0X8EE1,	"        movi    ga,0ffd0h");
	MakeByte	(0X8EE1);
	MakeArray	(0X8EE1,	0X4);
	MakeComm	(0X8EE5,	"        movbi   [ga].28h,10h");
	MakeByte	(0X8EE5);
	MakeArray	(0X8EE5,	0X4);
	MakeComm	(0X8EE9,	"        ljbt    [ga].6h,1,x8deb");
	MakeByte	(0X8EE9);
	MakeArray	(0X8EE9,	0X5);
	MakeComm	(0X8EEE,	"x8eee:  movp    tp,[gc].16h");
	MakeByte	(0X8EEE);
	MakeArray	(0X8EEE,	0X3);
	MakeComm	(0X8EF1,	"x8ef1:  jz      [gc].6h,x8f15");
	MakeByte	(0X8EF1);
	MakeArray	(0X8EF1,	0X4);
	MakeComm	(0X8EF5,	"        setb    [gc].0ch,4");
	MakeByte	(0X8EF5);
	MakeArray	(0X8EF5,	0X3);
	MakeComm	(0X8EF8,	"        movb    [ga].28h,[gc].0ch");
	MakeByte	(0X8EF8);
	MakeArray	(0X8EF8,	0X6);
	MakeComm	(0X8EFE,	"        lpd     gb,[gc].8h");
	MakeByte	(0X8EFE);
	MakeArray	(0X8EFE,	0X3);
	MakeComm	(0X8F01,	"        movi    ga,36eh");
	MakeByte	(0X8F01);
	MakeArray	(0X8F01,	0X4);
	MakeComm	(0X8F05,	"        mov     bc,[gc].6h");
	MakeByte	(0X8F05);
	MakeArray	(0X8F05,	0X3);
	MakeComm	(0X8F08,	"        lcall   [gc].1ah,x8e12");
	MakeByte	(0X8F08);
	MakeArray	(0X8F08,	0X5);
	MakeComm	(0X8F0D,	"        movi    ga,0ffd0h");
	MakeByte	(0X8F0D);
	MakeArray	(0X8F0D,	0X4);
	MakeComm	(0X8F11,	"        movbi   [ga].28h,10h");
	MakeByte	(0X8F11);
	MakeArray	(0X8F11,	0X4);
	MakeComm	(0X8F15,	"x8f15:  movp    tp,[gc].16h");
	MakeByte	(0X8F15);
	MakeArray	(0X8F15,	0X3);
	MakeComm	(0X8F18,	"        nop     ");
	MakeByte	(0X8F18);
	MakeArray	(0X8F18,	0XE2);
	MakeName	(0X8F18,	"IOP_NOPS");
	MakeComm	(0X8F1A,	"        nop     ");
	MakeComm	(0X8F1C,	"        nop     ");
	MakeComm	(0X8F1E,	"        nop     ");
	MakeComm	(0X8F20,	"        nop     ");
	MakeComm	(0X8F22,	"        nop     ");
	MakeComm	(0X8F24,	"        nop     ");
	MakeComm	(0X8F26,	"        nop     ");
	MakeComm	(0X8F28,	"        nop     ");
	MakeComm	(0X8F2A,	"        nop     ");
	MakeComm	(0X8F2C,	"        nop     ");
	MakeComm	(0X8F2E,	"        nop     ");
	MakeComm	(0X8F30,	"        nop     ");
	MakeComm	(0X8F32,	"        nop     ");
	MakeComm	(0X8F34,	"        nop     ");
	MakeComm	(0X8F36,	"        nop     ");
	MakeComm	(0X8F38,	"        nop     ");
	MakeComm	(0X8F3A,	"        nop     ");
	MakeComm	(0X8F3C,	"        nop     ");
	MakeComm	(0X8F3E,	"        nop     ");
	MakeComm	(0X8F40,	"        nop     ");
	MakeComm	(0X8F42,	"        nop     ");
	MakeComm	(0X8F44,	"        nop     ");
	MakeComm	(0X8F46,	"        nop     ");
	MakeComm	(0X8F48,	"        nop     ");
	MakeComm	(0X8F4A,	"        nop     ");
	MakeComm	(0X8F4C,	"        nop     ");
	MakeComm	(0X8F4E,	"        nop     ");
	MakeComm	(0X8F50,	"        nop     ");
	MakeComm	(0X8F52,	"        nop     ");
	MakeComm	(0X8F54,	"        nop     ");
	MakeComm	(0X8F56,	"        nop     ");
	MakeComm	(0X8F58,	"        nop     ");
	MakeComm	(0X8F5A,	"        nop     ");
	MakeComm	(0X8F5C,	"        nop     ");
	MakeComm	(0X8F5E,	"        nop     ");
	MakeComm	(0X8F60,	"        nop     ");
	MakeComm	(0X8F62,	"        nop     ");
	MakeComm	(0X8F64,	"        nop     ");
	MakeComm	(0X8F66,	"        nop     ");
	MakeComm	(0X8F68,	"        nop     ");
	MakeComm	(0X8F6A,	"        nop     ");
	MakeComm	(0X8F6C,	"        nop     ");
	MakeComm	(0X8F6E,	"        nop     ");
	MakeComm	(0X8F70,	"        nop     ");
	MakeComm	(0X8F72,	"        nop     ");
	MakeComm	(0X8F74,	"        nop     ");
	MakeComm	(0X8F76,	"        nop     ");
	MakeComm	(0X8F78,	"        nop     ");
	MakeComm	(0X8F7A,	"        nop     ");
	MakeComm	(0X8F7C,	"        nop     ");
	MakeComm	(0X8F7E,	"        nop     ");
	MakeComm	(0X8F80,	"        nop     ");
	MakeComm	(0X8F82,	"        nop     ");
	MakeComm	(0X8F84,	"        nop     ");
	MakeComm	(0X8F86,	"        nop     ");
	MakeComm	(0X8F88,	"        nop     ");
	MakeComm	(0X8F8A,	"        nop     ");
	MakeComm	(0X8F8C,	"        nop     ");
	MakeComm	(0X8F8E,	"        nop     ");
	MakeComm	(0X8F90,	"        nop     ");
	MakeComm	(0X8F92,	"        nop     ");
	MakeComm	(0X8F94,	"        nop     ");
	MakeComm	(0X8F96,	"        nop     ");
	MakeComm	(0X8F98,	"        nop     ");
	MakeComm	(0X8F9A,	"        nop     ");
	MakeComm	(0X8F9C,	"        nop     ");
	MakeComm	(0X8F9E,	"        nop     ");
	MakeComm	(0X8FA0,	"        nop     ");
	MakeComm	(0X8FA2,	"        nop     ");
	MakeComm	(0X8FA4,	"        nop     ");
	MakeComm	(0X8FA6,	"        nop     ");
	MakeComm	(0X8FA8,	"        nop     ");
	MakeComm	(0X8FAA,	"        nop     ");
	MakeComm	(0X8FAC,	"        nop     ");
	MakeComm	(0X8FAE,	"        nop     ");
	MakeComm	(0X8FB0,	"        nop     ");
	MakeComm	(0X8FB2,	"        nop     ");
	MakeComm	(0X8FB4,	"        nop     ");
	MakeComm	(0X8FB6,	"        nop     ");
	MakeComm	(0X8FB8,	"        nop     ");
	MakeComm	(0X8FBA,	"        nop     ");
	MakeComm	(0X8FBC,	"        nop     ");
	MakeComm	(0X8FBE,	"        nop     ");
	MakeComm	(0X8FC0,	"        nop     ");
	MakeComm	(0X8FC2,	"        nop     ");
	MakeComm	(0X8FC4,	"        nop     ");
	MakeComm	(0X8FC6,	"        nop     ");
	MakeComm	(0X8FC8,	"        nop     ");
	MakeComm	(0X8FCA,	"        nop     ");
	MakeComm	(0X8FCC,	"        nop     ");
	MakeComm	(0X8FCE,	"        nop     ");
	MakeComm	(0X8FD0,	"        nop     ");
	MakeComm	(0X8FD2,	"        nop     ");
	MakeComm	(0X8FD4,	"        nop     ");
	MakeComm	(0X8FD6,	"        nop     ");
	MakeComm	(0X8FD8,	"        nop     ");
	MakeComm	(0X8FDA,	"        nop     ");
	MakeComm	(0X8FDC,	"        nop     ");
	MakeComm	(0X8FDE,	"        nop     ");
	MakeComm	(0X8FE0,	"        nop     ");
	MakeComm	(0X8FE2,	"        nop     ");
	MakeComm	(0X8FE4,	"        nop     ");
	MakeComm	(0X8FE6,	"        nop     ");
	MakeComm	(0X8FE8,	"        nop     ");
	MakeComm	(0X8FEA,	"        nop     ");
	MakeComm	(0X8FEC,	"        nop     ");
	MakeComm	(0X8FEE,	"        nop     ");
	MakeComm	(0X8FF0,	"        nop     ");
	MakeComm	(0X8FF2,	"        nop     ");
	MakeComm	(0X8FF4,	"        nop     ");
	MakeComm	(0X8FF6,	"        nop     ");
	MakeComm	(0X8FF8,	"        nop     ");
	MakeComm	(0X8FFA,	"        lpd     gc,[pp]");
	MakeByte	(0X8FFA);
	MakeArray	(0X8FFA,	0X2);
	MakeName	(0X8FFA,	"IOP_ENTRY");
	MakeComm	(0X8FFC,	"        lpd     ga,[pp]");
	MakeByte	(0X8FFC);
	MakeArray	(0X8FFC,	0X2);
	MakeComm	(0X8FFE,	"        movi    gb,0h");
	MakeByte	(0X8FFE);
	MakeArray	(0X8FFE,	0X4);
	MakeComm	(0X9002,	"        movi    bc,400h");
	MakeByte	(0X9002);
	MakeArray	(0X9002,	0X4);
	MakeComm	(0X9006,	"        not     bc");
	MakeByte	(0X9006);
	MakeArray	(0X9006,	0X2);
	MakeComm	(0X9008,	"        inc     bc");
	MakeByte	(0X9008);
	MakeArray	(0X9008,	0X2);
	MakeComm	(0X900A,	"        mov     [gb],bc");
	MakeByte	(0X900A);
	MakeArray	(0X900A,	0X2);
	MakeComm	(0X900C,	"        add     ga,[gb]");
	MakeByte	(0X900C);
	MakeArray	(0X900C,	0X2);
	MakeComm	(0X900E,	"        add     gc,[gb]");
	MakeByte	(0X900E);
	MakeArray	(0X900E,	0X2);
	MakeComm	(0X9010,	"        addi    gc,346h");
	MakeByte	(0X9010);
	MakeArray	(0X9010,	0X4);
	MakeComm	(0X9014,	"        lpd     gb,[pp].8h");
	MakeByte	(0X9014);
	MakeArray	(0X9014,	0X3);
	MakeComm	(0X9017,	"        movb    [gc].21h,[gb].4h");
	MakeByte	(0X9017);
	MakeArray	(0X9017,	0X6);
	MakeComm	(0X901D,	"        movi    gb,0h");
	MakeByte	(0X901D);
	MakeArray	(0X901D,	0X4);
	MakeComm	(0X9021,	"        movp    [gb],ga");
	MakeByte	(0X9021);
	MakeArray	(0X9021,	0X2);
	MakeComm	(0X9023,	"        movp    gc,[gb]");
	MakeByte	(0X9023);
	MakeArray	(0X9023,	0X2);
	MakeComm	(0X9025,	"        addi    gc,31eh");
	MakeByte	(0X9025);
	MakeArray	(0X9025,	0X4);
	MakeComm	(0X9029,	"        lpd     gb,[pp].4h");
	MakeByte	(0X9029);
	MakeArray	(0X9029,	0X3);
	MakeComm	(0X902C,	"        movb    [gc].21h,[gb].4h");
	MakeByte	(0X902C);
	MakeArray	(0X902C,	0X6);
	MakeComm	(0X9032,	"        movi    gb,0h");
	MakeByte	(0X9032);
	MakeArray	(0X9032,	0X4);
	MakeComm	(0X9036,	"        movi    bc,36eh");
	MakeByte	(0X9036);
	MakeArray	(0X9036,	0X4);
	MakeComm	(0X903A,	"        lcall   [gc].1ah,x8e12");
	MakeByte	(0X903A);
	MakeArray	(0X903A,	0X5);
	MakeComm	(0X903F,	"        movi    ga,0ffd0h");
	MakeByte	(0X903F);
	MakeArray	(0X903F,	0X4);
	MakeComm	(0X9043,	"        movbi   [ga].28h,10h");
	MakeByte	(0X9043);
	MakeArray	(0X9043,	0X4);
	MakeComm	(0X9047,	"        sintr   ");
	MakeByte	(0X9047);
	MakeArray	(0X9047,	0X2);
	MakeName	(0X904C,	"AFTER_IOP");
	MakeWord	(0X9052);
	MakeName	(0X9052,	"PP_OFFSET");
	MakeWord	(0X9054);
	MakeName	(0X9054,	"PP_SEGMENT");
	MakeWord	(x=0X9056);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeName	(0X9056,	"PP_CH1_OFF");
	MakeWord	(0X9058);
	MakeName	(0X9058,	"PP_CH1_SEG");
	MakeWord	(x=0X905A);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeName	(0X905A,	"PP_CH2_OFF");
	MakeWord	(0X905C);
	MakeName	(0X905C,	"PP_CH2_SEG");
	MakeWord	(x=0X905E);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeName	(0X905E,	"PP_CH3_OFF");
	MakeWord	(0X9060);
	MakeName	(0X9060,	"PP_CH3_SEG");
	MakeWord	(x=0X9062);
	OpOff		(x,	0,	0X7D80);
	OpOff		(x,	128,	0X7D80);
	MakeName	(0X9062,	"PP_CH4_OFF");
	MakeWord	(0X9064);
	MakeName	(0X9064,	"PP_CH4_SEG");
	MakeStr		(0X9066,	0X90B2);
	MakeName	(0X9066,	"aDiskIoErrorCom");
	MakeStr		(0X90B2,	0X90FE);
	MakeName	(0X90B2,	"aDiskIoErrorC_0");
	MakeStr		(0X90FE,	0X9126);
	MakeName	(0X90FE,	"aInitializati_0");
	MakeStr		(0X9126,	0X9145);
	MakeName	(0X9126,	"aInitializati_1");
	MakeByte	(0X9146);
	MakeArray	(0X9146,	0X2000);
	MakeName	(0X9146,	"FORMAT_PATTERN");
	MakeWord	(0XB146);
	MakeWord	(0XB148);
	MakeWord	(0XB14A);
	MakeWord	(0XB14C);
	MakeWord	(0XB14E);
	MakeWord	(0XB16E);
	MakeWord	(0XB170);
	MakeWord	(0XB172);
	MakeWord	(0XB174);
	MakeWord	(0XB176);
	MakeByte	(0XB196);
	MakeWord	(0XB19A);
	MakeWord	(0XB19C);
	MakeStr		(0XB19E,	0XB1B6);
	MakeName	(0XB19E,	"aDoYouWantToC_2");
	MakeStr		(0XB1B6,	0XB1ED);
	MakeName	(0XB1B6,	"aErrorSummaryWi");
	MakeStr		(0XB1ED,	0XB21A);
	MakeName	(0XB1ED,	"aDoYouWantToTes");
	MakeStr		(0XB21A,	0XB23F);
	MakeName	(0XB21A,	"aWriteRead1stOf");
	MakeStr		(0XB23F,	0XB255);
	MakeName	(0XB23F,	"aPassCount4d");
	MakeStr		(0XB255,	0XB273);
	MakeName	(0XB255,	"aEnterCylinderT");
	MakeStr		(0XB273,	0XB28E);
	MakeName	(0XB273,	"aWritingPatte_0");
	MakeStr		(0XB28E,	0XB2A4);
	MakeName	(0XB28E,	"aPassCount4d_0");
	MakeStr		(0XB2A4,	0XB2BF);
	MakeName	(0XB2A4,	"aWritingPatte_1");
	MakeStr		(0XB2BF,	0XB2D7);
	MakeName	(0XB2BF,	"aPassCount4d_2");
	MakeStr		(0XB2D7,	0XB2FE);
	MakeName	(0XB2D7,	"aDoYouWantToT_0");
	MakeStr		(0XB2FE,	0XB307);
	MakeName	(0XB2FE,	"a5d_2");
	MakeStr		(0XB307,	0XB32F);
	MakeName	(0XB307,	"aDoYouWantToWri");
	MakeStr		(0XB32F,	0XB36B);
	MakeName	(0XB32F,	"aAsManyAsFour4P");
	MakeStr		(0XB36B,	0XB3A6);
	MakeName	(0XB36B,	"aEnterOneOrTwoB");
	MakeStr		(0XB3A6,	0XB3B9);
	MakeName	(0XB3A6,	"aSelectPattern1");
	MakeStr		(0XB3B9,	0XB3CC);
	MakeName	(0XB3B9,	"aSelectPattern2");
	MakeStr		(0XB3CC,	0XB3DF);
	MakeName	(0XB3CC,	"aSelectPattern3");
	MakeStr		(0XB3DF,	0XB3F2);
	MakeName	(0XB3DF,	"aSelectPattern4");
	MakeStr		(0XB3F2,	0XB403);
	MakeName	(0XB3F2,	"aSelectPatter_0");
	MakeStr		(0XB403,	0XB40F);
	MakeName	(0XB403,	"a5d_1");
	MakeStr		(0XB40F,	0XB414);
	MakeStr		(0XB414,	0XB43E);
	MakeName	(0XB414,	"aCrcErrorHeadDC");
	MakeStr		(0XB43E,	0XB474);
	MakeName	(0XB43E,	"aHeadsDCylinder");
	MakeStr		(0XB474,	0XB4A2);
	MakeName	(0XB474,	"a004dD02dXD");
	MakeStr		(0XB4A2,	0XB4D0);
	MakeName	(0XB4A2,	"a004dD02dXD_0");
	MakeStr		(0XB4D0,	0XB4FE);
	MakeName	(0XB4D0,	"a004dD02dXD_1");
	MakeStr		(0XB4FE,	0XB52C);
	MakeName	(0XB4FE,	"a004dD02dXD_2");
	MakeStr		(0XB52C,	0XB55A);
	MakeName	(0XB52C,	"a004dD02dXD_3");
	MakeStr		(0XB55A,	0XB588);
	MakeName	(0XB55A,	"a004dD02dXD_4");
	MakeStr		(0XB588,	0XB5B6);
	MakeName	(0XB588,	"a004dD02dXD_5");
	MakeStr		(0XB5B6,	0XB5E4);
	MakeName	(0XB5B6,	"a004dD02dXD_6");
	MakeStr		(0XB5E4,	0XB612);
	MakeName	(0XB5E4,	"a004dD02dXD_7");
	MakeStr		(0XB612,	0XB640);
	MakeName	(0XB612,	"a004dD02dXD_8");
	MakeStr		(0XB640,	0XB687);
	MakeName	(0XB640,	"a002x002xh03d03");
	MakeStr		(0XB687,	0XB6CE);
	MakeName	(0XB687,	"a002x002xh03d_0");
	MakeStr		(0XB6CE,	0XB715);
	MakeName	(0XB6CE,	"a002x002xh03d_1");
	MakeStr		(0XB715,	0XB755);
	MakeName	(0XB715,	"a002x002xh03d_2");
	MakeStr		(0XB755,	0XB759);
	MakeName	(0XB755,	"aD");
	MakeStr		(0XB759,	0XB75E);
	MakeStr		(0XB75E,	0XB776);
	MakeName	(0XB75E,	"aDoYouWantToC_1");
	MakeStr		(0XB776,	0XB79E);
	MakeName	(0XB776,	"aDoYouWantToW_0");
	MakeStr		(0XB79E,	0XB7B9);
	MakeName	(0XB79E,	"aWritingPattern");
	MakeStr		(0XB7B9,	0XB7BE);
	MakeName	(0XB7B9,	"a4d_1");
	MakeWord	(0XB7BE);
	MakeStr		(0XB7C0,	0XB7CE);
	MakeName	(0XB7C0,	"aReconnect");
	MakeStr		(0XB7CE,	0XB7DD);
	MakeName	(0XB7CE,	"aDisconnect");
	MakeStr		(0XB7DD,	0XB7DF);
	MakeStr		(0XB7E0,	0XB7F1);
	MakeName	(0XB7E0,	"a0123456789abcd");
	MakeStr		(0XB7FC,	0XB802);
	MakeName	(0XB7FC,	"aA_0");
	MakeStr		(0XB802,	0XB808);
	MakeName	(0XB802,	"aA");
	MakeStr		(0XB808,	0XB80E);
	MakeName	(0XB808,	"a002x");
	MakeStr		(0XB80E,	0XB811);
	MakeStr		(0XB811,	0XB813);
	MakeStr		(0XB813,	0XB81B);
	MakeName	(0XB813,	"aS");
	MakeStr		(0XB81C,	0XB822);
	MakeName	(0XB81C,	"aA_1");
	MakeStr		(0XB822,	0XB828);
	MakeName	(0XB822,	"aA_2");
	MakeStr		(0XB828,	0XB82E);
	MakeName	(0XB828,	"a002x_0");
	MakeStr		(0XB82E,	0XB831);
	MakeStr		(0XB849,	0XB851);
	MakeName	(0XB849,	"aEnter_0");
	MakeStr		(0XB851,	0XB856);
	MakeStr		(0XB861,	0XB866);
	MakeName	(0XB861,	"aS_0");
	MakeStr		(0XB896,	0XB89A);
	MakeName	(0XB896,	"RUBOUT");
	MakeStr		(0XB89A,	0XB8A0);
	MakeName	(0XB89A,	"aS_2");
	MakeStr		(0XB8A0,	0XB8A3);
	MakeStr		(0XB8A4,	0XB8AA);
	MakeName	(0XB8A4,	"aYN");
	MakeStr		(0XB8BC,	0XB8BE);
	MakeName	(0XB8BC,	"aN");
	MakeStr		(0XB8C0,	0XB8C8);
	MakeName	(0XB8C0,	"aSS?");
	MakeStr		(0XB8C8,	0XB8CB);
	MakeStr		(0XB8CB,	0XB8CE);
	MakeName	(0XB8CB,	"aS_1");
	MakeStr		(0XB8CE,	0XB8D1);
	MakeStr		(0XB8D2,	0XB8DF);
	MakeName	(0XB8D2,	"aErrorPause");
	MakeStr		(0XB8DF,	0XB8FC);
	MakeName	(0XB8DF,	"aContinueIgnoreThi");
	MakeStr		(0XB8FC,	0XB914);
	MakeName	(0XB8FC,	"aLoopRetryThisErro");
	MakeStr		(0XB914,	0XB928);
	MakeName	(0XB914,	"aErrorHandlingMe_0");
	MakeStr		(0XB928,	0XB93E);
	MakeName	(0XB928,	"aMessageSeverityMe");
	MakeStr		(0XB93E,	0XB955);
	MakeName	(0XB93E,	"aPrinterSelectionM");
	MakeStr		(0XB95E,	0XB974);
	MakeName	(0XB95E,	"aMessageSeverityMen");
	MakeStr		(0XB974,	0XB97B);
	MakeName	(0XB974,	"aErrors");
	MakeStr		(0XB97B,	0XB984);
	MakeName	(0XB97B,	"aWarnings");
	MakeStr		(0XB984,	0XB98B);
	MakeName	(0XB984,	"aPasses");
	MakeStr		(0XB98B,	0XB990);
	MakeName	(0XB98B,	"aInfo");
	MakeStr		(0XB990,	0XB997);
	MakeName	(0XB990,	"aTraces");
	MakeStr		(0XB997,	0XB9A7);
	MakeName	(0XB997,	"aExtendedTraces");
	MakeStr		(0XB9A8,	0XB9BE);
	MakeName	(0XB9A8,	"aInvalidEntry_1");
	MakeStr		(0XB9BE,	0XB9D2);
	MakeName	(0XB9BE,	"aErrorHandlingMenu");
	MakeStr		(0XB9D2,	0XB9EF);
	MakeName	(0XB9D2,	"aContinueIgnoreAll");
	MakeStr		(0XB9EF,	0XBA0E);
	MakeName	(0XB9EF,	"aPauseForOperatorS");
	MakeStr		(0XBA0E,	0XBA26);
	MakeName	(0XBA0E,	"aLoopRetryAllError");
	MakeStr		(0XBA26,	0XBA3C);
	MakeName	(0XBA26,	"aDisplayErrorSumma");
	MakeStr		(0XBA3C,	0XBA4C);
	MakeName	(0XBA3C,	"aDisplayHistory");
	MakeStr		(0XBA4C,	0XBA68);
	MakeName	(0XBA4C,	"aClearHistoryError");
	MakeStr		(0XBA68,	0XBA75);
	MakeName	(0XBA68,	"aPassU");
	MakeStr		(0XBA75,	0XBA81);
	MakeName	(0XBA75,	"aNoErrors");
	MakeStr		(0XBA81,	0XBA8B);
	MakeName	(0XBA81,	"a1Error");
	MakeStr		(0XBA8B,	0XBA97);
	MakeName	(0XBA8B,	"aUErrors");
	MakeStr		(0XBA98,	0XBAB7);
	MakeName	(0XBA98,	"aHistoryBufferEmpt");
	MakeStr		(0XBAB7,	0XBADB);
	MakeName	(0XBAB7,	"aHistoryBufferDisp");
	MakeStr		(0XBADB,	0XBAFD);
	MakeName	(0XBADB,	"aEndOfHistoryDispl");
	MakeStr		(0XBB00,	0XBB19);
	MakeName	(0XBB00,	"aIoc001dEnctlTimeout");
	MakeStr		(0XBB1A,	0XBB2E);
	MakeName	(0XBB1A,	"aIoc001dSc002d");
	MakeStr		(0XBB2E,	0XBB4E);
	MakeName	(0XBB2E,	"aIoc001dTimeoutForSc002");
	MakeStr		(0XBB4E,	0XBB68);
	MakeName	(0XBB4E,	"aIoc001d001dCc002d");
	MakeStr		(0XBB68,	0XBB85);
	MakeName	(0XBB68,	"aSXmtptrAXmtlen004x");
	MakeStr		(0XBB85,	0XBB9D);
	MakeName	(0XBB85,	"aSRcvtty002xC");
	MakeStr		(0XBB9E,	0XBBB7);
	MakeName	(0XBB9E,	"aAcs586S");
	MakeWord	(0XBC02);
	MakeWord	(0XBC06);
	MakeStr		(0XBC08,	0XBC11);
	MakeName	(0XBC08,	"aReceiver");
	MakeStr		(0XBC14,	0XBC1C);
	MakeName	(0XBC14,	"aSpecial");
	MakeStr		(0XBC20,	0XBC26);
	MakeName	(0XBC20,	"aBreak");
	MakeStr		(0XBC2C,	0XBC38);
	MakeName	(0XBC2C,	"aTransmitter");
	MakeStr		(0XBC38,	0XBC59);
	MakeName	(0XBC38,	"aIoc001dTimeoutForIcc00");
	MakeStr		(0XBC59,	0XBC7D);
	MakeName	(0XBC59,	"aIoc001dTimeout2ForIc");
	MakeStr		(0XBC7E,	0XBC9D);
	MakeName	(0XBC7E,	"aIoc001dWillNotInitia");
	MakeStr		(0XBC9D,	0XBCB8);
	MakeName	(0XBC9D,	"aIoc001dRevU_001u");
	MakeWord	(0XBCB8);
	MakeStr		(0XBCBA,	0XBCCF);
	MakeName	(0XBCBA,	"aErrorUU");
	MakeStr		(0XBCCF,	0XBCDD);
	MakeName	(0XBCCF,	"aWarning");
	MakeStr		(0XBCDD,	0XBCE2);
	MakeStr		(0XBCE2,	0XBCEA);
	MakeName	(0XBCE2,	"aTrace");
	MakeStr		(0XBCEA,	0XBCF3);
	MakeName	(0XBCEA,	"aXtrace");
	MakeStr		(0XBCF3,	0XBCF6);
	MakeStr		(0XBCF6,	0XBD11);
	MakeName	(0XBCF6,	"aRenfieldV1_0");
	MakeStr		(0XBD11,	0XBD14);
	MakeStr		(0XBD14,	0XBD16);
	MakeName	(0XBD14,	"aG");
	MakeStr		(0XBD16,	0XBD18);
	MakeName	(0XBD16,	"aD_0");
	MakeStr		(0XBD18,	0XBD1A);
	MakeName	(0XBD18,	"aM");
	MakeStr		(0XBD1A,	0XBD1C);
	MakeName	(0XBD1A,	"aR");
	MakeStr		(0XBD1C,	0XBD54);
	MakeName	(0XBD1C,	"aFlgsaxBxCxDxSiDiE");
	MakeStr		(0XBD54,	0XBD5A);
	MakeName	(0XBD54,	"a_4s");
	MakeStr		(0XBD5A,	0XBD5D);
	MakeStr		(0XBD5D,	0XBD64);
	MakeName	(0XBD5D,	"a004x");
	MakeStr		(0XBD64,	0XBD67);
	MakeWord	(0XBD68);
	MakeWord	(0XBD6A);
	MakeName	(0XBD6A,	"DS_SEG");
	MakeWord	(0XBD6C);
	MakeName	(0XBD6C,	"SKIP_IO_INIT");
	MakeWord	(0XBD6E);
	MakeWord	(0XBD70);
	MakeWord	(0XBD72);
	MakeWord	(0XBD74);
	MakeWord	(0XBD76);
	MakeWord	(0XBD78);
	MakeWord	(0XBD7A);
	MakeName	(0XBD7A,	"DRIVE_NUM");
	MakeWord	(0XBD7C);
	MakeName	(0XBD7C,	"CYLINDER_NUM");
	MakeByte	(0XBD7E);
	MakeName	(0XBD7E,	"INPUT_BUFFER");
	MakeByte	(0XBD81);
	MakeName	(0XBD81,	"DATA_BUF");
	MakeByte	(0XBF7D);
	MakeWord	(0XBFD6);
	MakeName	(0XBFD6,	"CYLINDERS_TOTAL");
	MakeWord	(0XBFD8);
	MakeName	(0XBFD8,	"HEAD_NUM");
	MakeWord	(0XBFDA);
	MakeName	(0XBFDA,	"HEADS_LAST");
	MakeWord	(0XBFDC);
	MakeName	(0XBFDC,	"MAX_SECTORS");
	MakeWord	(0XBFDE);
	MakeName	(0XBFDE,	"SECTOR_NUM");
	MakeByte	(0XBFE0);
	MakeByte	(0XBFE1);
	MakeByte	(0XBFE2);
	MakeByte	(0XBFE3);
	MakeWord	(0XC024);
	MakeName	(0XC024,	"IO_STATUS");
	MakeByte	(0XC026);
	MakeName	(0XC026,	"TESTING_PATTERN_LO");
	MakeByte	(0XC027);
	MakeName	(0XC027,	"TESTING_PATTERN_HI");
	MakeWord	(0XC028);
	MakeName	(0XC028,	"CYLINDERS_DONE");
	MakeStruct	(0XC02A,	"VRFY_RESULT");
	MakeName	(0XC02A,	"VRFY_CHS_RESULT");
	MakeRptCmt	(0XC286,	"0=address good");
	MakeWord	(0XC286);
	MakeName	(0XC286,	"VERIFY_word_C286");
	MakeWord	(0XC288);
	MakeName	(0XC288,	"DO_VERIFY");
	MakeWord	(0XC28A);
	MakeName	(0XC28A,	"CYL_END");
	MakeWord	(0XC28C);
	MakeName	(0XC28C,	"CYL_START");
	MakeByte	(0XC28E);
	MakeName	(0XC28E,	"DRIVE_TYPE");
	MakeRptCmt	(0XC294,	"Number of cylinder to run test against");
	MakeWord	(0XC294);
	MakeName	(0XC294,	"TEST_CYLINDER_NUM");
	MakeWord	(0XC29C);
	MakeWord	(0XC29E);
	MakeByte	(0XC2A0);
	MakeByte	(0XC2A1);
	MakeByte	(0XC49F);
	MakeByte	(0XC4FE);
	MakeArray	(0XC4FE,	0X200);
	MakeName	(0XC4FE,	"READ_SEC_BUFFER");
	MakeStruct	(0XE500,	"COMMAND_BLOCK");
	MakeName	(0XE500,	"IO_CH1");
	MakeStruct	(0XE512,	"COMMAND_BLOCK");
	MakeName	(0XE512,	"IO_CH2");
	MakeStruct	(0XE524,	"COMMAND_BLOCK");
	MakeName	(0XE524,	"IO_CH3");
	MakeStruct	(0XE536,	"COMMAND_BLOCK");
	MakeName	(0XE536,	"IO_CH4");
	MakeWord	(0XE548);
	MakeName	(0XE548,	"FAR_HI");
	MakeWord	(0XE54A);
	MakeName	(0XE54A,	"FAR_LO");
	MakeName	(0XE54C,	"PB2_OFFSET");
	MakeByte	(0XE560);
	MakeName	(0XE560,	"PATTERN1_LO");
	MakeByte	(0XE561);
	MakeName	(0XE561,	"PATTERN1_HI");
	MakeByte	(0XE562);
	MakeName	(0XE562,	"PATTERN2_LO");
	MakeByte	(0XE563);
	MakeName	(0XE563,	"PATTERN2_HI");
	MakeByte	(0XE564);
	MakeName	(0XE564,	"PATTERN3_LO");
	MakeByte	(0XE565);
	MakeName	(0XE565,	"PATTERN3_HI");
	MakeByte	(0XE566);
	MakeName	(0XE566,	"PATTERN4_LO");
	MakeByte	(0XE567);
	MakeName	(0XE567,	"PATTERN4_HI");
	MakeName	(0XE568,	"CYL_READ_BUF");
	MakeWord	(0XE570);
	MakeWord	(0XE598);
	MakeName	(0XE598,	"SOFT_ERRORS");
	MakeWord	(0XE59A);
	MakeName	(0XE59A,	"HARD_ERRORS");
	MakeWord	(0XE59C);
	MakeRptCmt	(0XE59E,	"Do you want to test cylinders individually");
	MakeWord	(0XE59E);
	MakeName	(0XE59E,	"INDIVIDUAL_CYLINDERS");
	MakeWord	(0XE5A0);
	MakeWord	(0XE5A4);
	MakeWord	(0XE5A6);
	MakeWord	(0XE5A8);
	MakeWord	(0XE5AA);
	MakeWord	(0XE5AC);
	MakeWord	(0XE5AE);
	MakeWord	(0XE5B0);
	MakeName	(0XE5B0,	"TESTING_PASSES");
	MakeWord	(0XE5B2);
	MakeWord	(0XE5B6);
	MakeWord	(0XE5B8);
	MakeWord	(0XE5BA);
	MakeWord	(0XE5BE);
	MakeWord	(0XE5C0);
	MakeWord	(0XE5C2);
	MakeWord	(0XE5C4);
	MakeWord	(0XE5C6);
	MakeWord	(0XE5C8);
	MakeWord	(0XE818);
	MakeWord	(0XE81A);
	MakeWord	(0XE81C);
	MakeWord	(0XE81E);
	MakeWord	(0XE820);
	MakeWord	(0XECD2);
	MakeWord	(0XECD4);
	MakeWord	(0XECD6);
	MakeWord	(0XECD8);
	MakeWord	(0XECEA);
	MakeWord	(0XECEC);
	MakeWord	(0XECEE);
	MakeWord	(0XECF0);
	MakeWord	(0XECF2);
	MakeWord	(0XECF4);
	MakeWord	(0XECF6);
	MakeWord	(0XECF8);
	MakeWord	(0XECFA);
	MakeWord	(0XECFC);
	MakeWord	(0XECFE);
	MakeWord	(0XED00);
	MakeWord	(0XED02);
	MakeWord	(0XED04);
	MakeWord	(0XED06);
	MakeWord	(0XED0A);
	MakeWord	(0XED0C);
	MakeWord	(0XED0E);
	MakeWord	(0XED10);
	MakeWord	(0XED12);
	MakeWord	(0XED14);
	MakeWord	(0XED16);
	MakeWord	(0XED18);
	MakeWord	(0XED1A);
	MakeWord	(0X10C5C);
	MakeWord	(0X10C5E);
	MakeWord	(0X10E44);
	MakeWord	(0X10E4A);
	MakeWord	(0X10E4C);
	MakeWord	(0X10E4E);
	MakeWord	(0X110C2);
	MakeWord	(0X110C4);
	MakeWord	(0X110C6);
	MakeWord	(0X11288);
	MakeWord	(0X1128A);
	MakeWord	(0X17D66);
	MakeWord	(0X17D7A);
}

static Functions_0(void) {

	MakeFunction    (0X1000,0X1123);
	SetFunctionFlags(0X1000,0x0);
	MakeFrame(0X1000, 0X62F8, 2, 0X0);
	MakeLocal(0X1000, 0X1123, "[bp+0X4]", "ARG_ES_CS");
	MakeLocal(0X1000, 0X1123, "[bp+0X6]", "ARG_SI");
	MakeLocal(0X1000, 0X1123, "[bp+0X8]", "ARG_DS");
	MakeLocal(0X1000, 0X1123, "[bp+0XA]", "SOME_DI");
	MakeLocal(0X1000, 0X1123, "[bp+0XC]", "SOME_ES_D");
	MakeLocal(0X1000, 0X1123, "[bp+0XE]", "SOME_SI");
	MakeLocal(0X1000, 0X1123, "[bp+0X10]", "SOME_DS_E");
	MakeNameEx(0X1117, "RUN_MAIN", SN_LOCAL);
	MakeNameEx(0X111F, "SPIN_FOREVER", SN_LOCAL);
	MakeFunction    (0X1123,0X1134);
	SetFunctionFlags(0X1123,0x10);
	MakeFrame(0X1123, 0X0, 0, 0X0);
	MakeFunction    (0X1134,0X114C);
	SetFunctionFlags(0X1134,0x0);
	MakeNameEx(0X1148, "RETURN_1", SN_LOCAL);
	MakeFunction    (0X114C,0X1172);
	SetFunctionFlags(0X114C,0x0);
	MakeFunction    (0X1172,0X1182);
	SetFunctionFlags(0X1172,0x0);
	MakeNameEx(0X117E, "RETURN_ONE", SN_LOCAL);
	MakeFunction    (0X1182,0X11F7);
	SetFunctionFlags(0X1182,0x10);
	MakeFrame(0X1182, 0X0, 2, 0X0);
	MakeFunction    (0X11F8,0X14AA);
	SetFunctionFlags(0X11F8,0x10);
	MakeFrame(0X11F8, 0X1E, 2, 0X0);
	MakeLocal(0X11F8, 0X14AA, "[bp-0X18]", "HEAD_NUM");
	MakeNameEx(0X12C4, "HEAD_READ_OK", SN_LOCAL);
	MakeNameEx(0X131F, "HEAD_GOOD", SN_LOCAL);
	MakeFunction    (0X14AA,0X1645);
	SetFunctionFlags(0X14AA,0x10);
	MakeFrame(0X14AA, 0XA, 2, 0X0);
	MakeLocal(0X14AA, 0X1645, "[bp-0X6]", "COUNTER");
	MakeNameEx(0X15F1, "NEXT_BYTE", SN_LOCAL);
	MakeNameEx(0X15FC, "FILL_BYTES", SN_LOCAL);
	MakeFunction    (0X1654,0X185C);
	SetFunctionFlags(0X1654,0x10);
	MakeFrame(0X1654, 0X14, 2, 0X0);
	MakeLocal(0X1654, 0X185C, "[bp-0XE]", "SECTOR_ITERATOR");
	MakeLocal(0X1654, 0X185C, "[bp-0XC]", "ITERATOR");
	MakeLocal(0X1654, 0X185C, "[bp-0XA]", "NOT_EQUALS");
	MakeNameEx(0X1682, "CMP_NEXT_CHAR", SN_LOCAL);
	MakeNameEx(0X169E, "CHAR_OKAY", SN_LOCAL);
	MakeNameEx(0X16B0, "ASK_CONFIRM_FORMAT", SN_LOCAL);
	MakeNameEx(0X16CF, "START_FORMAT", SN_LOCAL);
	MakeNameEx(0X16F3, "FILL_SECTOR", SN_LOCAL);
	MakeNameEx(0X16FA, "FILL_NEXT_BYTE", SN_LOCAL);
	MakeNameEx(0X170D, "FILL_BYTES", SN_LOCAL);
	MakeNameEx(0X1749, "NEXT_CYLINDER", SN_LOCAL);
	MakeNameEx(0X184F, "DISK_FORMATTED", SN_LOCAL);
	MakeNameEx(0X1859, "FORMAT_DONE", SN_LOCAL);
	MakeFunction    (0X185C,0X1960);
	SetFunctionFlags(0X185C,0x10);
	MakeFrame(0X185C, 0XA, 2, 0X0);
	MakeNameEx(0X18C8, "NEXT_SECTOR", SN_LOCAL);
	MakeNameEx(0X18F6, "IO_STATUS_NO_ERROR", SN_LOCAL);
	MakeNameEx(0X1920, "NOT_BAD_SECTOR", SN_LOCAL);
	MakeNameEx(0X1923, "SECTOR_DONE", SN_LOCAL);
	MakeFunction    (0X1960,0X19D7);
	SetFunctionFlags(0X1960,0x10);
	MakeFrame(0X1960, 0X0, 2, 0X0);
	MakeNameEx(0X19D4, "ADDRESS_GOOD", SN_LOCAL);
	MakeFunction    (0X19EE,0X1A08);
	SetFunctionFlags(0X19EE,0x10);
	MakeFrame(0X19EE, 0XA, 2, 0X0);
	MakeFunction    (0X1A08,0X1A82);
	SetFunctionFlags(0X1A08,0x10);
	MakeFrame(0X1A08, 0XA, 2, 0X0);
	MakeNameEx(0X1A6E, "WRONG_CYLINDER", SN_LOCAL);
	MakeNameEx(0X1A7F, "VERIFY_DONE", SN_LOCAL);
	MakeFunction    (0X1A82,0X1B2E);
	SetFunctionFlags(0X1A82,0x10);
	MakeFrame(0X1A82, 0XA, 2, 0X0);
	MakeFunction    (0X1B2E,0X1C1A);
	SetFunctionFlags(0X1B2E,0x10);
	MakeFrame(0X1B2E, 0XC, 2, 0X0);
	MakeLocal(0X1B2E, 0X1C1A, "[bp-0X8]", "CYL_START");
	MakeLocal(0X1B2E, 0X1C1A, "[bp-0X6]", "CYL_END");
	MakeFunction    (0X1C1A,0X1C35);
	SetFunctionFlags(0X1C1A,0x10);
	MakeFrame(0X1C1A, 0X0, 2, 0X0);
	MakeFunction    (0X1C35,0X1C38);
	SetFunctionFlags(0X1C35,0x0);
	MakeFunction    (0X1C38,0X1C3F);
	SetFunctionFlags(0X1C38,0x0);
	MakeFunction    (0X1C3F,0X1C53);
	SetFunctionFlags(0X1C3F,0x10);
	MakeFrame(0X1C3F, 0X0, 2, 0X0);
	MakeFunction    (0X1C53,0X1C69);
	SetFunctionFlags(0X1C53,0x10);
	MakeFrame(0X1C53, 0X0, 2, 0X0);
	MakeFunction    (0X1C69,0X1C80);
	SetFunctionFlags(0X1C69,0x10);
	MakeFrame(0X1C69, 0X0, 2, 0X0);
	MakeFunction    (0X1C80,0X1C97);
	SetFunctionFlags(0X1C80,0x10);
	MakeFrame(0X1C80, 0X0, 2, 0X0);
	MakeFunction    (0X1C98,0X1E65);
	SetFunctionFlags(0X1C98,0x10);
	MakeFrame(0X1C98, 0X10, 2, 0X0);
	MakeNameEx(0X1CCF, "IO_INITED", SN_LOCAL);
	MakeNameEx(0X1D37, "DO_FORMAT", SN_LOCAL);
	MakeNameEx(0X1E13, "SHOW_DISK_MENU", SN_LOCAL);
	MakeFunction    (0X1E66,0X2029);
	SetFunctionFlags(0X1E66,0x10);
	MakeFrame(0X1E66, 0XC, 2, 0X0);
	MakeNameEx(0X1EA1, "CHOSEN_DISK_2", SN_LOCAL);
	MakeNameEx(0X1EB7, "DISK_CHOSEN", SN_LOCAL);
	MakeNameEx(0X1EBD, "CHOOSE_MODEL", SN_LOCAL);
	MakeNameEx(0X1F02, "BAD_ENTRY", SN_LOCAL);
	MakeNameEx(0X1F41, "CYLS_306", SN_LOCAL);
	MakeNameEx(0X1F69, "CYLS_612_HD_3", SN_LOCAL);
	MakeNameEx(0X1F78, "READ_HEADS", SN_LOCAL);
	MakeNameEx(0X1F84, "BAD_HEADS", SN_LOCAL);
	MakeNameEx(0X1F88, "REREAD_HEADS", SN_LOCAL);
	MakeNameEx(0X1FBF, "GOOD_HEADS", SN_LOCAL);
	MakeNameEx(0X1FC7, "READ_CYLINDERS", SN_LOCAL);
	MakeNameEx(0X1FF8, "BAD_CYLS", SN_LOCAL);
	MakeNameEx(0X1FFC, "REREAD_CYLS", SN_LOCAL);
	MakeFunction    (0X202A,0X21DD);
	SetFunctionFlags(0X202A,0x10);
	MakeFrame(0X202A, 0X10, 2, 0X0);
	MakeLocal(0X202A, 0X21DD, "[bp-0XA]", "NUMBER_READ");
	MakeNameEx(0X206C, "READ_AGAIN", SN_LOCAL);
	MakeNameEx(0X20C9, "READ_HEAD_NUM", SN_LOCAL);
	MakeNameEx(0X20E7, "CYL_NUM_GOOD", SN_LOCAL);
	MakeNameEx(0X2124, "SECTOR_NUM_GOOD", SN_LOCAL);
	MakeNameEx(0X2142, "HEAD_NUM_GOOD", SN_LOCAL);
	MakeNameEx(0X217F, "GOT_CORRECT_CHS", SN_LOCAL);
	MakeNameEx(0X21B6, "STATUS_NOT_BAD_SEC", SN_LOCAL);
	MakeNameEx(0X21BB, "STATUS_0", SN_LOCAL);
	MakeNameEx(0X21D1, "READ_SEC_DONE", SN_LOCAL);
	MakeFunction    (0X21DE,0X22EA);
	SetFunctionFlags(0X21DE,0x10);
	MakeFrame(0X21DE, 0X12, 2, 0X0);
	MakeFunction    (0X22EA,0X23AC);
	SetFunctionFlags(0X22EA,0x10);
	MakeFrame(0X22EA, 0XC, 2, 0X0);
	MakeNameEx(0X230F, "READ_CYLINDER", SN_LOCAL);
	MakeNameEx(0X2325, "READ_TRACK", SN_LOCAL);
	MakeNameEx(0X235B, "READ_SEC", SN_LOCAL);
	MakeNameEx(0X2383, "NEXT_SEC", SN_LOCAL);
	MakeNameEx(0X238A, "NEXT_HD", SN_LOCAL);
	MakeNameEx(0X238E, "NEXT_TRACK", SN_LOCAL);
	MakeNameEx(0X239C, "NEXT_CYLINDER", SN_LOCAL);
	MakeNameEx(0X23A9, "READ_ALL_FINISHED", SN_LOCAL);
	MakeFunction    (0X23AC,0X244E);
	SetFunctionFlags(0X23AC,0x10);
	MakeFrame(0X23AC, 0XA, 2, 0X0);
	MakeNameEx(0X23BE, "STATUS_NOT_OK", SN_LOCAL);
	MakeNameEx(0X23C6, "FLAGGED_BAD_SECTOR", SN_LOCAL);
	MakeNameEx(0X23E2, "ERR_REC_NOT_FOUND", SN_LOCAL);
	MakeNameEx(0X23FC, "GO_CHECK_IO_ERROR", SN_LOCAL);
	MakeNameEx(0X2407, "NOT_FLAGGED_BAD", SN_LOCAL);
	MakeNameEx(0X2425, "ERR_BAD_CRC", SN_LOCAL);
	MakeNameEx(0X2441, "ERR_INVALID", SN_LOCAL);
	MakeNameEx(0X2445, "DO_PRINT", SN_LOCAL);
	MakeNameEx(0X244B, "NO_READ_ERROR", SN_LOCAL);
	MakeFunction    (0X2450,0X2528);
	SetFunctionFlags(0X2450,0x10);
	MakeFrame(0X2450, 0X0, 2, 0X0);
	MakeFunction    (0X2528,0X259B);
	SetFunctionFlags(0X2528,0x10);
	MakeFrame(0X2528, 0X0, 2, 0X0);
	MakeLocal(0X2528, 0X259B, "[bp+0X4]", "DRIVE_NUM");
	MakeNameEx(0X2543, "DO_CH1", SN_LOCAL);
	MakeNameEx(0X2560, "DO_CH2", SN_LOCAL);
	MakeNameEx(0X257D, "SWITCH_CHANNEL", SN_LOCAL);
	MakeNameEx(0X2581, "DO_IO_ATN", SN_LOCAL);
	MakeNameEx(0X258E, "IO_CH_DONE", SN_LOCAL);
	MakeNameEx(0X2595, "IO_CH_STAT_RETURN", SN_LOCAL);
	MakeFunction    (0X259C,0X2694);
	SetFunctionFlags(0X259C,0x10);
	MakeFrame(0X259C, 0X0, 2, 0X0);
	MakeLocal(0X259C, 0X2694, "[bp+0X4]", "DRIVE");
	MakeLocal(0X259C, 0X2694, "[bp+0X6]", "HEAD");
	MakeLocal(0X259C, 0X2694, "[bp+0X8]", "CYLINDER");
	MakeLocal(0X259C, 0X2694, "[bp+0XA]", "SECTOR");
	MakeLocal(0X259C, 0X2694, "[bp+0XC]", "LENGTH");
	MakeLocal(0X259C, 0X2694, "[bp+0XE]", "BUF");
	MakeNameEx(0X25AD, "DRIVE_1", SN_LOCAL);
	MakeNameEx(0X2619, "CMD_49_FINISHED", SN_LOCAL);
	MakeNameEx(0X2620, "DRIVE_0", SN_LOCAL);
	MakeNameEx(0X2664, "DRIVE_0_SECTORS", SN_LOCAL);
	MakeFunction    (0X2694,0X2787);
	SetFunctionFlags(0X2694,0x10);
	MakeFrame(0X2694, 0X0, 2, 0X0);
	MakeLocal(0X2694, 0X2787, "[bp+0X4]", "DRIVE");
	MakeLocal(0X2694, 0X2787, "[bp+0X6]", "HEAD");
	MakeLocal(0X2694, 0X2787, "[bp+0X8]", "CYLINDER");
	MakeLocal(0X2694, 0X2787, "[bp+0XA]", "SECTOR");
	MakeLocal(0X2694, 0X2787, "[bp+0XC]", "LENGTH");
	MakeLocal(0X2694, 0X2787, "[bp+0XE]", "BUF");
	MakeNameEx(0X26A5, "DRIVE_1", SN_LOCAL);
	MakeFunction    (0X2788,0X287B);
	SetFunctionFlags(0X2788,0x10);
	MakeFrame(0X2788, 0X0, 2, 0X0);
	MakeLocal(0X2788, 0X287B, "[bp+0X4]", "DRIVE");
	MakeLocal(0X2788, 0X287B, "[bp+0X6]", "HEAD");
	MakeLocal(0X2788, 0X287B, "[bp+0X8]", "CYLINDER");
	MakeLocal(0X2788, 0X287B, "[bp+0XA]", "SECTOR");
	MakeLocal(0X2788, 0X287B, "[bp+0XC]", "LENGTH");
	MakeLocal(0X2788, 0X287B, "[bp+0XE]", "BUF");
	MakeFunction    (0X287C,0X28E5);
	SetFunctionFlags(0X287C,0x10);
	MakeFrame(0X287C, 0X0, 2, 0X0);
	MakeNameEx(0X28BA, "DRIVE_0", SN_LOCAL);
	MakeNameEx(0X28DC, "PRINT_ERROR", SN_LOCAL);
	MakeNameEx(0X28E2, "CHECK_DONE", SN_LOCAL);
	MakeFunction    (0X28E6,0X2902);
	SetFunctionFlags(0X28E6,0x10);
	MakeFrame(0X28E6, 0XA, 2, 0X0);
	MakeFunction    (0X2902,0X2A6E);
	SetFunctionFlags(0X2902,0x10);
	MakeFrame(0X2902, 0XA, 2, 0X0);
	MakeLocal(0X2902, 0X2A6E, "[bp-0X6]", "COUNTER");
	MakeNameEx(0X2A1B, "IDC_AGAIN", SN_LOCAL);
	MakeNameEx(0X2A3A, "POLL_ZERO", SN_LOCAL);
	MakeNameEx(0X2A41, "IS_ZERO", SN_LOCAL);
	MakeNameEx(0X2A52, "IDC_SPIN_FOREVER", SN_LOCAL);
	MakeNameEx(0X2A57, "IDC_LOADED", SN_LOCAL);
	MakeFunction    (0X2A6E,0X2AF3);
	SetFunctionFlags(0X2A6E,0x10);
	MakeFrame(0X2A6E, 0XA, 2, 0X0);
	MakeFunction    (0X2AF4,0X2B54);
	SetFunctionFlags(0X2AF4,0x10);
	MakeFrame(0X2AF4, 0X0, 2, 0X0);
	MakeFunction    (0X2B54,0X2B66);
	SetFunctionFlags(0X2B54,0x10);
	MakeFrame(0X2B54, 0X0, 2, 0X0);
	MakeFunction    (0X2B66,0X2F9D);
	SetFunctionFlags(0X2B66,0x10);
	MakeFrame(0X2B66, 0XE, 2, 0X0);
	MakeLocal(0X2B66, 0X2F9D, "[bp-0XA]", "KEY");
	MakeLocal(0X2B66, 0X2F9D, "[bp-0X8]", "SECTOR_NUM_XX0");
	MakeLocal(0X2B66, 0X2F9D, "[bp-0X6]", "SECTOR_NUM_XX1");
	MakeNameEx(0X2BCE, "NO_TEST_CYLS", SN_LOCAL);
	MakeNameEx(0X2BF8, "ANOTHER_TEST_ITERATION", SN_LOCAL);
	MakeNameEx(0X2C8B, "GET_TEST_CYLINDER_NUM", SN_LOCAL);
	MakeNameEx(0X2CD0, "CYLINDER_NUM_GOOD", SN_LOCAL);
	MakeNameEx(0X2F05, "NEXT_HEAD", SN_LOCAL);
	MakeNameEx(0X2F0F, "WRITE_SECTOR", SN_LOCAL);
	MakeNameEx(0X2F90, "TERMINATED", SN_LOCAL);
	MakeFunction    (0X2F9E,0X328D);
	SetFunctionFlags(0X2F9E,0x10);
	MakeFrame(0X2F9E, 0XC, 2, 0X0);
	MakeNameEx(0X2FCC, "NO_INDIVIDUAL", SN_LOCAL);
	MakeNameEx(0X2FEA, "DONE", SN_LOCAL);
	MakeNameEx(0X2FED, "SPECIFIC_PATTERN", SN_LOCAL);
	MakeNameEx(0X2FF7, "READ_PATTERNS", SN_LOCAL);
	MakeNameEx(0X3005, "GET_PATTERN1", SN_LOCAL);
	MakeNameEx(0X3045, "GOOD_PATTERN", SN_LOCAL);
	MakeNameEx(0X307E, "GET_PATTERN2", SN_LOCAL);
	MakeNameEx(0X30F7, "GET_PATTERN3", SN_LOCAL);
	MakeNameEx(0X3137, "PATTERN3_GOOD", SN_LOCAL);
	MakeNameEx(0X3170, "GET_PATTERN4", SN_LOCAL);
	MakeNameEx(0X31B0, "PATTERN4_GOOD", SN_LOCAL);
	MakeNameEx(0X31F3, "CHECK_IND_CYLINDERS", SN_LOCAL);
	MakeNameEx(0X326C, "ZERO_PATTERNS_DONE", SN_LOCAL);
	MakeFunction    (0X328E,0X33F8);
	SetFunctionFlags(0X328E,0x10);
	MakeFrame(0X328E, 0XE, 2, 0X0);
	MakeLocal(0X328E, 0X33F8, "[bp-0X8]", "CURRENT_HEAD");
	MakeLocal(0X328E, 0X33F8, "[bp-0X6]", "KEY_READ");
	MakeFunction    (0X33F8,0X3604);
	SetFunctionFlags(0X33F8,0x10);
	MakeFrame(0X33F8, 0X10, 2, 0X0);
	MakeNameEx(0X3479, "WRITE_SECTOR", SN_LOCAL);
	MakeNameEx(0X349A, "WRITE_NEXT_SECTOR", SN_LOCAL);
	MakeNameEx(0X34AB, "CHECK_CRC", SN_LOCAL);
	MakeNameEx(0X34D6, "CRC_GOOD", SN_LOCAL);
	MakeNameEx(0X3601, "ALL_GOOD", SN_LOCAL);
	MakeFunction    (0X3604,0X3656);
	SetFunctionFlags(0X3604,0x10);
	MakeFrame(0X3604, 0XA, 2, 0X0);
	MakeFunction    (0X3656,0X36A8);
	SetFunctionFlags(0X3656,0x10);
	MakeFrame(0X3656, 0XA, 2, 0X0);
	MakeFunction    (0X36A8,0X3706);
	SetFunctionFlags(0X36A8,0x10);
	MakeFrame(0X36A8, 0XA, 2, 0X0);
	MakeFunction    (0X3706,0X3911);
	SetFunctionFlags(0X3706,0x10);
	MakeFrame(0X3706, 0XE, 2, 0X0);
	MakeFunction    (0X3912,0X3B1B);
	SetFunctionFlags(0X3912,0x10);
	MakeFrame(0X3912, 0XE, 2, 0X0);
	MakeFunction    (0X3B1C,0X3C01);
	SetFunctionFlags(0X3B1C,0x10);
	MakeFrame(0X3B1C, 0XC, 2, 0X0);
	MakeFunction    (0X3C02,0X4117);
	SetFunctionFlags(0X3C02,0x10);
	MakeFrame(0X3C02, 0XA, 2, 0X0);
	MakeFunction    (0X4118,0X428F);
	SetFunctionFlags(0X4118,0x10);
	MakeFrame(0X4118, 0XA, 2, 0X0);
	MakeFunction    (0X4290,0X4336);
	SetFunctionFlags(0X4290,0x10);
	MakeFrame(0X4290, 0XE, 2, 0X0);
	MakeFunction    (0X4336,0X4364);
	SetFunctionFlags(0X4336,0x10);
	MakeFrame(0X4336, 0XC, 2, 0X0);
	MakeLocal(0X4336, 0X4364, "[bp-0X6]", "BYTES_DONE");
	MakeNameEx(0X4345, "SET_BYTE", SN_LOCAL);
	MakeNameEx(0X435A, "NEXT_BYTE", SN_LOCAL);
	MakeFunction    (0X4364,0X44B3);
	SetFunctionFlags(0X4364,0x10);
	MakeFrame(0X4364, 0XC, 2, 0X0);
	MakeFunction    (0X44B4,0X4598);
	SetFunctionFlags(0X44B4,0x10);
	MakeFrame(0X44B4, 0XC, 2, 0X0);
	MakeFunction    (0X4598,0X463E);
	SetFunctionFlags(0X4598,0x10);
	MakeFrame(0X4598, 0X12, 2, 0X0);
	MakeLocal(0X4598, 0X463E, "[bp+0X4]", "INPUT_BUFFER");
	MakeLocal(0X4598, 0X463E, "[bp+0X6]", "OUTPUT_BUFFER");
	MakeLocal(0X4598, 0X463E, "[bp+0X8]", "BASE");
	MakeNameEx(0X45BC, "NEXT_BYTE", SN_LOCAL);
	MakeNameEx(0X4638, "ATOI_DONE", SN_LOCAL);
	MakeFunction    (0X463E,0X47D3);
	SetFunctionFlags(0X463E,0x10);
	MakeFrame(0X463E, 0XA0, 2, 0X0);
	MakeFunction    (0X47D4,0X4971);
	SetFunctionFlags(0X47D4,0x10);
	MakeFrame(0X47D4, 0XA0, 2, 0X0);
	MakeFunction    (0X4972,0X49A0);
	SetFunctionFlags(0X4972,0x10);
	MakeFrame(0X4972, 0XA, 2, 0X0);
	MakeFunction    (0X49A0,0X4A7C);
	SetFunctionFlags(0X49A0,0x10);
	MakeFrame(0X49A0, 0X6E, 2, 0X0);
	MakeFunction    (0X4A7C,0X4BED);
	SetFunctionFlags(0X4A7C,0x10);
	MakeFrame(0X4A7C, 0XDC, 2, 0X0);
	MakeFunction    (0X4BEE,0X4C0F);
	SetFunctionFlags(0X4BEE,0x10);
	MakeFrame(0X4BEE, 0XA, 2, 0X0);
	MakeLocal(0X4BEE, 0X4C0F, "[bp-0X6]", "CHAR");
	MakeLocal(0X4BEE, 0X4C0F, "[bp+0X4]", "KEY");
	MakeFunction    (0X4C10,0X4D10);
	SetFunctionFlags(0X4C10,0x10);
	MakeFrame(0X4C10, 0X12, 2, 0X0);
	MakeLocal(0X4C10, 0X4D10, "[bp-0XA]", "CHARS_READ");
	MakeLocal(0X4C10, 0X4D10, "[bp-0X8]", "KEY_READ");
	MakeLocal(0X4C10, 0X4D10, "[bp-0X6]", "KEY_READ_2");
	MakeLocal(0X4C10, 0X4D10, "[bp+0X4]", "PROMPT_STRING");
	MakeLocal(0X4C10, 0X4D10, "[bp+0X6]", "PROMPT_BUF");
	MakeLocal(0X4C10, 0X4D10, "[bp+0X8]", "PROMPT_LEN");
	MakeNameEx(0X4C3B, "DO_READ_KEY", SN_LOCAL);
	MakeNameEx(0X4C71, "READ_LETTER", SN_LOCAL);
	MakeNameEx(0X4C8D, "BACKSPACE_KEY", SN_LOCAL);
	MakeNameEx(0X4CA1, "READ_ANOTHER", SN_LOCAL);
	MakeNameEx(0X4CA6, "ESCAPE_KEY", SN_LOCAL);
	MakeNameEx(0X4CB6, "RETURN_KEY", SN_LOCAL);
	MakeNameEx(0X4CC6, "DELETE_KEY", SN_LOCAL);
	MakeNameEx(0X4D07, "BAD_KEY_ERR", SN_LOCAL);
	MakeFunction    (0X4D10,0X4D32);
	SetFunctionFlags(0X4D10,0x10);
	MakeFrame(0X4D10, 0XA, 2, 0X0);
	MakeFunction    (0X4D32,0X4DFC);
	SetFunctionFlags(0X4D32,0x10);
	MakeFrame(0X4D32, 0XC, 2, 0X0);
	MakeFunction    (0X4DFC,0X4E89);
	SetFunctionFlags(0X4DFC,0x10);
	MakeFrame(0X4DFC, 0X0, 2, 0X0);
	MakeNameEx(0X4E01, "CK1", SN_LOCAL);
	MakeNameEx(0X4E08, "CK2", SN_LOCAL);
	MakeNameEx(0X4E0F, "CK3", SN_LOCAL);
	MakeFunction    (0X4E8A,0X4EBE);
	SetFunctionFlags(0X4E8A,0x10);
	MakeFrame(0X4E8A, 0X0, 2, 0X0);
	MakeFunction    (0X4EBE,0X4F0E);
	SetFunctionFlags(0X4EBE,0x10);
	MakeFrame(0X4EBE, 0XC, 2, 0X0);
	MakeFunction    (0X4F0E,0X4F5B);
	SetFunctionFlags(0X4F0E,0x10);
	MakeFrame(0X4F0E, 0XC, 2, 0X0);
	MakeFunction    (0X4F5C,0X4FDC);
	SetFunctionFlags(0X4F5C,0x10);
	MakeFrame(0X4F5C, 0XA, 2, 0X0);
	MakeFunction    (0X4FDC,0X500B);
	SetFunctionFlags(0X4FDC,0x10);
	MakeFrame(0X4FDC, 0X1F8, 2, 0X0);
	MakeFunction    (0X500C,0X502F);
	SetFunctionFlags(0X500C,0x10);
	MakeFrame(0X500C, 0XA, 2, 0X0);
	MakeFunction    (0X5030,0X554B);
	SetFunctionFlags(0X5030,0x10);
	MakeFrame(0X5030, 0XA2, 2, 0X0);
	MakeFunction    (0X554C,0X55AB);
	SetFunctionFlags(0X554C,0x10);
	MakeFrame(0X554C, 0X0, 2, 0X0);
	MakeFunction    (0X55AC,0X55EB);
	SetFunctionFlags(0X55AC,0x10);
	MakeFrame(0X55AC, 0X0, 2, 0X0);
	MakeFunction    (0X55EC,0X567E);
	SetFunctionFlags(0X55EC,0x10);
	MakeFrame(0X55EC, 0X0, 2, 0X0);
	MakeFunction    (0X567E,0X56A1);
	SetFunctionFlags(0X567E,0x10);
	MakeFrame(0X567E, 0X0, 2, 0X0);
	MakeFunction    (0X56A2,0X5706);
	SetFunctionFlags(0X56A2,0x10);
	MakeFrame(0X56A2, 0X0, 2, 0X0);
	MakeFunction    (0X5706,0X5735);
	SetFunctionFlags(0X5706,0x10);
	MakeFrame(0X5706, 0X0, 2, 0X0);
	MakeFunction    (0X5736,0X57A4);
	SetFunctionFlags(0X5736,0x10);
	MakeFrame(0X5736, 0X0, 2, 0X0);
	MakeFunction    (0X57A4,0X5801);
	SetFunctionFlags(0X57A4,0x10);
	MakeFrame(0X57A4, 0X0, 2, 0X0);
	MakeFunction    (0X5802,0X5876);
	SetFunctionFlags(0X5802,0x10);
	MakeFrame(0X5802, 0X6, 2, 0X0);
	MakeFunction    (0X5876,0X589A);
	SetFunctionFlags(0X5876,0x10);
	MakeFrame(0X5876, 0XA, 2, 0X0);
	MakeFunction    (0X589A,0X58E2);
	SetFunctionFlags(0X589A,0x10);
	MakeFrame(0X589A, 0X0, 2, 0X0);
	MakeFunction    (0X58E2,0X5917);
	SetFunctionFlags(0X58E2,0x10);
	MakeFrame(0X58E2, 0X0, 2, 0X0);
	MakeFunction    (0X5918,0X592A);
	SetFunctionFlags(0X5918,0x10);
	MakeFrame(0X5918, 0X0, 2, 0X0);
	MakeFunction    (0X5932,0X5A14);
	SetFunctionFlags(0X5932,0x10);
	MakeFrame(0X5932, 0XA, 2, 0X0);
	MakeFunction    (0X5A1C,0X5A96);
	SetFunctionFlags(0X5A1C,0x10);
	MakeFrame(0X5A1C, 0X0, 2, 0X0);
	MakeFunction    (0X5A96,0X5AF0);
	SetFunctionFlags(0X5A96,0x10);
	MakeFrame(0X5A96, 0X0, 2, 0X0);
	MakeFunction    (0X5AF0,0X5B67);
	SetFunctionFlags(0X5AF0,0x10);
	MakeFrame(0X5AF0, 0XD0, 2, 0X0);
	MakeFunction    (0X5B68,0X5BC1);
	SetFunctionFlags(0X5B68,0x10);
	MakeFrame(0X5B68, 0XA, 2, 0X0);
	MakeFunction    (0X5BC2,0X5C74);
	SetFunctionFlags(0X5BC2,0x10);
	MakeFrame(0X5BC2, 0XC, 2, 0X0);
	MakeFunction    (0X5C74,0X5CD4);
	SetFunctionFlags(0X5C74,0x10);
	MakeFrame(0X5C74, 0XA, 2, 0X0);
	MakeFunction    (0X5CD4,0X5D84);
	SetFunctionFlags(0X5CD4,0x10);
	MakeFrame(0X5CD4, 0XE, 2, 0X0);
	MakeFunction    (0X5D84,0X5D8C);
	SetFunctionFlags(0X5D84,0x10);
	MakeFrame(0X5D84, 0X0, 2, 0X0);
	MakeFunction    (0X5D8C,0X5DE5);
	SetFunctionFlags(0X5D8C,0x10);
	MakeFrame(0X5D8C, 0XA, 2, 0X0);
	MakeFunction    (0X5DE6,0X5E15);
	SetFunctionFlags(0X5DE6,0x10);
	MakeFrame(0X5DE6, 0X0, 2, 0X0);
	MakeFunction    (0X5E16,0X5E6D);
	SetFunctionFlags(0X5E16,0x10);
	MakeFrame(0X5E16, 0XA, 2, 0X0);
	MakeFunction    (0X5E6E,0X6073);
	SetFunctionFlags(0X5E6E,0x10);
	MakeFrame(0X5E6E, 0XC, 2, 0X0);
	MakeFunction    (0X6074,0X611B);
	SetFunctionFlags(0X6074,0x10);
	MakeFrame(0X6074, 0XC, 2, 0X0);
	MakeFunction    (0X6124,0X617D);
	SetFunctionFlags(0X6124,0x10);
	MakeFrame(0X6124, 0X0, 2, 0X0);
	MakeFunction    (0X617E,0X6259);
	SetFunctionFlags(0X617E,0x10);
	MakeFrame(0X617E, 0XC, 2, 0X0);
	MakeFunction    (0X625A,0X62BD);
	SetFunctionFlags(0X625A,0x10);
	MakeFrame(0X625A, 0X0, 2, 0X0);
	MakeFunction    (0X62BE,0X62F4);
	SetFunctionFlags(0X62BE,0x10);
	MakeFrame(0X62BE, 0X0, 2, 0X0);
	MakeFunction    (0X62F4,0X6476);
	SetFunctionFlags(0X62F4,0x10);
	MakeFrame(0X62F4, 0XD0, 2, 0X0);
	MakeFunction    (0X6476,0X653B);
	SetFunctionFlags(0X6476,0x10);
	MakeFrame(0X6476, 0XA, 2, 0X0);
	MakeFunction    (0X653C,0X65E2);
	SetFunctionFlags(0X653C,0x10);
	MakeFrame(0X653C, 0XA, 2, 0X0);
	MakeFunction    (0X65E2,0X665F);
	SetFunctionFlags(0X65E2,0x10);
	MakeFrame(0X65E2, 0XC, 2, 0X0);
	MakeFunction    (0X6660,0X6699);
	SetFunctionFlags(0X6660,0x10);
	MakeFrame(0X6660, 0XA, 2, 0X0);
	MakeFunction    (0X669A,0X66B4);
	SetFunctionFlags(0X669A,0x10);
	MakeFrame(0X669A, 0X0, 2, 0X0);
	MakeFunction    (0X66B4,0X66D0);
	SetFunctionFlags(0X66B4,0x10);
	MakeFrame(0X66B4, 0X0, 2, 0X0);
	MakeLocal(0X66B4, 0X66D0, "[bp+0X4]", "BANNER_STRING");
	MakeNameEx(0X66B9, "CKX", SN_LOCAL);
	MakeFunction    (0X66D8,0X6850);
	SetFunctionFlags(0X66D8,0x10);
	MakeFrame(0X66D8, 0X10, 2, 0X0);
	MakeFunction    (0X6850,0X686E);
	SetFunctionFlags(0X6850,0x10);
	MakeFrame(0X6850, 0X0, 2, 0X0);
	MakeFunction    (0X686E,0X689A);
	SetFunctionFlags(0X686E,0x10);
	MakeFrame(0X686E, 0X0, 2, 0X0);
	MakeFunction    (0X689A,0X68D5);
	SetFunctionFlags(0X689A,0x10);
	MakeFrame(0X689A, 0X0, 2, 0X0);
	MakeFunction    (0X68D6,0X69CC);
	SetFunctionFlags(0X68D6,0x10);
	MakeFrame(0X68D6, 0XE, 2, 0X0);
	MakeFunction    (0X69CC,0X69FB);
	SetFunctionFlags(0X69CC,0x10);
	MakeFrame(0X69CC, 0X0, 2, 0X0);
	MakeFunction    (0X69FC,0X6BB6);
	SetFunctionFlags(0X69FC,0x10);
	MakeFrame(0X69FC, 0X10, 2, 0X0);
	MakeFunction    (0X6BB6,0X6C25);
	SetFunctionFlags(0X6BB6,0x10);
	MakeFrame(0X6BB6, 0XA, 2, 0X0);
	MakeFunction    (0X6C26,0X6C2F);
	SetFunctionFlags(0X6C26,0x10);
	MakeFrame(0X6C26, 0X0, 2, 0X0);
	MakeFunction    (0X6C3A,0X6C46);
	SetFunctionFlags(0X6C3A,0x10);
	MakeFrame(0X6C3A, 0X0, 2, 0X0);
	MakeLocal(0X6C3A, 0X6C46, "[bp+0X4]", "PORT");
	MakeLocal(0X6C3A, 0X6C46, "[bp+0X6]", "VAL");
	MakeFunction    (0X6C46,0X6C52);
	SetFunctionFlags(0X6C46,0x10);
	MakeFrame(0X6C46, 0X0, 2, 0X0);
	MakeLocal(0X6C46, 0X6C52, "[bp+0X4]", "PORT");
	MakeLocal(0X6C46, 0X6C52, "[bp+0X6]", "VAL");
	MakeFunction    (0X6C52,0X6C58);
	SetFunctionFlags(0X6C52,0x0);
	MakeFunction    (0X6C58,0X6C63);
	SetFunctionFlags(0X6C58,0x10);
	MakeFrame(0X6C58, 0X0, 2, 0X0);
	MakeFunction    (0X6C64,0X6C7C);
	SetFunctionFlags(0X6C64,0x10);
	MakeFrame(0X6C64, 0XA, 2, 0X0);
	MakeFunction    (0X6C7C,0X6C94);
	SetFunctionFlags(0X6C7C,0x10);
	MakeFrame(0X6C7C, 0XA, 2, 0X0);
	MakeFunction    (0X6C94,0X6C9E);
	SetFunctionFlags(0X6C94,0x10);
	MakeFrame(0X6C94, 0X0, 2, 0X0);
	MakeFunction    (0X6C9E,0X6CB0);
	SetFunctionFlags(0X6C9E,0x10);
	MakeFrame(0X6C9E, 0X0, 2, 0X0);
	MakeFunction    (0X6CB0,0X6D1B);
	SetFunctionFlags(0X6CB0,0x10);
	MakeFrame(0X6CB0, 0X0, 2, 0X0);
	MakeFunction    (0X6D1C,0X6D4F);
	SetFunctionFlags(0X6D1C,0x10);
	MakeFrame(0X6D1C, 0XA, 2, 0X0);
	MakeFunction    (0X6D50,0X6D63);
	SetFunctionFlags(0X6D50,0x0);
	MakeFunction    (0X6D64,0X6DA3);
	SetFunctionFlags(0X6D64,0x10);
	MakeFrame(0X6D64, 0X0, 2, 0X0);
	MakeFunction    (0X6DA4,0X6DD8);
	SetFunctionFlags(0X6DA4,0x10);
	MakeFrame(0X6DA4, 0XA, 2, 0X0);
	MakeFunction    (0X6DD8,0X6E26);
	SetFunctionFlags(0X6DD8,0x10);
	MakeFrame(0X6DD8, 0XA, 2, 0X0);
	MakeFunction    (0X6E26,0X6E2B);
	SetFunctionFlags(0X6E26,0x0);
	MakeFunction    (0X6E2C,0X6E3D);
	SetFunctionFlags(0X6E2C,0x0);
	MakeFrame(0X6E2C, 0X4, 0, 0X0);
	MakeFunction    (0X6E44,0X6E46);
	SetFunctionFlags(0X6E44,0x0);
	MakeFunction    (0X6E46,0X6E48);
	SetFunctionFlags(0X6E46,0x0);
	MakeFunction    (0X6E4A,0X6E4E);
	SetFunctionFlags(0X6E4A,0x0);
	MakeFunction    (0X6E4E,0X6E58);
	SetFunctionFlags(0X6E4E,0x10);
	MakeFrame(0X6E4E, 0X0, 2, 0X0);
	MakeFunction    (0X6E58,0X6ED8);
	SetFunctionFlags(0X6E58,0x10);
	MakeFrame(0X6E58, 0X12, 2, 0X0);
	MakeFunction    (0X6ED8,0X6EE2);
	SetFunctionFlags(0X6ED8,0x0);
	MakeFunction    (0X6EE2,0X6EEA);
	SetFunctionFlags(0X6EE2,0x0);
	MakeFunction    (0X6EEA,0X6EF5);
	SetFunctionFlags(0X6EEA,0x0);
	MakeFunction    (0X6EF5,0X6F00);
	SetFunctionFlags(0X6EF5,0x0);
	MakeFunction    (0X6F00,0X6F1B);
	SetFunctionFlags(0X6F00,0x10);
	MakeFrame(0X6F00, 0X0, 0, 0X0);
	MakeFunction    (0X6F1B,0X6F1F);
	SetFunctionFlags(0X6F1B,0x0);
	MakeFunction    (0X6F20,0X6F50);
	SetFunctionFlags(0X6F20,0x10);
	MakeFrame(0X6F20, 0X0, 2, 0X0);
	MakeFunction    (0X6F50,0X6F70);
	SetFunctionFlags(0X6F50,0x10);
	MakeFrame(0X6F50, 0XA, 2, 0X0);
	MakeFunction    (0X6F70,0X6F9A);
	SetFunctionFlags(0X6F70,0x2);
	MakeFrame(0X6F70, 0X4, 0, 0X0);
	MakeFunction    (0X6F9A,0X6FCD);
	SetFunctionFlags(0X6F9A,0x12);
	MakeFrame(0X6F9A, 0X0, 2, 0X0);
	MakeFunction    (0X73CE,0X73F7);
	SetFunctionFlags(0X73CE,0x10);
	MakeFrame(0X73CE, 0XC, 2, 0X0);
	MakeFunction    (0X73F8,0X7427);
	SetFunctionFlags(0X73F8,0x10);
	MakeFrame(0X73F8, 0XC, 2, 0X0);
	MakeFunction    (0X7428,0X7457);
	SetFunctionFlags(0X7428,0x10);
	MakeFrame(0X7428, 0XC, 2, 0X0);
	MakeLocal(0X7428, 0X7457, "[bp-0X8]", "UNUSED_DI");
	MakeLocal(0X7428, 0X7457, "[bp-0X6]", "UNUSED_SI");
	MakeLocal(0X7428, 0X7457, "[bp+0X4]", "OFFSET");
	MakeNameEx(0X743E, "SHIFT", SN_LOCAL);
	MakeFunction    (0X7458,0X7460);
	SetFunctionFlags(0X7458,0x10);
	MakeFrame(0X7458, 0X0, 2, 0X0);
	MakeFunction    (0X7460,0X751E);
	SetFunctionFlags(0X7460,0x10);
	MakeFrame(0X7460, 0XA, 2, 0X0);
	MakeFunction    (0X751E,0X7659);
	SetFunctionFlags(0X751E,0x10);
	MakeFrame(0X751E, 0X1FC, 2, 0X0);
	MakeFunction    (0X765A,0X7758);
	SetFunctionFlags(0X765A,0x10);
	MakeFrame(0X765A, 0X356, 2, 0X0);
	MakeFunction    (0X7758,0X7788);
	SetFunctionFlags(0X7758,0x10);
	MakeFrame(0X7758, 0X0, 2, 0X0);
	MakeFunction    (0X7788,0X77DA);
	SetFunctionFlags(0X7788,0x10);
	MakeFrame(0X7788, 0XA, 2, 0X0);
	MakeFunction    (0X77DA,0X7925);
	SetFunctionFlags(0X77DA,0x10);
	MakeFrame(0X77DA, 0XC, 2, 0X0);
	MakeFunction    (0X7926,0X7962);
	SetFunctionFlags(0X7926,0x10);
	MakeFrame(0X7926, 0X0, 2, 0X0);
	MakeFunction    (0X7962,0X7A04);
	SetFunctionFlags(0X7962,0x10);
	MakeFrame(0X7962, 0X10, 2, 0X0);
	MakeFunction    (0X7A04,0X7ACF);
	SetFunctionFlags(0X7A04,0x10);
	MakeFrame(0X7A04, 0X12, 2, 0X0);
	MakeFunction    (0X7AD0,0X7B45);
	SetFunctionFlags(0X7AD0,0x10);
	MakeFrame(0X7AD0, 0XC, 2, 0X0);
	MakeFunction    (0X7B46,0X7B7A);
	SetFunctionFlags(0X7B46,0x10);
	MakeFrame(0X7B46, 0XA, 2, 0X0);
	MakeFunction    (0X7B7A,0X7BC2);
	SetFunctionFlags(0X7B7A,0x10);
	MakeFrame(0X7B7A, 0X0, 2, 0X0);
	MakeFunction    (0X7BC2,0X7C67);
	SetFunctionFlags(0X7BC2,0x10);
	MakeFrame(0X7BC2, 0X6, 4, 0X0);
	MakeFunction    (0X7C68,0X7C9A);
	SetFunctionFlags(0X7C68,0x10);
	MakeFrame(0X7C68, 0X4, 4, 0X0);
	MakeFunction    (0X7C9A,0X7D3C);
	SetFunctionFlags(0X7C9A,0x10);
	MakeFrame(0X7C9A, 0X4, 4, 0X0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetReg(0X1EF5,"ds",0X7D8);
	SetReg(0X6FA7,"ds",0X7D8);
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
}

// End of file.
