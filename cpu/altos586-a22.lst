ZERO:0000 ;
ZERO:0000 ; ╔═════════════════════════════════════════════════════════════════════════╗
ZERO:0000 ; ║	  This file is generated by The	Interactive Disassembler (IDA)	      ║
ZERO:0000 ; ║	  Copyright (c)	2010 by	Hex-Rays SA, <support@hex-rays.com>	      ║
ZERO:0000 ; ║			   Licensed to:	Freeware version		      ║
ZERO:0000 ; ╚═════════════════════════════════════════════════════════════════════════╝
ZERO:0000 ;
ZERO:0000 ; Input MD5	: AF8A8BFBC953DB231C9FFEE7A810BBEA
ZERO:0000
ZERO:0000
ZERO:0000		  .686p
ZERO:0000		  .mmx
ZERO:0000		  .model flat
ZERO:0000
ZERO:0000 ; ═══════════════════════════════════════════════════════════════════════════
ZERO:0000
ZERO:0000 ; Segment type: Regular
ZERO:0000 ZERO		  segment byte public '' use16
ZERO:0000		  assume cs:ZERO
ZERO:0000		  assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
ZERO:0000 INT0_OFF	  dw ?			  ; DATA XREF: POST+B8w
ZERO:0000					  ; POST:loc_FE0D1w ...
ZERO:0002 INT0_SEG	  dw ?
ZERO:0004 word_4	  dw ?
ZERO:0006 word_6	  dw ?
ZERO:0008 INT2_NMI_OFF	  dw ?			  ; DATA XREF: POST+17Ew
ZERO:0008					  ; POST+244w ...
ZERO:000A INT2_NMI_SEG	  dw ?			  ; DATA XREF: POST+182w
ZERO:000A					  ; POST+248w ...
ZERO:000C byte_C	  db 78h dup(	?)
ZERO:0084 INT33_TIMER_OFF dw ?			  ; DATA XREF: POST+250w
ZERO:0086 INT33_TIMER_SEG dw ?			  ; DATA XREF: POST+254w
ZERO:0088 INT34_IR2_HDD_OFF dw ?		  ; DATA XREF: POST_FINISH+22w
ZERO:0088					  ; POST_FINISH+43r ...
ZERO:008A INT34_IR2_HDD_SEG dw ?		  ; DATA XREF: SETUP_IRQS+13w
ZERO:008C		  db 10h dup(	?)
ZERO:009C INT39_IR7_FDD_OFF dw ?		  ; DATA XREF: SETUP_IRQS+1Bw
ZERO:009E INT39_IR7_FDD_SEG dw ?		  ; DATA XREF: SETUP_IRQS+1Ew
ZERO:00A0 byte_A0	  db 360h dup(	 ?)
ZERO:0400 IOP1_PTR	  IOP8089_CB <?>	  ; DATA XREF: DO_SUBMIT_IOP+250o
ZERO:0400					  ; POST+16Fw ...
ZERO:0408 IOP3_PTR	  IOP8089_CB <?>
ZERO:0410 SCB		  IOP8089_SCB <1, 0, 0,	40h> ; DATA XREF: POST_FINISH+32o
ZERO:0410					  ; POST_FINISH+39o ...
ZERO:0416 FW_REG	  dw 0			  ; DATA XREF: POST_FINISH+69o
ZERO:0416					  ; POST_FINISH+7Cw ...
ZERO:0416					  ; SYS	- Firmware Version Register
ZERO:0418 SYS_STAT_REG	  db 0			  ; SYS	- System Status	Register
ZERO:0419 INT_VECTOR_REG  dw 0			  ; SYS	- Interrupt Vector Register
ZERO:041B NEW_CMD_REG	  db 0			  ; DATA XREF: DO_FLOPPY_CMD+2Dw
ZERO:041B					  ; INC_NEW_CMD_REGw
ZERO:041B					  ; SYS	- New Command Register
ZERO:041C IO_REGS	  CHAN_REGS <7EB4h, 0, 0, 0, 0,	0, 0, 0A0h, 9, 0, 0Ah, 0, 0, 0,	0>
ZERO:041C					  ; DATA XREF: POST_FINISH+89o
ZERO:041C					  ; CHANNEL_0_INIT+Ao ...
ZERO:041C					  ; CH 0 - Channel Parameter Register
ZERO:0432		  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 0AAh, 9,	0, 0Ah,	0, 0, 0, 0> ; CH 1 - Channel Parameter Register
ZERO:0448		  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 0B4h, 9,	0, 0Ah,	0, 0, 0, 0> ; CH 2 - Channel Parameter Register
ZERO:045E		  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 0BEh, 9,	0, 0Ah,	0, 0, 0, 0> ; CH 3 - Channel Parameter Register
ZERO:0474		  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 0C8h, 9,	0, 0Ah,	0, 0, 0, 0> ; CH 4 - Channel Parameter Register
ZERO:048A		  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 0D2h, 9,	0, 0Ah,	0, 0, 0, 0> ; CH 5 - Channel Parameter Register
ZERO:04A0 FDC_REGS	  db 0			  ; FLOPPY_COMMAND_REG
ZERO:04A0					  ; DATA XREF: DO_FLOPPY_CMD+28w
ZERO:04A0					  ; DO_FLOPPY_CMD:POLL_FLOPPY_COMMAND_DONEr ...
ZERO:04A0		  db 0			  ; anonymous_0	; UNK -	Command	Register?
ZERO:04A0		  dw 0			  ; FLOPPY_DATA_BUF_PTR
ZERO:04A0		  db 0,	2, 5 dup(0), 2
ZERO:04A0		  dw 512		  ; SECTOR_SIZE
ZERO:04A0		  db 6			  ; field_E
ZERO:04A0		  db 0			  ; field_F
ZERO:04B0		  FDD_REGS <0>
ZERO:04C0		  db	0
ZERO:04C1		  db	0
ZERO:04C2		  db	0
ZERO:04C3		  db	0
ZERO:04C4		  db	0
ZERO:04C5		  db	0
ZERO:04C6		  db	0
ZERO:04C7		  db	0
ZERO:04C8		  db	0
ZERO:04C9		  db	0
ZERO:04CA		  db	0
ZERO:04CB		  db	2
ZERO:04CC		  db	0
ZERO:04CD		  db	2
ZERO:04CE		  db	6
ZERO:04CF		  db	0
ZERO:04D0		  db	0
ZERO:04D1		  db	0
ZERO:04D2		  db	0
ZERO:04D3		  db	0
ZERO:04D4		  db	0
ZERO:04D5		  db	0
ZERO:04D6		  db	0
ZERO:04D7		  db	0
ZERO:04D8		  db	0
ZERO:04D9		  db	0
ZERO:04DA		  db	0
ZERO:04DB		  db	0
ZERO:04DC		  db	0
ZERO:04DD		  db	0
ZERO:04DE		  db	0
ZERO:04DF		  db	0
ZERO:04E0		  db	0
ZERO:04E1		  db	0
ZERO:04E2		  db	0
ZERO:04E3		  db	0
ZERO:04E4		  db	0
ZERO:04E5		  db	0
ZERO:04E6		  db	0
ZERO:04E7		  db	0
ZERO:04E8		  db	0
ZERO:04E9		  db	0
ZERO:04EA		  db  11h
ZERO:04EB		  db  11h
ZERO:04EC		  db  11h
ZERO:04ED		  db  11h
ZERO:04EE		  db  22h ; "
ZERO:04EF		  db  22h ; "
ZERO:04F0		  db  22h ; "
ZERO:04F1		  db  22h ; "
ZERO:04F2 INT34_IR2_HDD_PTR db 0		  ; DATA XREF: POST_FINISH+1Fr
ZERO:04F2					  ; POST_FINISH+46w ...
ZERO:04F3		  db	0
ZERO:04F4 IOP_IRQ_DOORBELL db 0FFh		  ; DATA XREF: INT34_IR2_HDD_HANDLER_SIMPLE+6w
ZERO:04F4					  ; DO_SUBMIT_IOP+A0w ...
ZERO:04F4					  ; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ZERO:04F5 FDD_DOORBELL	  db 0			  ; DATA XREF: DO_SUBMIT_IOP+8Cw
ZERO:04F5					  ; INT39_IR7_FDD_HANDLER+6r ...
ZERO:04F6 POST_STATUS_01  db 0			  ; DATA XREF: POST_FINISH+A1w
ZERO:04F6					  ; POST_FINISH+CFw ...
ZERO:04F7 POST_STATUS_02  db 0			  ; DATA XREF: POST_FINISH+D4w
ZERO:04F7					  ; sub_FD024r
ZERO:04F8 IOP_00_OPCODE	  db 0			  ; DATA XREF: DO_SUBMIT_IOP:FDD_HANDLE_CMD_10w
ZERO:04F8					  ; DO_SUBMIT_IOP+A9o ...
ZERO:04F8					  ; HD/FD - command
ZERO:04F9 IOP_01_BUSY	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+7Cw
ZERO:04F9					  ; DO_SUBMIT_IOP+96r ...
ZERO:04F9					  ; HD/FD - busy status
ZERO:04FA IOP_02	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+83w
ZERO:04FA					  ; DO_SUBMIT_IOP+FAw ...
ZERO:04FA					  ; FDD	- read/write track
ZERO:04FA					  ; HDD	- read/write track LO
ZERO:04FA					  ; FDD	- format sector	side (01/02)
ZERO:04FB IOP_03	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+102w
ZERO:04FB					  ; DO_SUBMIT_IOP+16Dw	...
ZERO:04FB					  ; FDD	- read/write head/side
ZERO:04FB					  ; HDD	- read/write track HI
ZERO:04FB					  ; FDD	- format sectors per track
ZERO:04FC IOP_04_SECTOR	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+10Aw
ZERO:04FC					  ; DO_SUBMIT_IOP+172w	...
ZERO:04FC					  ; FDD	- read/write start sector
ZERO:04FC					  ; HDD	- read/write sector
ZERO:04FC					  ; FDD	- format tracks
ZERO:04FD IOP_05	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+116w
ZERO:04FD					  ; DO_SUBMIT_IOP+125w	...
ZERO:04FD					  ; FDD	read/write - Sector size 02 = 512, 01 =	256
ZERO:04FD					  ; HDD	read/write - Sector count
ZERO:04FD					  ; FDD	format - Fill byte E5h
ZERO:04FE IOP_06	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+137w
ZERO:04FE					  ; DO_SUBMIT_IOP+235w
ZERO:04FE					  ; FDD	- end sector
ZERO:04FE					  ; HDD	- head | 0x80
ZERO:04FF IOP_07	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+13Bw
ZERO:04FF					  ; DO_SUBMIT_IOP+151w
ZERO:04FF					  ; FDD	- read/write always 50
ZERO:0500 IOP_08_FDD_50	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+140w
ZERO:0500					  ; FDD	- read/write always ff (HDD unused)
ZERO:0501 IOP_09_OFF_HI	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+Ew
ZERO:0501					  ; FD/HD - Destination	offset HI
ZERO:0502 IOP_0A_OFF_LO	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+18w
ZERO:0502					  ; FD/HD - Destination	offset LO
ZERO:0503 IOP_0B_SEF_HI	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+22w
ZERO:0503					  ; FD/HD - Destination	segment	HI
ZERO:0504 IOP_0C_SEG_LO	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+2Cw
ZERO:0504					  ; FD/HD - Destination	segment	LO
ZERO:0505 IOP_0D_STATUS	  db	0		  ; DATA XREF: DO_SUBMIT_IOP+30w
ZERO:0505					  ; DO_SUBMIT_IOP+91w ...
ZERO:0505					  ; FD/HD - Operation status. (FF=not run, 00=success)
ZERO:0506		  db	0
ZERO:0507		  db	0
ZERO:0508 byte_508	  db 0			  ; DATA XREF: POST+2D5r
ZERO:0509		  db	0
ZERO:050A		  db	0
ZERO:050B		  db	0
ZERO:050C		  db	0
ZERO:050D		  db	0
ZERO:050E INIT_REG_PTR	  dd 1FFF000Ch		  ; DATA XREF: POST_FINISH:LOAD_INIT_REGr
ZERO:050E					  ; F00_AUTO_BOOT+18r
ZERO:050E					  ; 1FFF:000C =	0x1fffc
ZERO:0512 byte_512	  db 2			  ; DATA XREF: CHANNEL_IO+58w
ZERO:0512					  ; CHANNEL_IO+5Cr ...
ZERO:0513 aMonitorVersionA2_2 db 0Ah		  ; DATA XREF: DO_AUTO_BOOT:loc_FCF45o
ZERO:0513		  db 'Monitor Version a2.2',0
ZERO:0529 aPassedPowerUpTest db	0Ah		  ; DATA XREF: POST_FINISH:POST_PASSEDo
ZERO:0529		  db 'PASSED POWER-UP TEST',0
ZERO:053F aFailedPowerUpTest db	0Ah		  ; DATA XREF: POST_FAILED+1Eo
ZERO:053F		  db 'FAILED POWER-UP TEST '
ZERO:0555 FAILED_TEST_NUMBER db	0,0,0		  ; DATA XREF: POST_FAILED+11o
ZERO:0558 aBootFailedStatus db 0Ah		  ; DATA XREF: BOOT_FAILED:loc_FC681o
ZERO:0558		  db 'Boot Failed, Status=',0
ZERO:056E aFloppyCommandNotSupport db 0Ah	  ; DATA XREF: DO_SUBMIT_IOP:FDD_CMD_NOT_SUPPo
ZERO:056E		  db 'Floppy command not supported.',0
ZERO:058D aFloppyTimeoutError db 0Ah		  ; DATA XREF: DO_SUBMIT_IOP+1A4o
ZERO:058D		  db 'Floppy timeout error',0
ZERO:05A3 aHardDiskCommandNotSuppo db 0Ah	  ; DATA XREF: DO_SUBMIT_IOP:HDD_COMMAND_NOT_SUPPo
ZERO:05A3		  db 'Hard disk command not supported.',0
ZERO:05C5 aHardDiskTimeoutError	db 0Ah		  ; DATA XREF: DO_SUBMIT_IOP+27Fo
ZERO:05C5		  db 'Hard disk timeout error',0
ZERO:05DE aBreak_____0	  db 0Ah		  ; DATA XREF: BREAKPOINT+8o
ZERO:05DE		  db 'Break ....',0
ZERO:05EA aCopyrightAltosComputerS db 'COPYRIGHT ALTOS COMPUTER SYSTEMS',0
ZERO:060B aChannelNo_04_0 db 0Ah		  ; DATA XREF: CHANNEL_IO:loc_FCD98o
ZERO:060B		  db 'Channel no.(0-4): ',0
ZERO:061F aReady_0	  db ' Ready- ',0         ; DATA XREF: CHANNEL_IO+72o
ZERO:0628 aDone_0	  db ' -Done',0           ; DATA XREF: CHANNEL_IO:loc_FCEEBo
ZERO:062F		  db	0
ZERO:0630 byte_630	  db 0			  ; DATA XREF: sub_FD554+3Br
ZERO:0630					  ; sub_FD554+B6w
ZERO:0631		  db	0
ZERO:0632 word_632	  dw 0			  ; DATA XREF: sub_FD554+63r
ZERO:0634 word_634	  dw 0			  ; DATA XREF: sub_FD554+81r
ZERO:0636		  db 2Ah dup(0)
ZERO:0660 REG_NAMES	  db 'AX'                 ; DATA XREF: DUMP_REGS+4Eo
ZERO:0660					  ; DO_DUMP_REGISTERS+2Cr
ZERO:0662 aBx_0		  db 'BX'
ZERO:0664 aCx_0		  db 'CX'
ZERO:0666 aDx_0		  db 'DX'
ZERO:0668 aSi_0		  db 'SI'
ZERO:066A aDi_0		  db 'DI'
ZERO:066C aDs_0		  db 'DS'
ZERO:066E aEs_0		  db 'ES'
ZERO:0670 aSs_0		  db 'SS'
ZERO:0672 aSp_0		  db 'SP'
ZERO:0674 aBp_0		  db 'BP'
ZERO:0676 aFl_0		  db 'FL'
ZERO:0678 BOOT_SECTOR_BUF db  51h, 30h,0D0h,0FFh,0AAh,0BBh,   4, 20h, 0Ah, 4Eh,	  6
ZERO:0678					  ; DATA XREF: IOP8089_CMD+5o
ZERO:0678					  ; DO_DISK_BOOT+59o ...
ZERO:0678		  db  80h,   2,	93h,   8,   2,0CEh,   2,0EAh,0BAh,   6,0FCh ; While overlaying the IO progrem this RAM area does not
ZERO:0678		  db  0Ah, 4Eh,	  6, 20h, 13h, 4Fh, 14h,   0,	0, 0Ah,0BEh ; seem to be passed	to the IOP. Instead, it	is used	as a
ZERO:0678		  db	6,0FCh,	12h,0BAh,   4,0E2h,   0, 0Ah,0CBh,   4,	0Fh ; buffer to	read the boot sectors in from the FD & HD.
ZERO:0678		  db  12h,0E7h,	  4,0B1h,   0,	 2, 93h,   8,	2,0CEh,	  2
ZERO:0678		  db 0EAh,0BAh,	  6,0FCh,   2, 93h, 14h,   0,0CEh,   2,	93h
ZERO:0678		  db  15h,   0,0CEh,   2, 93h,	 6,   2,0CEh,	4,   2,	93h
ZERO:0678		  db	7,   2,0CEh,   4, 0Ah, 4Eh,   6, 10h,	3, 93h,	  6
ZERO:0678		  db	3,0CFh,	14h, 0Ah,0BEh,	 6,0FCh, 2Ah,0BAh,   4,0FCh
ZERO:0678		  db  0Ah,0E7h,	10h, 7Bh, 0Ah,0BFh,   4, 0Eh,	3, 8Bh,	0Ch
ZERO:0678		  db  31h, 30h,	  0,   0, 63h, 83h, 0Ah, 8Bh, 9Fh, 16h,	70h
ZERO:0678		  db  31h, 30h,	  0,   0,0F1h, 30h, 80h,0FEh, 11h, 30h,0D0h
ZERO:0678		  db 0FFh, 13h,	4Fh, 12h,   0,	 2, 0Ah,0BBh,	4, 12h,0D1h
ZERO:0678		  db  30h, 28h,	8Ah,0A0h,   0, 6Ah,0BBh,   4, 17h, 13h,	4Fh
ZERO:0678		  db  12h,   5,	  2, 88h, 20h, 0Fh,0D1h, 30h, 28h, 56h,0C0h
ZERO:0678		  db	0, 4Ah,0BBh,   4,   5, 13h, 4Fh, 12h,	4,   0,	63h
ZERO:0678		  db  83h, 12h,	  2, 93h,   9,	 0,0CEh, 60h,	0,   2,	93h
ZERO:0678		  db	4,   2,0CEh,   6, 0Ah,0B6h,   6, 33h,	2,0EFh,	10h
ZERO:0678		  db  0Ah,0E7h,	10h,   6,   2,0EBh,   9, 88h, 20h,0DFh,	0Ah
ZERO:0678		  db 0BBh,   4,	0Eh, 23h, 8Bh, 0Ch, 11h, 30h,	0,   0,	63h
ZERO:0678		  db  83h, 0Ah,	8Bh, 9Fh, 16h,	 7, 0Ah, 4Fh,	5,   0,	88h
ZERO:0678		  db  20h, 26h,0E0h,   0,0D1h, 30h,   8,0C2h, 60h,   0,	  0
ZERO:0678		  db	0, 83h,	8Fh, 16h,   2, 92h,   6,   2,0CFh,   5,	0Ah
ZERO:0678		  db 0CBh,   5,	7Eh,0E2h,0F7h,	 5, 0Ah, 4Eh,	6,   0,	88h
ZERO:0678		  db  20h,   5,	13h, 4Fh,   5, 81h,   0, 40h,	0, 20h,	48h
ZERO:0678		  db 0FFh,0FFh,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	  0
ZERO:0678		  db	0,   0,	  0,   0,   0,	 0
ZERO:0878 aPressAnyKeyToInterruptB db 0Ah	  ; DATA XREF: DO_AUTO_BOOT:loc_FCF59o
ZERO:0878		  db 'Press any key to interrupt boot',0Ah,0
ZERO:089A aBootingFromHardDisk db 0Ah		  ; DATA XREF: DO_AUTO_BOOT+75o
ZERO:089A		  db 'Booting from Hard Disk',0
ZERO:08B2 BOOT_PROMPT	  db 0Ah		  ; DATA XREF: DO_AUTO_BOOT:loc_FCFD0o
ZERO:08B2		  db 'Enter [1] to boot from Hard Disk',0Ah
ZERO:08B2		  db 'Enter [2] to boot from Floppy Disk',0Ah
ZERO:08B2		  db 'Enter [3] to enter Monitor',0Ah
ZERO:08B2		  db 0Ah
ZERO:08B2		  db 'Enter option: ',0
ZERO:0922 PROMPT_STR	  db 0Ah		  ; DATA XREF: PROMPT_AND_DISPATCHo
ZERO:0922		  db '< A, B, D, G, I, K, L, M, O, R, S, X > ',0
ZERO:094B		  db	0
ZERO:094C aCsIp_0	  db 0Ah		  ; DATA XREF: DUMP_REGS+Co
ZERO:094C		  db 'CS:IP ',0
ZERO:0954 aFlags_0	  db '  Flags  ',0        ; DATA XREF: DUMP_REGS+34o
ZERO:095E DATA_RAM_END	  db	? ;		  ; DATA XREF: POST_FINISH+36o
ZERO:095F		  db	? ;
ZERO:0960 FLOPPY_BUF	  db	? ;		  ; DATA XREF: DO_FLOPPY_CMD+22o
ZERO:0961		  db	? ;
ZERO:0962		  db	? ;
ZERO:0963		  db	? ;
ZERO:0964 STR_BUFS	  db 3Ch dup(?)		  ; DATA XREF: CHANNEL_TX+35o
ZERO:09A0 CH0_RX_BUF	  db 0Ah dup(	?)
ZERO:09AA CH1_RX_BUF	  db 0Ah dup(	?)
ZERO:09B4 CH2_RX_BUF	  db 0Ah dup(	?)
ZERO:09BE CH3_RX_BUF	  db 0Ah dup(	?)
ZERO:09C8 CH4_RX_BUF	  db 0Ah dup(	?)
ZERO:09D2 CH5_RX_BUF	  db 0Ah dup(	?)
ZERO:09DC		  db 546h dup(?)
ZERO:0F22 word_F22	  dw ?			  ; DATA XREF: CHANNEL_IO+95w
ZERO:0F22					  ; sub_FDC06+Cr ...
ZERO:0F24 word_F24	  dw ?			  ; DATA XREF: CHANNEL_IO+9Bw
ZERO:0F24					  ; CHANNEL_IO:loc_FCE14w ...
ZERO:0F26 word_F26	  dw ?			  ; DATA XREF: CHANNEL_IO+7Cw
ZERO:0F26					  ; CHANNEL_IO+86r ...
ZERO:0F28 word_F28	  dw ?			  ; DATA XREF: CHANNEL_IO:loc_FCE36w
ZERO:0F28					  ; CHANNEL_IO+160r ...
ZERO:0F2A COMMAND_CHAR	  db ?			  ; DATA XREF: sub_FC69A+12w
ZERO:0F2A					  ; sub_FC69A+15r ...
ZERO:0F2B SAVE_SS	  dw ?			  ; DATA XREF: SYSCALL+Bw
ZERO:0F2B					  ; RESTORE_RETFr
ZERO:0F2D SAVE_SP	  dw ?			  ; DATA XREF: SYSCALL+Fw
ZERO:0F2D					  ; RESTORE_RETF+4r
ZERO:0F2F SAVE_ES	  dw ?			  ; DATA XREF: SYSCALL+5w
ZERO:0F2F					  ; RESTORE_RETF+8r ...
ZERO:0F31 word_F31	  dw ?			  ; DATA XREF: POST_FINISH:loc_FC06Dw
ZERO:0F31					  ; F10_GET_CONSOLE+3r	...
ZERO:0F33 STATUS	  db ?			  ; DATA XREF: LOW_INIT+14w
ZERO:0F33					  ; LOW_INIT+1Fw ...
ZERO:0F34 BOOTCODE	  db ?			  ; DATA XREF: F11_GET_BOOTCODEr
ZERO:0F34					  ; DO_DISK_BOOT:COMMON_0w
ZERO:0F35 REGISTERS	  CPU_REGS <?>		  ; DATA XREF: F00_AUTO_BOOT+Bo
ZERO:0F35					  ; RESTORE_REGS+13o ...
ZERO:0F51 SYSCALL_ARG_SEG dw ?			  ; DATA XREF: F08_09_DISK_IOPB+7w
ZERO:0F51					  ; sub_FCA34+Cw ...
ZERO:0F53 SYSCALL_ARG_OFF dw ?			  ; DATA XREF: F08_09_DISK_IOPB+3w
ZERO:0F53					  ; DO_DISK_IOPB+18w ...
ZERO:0F55 IOP8089_CPB	  db ?			  ; 0 ;	DATA XREF: IOP8089_CMD+1o
ZERO:0F55		  db ?			  ; 1 ;	Command	Parameter Block
ZERO:0F55		  db ?			  ; 2
ZERO:0F55		  db ?			  ; 3
ZERO:0F55		  db ?			  ; 4
ZERO:0F55		  db ?			  ; 5
ZERO:0F55		  db ?			  ; 6
ZERO:0F55		  db ?			  ; 7
ZERO:0F55		  db ?			  ; 8
ZERO:0F55		  db ?			  ; 9
ZERO:0F55		  db ?			  ; 10
ZERO:0F55		  db ?			  ; 11
ZERO:0F55		  db ?			  ; 12
ZERO:0F55		  db ?			  ; 13
ZERO:0F55		  db ?			  ; 14
ZERO:0F55		  db ?			  ; 15
ZERO:0F55		  db ?			  ; 16
ZERO:0F55		  db ?			  ; 17
ZERO:0F55		  db ?			  ; 18
ZERO:0F55		  db ?			  ; 19
ZERO:0F55		  db ?			  ; 20
ZERO:0F55		  db ?			  ; 21
ZERO:0F55		  db ?			  ; 22
ZERO:0F55		  db ?			  ; 23
ZERO:0F6D		  db	? ;
ZERO:0F6E		  db	? ;
ZERO:0F6F BOOT_IOPB	  IOPB <?>		  ; DATA XREF: DO_DISK_IOPB+14w
ZERO:0F6F					  ; DO_DISK_BOOT:COMMON_1w ...
ZERO:0F89		  db	? ;
ZERO:0F8A		  db	? ;
ZERO:0F8B		  db	? ;
ZERO:0F8C		  db	? ;
ZERO:0F8D		  db	? ;
ZERO:0F8E		  db	? ;
ZERO:0F8F		  db	? ;
ZERO:0F90		  db	? ;
ZERO:0F91		  db	? ;
ZERO:0F92		  db	? ;
ZERO:0F93		  db	? ;
ZERO:0F94		  db	? ;
ZERO:0F95		  db	? ;
ZERO:0F96		  db	? ;
ZERO:0F97		  db	? ;
ZERO:0F98		  db	? ;
ZERO:0F99		  db	? ;
ZERO:0F9A		  db	? ;
ZERO:0F9B		  db	? ;
ZERO:0F9C		  db	? ;
ZERO:0F9D		  db	? ;
ZERO:0F9E		  db	? ;
ZERO:0F9F		  db	? ;
ZERO:0FA0		  db	? ;
ZERO:0FA1		  db	? ;
ZERO:0FA2		  db	? ;
ZERO:0FA3		  db	? ;
ZERO:0FA4		  db	? ;
ZERO:0FA5		  db	? ;
ZERO:0FA6		  db	? ;
ZERO:0FA7		  db	? ;
ZERO:0FA8		  db	? ;
ZERO:0FA9		  db	? ;
ZERO:0FAA		  db	? ;
ZERO:0FAB		  db	? ;
ZERO:0FAC		  db	? ;
ZERO:0FAD		  db	? ;
ZERO:0FAE		  db	? ;
ZERO:0FAF		  db	? ;
ZERO:0FB0		  db	? ;
ZERO:0FB1		  db	? ;
ZERO:0FB2		  db	? ;
ZERO:0FB3		  db	? ;
ZERO:0FB4		  db	? ;
ZERO:0FB5		  db	? ;
ZERO:0FB6		  db	? ;
ZERO:0FB7		  db	? ;
ZERO:0FB8		  db	? ;
ZERO:0FB9		  db	? ;
ZERO:0FBA		  db	? ;
ZERO:0FBB		  db	? ;
ZERO:0FBC		  db	? ;
ZERO:0FBD		  db	? ;
ZERO:0FBE		  db	? ;
ZERO:0FBF		  db	? ;
ZERO:0FC0		  db	? ;
ZERO:0FC1		  db	? ;
ZERO:0FC2		  db	? ;
ZERO:0FC3		  db	? ;
ZERO:0FC4		  db	? ;
ZERO:0FC5		  db	? ;
ZERO:0FC6		  db	? ;
ZERO:0FC7		  db	? ;
ZERO:0FC8		  db	? ;
ZERO:0FC9		  db	? ;
ZERO:0FCA		  db	? ;
ZERO:0FCB		  db	? ;
ZERO:0FCC		  db	? ;
ZERO:0FCD		  db	? ;
ZERO:0FCE		  db	? ;
ZERO:0FCF		  db	? ;
ZERO:0FD0		  db	? ;
ZERO:0FD1		  db	? ;
ZERO:0FD2		  db	? ;
ZERO:0FD3		  db	? ;
ZERO:0FD4		  db	? ;
ZERO:0FD5		  db	? ;
ZERO:0FD6		  db	? ;
ZERO:0FD7		  db	? ;
ZERO:0FD8		  db	? ;
ZERO:0FD9		  db	? ;
ZERO:0FDA		  db	? ;
ZERO:0FDB		  db	? ;
ZERO:0FDC		  db	? ;
ZERO:0FDD		  db	? ;
ZERO:0FDE		  db	? ;
ZERO:0FDF		  db	? ;
ZERO:0FE0		  db	? ;
ZERO:0FE1		  db	? ;
ZERO:0FE2		  db	? ;
ZERO:0FE3		  db	? ;
ZERO:0FE4		  db	? ;
ZERO:0FE5		  db	? ;
ZERO:0FE6		  db	? ;
ZERO:0FE7		  db	? ;
ZERO:0FE8		  db	? ;
ZERO:0FE9		  db	? ;
ZERO:0FEA		  db	? ;
ZERO:0FEB		  db	? ;
ZERO:0FEC		  db	? ;
ZERO:0FED		  db	? ;
ZERO:0FEE		  db	? ;
ZERO:0FEF		  db	? ;
ZERO:0FF0		  db	? ;
ZERO:0FF1		  db	? ;
ZERO:0FF2		  db	? ;
ZERO:0FF3		  db	? ;
ZERO:0FF4		  db	? ;
ZERO:0FF5		  db	? ;
ZERO:0FF6		  db	? ;
ZERO:0FF7		  db	? ;
ZERO:0FF8		  db	? ;
ZERO:0FF9		  db	? ;
ZERO:0FFA		  db	? ;
ZERO:0FFB		  db	? ;
ZERO:0FFC		  db	? ;
ZERO:0FFD		  db	? ;
ZERO:0FFE		  db	? ;
ZERO:0FFF		  db	? ;
ZERO:0FFF ZERO		  ends
ZERO:0FFF
ROM:0000 ; ───────────────────────────────────────────────────────────────────────────
ROM:0000 ; ═══════════════════════════════════════════════════════════════════════════
ROM:0000
ROM:0000 ; Segment type: Pure code
ROM:0000 ROM		 segment byte public 'CODE' use16
ROM:0000		 assume	cs:ROM
ROM:0000		 assume	es:ZERO, ss:ZERO, ds:ZERO, fs:ZERO, gs:ZERO
ROM:0000
ROM:0000 SYSCALL_TRAMPOLINE:			 ; CODE	XREF: SYSCALL_ENTRYJ
ROM:0000		 jmp	 SYSCALL
ROM:0003
ROM:0003 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0003
ROM:0003
ROM:0003 ENTRY_TRAMPOLINE proc near		 ; CODE	XREF: HIGH:FFF0J
ROM:0003		 jmp	 ENTRY
ROM:0003 ENTRY_TRAMPOLINE endp
ROM:0003
ROM:0006
ROM:0006 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0006
ROM:0006 ; Attributes: thunk
ROM:0006
ROM:0006 LOW_INIT_TRAMPOLINE proc near		 ; CODE	XREF: POST:GO_LOW_INITJ
ROM:0006		 jmp	 LOW_INIT	 ; BL =	status
ROM:0006 LOW_INIT_TRAMPOLINE endp
ROM:0006
ROM:0009
ROM:0009 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0009
ROM:0009 ; Attributes: thunk
ROM:0009
ROM:0009 SETUP_INTC1_TRAMPOLINE_2 proc near	 ; CODE	XREF: IOP_SEND+1p
ROM:0009		 jmp	 far ptr SETUP_INTC1_TRAMPOLINE
ROM:0009 SETUP_INTC1_TRAMPOLINE_2 endp
ROM:0009
ROM:000E
ROM:000E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:000E
ROM:000E ; Attributes: thunk
ROM:000E
ROM:000E POKE_IOP1_TRAMPOLINE2 proc near	 ; CODE	XREF: ENTRY+13j
ROM:000E		 jmp	 far ptr POKE_IOP1_TRAMPOLINE
ROM:000E POKE_IOP1_TRAMPOLINE2 endp
ROM:000E
ROM:0013
ROM:0013 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0013
ROM:0013
ROM:0013 ENTRY		 proc near		 ; CODE	XREF: ENTRY_TRAMPOLINEj
ROM:0013		 cli
ROM:0014
ROM:0014 loc_FC014:				 ; Clear violation port
ROM:0014		 in	 ax, 70h
ROM:0016
ROM:0016 loc_FC016:				 ; Error address 2
ROM:0016		 in	 ax, 60h
ROM:0018
ROM:0018 loc_FC018:
ROM:0018		 and	 ax, 200h
ROM:001B		 mov	 bh, ah
ROM:001D		 shr	 ax, 1
ROM:001F		 out	 58h, ax	 ; Control bits	port
ROM:0021		 cmp	 bh, 2
ROM:0024		 jnz	 short loc_FC029
ROM:0026		 jmp	 POKE_IOP1_TRAMPOLINE2
ROM:0029 ; ───────────────────────────────────────────────────────────────────────────
ROM:0029
ROM:0029 loc_FC029:				 ; CODE	XREF: ENTRY+11j
ROM:0029		 jmp	 far ptr POST_TRAMPOLINE
ROM:0029 ENTRY		 endp
ROM:0029
ROM:002E
ROM:002E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:002E
ROM:002E ; BL =	status
ROM:002E
ROM:002E LOW_INIT	 proc near		 ; CODE	XREF: LOW_INIT_TRAMPOLINEj
ROM:002E					 ; ERR_STAT_0A+2j
ROM:002E		 lea	 di, RETURN	 ; Can't use statck because we're
ROM:002E					 ; changing memory mapping
ROM:0032		 jmp	 INIT_MEMORY_MAPPING
ROM:0035 ; ───────────────────────────────────────────────────────────────────────────
ROM:0035
ROM:0035 RETURN:				 ; DATA	XREF: LOW_INITo
ROM:0035		 in	 ax, 60h	 ; MMU Error Address 2 - Read Only
ROM:0037		 and	 ax, 200h
ROM:003A		 shr	 ax, 1
ROM:003C		 out	 58h, ax	 ; Control Bits	Port - Write Only
ROM:003E		 xor	 ax, ax
ROM:0040		 mov	 ds, ax
ROM:0042		 mov	 STATUS, bl	 ; BL =	POST result
ROM:0046		 in	 ax, 60h	 ; MMU Error Address 2 - Read Only
ROM:0048		 and	 ah, 2		 ; Warm	boot flag
ROM:004B		 jz	 short POST_FINISH
ROM:004D		 mov	 STATUS, 0FFh
ROM:004D LOW_INIT	 endp
ROM:004D
ROM:0052
ROM:0052 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0052
ROM:0052
ROM:0052 POST_FINISH	 proc near		 ; CODE	XREF: LOW_INIT+1Dj
ROM:0052					 ; SYSCALL+2Dj
ROM:0052		 mov	 ax, 100h
ROM:0055		 out	 58h, ax	 ; Control Bits	Port - Write Only
ROM:0057		 in	 ax, 70h	 ; MMU Clear Violation Port
ROM:0059		 xor	 ax, ax
ROM:005B		 mov	 ds, ax
ROM:005D		 lea	 di, RET_2	 ; DI =	linkage, no stack
ROM:0061		 jmp	 SWITCH_STACK
ROM:0064 ; ───────────────────────────────────────────────────────────────────────────
ROM:0064
ROM:0064 RET_2:					 ; DATA	XREF: POST_FINISH+Bo
ROM:0064		 mov	 dx, 7E00h
ROM:0067		 and	 ax, ax
ROM:0069		 jz	 short loc_FC06D
ROM:006B		 mov	 dh, 0FAh ; '·'
ROM:006D
ROM:006D loc_FC06D:				 ; CODE	XREF: POST_FINISH+17j
ROM:006D		 mov	 word_F31, dx
ROM:0071		 mov	 al, INT34_IR2_HDD_PTR
ROM:0074		 mov	 byte ptr INT34_IR2_HDD_OFF, al
ROM:0077		 mov	 ax, 0FC00h
ROM:007A		 assume	ds:ROM
ROM:007A		 mov	 ds, ax
ROM:007C		 xor	 ax, ax
ROM:007E		 mov	 es, ax
ROM:0080		 lea	 si, DATA_ROM	 ; "\x01@┤~á\t\n┤■¬\t\n┤■┤\t\n┤■¥\t\n┤■╚\t\n┤■Ê\t\n\x02\x02\x02\x06\x02\x02\x06"...
ROM:0084		 assume	ds:ZERO
ROM:0084		 lea	 di, SCB
ROM:0088		 mov	 cx, offset DATA_RAM_END
ROM:008B		 sub	 cx, offset SCB
ROM:008F		 repne movsb		 ; Copy	Data!
ROM:0091		 xor	 ax, ax
ROM:0093		 mov	 ds, ax
ROM:0095		 mov	 al, byte ptr INT34_IR2_HDD_OFF
ROM:0098		 mov	 INT34_IR2_HDD_PTR, al
ROM:009B		 in	 ax, 78h	 ; MMU Violation Port -	Read Only
ROM:009D		 and	 ah, 10h	 ; Status bit 0	-- system config. jumper
ROM:00A0		 jnz	 short LOAD_INIT_REG
ROM:00A2		 cmp	 byte ptr word_F31+1, 7Eh ; '~'
ROM:00A7		 jz	 short loc_FC0B1
ROM:00A9		 mov	 SCB.CB_SEG, 0FBFFh
ROM:00AF		 jmp	 short LOAD_INIT_REG
ROM:00B1 ; ───────────────────────────────────────────────────────────────────────────
ROM:00B1
ROM:00B1 loc_FC0B1:				 ; CODE	XREF: POST_FINISH+55j
ROM:00B1		 mov	 SCB.CB_SEG, 7FFFh
ROM:00B7
ROM:00B7 LOAD_INIT_REG:				 ; CODE	XREF: POST_FINISH+4Ej
ROM:00B7					 ; POST_FINISH+5Dj
ROM:00B7		 lds	 di, INIT_REG_PTR
ROM:00BB		 mov	 word ptr [di],	offset FW_REG
ROM:00BF		 inc	 di
ROM:00C0		 inc	 di
ROM:00C1		 xor	 ax, ax
ROM:00C3		 mov	 [di], al
ROM:00C5		 mov	 ds, ax
ROM:00C7		 mov	 es, ax
ROM:00C9		 mov	 ss, ax
ROM:00CB		 mov	 sp, 1000h
ROM:00CE		 mov	 FW_REG, ax
ROM:00D1		 out	 50h, ax	 ; Z80A	I/O Processor Chan att.
ROM:00D3		 mov	 al, 81h ; 'ü'   ; Sys Command 1 = Enable IOP
ROM:00D5		 call	 SUBMIT_SYS_CMD	 ; AL =	command
ROM:00D8		 mov	 cx, 2
ROM:00DB		 lea	 si, IO_REGS
ROM:00DF		 cmp	 STATUS, 0
ROM:00E4
ROM:00E4 loc_FC0E4:				 ; 7e->fe for channel 1
ROM:00E4		 jz	 short loc_FC0ED
ROM:00E6		 cmp	 STATUS, 10h
ROM:00EB		 jbe	 short loc_FC0F8 ; Command 1 = initialize channel
ROM:00ED
ROM:00ED loc_FC0ED:				 ; CODE	XREF: POST_FINISH:loc_FC0E4j
ROM:00ED		 mov	 al, 0FEh ; '■'  ; 7e->fe for channel 1
ROM:00EF		 inc	 si
ROM:00F0		 mov	 [si], al
ROM:00F2		 dec	 si
ROM:00F3		 mov	 POST_STATUS_01, 0
ROM:00F8
ROM:00F8 loc_FC0F8:				 ; CODE	XREF: POST_FINISH+99j
ROM:00F8		 mov	 al, 81h ; 'ü'   ; Command 1 = initialize channel
ROM:00FA
ROM:00FA NEXT_CHANNEL:				 ; CODE	XREF: POST_FINISH+AFj
ROM:00FA		 call	 SUMBIT_CHAN_CMD ; SI =	channel	register block
ROM:00FA					 ; AL =	command
ROM:00FD
ROM:00FD loc_FC0FD:				 ; Sizeof(SOME_BLOCK)
ROM:00FD		 add	 si, 16h
ROM:0101		 loop	 NEXT_CHANNEL
ROM:0103		 mov	 cx, 25
ROM:0106
ROM:0106 NEXT_NEWLINE_25:			 ; CODE	XREF: POST_FINISH+B9j
ROM:0106		 push	 cx
ROM:0107		 call	 NEWLINE
ROM:010A		 pop	 cx
ROM:010B		 loop	 NEXT_NEWLINE_25
ROM:010D		 cmp	 STATUS, 10h
ROM:0112		 ja	 short DO_FLOPPY_BOOT
ROM:0114		 mov	 bl, STATUS
ROM:0118		 xor	 ax, ax
ROM:011A		 cmp	 bl, al
ROM:011C		 jz	 short POST_PASSED
ROM:011E		 call	 POST_FAILED
ROM:0121		 mov	 POST_STATUS_01, 0FFh
ROM:0126		 mov	 POST_STATUS_02, 0FFh
ROM:012B
ROM:012B loc_FC12B:
ROM:012B		 jmp	 short DO_FLOPPY_BOOT
ROM:012D ; ───────────────────────────────────────────────────────────────────────────
ROM:012D
ROM:012D POST_PASSED:				 ; CODE	XREF: POST_FINISH+CAj
ROM:012D		 lea	 dx, aPassedPowerUpTest	; "\nPASSED POWER-UP TEST"
ROM:0131		 push	 dx
ROM:0132		 call	 PRINT_STRING
ROM:0135		 add	 sp, 2
ROM:0138		 jmp	 short DO_FLOPPY_BOOT
ROM:0138 POST_FINISH	 endp
ROM:0138
ROM:013A
ROM:013A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:013A
ROM:013A ; Attributes: bp-based	frame
ROM:013A
ROM:013A POST_FAILED	 proc near		 ; CODE	XREF: POST_FINISH+CCp
ROM:013A					 ; sub_FD024+7p
ROM:013A		 push	 bp
ROM:013B		 mov	 bp, sp
ROM:013D		 push	 ax
ROM:013E		 push	 bx
ROM:013F		 push	 dx
ROM:0140		 mov	 bl, STATUS
ROM:0144		 mov	 bh, 0
ROM:0146		 mov	 POST_STATUS_01, 0
ROM:014B		 lea	 dx, FAILED_TEST_NUMBER	; ""
ROM:014F		 push	 dx		 ; Target buffer
ROM:0150		 push	 dx		 ; ...why twice?
ROM:0151		 push	 bx		 ; Number
ROM:0152		 call	 FORMAT_HEX_NUMBER
ROM:0155		 add	 sp, 6
ROM:0158		 lea	 dx, aFailedPowerUpTest	; "\nFAILED POWER-UP TEST "
ROM:015C		 push	 dx
ROM:015D		 call	 PRINT_STRING
ROM:0160		 add	 sp, 2
ROM:0163		 pop	 dx
ROM:0164		 pop	 bx
ROM:0165		 pop	 ax
ROM:0166		 pop	 bp
ROM:0167		 retn
ROM:0167 POST_FAILED	 endp
ROM:0167
ROM:0168
ROM:0168 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0168
ROM:0168
ROM:0168 DO_FLOPPY_BOOT	 proc near		 ; CODE	XREF: POST_FINISH+C0j
ROM:0168					 ; POST_FINISH:loc_FC12Bj ...
ROM:0168		 xor	 ax, ax
ROM:016A		 push	 ax
ROM:016B		 push	 ax
ROM:016C		 call	 DO_FLOPPY_CMD
ROM:016F		 add	 sp, 4
ROM:0172		 cmp	 STATUS, 0FEh ;	'■'
ROM:0177		 jz	 short near ptr	RESTORE_RETF
ROM:0177 DO_FLOPPY_BOOT	 endp
ROM:0177
ROM:0179
ROM:0179 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0179
ROM:0179
ROM:0179 F00_AUTO_BOOT	 proc far		 ; CODE	XREF: SYSCALL+32p
ROM:0179					 ; DATA	XREF: ROM:FUNC_TABLEo
ROM:0179		 xor	 ax, ax
ROM:017B		 mov	 ds, ax
ROM:017D		 mov	 es, ax
ROM:017F
ROM:017F loc_FC17F:
ROM:017F		 mov	 ss, ax
ROM:0181		 mov	 sp, 1000h
ROM:0184		 lea	 di, REGISTERS
ROM:0188		 mov	 cx, 14		 ; sizeof(REGISTERS)
ROM:018B		 rep stosw
ROM:018D		 mov	 REGISTERS.SAVE_SP, sp
ROM:0191		 push	 word ptr INIT_REG_PTR
ROM:0195		 sti
ROM:0196		 call	 DO_AUTO_BOOT
ROM:0196 F00_AUTO_BOOT	 endp
ROM:0196
ROM:0199
ROM:0199 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0199
ROM:0199
ROM:0199 SYSCALL	 proc near		 ; CODE	XREF: ROM:SYSCALL_TRAMPOLINEj
ROM:0199		 push	 ds
ROM:019A		 xor	 ax, ax
ROM:019C		 mov	 ds, ax
ROM:019E		 mov	 SAVE_ES, es
ROM:01A2		 mov	 es, ax
ROM:01A4		 assume	es:ROM
ROM:01A4		 mov	 SAVE_SS, ss
ROM:01A8		 mov	 SAVE_SP, sp
ROM:01AC		 mov	 ss, ax
ROM:01AE		 mov	 sp, 1000h
ROM:01B1		 xor	 bh, bh
ROM:01B3		 cmp	 bl, 0Fh
ROM:01B6		 ja	 short near ptr	RESTORE_RETF
ROM:01B8		 jnz	 short RUN_SYSCALL_HANDLER
ROM:01BA		 lea	 di, RET_3
ROM:01BE		 jmp	 INIT_MEMORY_MAPPING
ROM:01C1 ; ───────────────────────────────────────────────────────────────────────────
ROM:01C1
ROM:01C1 RET_3:					 ; DATA	XREF: SYSCALL+21o
ROM:01C1		 mov	 STATUS, 0FEh ;	'■'
ROM:01C6		 jmp	 POST_FINISH
ROM:01C9 ; ───────────────────────────────────────────────────────────────────────────
ROM:01C9
ROM:01C9 RUN_SYSCALL_HANDLER:			 ; CODE	XREF: SYSCALL+1Fj
ROM:01C9		 shl	 bx, 1
ROM:01CB		 call	 cs:FUNC_TABLE[bx]
ROM:01CB SYSCALL	 endp
ROM:01CB
ROM:01D0
ROM:01D0 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01D0
ROM:01D0
ROM:01D0 RESTORE_RETF	 proc far		 ; CODE	XREF: DO_FLOPPY_BOOT+Fj
ROM:01D0					 ; SYSCALL+1Dj
ROM:01D0		 mov	 ss, SAVE_SS
ROM:01D4		 mov	 sp, SAVE_SP
ROM:01D8		 mov	 es, SAVE_ES
ROM:01DC		 assume	es:ZERO
ROM:01DC		 pop	 ds
ROM:01DD		 retf
ROM:01DD RESTORE_RETF	 endp ;	sp =  2
ROM:01DD
ROM:01DE ; ───────────────────────────────────────────────────────────────────────────
ROM:01DE		 retn
ROM:01DE ; ───────────────────────────────────────────────────────────────────────────
ROM:01DF FUNC_TABLE	 dw offset F00_AUTO_BOOT ; DATA	XREF: SYSCALL+32r
ROM:01E1		 dw offset F01_05_IO_CHANNEL_STATUS
ROM:01E3		 dw offset F02_IO_GETCHAR
ROM:01E5		 dw offset F03_IO_PUTCHAR
ROM:01E7		 dw offset F04_IO_SETATTR
ROM:01E9		 dw offset F01_05_IO_CHANNEL_STATUS
ROM:01EB		 dw offset F06_IO_NEWLINE
ROM:01ED		 dw offset F07_IO_PUTS
ROM:01EF		 dw offset F08_09_DISK_IOPB
ROM:01F1		 dw offset F08_09_DISK_IOPB
ROM:01F3		 dw offset F10_GET_CONSOLE
ROM:01F5 off_FC1F5	 dw offset F11_GET_BOOTCODE
ROM:01F7		 dw offset F12_DISK_BOOT
ROM:01F9		 dw offset F13_RESERVED
ROM:01FB		 dw offset F14_RESERVED
ROM:01FD
ROM:01FD ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:01FD
ROM:01FD ; Attributes: bp-based	frame
ROM:01FD
ROM:01FD F14_RESERVED	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:01FD					 ; DATA	XREF: ROM:01FBo
ROM:01FD		 push	 bp
ROM:01FE		 mov	 bp, sp
ROM:0200
ROM:0200 loc_FC200:
ROM:0200		 call	 CHANNEL_IO
ROM:0203		 pop	 bp
ROM:0204		 retn
ROM:0204 F14_RESERVED	 endp
ROM:0204
ROM:0205
ROM:0205 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0205
ROM:0205
ROM:0205 F13_RESERVED	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0205					 ; DATA	XREF: ROM:01F9o
ROM:0205		 and	 ch, ch
ROM:0207		 jz	 short loc_FC20D
ROM:0209		 mov	 INT34_IR2_HDD_PTR, cl
ROM:020D
ROM:020D loc_FC20D:				 ; CODE	XREF: F13_RESERVED+2j
ROM:020D		 mov	 al, INT34_IR2_HDD_PTR
ROM:0210		 retn
ROM:0210 F13_RESERVED	 endp
ROM:0210
ROM:0211
ROM:0211 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0211
ROM:0211
ROM:0211 F01_05_IO_CHANNEL_STATUS proc near	 ; CODE	XREF: SYSCALL+32p
ROM:0211					 ; DATA	XREF: ROM:01E1o ...
ROM:0211		 push	 bx
ROM:0212		 push	 cx
ROM:0213		 mov	 ax, 0FFFFh
ROM:0216		 push	 ax
ROM:0217		 push	 cx
ROM:0218		 call	 CHANNEL_RX
ROM:021B		 add	 sp, 6
ROM:021E		 pop	 bx
ROM:021F		 cmp	 bl, 2
ROM:0222		 jz	 short locret_FC226
ROM:0224		 mov	 ax, dx
ROM:0226
ROM:0226 locret_FC226:				 ; CODE	XREF: F01_05_IO_CHANNEL_STATUS+11j
ROM:0226		 retn
ROM:0226 F01_05_IO_CHANNEL_STATUS endp
ROM:0226
ROM:0227
ROM:0227 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0227
ROM:0227
ROM:0227 F02_IO_GETCHAR	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0227					 ; DATA	XREF: ROM:01E3o
ROM:0227		 push	 cx
ROM:0228		 call	 DO_GETCHAR
ROM:022B		 add	 sp, 2
ROM:022E		 retn
ROM:022E F02_IO_GETCHAR	 endp
ROM:022E
ROM:022F
ROM:022F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:022F
ROM:022F
ROM:022F F03_IO_PUTCHAR	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:022F					 ; DATA	XREF: ROM:01E5o
ROM:022F		 mov	 STATUS, dl
ROM:0233		 lea	 dx, STATUS
ROM:0237		 push	 dx
ROM:0238		 push	 cx
ROM:0239		 call	 DO_PUTCHAR
ROM:023C		 add	 sp, 4
ROM:023F		 retn
ROM:023F F03_IO_PUTCHAR	 endp
ROM:023F
ROM:0240
ROM:0240 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0240
ROM:0240
ROM:0240 F04_IO_SETATTR	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0240					 ; DATA	XREF: ROM:01E7o
ROM:0240		 push	 dx
ROM:0241		 mov	 ax, 0FFFFh
ROM:0244		 push	 ax
ROM:0245		 push	 cx
ROM:0246		 call	 CHANNEL_TX
ROM:0249		 add	 sp, 6
ROM:024C		 retn
ROM:024C F04_IO_SETATTR	 endp
ROM:024C
ROM:024D
ROM:024D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:024D
ROM:024D
ROM:024D F06_IO_NEWLINE	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:024D					 ; DATA	XREF: ROM:01EBo
ROM:024D		 push	 cx
ROM:024E		 call	 DO_IO_NEWLINE
ROM:0251		 add	 sp, 2
ROM:0254		 retn
ROM:0254 F06_IO_NEWLINE	 endp
ROM:0254
ROM:0255
ROM:0255 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0255
ROM:0255
ROM:0255 F07_IO_PUTS	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0255					 ; DATA	XREF: ROM:01EDo
ROM:0255		 mov	 ax, SAVE_ES
ROM:0258		 push	 dx
ROM:0259		 push	 ax
ROM:025A		 push	 cx
ROM:025B		 call	 DO_PUTS
ROM:025E		 add	 sp, 6
ROM:0261		 retn
ROM:0261 F07_IO_PUTS	 endp
ROM:0261
ROM:0262
ROM:0262 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0262
ROM:0262
ROM:0262 F08_09_DISK_IOPB proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0262					 ; DATA	XREF: ROM:01EFo ...
ROM:0262		 mov	 ax, SAVE_ES
ROM:0265		 mov	 SYSCALL_ARG_OFF, cx
ROM:0269		 mov	 SYSCALL_ARG_SEG, ax
ROM:026C		 call	 DO_DISK_IOPB
ROM:026F		 retn
ROM:026F F08_09_DISK_IOPB endp
ROM:026F
ROM:0270
ROM:0270 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0270
ROM:0270
ROM:0270 F10_GET_CONSOLE proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0270					 ; DATA	XREF: ROM:01F3o
ROM:0270		 mov	 dx, 1FFFh
ROM:0273		 mov	 ax, word_F31
ROM:0276		 mov	 SAVE_ES, ax
ROM:0279		 xor	 ax, ax
ROM:027B		 retn
ROM:027B F10_GET_CONSOLE endp
ROM:027B
ROM:027C
ROM:027C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:027C
ROM:027C
ROM:027C F11_GET_BOOTCODE proc near		 ; CODE	XREF: SYSCALL+32p
ROM:027C					 ; DATA	XREF: ROM:off_FC1F5o
ROM:027C		 mov	 al, BOOTCODE
ROM:027F		 retn
ROM:027F F11_GET_BOOTCODE endp
ROM:027F
ROM:0280
ROM:0280 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0280
ROM:0280
ROM:0280 F12_DISK_BOOT	 proc near		 ; CODE	XREF: SYSCALL+32p
ROM:0280					 ; DATA	XREF: ROM:01F7o
ROM:0280		 push	 cx
ROM:0281		 call	 DO_DISK_BOOT
ROM:0284		 add	 sp, 2
ROM:0287		 retn
ROM:0287 F12_DISK_BOOT	 endp
ROM:0287
ROM:0288
ROM:0288 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0288
ROM:0288 ; Attributes: bp-based	frame
ROM:0288
ROM:0288 IOP_SEND	 proc near		 ; CODE	XREF: DO_SUBMIT_IOP+B1p
ROM:0288					 ; DO_SUBMIT_IOP+254p ...
ROM:0288
ROM:0288 BLOCK_400	 = word	ptr  4
ROM:0288 IOP_BLOCK_4F8	 = word	ptr  6
ROM:0288 IOPORT_ADDR	 = word	ptr  8
ROM:0288
ROM:0288		 sti
ROM:0289		 call	 SETUP_INTC1_TRAMPOLINE_2
ROM:028C		 push	 bp
ROM:028D		 mov	 bp, sp
ROM:028F		 push	 bx
ROM:0290		 push	 dx
ROM:0291		 push	 es
ROM:0292		 push	 di
ROM:0293		 xor	 ax, ax
ROM:0295		 mov	 es, ax
ROM:0297		 mov	 ax, [bp+BLOCK_400] ; 400
ROM:029A		 mov	 bx, [bp+IOP_BLOCK_4F8]	; 4f8
ROM:029D		 mov	 dx, [bp+IOPORT_ADDR]
ROM:02A0		 mov	 di, ax
ROM:02A2		 mov	 es:[di], bx	 ; 0000:0400 <=	04f8
ROM:02A5		 inc	 di
ROM:02A6		 inc	 di
ROM:02A7		 mov	 word ptr es:[di], ds ;	0000:0402 = 0000
ROM:02AA		 out	 dx, ax		 ; DX=7000
ROM:02AB		 pop	 di
ROM:02AC		 pop	 es
ROM:02AD		 pop	 dx
ROM:02AE		 pop	 bx
ROM:02AF		 pop	 bp
ROM:02B0		 retn
ROM:02B0 IOP_SEND	 endp
ROM:02B0
ROM:02B1
ROM:02B1 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:02B1
ROM:02B1 ; Orphan
ROM:02B1
ROM:02B1 sub_FC2B1	 proc near		 ; DATA	XREF: RESTORE_REGSo
ROM:02B1		 push	 bx
ROM:02B2		 push	 ds
ROM:02B3		 xor	 bx, bx
ROM:02B5		 mov	 ds, bx
ROM:02B7		 mov	 bx, 0F35h
ROM:02BA		 mov	 word ptr [bx+0Eh], es
ROM:02BD		 mov	 [bx+0], ax
ROM:02C0		 mov	 [bx+4], cx
ROM:02C3		 mov	 [bx+6], dx
ROM:02C6		 mov	 [bx+8], si
ROM:02C9		 mov	 [bx+0Ah], di
ROM:02CC		 mov	 [bx+14h], bp
ROM:02CF		 mov	 word ptr [bx+10h], ss
ROM:02D2		 pop	 ax
ROM:02D3		 mov	 [bx+0Ch], ax
ROM:02D6		 pop	 ax
ROM:02D7		 mov	 [bx+2], ax
ROM:02DA		 pop	 ax
ROM:02DB		 mov	 [bx+18h], ax
ROM:02DE		 pop	 ax
ROM:02DF		 mov	 [bx+1Ah], ax
ROM:02E2		 pop	 ax
ROM:02E3		 mov	 [bx+16h], ax
ROM:02E6		 mov	 [bx+12h], sp
ROM:02E9		 xor	 ax, ax
ROM:02EB		 mov	 ds, ax
ROM:02ED		 mov	 es, ax
ROM:02EF		 mov	 ss, ax
ROM:02F1		 mov	 sp, 1000h
ROM:02F4		 test	 word ptr [bx+16h], 100h
ROM:02F9		 jz	 short loc_FC309
ROM:02FB		 and	 word ptr [bx+16h], 0FEFFh
ROM:0300		 call	 DUMP_REGS
ROM:0303		 xor	 ax, ax
ROM:0305		 push	 ax
ROM:0306		 call	 DO_AUTO_BOOT
ROM:0309
ROM:0309 loc_FC309:				 ; CODE	XREF: sub_FC2B1+48j
ROM:0309		 dec	 word ptr [bx+18h]
ROM:030C		 call	 BREAKPOINT
ROM:030C sub_FC2B1	 endp
ROM:030C
ROM:030F
ROM:030F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:030F
ROM:030F
ROM:030F SWITCH_STACK	 proc near		 ; CODE	XREF: POST_FINISH+Fj
ROM:030F					 ; POST+DCj ...
ROM:030F		 mov	 sp, ds
ROM:0311		 mov	 ax, 8000h
ROM:0314		 mov	 ds, ax
ROM:0316		 assume	ds:nothing
ROM:0316		 mov	 dl, [bx]
ROM:0318		 not	 byte ptr [bx]
ROM:031A		 not	 dl
ROM:031C		 cmp	 dl, [bx]
ROM:031E		 not	 byte ptr [bx]
ROM:0320		 jz	 short loc_FC324
ROM:0322		 xor	 ax, ax
ROM:0324
ROM:0324 loc_FC324:				 ; CODE	XREF: SWITCH_STACK+11j
ROM:0324		 mov	 ds, sp
ROM:0326		 assume	ds:ZERO
ROM:0326		 jmp	 di
ROM:0326 SWITCH_STACK	 endp
ROM:0326
ROM:0328
ROM:0328 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0328
ROM:0328 ; Puts	0x21 to	BH and 1 to CX to terminate the	test loop
ROM:0328
ROM:0328 INT33_TEST_TIMER_HANDLER proc far	 ; DATA	XREF: POST+24Co
ROM:0328		 mov	 bh, 21h ; '!'
ROM:032A		 mov	 cx, 1
ROM:032A INT33_TEST_TIMER_HANDLER endp
ROM:032A
ROM:032D
ROM:032D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:032D
ROM:032D
ROM:032D DEFAULT_HANDLER proc far		 ; DATA	XREF: POST+2E4o
ROM:032D		 iret
ROM:032D DEFAULT_HANDLER endp
ROM:032D
ROM:032E
ROM:032E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:032E
ROM:032E
ROM:032E INIT_MEMORY_MAPPING proc near		 ; CODE	XREF: LOW_INIT+4j
ROM:032E					 ; SYSCALL+25j	...
ROM:032E		 mov	 dx, 200h
ROM:0331		 mov	 cl, 0		 ; -1 =	256 pages
ROM:0333
ROM:0333 INIT_ONE_PAGE:				 ; CODE	XREF: INIT_MEMORY_MAPPING+Ej
ROM:0333		 mov	 ah, 0DCh ; '▄'
ROM:0335		 mov	 al, cl
ROM:0337		 out	 dx, ax		 ; MMU Memory Management Ports
ROM:0338		 inc	 dx
ROM:0339		 inc	 dx
ROM:033A		 inc	 cl
ROM:033C		 jnz	 short INIT_ONE_PAGE
ROM:033E		 jmp	 di
ROM:033E INIT_MEMORY_MAPPING endp
ROM:033E
ROM:0340
ROM:0340 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0340
ROM:0340
ROM:0340 INT2_NMI_HANDLER proc far		 ; DATA	XREF: POST+17Ao
ROM:0340					 ; POST+240o ...
ROM:0340		 push	 ax
ROM:0341		 in	 ax, 78h	 ; MMU Violation Port -	Read Only
ROM:0343		 and	 al, 2
ROM:0345		 jz	 short ERR_STAT_0A
ROM:0347		 in	 ax, 70h	 ; MMU Clear Violation Port
ROM:0349		 pop	 ax
ROM:034A		 iret
ROM:034A INT2_NMI_HANDLER endp
ROM:034A
ROM:034B
ROM:034B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:034B
ROM:034B
ROM:034B INT34_IR2_HDD_HANDLER_SIMPLE proc far	 ; DATA	XREF: SETUP_IRQS+Co
ROM:034B		 push	 ds
ROM:034C		 push	 ax
ROM:034D		 xor	 ax, ax
ROM:034F		 mov	 ds, ax
ROM:0351		 mov	 IOP_IRQ_DOORBELL, 0 ; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:0356		 pop	 ax
ROM:0357		 pop	 ds
ROM:0358		 iret
ROM:0358 INT34_IR2_HDD_HANDLER_SIMPLE endp
ROM:0358
ROM:0359
ROM:0359 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0359
ROM:0359
ROM:0359 ERR_STAT_0A	 proc near		 ; CODE	XREF: INT2_NMI_HANDLER+5j
ROM:0359		 mov	 bl, 0Ah
ROM:035B		 jmp	 LOW_INIT	 ; BL =	status
ROM:035B ERR_STAT_0A	 endp
ROM:035B
ROM:035E
ROM:035E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:035E
ROM:035E ; Attributes: bp-based	frame
ROM:035E
ROM:035E CHANNEL_0_INIT	 proc near		 ; CODE	XREF: DO_AUTO_BOOT+B3p
ROM:035E		 push	 bp
ROM:035F		 mov	 bp, sp
ROM:0361		 push	 si
ROM:0362		 push	 ax
ROM:0363		 push	 dx
ROM:0364		 xor	 ax, ax
ROM:0366		 mov	 al, 0FEh ; '■'  ; Move to BLOCK[1]
ROM:0368		 lea	 si, IO_REGS	 ; 7e -> Fe for	CHANNEL	0
ROM:036C		 inc	 si
ROM:036D		 mov	 [si], al
ROM:036F		 dec	 si
ROM:0370		 mov	 al, 81h ; 'ü'   ; Command 1 = Init channel
ROM:0372		 call	 SUMBIT_CHAN_CMD ; SI =	channel	register block
ROM:0372					 ; AL =	command
ROM:0375		 pop	 dx
ROM:0376		 pop	 ax
ROM:0377		 pop	 si
ROM:0378		 pop	 bp
ROM:0379		 retn
ROM:0379 CHANNEL_0_INIT	 endp
ROM:0379
ROM:037A
ROM:037A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:037A
ROM:037A
ROM:037A IOP8089_CMD	 proc near		 ; CODE	XREF: DO_AUTO_BOOT:BOOT_CHOICE_HDDp
ROM:037A					 ; DO_AUTO_BOOT:BOOT_CHOICE_FDDp ...
ROM:037A		 push	 es
ROM:037B		 lea	 si, IOP8089_CPB ; Command Parameter Block
ROM:037F		 mov	 word ptr [si],	offset BOOT_SECTOR_BUF ; While overlaying the IO progrem this RAM area does not
ROM:037F					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:037F					 ; buffer to read the boot sectors in from the FD & HD.
ROM:0383		 add	 word ptr [si],	2BF0h ;	ROM_OFFSET
ROM:0387		 mov	 word ptr [si+2], 0FC00h
ROM:038C		 mov	 ax, SCB.CB_SEG
ROM:038F		 assume	es:nothing
ROM:038F		 mov	 es, ax
ROM:0391		 mov	 al, 3
ROM:0393		 mov	 es:0, al
ROM:0397		 mov	 es:2, si
ROM:039C		 mov	 word ptr es:4,	ds
ROM:03A1		 mov	 byte ptr es:1,	1 ; 0040:0001 CCW - Channel Control Word
ROM:03A7		 mov	 dx, 0FF00h	 ; I/O Processor Channel Attention
ROM:03AA		 out	 dx, al
ROM:03AB		 mov	 cx, 6000	 ; How long to wait
ROM:03AE
ROM:03AE WAIT_CHANNEL_NO_BUSY:			 ; CODE	XREF: IOP8089_CMD+46j
ROM:03AE		 cmp	 byte ptr es:1,	0 ; 0040:0001 CCW - Channel Control Word
ROM:03B4		 jz	 short WAIT_IOP_DONE
ROM:03B6		 mov	 ax, 1
ROM:03B9		 push	 ax
ROM:03BA		 call	 DELAY		 ; Time	on stack
ROM:03BD		 add	 sp, 2
ROM:03C0		 loop	 WAIT_CHANNEL_NO_BUSY ;	0040:0001 CCW -	Channel	Control	Word
ROM:03C2
ROM:03C2 WAIT_IOP_DONE:				 ; CODE	XREF: IOP8089_CMD+3Aj
ROM:03C2		 pop	 es
ROM:03C3		 assume	es:ZERO
ROM:03C3		 retn
ROM:03C3 IOP8089_CMD	 endp
ROM:03C3
ROM:03C4
ROM:03C4 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03C4
ROM:03C4 ; Attributes: bp-based	frame
ROM:03C4
ROM:03C4 DO_GETCHAR	 proc near		 ; CODE	XREF: F02_IO_GETCHAR+1p
ROM:03C4					 ; sub_FCF06+Cp
ROM:03C4
ROM:03C4 CHAR		 = word	ptr -6
ROM:03C4 IO_CHAN	 = byte	ptr  4
ROM:03C4
ROM:03C4		 push	 bp
ROM:03C5		 mov	 bp, sp
ROM:03C7		 push	 di
ROM:03C8		 push	 si
ROM:03C9		 sub	 sp, 2
ROM:03CC		 lea	 di, [bp+CHAR]
ROM:03CF		 push	 di
ROM:03D0		 mov	 di, 1
ROM:03D3		 push	 di
ROM:03D4		 mov	 al, [bp+IO_CHAN]
ROM:03D7		 cbw
ROM:03D8		 push	 ax
ROM:03D9		 call	 CHANNEL_RX
ROM:03DC		 add	 sp, 6
ROM:03DF		 mov	 byte ptr [bp+CHAR], al
ROM:03E2		 mov	 al, byte ptr [bp+CHAR]
ROM:03E5		 cbw
ROM:03E6
ROM:03E6 loc_FC3E6:
ROM:03E6		 jmp	 COMMON_RETURN
ROM:03E6 DO_GETCHAR	 endp
ROM:03E6
ROM:03E6 ; ───────────────────────────────────────────────────────────────────────────
ROM:03E9		 db    0
ROM:03EA
ROM:03EA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:03EA
ROM:03EA ; Attributes: bp-based	frame
ROM:03EA
ROM:03EA DO_PUTCHAR	 proc near		 ; CODE	XREF: F03_IO_PUTCHAR+Ap
ROM:03EA
ROM:03EA IO_CHAN	 = byte	ptr  4
ROM:03EA CHAR		 = word	ptr  6
ROM:03EA
ROM:03EA		 push	 bp
ROM:03EB		 mov	 bp, sp
ROM:03ED		 push	 di
ROM:03EE		 push	 si
ROM:03EF		 push	 [bp+CHAR]
ROM:03F2		 mov	 di, 1
ROM:03F5		 push	 di
ROM:03F6		 mov	 al, [bp+IO_CHAN]
ROM:03F9		 cbw
ROM:03FA		 push	 ax
ROM:03FB		 call	 PUTS_CONSOLE
ROM:03FE
ROM:03FE loc_FC3FE:
ROM:03FE		 add	 sp, 6
ROM:0401		 jmp	 COMMON_RETURN
ROM:0401 DO_PUTCHAR	 endp
ROM:0401
ROM:0404
ROM:0404 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0404
ROM:0404 ; Attributes: bp-based	frame
ROM:0404
ROM:0404 FORMAT_HEX_NUMBER proc	near		 ; CODE	XREF: POST_FAILED+18p
ROM:0404					 ; PRINT_HEX_STAT+15p
ROM:0404
ROM:0404 var_16		 = byte	ptr -16h
ROM:0404 var_15		 = byte	ptr -15h
ROM:0404 var_14		 = byte	ptr -14h
ROM:0404 var_13		 = byte	ptr -13h
ROM:0404 var_12		 = byte	ptr -12h
ROM:0404 var_11		 = byte	ptr -11h
ROM:0404 var_10		 = byte	ptr -10h
ROM:0404 var_F		 = byte	ptr -0Fh
ROM:0404 var_E		 = byte	ptr -0Eh
ROM:0404 var_D		 = byte	ptr -0Dh
ROM:0404 var_C		 = byte	ptr -0Ch
ROM:0404 var_B		 = byte	ptr -0Bh
ROM:0404 var_A		 = byte	ptr -0Ah
ROM:0404 var_9		 = byte	ptr -9
ROM:0404 var_8		 = byte	ptr -8
ROM:0404 var_7		 = byte	ptr -7
ROM:0404 NUMBER		 = byte	ptr  4
ROM:0404 BUF_		 = word	ptr  6
ROM:0404 BUF__		 = word	ptr  8
ROM:0404
ROM:0404		 push	 bp
ROM:0405		 mov	 bp, sp
ROM:0407		 push	 di
ROM:0408		 push	 si
ROM:0409		 sub	 sp, 12h
ROM:040C		 mov	 [bp+var_16], '0'
ROM:0410		 mov	 [bp+var_15], '1'
ROM:0414		 mov	 [bp+var_14], '2'
ROM:0418		 mov	 [bp+var_13], '3'
ROM:041C		 mov	 [bp+var_12], '4'
ROM:0420		 mov	 [bp+var_11], '5'
ROM:0424		 mov	 [bp+var_10], '6'
ROM:0428		 mov	 [bp+var_F], '7'
ROM:042C		 mov	 [bp+var_E], '8'
ROM:0430		 mov	 [bp+var_D], '9'
ROM:0434		 mov	 [bp+var_C], 'A'
ROM:0438		 mov	 [bp+var_B], 'B'
ROM:043C		 mov	 [bp+var_A], 'C'
ROM:0440		 mov	 [bp+var_9], 'D'
ROM:0444		 mov	 [bp+var_8], 'E'
ROM:0448		 mov	 [bp+var_7], 'F'
ROM:044C		 push	 [bp+BUF_]
ROM:044F		 lea	 bx, [bp+var_16]
ROM:0452		 mov	 dl, [bp+NUMBER]
ROM:0455		 and	 dx, 0F0h
ROM:0459		 mov	 cx, 4
ROM:045C		 sar	 dx, cl
ROM:045E		 add	 bx, dx
ROM:0460		 mov	 dl, [bx]
ROM:0462		 pop	 bx
ROM:0463		 mov	 [bx], dl	 ; A resulting character
ROM:0465		 push	 [bp+BUF__]
ROM:0468		 lea	 bx, [bp+var_16]
ROM:046B		 mov	 dl, [bp+NUMBER]
ROM:046E		 and	 dx, 0Fh
ROM:0472		 add	 bx, dx
ROM:0474		 mov	 dl, [bx]
ROM:0476		 pop	 bx
ROM:0477		 mov	 [bx], dl	 ; Place the resulting character
ROM:0479		 jmp	 COMMON_RETURN
ROM:0479 FORMAT_HEX_NUMBER endp
ROM:0479
ROM:047C
ROM:047C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:047C
ROM:047C ; Time	on stack
ROM:047C
ROM:047C DELAY		 proc near		 ; CODE	XREF: IOP8089_CMD+40p
ROM:047C					 ; DO_DISK_BOOT+A0p ...
ROM:047C		 push	 bx
ROM:047D		 mov	 bx, sp
ROM:047F		 push	 cx
ROM:0480		 mov	 ax, [bx+4]
ROM:0483		 or	 ax, ax
ROM:0485		 jz	 short NO_WAIT
ROM:0487
ROM:0487 OUTER_LOOP:				 ; CODE	XREF: DELAY+16j
ROM:0487		 mov	 bx, 10
ROM:048A
ROM:048A INNTER_LOOP:				 ; CODE	XREF: DELAY+13j
ROM:048A		 mov	 cl, 120
ROM:048C		 shr	 cl, cl
ROM:048E		 dec	 bx
ROM:048F		 jnz	 short INNTER_LOOP
ROM:0491		 dec	 ax
ROM:0492		 jnz	 short OUTER_LOOP
ROM:0494
ROM:0494 NO_WAIT:				 ; CODE	XREF: DELAY+9j
ROM:0494		 pop	 cx
ROM:0495		 pop	 bx
ROM:0496		 retn
ROM:0496 DELAY		 endp
ROM:0496
ROM:0496 ; ───────────────────────────────────────────────────────────────────────────
ROM:0497		 db    0
ROM:0498
ROM:0498 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0498
ROM:0498 ; Attributes: bp-based	frame
ROM:0498
ROM:0498 DO_DISK_BOOT	 proc near		 ; CODE	XREF: F12_DISK_BOOT+1p
ROM:0498					 ; DO_AUTO_BOOT+86p ...
ROM:0498
ROM:0498 DOT		 = word	ptr -12h
ROM:0498 RETRIES	 = word	ptr -10h
ROM:0498 var_E		 = word	ptr -0Eh
ROM:0498 var_C		 = word	ptr -0Ch
ROM:0498 var_A		 = word	ptr -0Ah
ROM:0498 IOP_PROGRAM_RAM_PTR= word ptr -8
ROM:0498 var_6		 = word	ptr -6
ROM:0498 DRIVE_NUMBER	 = word	ptr  4
ROM:0498
ROM:0498		 push	 bp
ROM:0499		 mov	 bp, sp
ROM:049B		 push	 di
ROM:049C		 push	 si
ROM:049D		 sub	 sp, 0Eh
ROM:04A0		 cmp	 [bp+DRIVE_NUMBER], 3
ROM:04A4		 jbe	 short IS_FLOPPY_0
ROM:04A6		 mov	 dx, 1
ROM:04A9		 jmp	 short COMMON_0
ROM:04AB ; ───────────────────────────────────────────────────────────────────────────
ROM:04AB
ROM:04AB IS_FLOPPY_0:				 ; CODE	XREF: DO_DISK_BOOT+Cj
ROM:04AB		 mov	 dx, 2
ROM:04AE
ROM:04AE COMMON_0:				 ; CODE	XREF: DO_DISK_BOOT+11j
ROM:04AE		 mov	 BOOTCODE, dl
ROM:04B2		 mov	 dx, [bp+DRIVE_NUMBER]
ROM:04B5		 mov	 BOOT_IOPB.DRIVE, dl
ROM:04B9		 cmp	 [bp+DRIVE_NUMBER], 3
ROM:04BD		 jbe	 short IS_FLOPPY_1
ROM:04BF		 mov	 dx, 21h ; '!'
ROM:04C2		 jmp	 short COMMON_1
ROM:04C4 ; ───────────────────────────────────────────────────────────────────────────
ROM:04C4
ROM:04C4 IS_FLOPPY_1:				 ; CODE	XREF: DO_DISK_BOOT+25j
ROM:04C4		 mov	 dx, 20h ; ' '
ROM:04C7
ROM:04C7 COMMON_1:				 ; CODE	XREF: DO_DISK_BOOT+2Aj
ROM:04C7		 mov	 BOOT_IOPB.IOPCODE, dl
ROM:04CB		 mov	 BOOT_IOPB.TRACK, 0
ROM:04D1		 mov	 BOOT_IOPB.HEAD, 0
ROM:04D6		 cmp	 [bp+DRIVE_NUMBER], 3
ROM:04DA		 jbe	 short loc_FC4E0
ROM:04DC		 sub	 dx, dx
ROM:04DE		 jmp	 short loc_FC4E3
ROM:04E0 ; ───────────────────────────────────────────────────────────────────────────
ROM:04E0
ROM:04E0 loc_FC4E0:				 ; CODE	XREF: DO_DISK_BOOT+42j
ROM:04E0		 mov	 dx, 1
ROM:04E3
ROM:04E3 loc_FC4E3:				 ; CODE	XREF: DO_DISK_BOOT+46j
ROM:04E3		 mov	 BOOT_IOPB.SECTOR, dl
ROM:04E7		 mov	 BOOT_IOPB.SECTOR_COUNT, 1
ROM:04EC		 mov	 BOOT_IOPB.RETRIES, 10
ROM:04F1		 mov	 BOOT_IOPB.BUF_OFFSET, offset BOOT_SECTOR_BUF ;	While overlaying the IO	progrem	this RAM area does not
ROM:04F1					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:04F1					 ; buffer to read the boot sectors in from the FD & HD.
ROM:04F7
ROM:04F7 loc_FC4F7:
ROM:04F7		 mov	 BOOT_IOPB.BUF_SEGMENT,	0
ROM:04FD		 mov	 BOOT_IOPB.SECTOR_LEN, 512
ROM:0503		 cmp	 [bp+DRIVE_NUMBER], 3
ROM:0507		 jbe	 short IS_FLOPPY
ROM:0509		 mov	 [bp+RETRIES], 10
ROM:050E		 mov	 [bp+DOT], '.'
ROM:0513
ROM:0513 TRY_SUBMIT_IOP:			 ; CODE	XREF: DO_DISK_BOOT+B0j
ROM:0513		 mov	 di, 1
ROM:0516		 call	 RUN_IOP
ROM:0519		 cmp	 BOOT_IOPB.RETURN_STATUS, 0
ROM:051E		 jz	 short IOP_STATUS_00_GOOD
ROM:0520		 mov	 BOOT_IOPB.RETRIES, 10
ROM:0525		 cmp	 [bp+RETRIES], 0
ROM:0529		 jnz	 short MORE_RETRIES
ROM:052B
ROM:052B BOOT_BAD:				 ; CODE	XREF: DO_DISK_BOOT+BAj
ROM:052B					 ; DO_DISK_BOOT+F7j ...
ROM:052B		 call	 BOOT_FAILED
ROM:052E		 jmp	 loc_FC679
ROM:0531 ; ───────────────────────────────────────────────────────────────────────────
ROM:0531
ROM:0531 MORE_RETRIES:				 ; CODE	XREF: DO_DISK_BOOT+91j
ROM:0531		 dec	 [bp+RETRIES]
ROM:0534		 mov	 di, 1000
ROM:0537		 push	 di
ROM:0538		 call	 DELAY		 ; Time	on stack
ROM:053B		 add	 sp, 2
ROM:053E		 lea	 di, [bp+DOT]
ROM:0541		 push	 di
ROM:0542		 call	 PUTCHAR_CONSOLE
ROM:0545		 add	 sp, 2
ROM:0548		 jmp	 short TRY_SUBMIT_IOP
ROM:054A ; ───────────────────────────────────────────────────────────────────────────
ROM:054A
ROM:054A IS_FLOPPY:				 ; CODE	XREF: DO_DISK_BOOT+6Fj
ROM:054A		 call	 RUN_IOP
ROM:054D		 cmp	 BOOT_IOPB.RETURN_STATUS, 0
ROM:0552		 jnz	 short BOOT_BAD
ROM:0554
ROM:0554 IOP_STATUS_00_GOOD:			 ; CODE	XREF: DO_DISK_BOOT+86j
ROM:0554		 mov	 dl, BOOT_SECTOR_BUF+3 ; Boot segment LO
ROM:0558		 sub	 dh, dh
ROM:055A		 mov	 al, BOOT_SECTOR_BUF+4 ; Boot segment HI
ROM:055D		 cbw
ROM:055E		 mov	 cx, 8
ROM:0561		 shl	 ax, cl
ROM:0563		 add	 dx, ax
ROM:0565		 mov	 [bp+var_A], dx
ROM:0568		 mov	 [bp+var_C], 0
ROM:056D		 mov	 REGISTERS.SAVE_CS, dx
ROM:0571		 mov	 di, [bp+var_C]
ROM:0574		 mov	 REGISTERS.SAVE_IP, di
ROM:0578		 mov	 [bp+var_6], 0
ROM:057D		 mov	 di, [bp+var_A]
ROM:0580		 mov	 BOOT_IOPB.BUF_SEGMENT,	di
ROM:0584		 inc	 BOOT_IOPB.SECTOR
ROM:0588		 mov	 al, BOOT_SECTOR_BUF+9 ; Boot type.
ROM:058B		 cbw
ROM:058C		 cmp	 ax, 2
ROM:058F		 ja	 short BOOT_BAD
ROM:0591		 shl	 ax, 1
ROM:0593		 xchg	 ax, bx
ROM:0594		 jmp	 cs:BOOT_TYPE_HANDLERS[bx] ; Handle OASIS boot.
ROM:0594 DO_DISK_BOOT	 endp			 ; Doesn't seem to be actually used.
ROM:0594					 ; OASIS is a system that runs on Z80 anyways.
ROM:0599
ROM:0599 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0599
ROM:0599 ; Handle CP/M boot. Doesn't seem to be actually used.
ROM:0599 ; Actualy CP/M	images use XENIX style boot (type 0x02)
ROM:0599
ROM:0599 BOOT_TYPE_00_CMP86 proc near		 ; DATA	XREF: ROM:BOOT_TYPE_HANDLERSo
ROM:0599		 mov	 word ptr [bp-8], (offset BOOT_SECTOR_BUF+80h) ; While overlaying the IO progrem this RAM area does not
ROM:0599					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:0599					 ; buffer to read the boot sectors in from the FD & HD.
ROM:059E		 mov	 di, 180h
ROM:05A1		 push	 di
ROM:05A2		 lea	 di, [bp-0Ch]
ROM:05A5		 push	 di
ROM:05A6		 lea	 di, [bp-8]
ROM:05A9		 push	 di
ROM:05AA		 call	 sub_FD140
ROM:05AD		 add	 sp, 6
ROM:05B0		 mov	 di, [bp-0Ch]
ROM:05B3		 add	 di, 180h
ROM:05B7		 mov	 BOOT_IOPB.BUF_OFFSET, di
ROM:05BB		 cmp	 word ptr [bp+4], 3
ROM:05BF		 ja	 short loc_FC62D
ROM:05C1
ROM:05C1 loc_FC5C1:
ROM:05C1		 mov	 BOOT_IOPB.SECTOR_COUNT, 8
ROM:05C6		 call	 RUN_IOP
ROM:05C9		 mov	 al, BOOT_IOPB.SECTOR_COUNT
ROM:05CC		 cbw
ROM:05CD		 mov	 cx, 9
ROM:05D0		 shl	 ax, cl
ROM:05D2		 add	 BOOT_IOPB.BUF_OFFSET, ax
ROM:05D6		 mov	 BOOT_IOPB.HEAD, 1
ROM:05DB
ROM:05DB loc_FC5DB:
ROM:05DB		 mov	 BOOT_IOPB.SECTOR, 1
ROM:05E0		 mov	 BOOT_IOPB.SECTOR_COUNT, 9
ROM:05E5		 jmp	 AFTER_JUMP_TABLE
ROM:05E5 BOOT_TYPE_00_CMP86 endp
ROM:05E5
ROM:05E8
ROM:05E8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:05E8
ROM:05E8 ; Handle OASIS	boot.
ROM:05E8 ; Doesn't seem to be actually used.
ROM:05E8 ; OASIS is a system that runs on Z80 anyways.
ROM:05E8
ROM:05E8 BOOT_TYPE_01_OASIS proc near		 ; CODE	XREF: DO_DISK_BOOT+FCj
ROM:05E8					 ; DATA	XREF: ROM:065Fo
ROM:05E8		 mov	 word ptr [bp-0Eh], 502
ROM:05ED		 cmp	 word ptr [bp+4], 3
ROM:05F1		 ja	 short loc_FC60D
ROM:05F3		 mov	 di, 1
ROM:05F6		 push	 di
ROM:05F7		 mov	 al, BOOT_IOPB.DRIVE
ROM:05FA		 cbw
ROM:05FB		 push	 ax
ROM:05FC		 call	 DO_FLOPPY_CMD
ROM:05FF		 add	 sp, 4
ROM:0602		 mov	 BOOT_IOPB.SECTOR_LEN, 256
ROM:0608
ROM:0608 loc_FC608:
ROM:0608		 mov	 word ptr [bp-0Eh], 246
ROM:060D
ROM:060D loc_FC60D:				 ; CODE	XREF: BOOT_TYPE_01_OASIS+9j
ROM:060D		 mov	 word ptr [bp-8], (offset BOOT_SECTOR_BUF+0Ah) ; While overlaying the IO progrem this RAM area does not
ROM:060D					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:060D					 ; buffer to read the boot sectors in from the FD & HD.
ROM:0612		 push	 word ptr [bp-0Eh]
ROM:0615		 lea	 di, [bp-0Ch]
ROM:0618		 push	 di
ROM:0619		 lea	 di, [bp-8]
ROM:061C		 push	 di
ROM:061D
ROM:061D loc_FC61D:
ROM:061D		 call	 sub_FD140
ROM:0620		 add	 sp, 6
ROM:0623		 mov	 di, [bp-0Ch]
ROM:0626
ROM:0626 loc_FC626:
ROM:0626		 add	 di, [bp-0Eh]
ROM:0629		 mov	 BOOT_IOPB.BUF_OFFSET, di
ROM:062D
ROM:062D loc_FC62D:				 ; CODE	XREF: BOOT_TYPE_00_CMP86+26j
ROM:062D		 mov	 BOOT_IOPB.SECTOR_COUNT, 15
ROM:0632
ROM:0632 loc_FC632:
ROM:0632		 jmp	 short AFTER_JUMP_TABLE
ROM:0632 BOOT_TYPE_01_OASIS endp
ROM:0632
ROM:0634
ROM:0634 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0634
ROM:0634
ROM:0634 BOOT_TYPE_02_UNIX proc	near		 ; CODE	XREF: DO_DISK_BOOT+FCj
ROM:0634					 ; DATA	XREF: ROM:0661o
ROM:0634		 mov	 word ptr [bp-8], offset BOOT_SECTOR_BUF ; While overlaying the	IO progrem this	RAM area does not
ROM:0634					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:0634					 ; buffer to read the boot sectors in from the FD & HD.
ROM:0639		 mov	 di, 200h
ROM:063C		 push	 di
ROM:063D		 lea	 di, [bp-0Ch]
ROM:0640		 push	 di
ROM:0641		 lea	 di, [bp-8]
ROM:0644		 push	 di
ROM:0645		 call	 sub_FD140
ROM:0648		 add	 sp, 6
ROM:064B		 mov	 di, [bp-0Ch]
ROM:064E		 add	 di, 200h
ROM:0652		 mov	 BOOT_IOPB.BUF_OFFSET, di
ROM:0656		 mov	 BOOT_IOPB.SECTOR_COUNT, 2
ROM:065B		 jmp	 short AFTER_JUMP_TABLE
ROM:065B BOOT_TYPE_02_UNIX endp
ROM:065B
ROM:065B ; ───────────────────────────────────────────────────────────────────────────
ROM:065D BOOT_TYPE_HANDLERS dw offset BOOT_TYPE_00_CMP86 ; DATA	XREF: DO_DISK_BOOT+FCr
ROM:065D					 ; Handle CP/M boot. Doesn't seem to be actually used.
ROM:065D					 ; Actualy CP/M	images use XENIX style boot (type 0x02)
ROM:065F		 dw offset BOOT_TYPE_01_OASIS ;	Handle OASIS boot.
ROM:065F					 ; Doesn't seem to be actually used.
ROM:065F					 ; OASIS is a system that runs on Z80 anyways.
ROM:0661		 dw offset BOOT_TYPE_02_UNIX
ROM:0663
ROM:0663 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0663
ROM:0663
ROM:0663 AFTER_JUMP_TABLE proc near		 ; CODE	XREF: BOOT_TYPE_00_CMP86+4Cj
ROM:0663					 ; BOOT_TYPE_01_OASIS:loc_FC632j ...
ROM:0663		 call	 RUN_IOP
ROM:0666		 cmp	 BOOT_IOPB.RETURN_STATUS, 0
ROM:066B		 jz	 short loc_FC670
ROM:066D		 jmp	 BOOT_BAD
ROM:0670 ; ───────────────────────────────────────────────────────────────────────────
ROM:0670
ROM:0670 loc_FC670:				 ; CODE	XREF: AFTER_JUMP_TABLE+8j
ROM:0670		 call	 NEWLINE
ROM:0673		 call	 sub_FCC9E
ROM:0676
ROM:0676 loc_FC676:
ROM:0676		 call	 near ptr RESTORE_REGS
ROM:0679
ROM:0679 loc_FC679:				 ; CODE	XREF: DO_DISK_BOOT+96j
ROM:0679		 jmp	 COMMON_RETURN
ROM:0679 AFTER_JUMP_TABLE endp
ROM:0679
ROM:067C
ROM:067C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:067C
ROM:067C ; Attributes: bp-based	frame
ROM:067C
ROM:067C BOOT_FAILED	 proc near		 ; CODE	XREF: DO_DISK_BOOT:BOOT_BADp
ROM:067C		 push	 bp
ROM:067D		 mov	 bp, sp
ROM:067F		 push	 di
ROM:0680		 push	 si
ROM:0681
ROM:0681 loc_FC681:				 ; "\nBoot Failed, Status="
ROM:0681		 mov	 di, offset aBootFailedStatus
ROM:0684		 push	 di
ROM:0685		 call	 PRINT_STRING
ROM:0688		 add	 sp, 2
ROM:068B		 mov	 al, BOOT_IOPB.RETURN_STATUS
ROM:068E		 cbw
ROM:068F		 push	 ax
ROM:0690		 call	 PRINT_HEX_STAT
ROM:0693		 add	 sp, 2
ROM:0696		 jmp	 COMMON_RETURN
ROM:0696 BOOT_FAILED	 endp
ROM:0696
ROM:0696 ; ───────────────────────────────────────────────────────────────────────────
ROM:0699		 db    0
ROM:069A
ROM:069A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:069A
ROM:069A ; Attributes: bp-based	frame
ROM:069A
ROM:069A sub_FC69A	 proc near		 ; CODE	XREF: sub_FD055p
ROM:069A		 push	 bp
ROM:069B		 mov	 bp, sp
ROM:069D		 push	 di
ROM:069E		 push	 si
ROM:069F		 mov	 di, 1
ROM:06A2		 push	 di
ROM:06A3		 call	 PRINT_STH
ROM:06A6		 add	 sp, 2
ROM:06A9		 call	 READ_CHAR_TO_AL
ROM:06AC		 mov	 COMMAND_CHAR, al
ROM:06AF		 cmp	 COMMAND_CHAR, 0Dh
ROM:06B4		 jnz	 short loc_FC6BC
ROM:06B6		 call	 ERROR_CONSOLE
ROM:06B9
ROM:06B9 loc_FC6B9:				 ; CODE	XREF: sub_FC69A+27j
ROM:06B9					 ; sub_FC69A+2Cj
ROM:06B9		 jmp	 COMMON_RETURN
ROM:06BC ; ───────────────────────────────────────────────────────────────────────────
ROM:06BC
ROM:06BC loc_FC6BC:				 ; CODE	XREF: sub_FC69A+1Aj
ROM:06BC		 call	 sub_FCA34
ROM:06BF		 test	 ax, ax
ROM:06C1		 jz	 short loc_FC6B9
ROM:06C3		 call	 DO_DISK_IOPB
ROM:06C6		 jmp	 short loc_FC6B9
ROM:06C6 sub_FC69A	 endp
ROM:06C6
ROM:06C8
ROM:06C8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:06C8
ROM:06C8 ; Attributes: bp-based	frame
ROM:06C8
ROM:06C8 DO_DISK_IOPB	 proc near		 ; CODE	XREF: F08_09_DISK_IOPB+Ap
ROM:06C8					 ; sub_FC69A+29p
ROM:06C8
ROM:06C8 SYSCALL_ARG_BYTE_OFFSET= word ptr -6
ROM:06C8
ROM:06C8		 push	 bp
ROM:06C9		 mov	 bp, sp
ROM:06CB		 push	 di
ROM:06CC		 push	 si
ROM:06CD		 sub	 sp, 2
ROM:06D0		 mov	 [bp+SYSCALL_ARG_BYTE_OFFSET], 0
ROM:06D5
ROM:06D5 FETCH_NEXT_BYTE:			 ; CODE	XREF: DO_DISK_IOPB+23j
ROM:06D5		 push	 [bp+SYSCALL_ARG_BYTE_OFFSET] ;	Copy syscall argument into BOOT_IOPB
ROM:06D8		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:06DB		 pop	 bx
ROM:06DC		 mov	 byte ptr BOOT_IOPB.field_0[bx], al
ROM:06E0		 inc	 SYSCALL_ARG_OFF
ROM:06E4		 inc	 [bp+SYSCALL_ARG_BYTE_OFFSET]
ROM:06E7		 cmp	 [bp+SYSCALL_ARG_BYTE_OFFSET], IOPB.field_14 ; Monitor reserved
ROM:06EB		 jb	 short FETCH_NEXT_BYTE
ROM:06ED		 sub	 SYSCALL_ARG_OFF, IOPB.field_14	; Monitor reserved
ROM:06F2		 call	 RUN_IOP
ROM:06F5		 add	 SYSCALL_ARG_OFF, 0Bh
ROM:06FA		 mov	 al, BOOT_IOPB.RETURN_STATUS
ROM:06FD		 cbw
ROM:06FE		 push	 ax
ROM:06FF		 call	 SYSCALL_ARG_PUT_VALUE ; Value on stack
ROM:0702		 add	 sp, 2
ROM:0705		 jmp	 COMMON_RETURN
ROM:0705 DO_DISK_IOPB	 endp
ROM:0705
ROM:0708
ROM:0708 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0708
ROM:0708 ; Attributes: bp-based	frame
ROM:0708
ROM:0708 RUN_IOP	 proc near		 ; CODE	XREF: DO_DISK_BOOT+7Ep
ROM:0708					 ; DO_DISK_BOOT:IS_FLOPPYp ...
ROM:0708		 push	 bp
ROM:0709		 mov	 bp, sp
ROM:070B		 push	 di
ROM:070C		 push	 si
ROM:070D		 mov	 di, 1
ROM:0710		 call	 DO_SUBMIT_IOP	 ; Translate IOPB into something that's
ROM:0710					 ; understood by the Z80 handling I/O
ROM:0713		 jmp	 COMMON_RETURN
ROM:0713 RUN_IOP	 endp
ROM:0713
ROM:0716
ROM:0716 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0716
ROM:0716 ; Translate IOPB into something that's
ROM:0716 ; understood by the Z80 handling I/O
ROM:0716 ; Attributes: bp-based	frame
ROM:0716
ROM:0716 DO_SUBMIT_IOP	 proc near		 ; CODE	XREF: RUN_IOP+8p
ROM:0716
ROM:0716 RETRIES	 = word	ptr -8
ROM:0716 RETR_X		 = word	ptr -6
ROM:0716
ROM:0716		 push	 bp
ROM:0717		 mov	 bp, sp
ROM:0719		 push	 di
ROM:071A		 push	 si
ROM:071B		 sub	 sp, 4
ROM:071E		 mov	 di, BOOT_IOPB.BUF_OFFSET
ROM:0722		 mov	 ax, di
ROM:0724		 mov	 byte ptr IOP_09_OFF_HI, al ; FD/HD - Destination offset HI
ROM:0727		 mov	 dx, di
ROM:0729		 mov	 cx, 8
ROM:072C		 sar	 dx, cl
ROM:072E		 mov	 byte ptr IOP_0A_OFF_LO, dl ; FD/HD - Destination offset LO
ROM:0732		 mov	 di, BOOT_IOPB.BUF_SEGMENT
ROM:0736		 mov	 ax, di
ROM:0738		 mov	 byte ptr IOP_0B_SEF_HI, al ; FD/HD - Destination segment HI
ROM:073B		 mov	 dx, di
ROM:073D		 mov	 cx, 8
ROM:0740		 sar	 dx, cl
ROM:0742		 mov	 byte ptr IOP_0C_SEG_LO, dl ; FD/HD - Destination segment LO
ROM:0746		 mov	 byte ptr IOP_0D_STATUS, 0 ; FD/HD - Operation status. (FF=not run, 00=success)
ROM:074B		 cmp	 BOOT_IOPB.DRIVE, 4
ROM:0750		 jl	 short IS_FLOPPY
ROM:0752		 jmp	 IS_HARD_DISK
ROM:0755 ; ───────────────────────────────────────────────────────────────────────────
ROM:0755
ROM:0755 IS_FLOPPY:				 ; CODE	XREF: DO_SUBMIT_IOP+3Aj
ROM:0755		 mov	 al, BOOT_IOPB.IOPCODE
ROM:0758		 and	 ax, 0F0h
ROM:075B		 cmp	 ax, 10h
ROM:075E		 jz	 short FDD_HANDLE_CMD_10
ROM:0760		 cmp	 ax, 20h ; ' '
ROM:0763		 jnz	 short FDD_CMD_NOT_20
ROM:0765		 jmp	 FDD_HANDLE_CMD
ROM:0768 ; ───────────────────────────────────────────────────────────────────────────
ROM:0768
ROM:0768 FDD_CMD_NOT_20:			 ; CODE	XREF: DO_SUBMIT_IOP+4Dj
ROM:0768		 cmp	 ax, 30h ; '0'
ROM:076B		 jnz	 short FDD_CMD_NOT_30
ROM:076D		 jmp	 FDD_HANDLE_CMD
ROM:0770 ; ───────────────────────────────────────────────────────────────────────────
ROM:0770
ROM:0770 FDD_CMD_NOT_30:			 ; CODE	XREF: DO_SUBMIT_IOP+55j
ROM:0770		 cmp	 ax, 60h ; '`'
ROM:0773		 jnz	 short FDD_CMD_NOT_SUPP
ROM:0775		 jmp	 FDD_HANDLE_CMD_60_FORMAT
ROM:0778 ; ───────────────────────────────────────────────────────────────────────────
ROM:0778
ROM:0778 FDD_CMD_NOT_SUPP:			 ; CODE	XREF: DO_SUBMIT_IOP+5Dj
ROM:0778		 mov	 si, offset aFloppyCommandNotSupport ; "\nFloppy command not supported."
ROM:077B		 push	 si
ROM:077C		 call	 PRINT_STRING
ROM:077F		 add	 sp, 2
ROM:0782		 jmp	 GO_RETURN
ROM:0785 ; ───────────────────────────────────────────────────────────────────────────
ROM:0785
ROM:0785 FDD_HANDLE_CMD_10:			 ; CODE	XREF: DO_SUBMIT_IOP+48j
ROM:0785		 mov	 IOP_00_OPCODE,	0Fh ; HD/FD - command
ROM:078A		 mov	 al, BOOT_IOPB.HEAD
ROM:078D		 cbw
ROM:078E		 shl	 ax, 1
ROM:0790		 shl	 ax, 1
ROM:0792		 mov	 byte ptr IOP_01_BUSY, al ; HD/FD - busy status
ROM:0795		 mov	 dx, BOOT_IOPB.TRACK
ROM:0799		 mov	 byte ptr IOP_02, dl ; FDD - read/write	track
ROM:0799					 ; HDD - read/write track LO
ROM:0799					 ; FDD - format	sector side (01/02)
ROM:079D
ROM:079D FDD_POKE_IOP2:				 ; CODE	XREF: DO_SUBMIT_IOP+145j
ROM:079D					 ; DO_SUBMIT_IOP+195j
ROM:079D		 mov	 [bp+RETR_X], 27
ROM:07A2		 mov	 FDD_DOORBELL, 0FFh
ROM:07A7		 mov	 byte ptr IOP_0D_STATUS, 0FFh ;	FD/HD -	Operation status. (FF=not run, 00=success)
ROM:07AC		 mov	 al, byte ptr IOP_01_BUSY ; HD/FD - busy status
ROM:07AF		 cbw
ROM:07B0		 or	 ax, 80h
ROM:07B3		 mov	 byte ptr IOP_01_BUSY, al ; HD/FD - busy status
ROM:07B6		 mov	 IOP_IRQ_DOORBELL, 0FFh	; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:07BB		 mov	 si, 7008h	 ; IOP2	IO Interrupt - FLOPPY
ROM:07BE		 push	 si
ROM:07BF		 mov	 si, offset IOP_00_OPCODE ; HD/FD - command
ROM:07C2		 push	 si
ROM:07C3		 mov	 si, offset IOP1_PTR.PB_SEG
ROM:07C6		 push	 si
ROM:07C7		 call	 IOP_SEND	 ; Call	floppy
ROM:07CA		 add	 sp, 6
ROM:07CD
ROM:07CD FDD_COMMAND_DONE:			 ; CODE	XREF: DO_SUBMIT_IOP+C9j
ROM:07CD					 ; DO_SUBMIT_IOP+D0j
ROM:07CD		 dec	 [bp+RETR_X]
ROM:07D0		 jnz	 short FDD_SET_RETRIES
ROM:07D2		 jmp	 FDD_CMD_WAIT_OVER
ROM:07D5 ; ───────────────────────────────────────────────────────────────────────────
ROM:07D5
ROM:07D5 FDD_SET_RETRIES:			 ; CODE	XREF: DO_SUBMIT_IOP+BAj
ROM:07D5		 mov	 [bp+RETRIES], 64000
ROM:07DA
ROM:07DA FDD_POLL_COMMAND_DONE:			 ; CODE	XREF: DO_SUBMIT_IOP+CEj
ROM:07DA		 cmp	 IOP_IRQ_DOORBELL, 0 ; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:07DF		 jz	 short FDD_COMMAND_DONE
ROM:07E1		 dec	 [bp+RETRIES]
ROM:07E4		 jnz	 short FDD_POLL_COMMAND_DONE
ROM:07E6		 jmp	 short FDD_COMMAND_DONE
ROM:07E8 ; ───────────────────────────────────────────────────────────────────────────
ROM:07E8
ROM:07E8 FDD_HANDLE_CMD:			 ; CODE	XREF: DO_SUBMIT_IOP+4Fj
ROM:07E8					 ; DO_SUBMIT_IOP+57j
ROM:07E8		 mov	 dl, BOOT_IOPB.IOPCODE
ROM:07EC		 and	 dx, 0F0h
ROM:07F0		 cmp	 dx, 20h ; ' '
ROM:07F3		 jnz	 short FDD_CMD_NOT_20X
ROM:07F5		 mov	 IOP_00_OPCODE,	46h ; 'F' ; Floppy READ
ROM:07FA		 jmp	 short FDD_COMMAND
ROM:07FC ; ───────────────────────────────────────────────────────────────────────────
ROM:07FC
ROM:07FC FDD_CMD_NOT_20X:			 ; CODE	XREF: DO_SUBMIT_IOP+DDj
ROM:07FC		 mov	 IOP_00_OPCODE,	45h ; 'E' ; Floppy ???
ROM:0801
ROM:0801 FDD_COMMAND:				 ; CODE	XREF: DO_SUBMIT_IOP+E4j
ROM:0801		 mov	 al, BOOT_IOPB.HEAD
ROM:0804		 cbw
ROM:0805		 shl	 ax, 1
ROM:0807		 shl	 ax, 1
ROM:0809		 mov	 byte ptr IOP_01_BUSY, al ; HD/FD - busy status
ROM:080C		 mov	 dx, BOOT_IOPB.TRACK
ROM:0810		 mov	 byte ptr IOP_02, dl ; FDD - read/write	track
ROM:0810					 ; HDD - read/write track LO
ROM:0810					 ; FDD - format	sector side (01/02)
ROM:0814		 mov	 dl, BOOT_IOPB.HEAD
ROM:0818		 mov	 byte ptr IOP_03, dl ; FDD - read/write	head/side
ROM:0818					 ; HDD - read/write track HI
ROM:0818					 ; FDD - format	sectors	per track
ROM:081C		 mov	 dl, BOOT_IOPB.SECTOR
ROM:0820		 mov	 byte ptr IOP_04_SECTOR, dl ; FDD - read/write start sector
ROM:0820					 ; HDD - read/write sector
ROM:0820					 ; FDD - format	tracks
ROM:0824		 cmp	 BOOT_IOPB.SECTOR_LEN, 512
ROM:082A		 jnz	 short FDD_SECTOR_NOT_512X
ROM:082C		 mov	 byte ptr IOP_05, 2 ; FDD read/write - Sector size 02 =	512, 01	= 256
ROM:082C					 ; HDD read/write - Sector count
ROM:082C					 ; FDD format -	Fill byte E5h
ROM:0831		 jmp	 short FDD_SECTOR_SIZE_SET
ROM:0833 ; ───────────────────────────────────────────────────────────────────────────
ROM:0833
ROM:0833 FDD_SECTOR_NOT_512X:			 ; CODE	XREF: DO_SUBMIT_IOP+114j
ROM:0833		 cmp	 BOOT_IOPB.SECTOR_LEN, 256
ROM:0839		 jnz	 short FDD_SECTOR_SIZE_SET
ROM:083B		 mov	 byte ptr IOP_05, 1 ; FDD read/write - Sector size 02 =	512, 01	= 256
ROM:083B					 ; HDD read/write - Sector count
ROM:083B					 ; FDD format -	Fill byte E5h
ROM:0840
ROM:0840 FDD_SECTOR_SIZE_SET:			 ; CODE	XREF: DO_SUBMIT_IOP+11Bj
ROM:0840					 ; DO_SUBMIT_IOP+123j
ROM:0840		 mov	 al, BOOT_IOPB.SECTOR_COUNT
ROM:0843		 cbw
ROM:0844		 mov	 dx, ax
ROM:0846		 mov	 al, BOOT_IOPB.SECTOR
ROM:0849		 cbw
ROM:084A		 add	 dx, ax
ROM:084C		 dec	 dx
ROM:084D		 mov	 byte ptr IOP_06, dl ; FDD - end sector
ROM:084D					 ; HDD - head |	0x80
ROM:0851		 mov	 byte ptr IOP_07, 50h ;	'P' ; FDD - read/write always 50
ROM:0856		 mov	 byte ptr IOP_08_FDD_50, 0FFh ;	FDD - read/write always	ff (HDD	unused)
ROM:085B		 jmp	 FDD_POKE_IOP2
ROM:085E ; ───────────────────────────────────────────────────────────────────────────
ROM:085E
ROM:085E FDD_HANDLE_CMD_60_FORMAT:		 ; CODE	XREF: DO_SUBMIT_IOP+5Fj
ROM:085E		 mov	 IOP_00_OPCODE,	4Dh ; 'M' ; HD/FD - command
ROM:0863		 mov	 dx, BOOT_IOPB.TRACK
ROM:0867		 mov	 byte ptr IOP_07, dl ; FDD - read/write	always 50
ROM:086B		 mov	 al, BOOT_IOPB.HEAD
ROM:086E		 cbw
ROM:086F		 shl	 ax, 1
ROM:0871		 shl	 ax, 1
ROM:0873		 mov	 byte ptr IOP_01_BUSY, al ; HD/FD - busy status
ROM:0876		 cmp	 BOOT_IOPB.SECTOR_LEN, 512
ROM:087C		 jnz	 short FDD_SECTOR_NOT_512
ROM:087E		 mov	 byte ptr IOP_02, 2 ; FDD - read/write track
ROM:087E					 ; HDD - read/write track LO
ROM:087E					 ; FDD - format	sector side (01/02)
ROM:0883		 mov	 byte ptr IOP_03, 9 ; FDD - read/write head/side
ROM:0883					 ; HDD - read/write track HI
ROM:0883					 ; FDD - format	sectors	per track
ROM:0888		 mov	 byte ptr IOP_04_SECTOR, 80 ; FDD - read/write start sector
ROM:0888					 ; HDD - read/write sector
ROM:0888					 ; FDD - format	tracks
ROM:088D		 jmp	 short FDD_DO_HANDLE_CMD_60_FORMAT
ROM:088F ; ───────────────────────────────────────────────────────────────────────────
ROM:088F
ROM:088F FDD_SECTOR_NOT_512:			 ; CODE	XREF: DO_SUBMIT_IOP+166j
ROM:088F		 cmp	 BOOT_IOPB.SECTOR_LEN, 256
ROM:0895		 jnz	 short FDD_DO_HANDLE_CMD_60_FORMAT
ROM:0897		 mov	 byte ptr IOP_02, 1 ; FDD - read/write track
ROM:0897					 ; HDD - read/write track LO
ROM:0897					 ; FDD - format	sector side (01/02)
ROM:089C		 mov	 byte ptr IOP_03, 16 ; FDD - read/write	head/side
ROM:089C					 ; HDD - read/write track HI
ROM:089C					 ; FDD - format	sectors	per track
ROM:08A1		 mov	 byte ptr IOP_04_SECTOR, 12 ; FDD - read/write start sector
ROM:08A1					 ; HDD - read/write sector
ROM:08A1					 ; FDD - format	tracks
ROM:08A6
ROM:08A6 FDD_DO_HANDLE_CMD_60_FORMAT:		 ; CODE	XREF: DO_SUBMIT_IOP+177j
ROM:08A6					 ; DO_SUBMIT_IOP+17Fj
ROM:08A6		 mov	 byte ptr IOP_05, 0E5h ; 'Õ' ; FDD read/write - Sector size 02 = 512, 01 = 256
ROM:08A6					 ; HDD read/write - Sector count
ROM:08A6					 ; FDD format -	Fill byte E5h
ROM:08AB		 jmp	 FDD_POKE_IOP2
ROM:08AE ; ───────────────────────────────────────────────────────────────────────────
ROM:08AE
ROM:08AE FDD_CMD_WAIT_OVER:			 ; CODE	XREF: DO_SUBMIT_IOP+BCj
ROM:08AE		 cmp	 [bp+RETR_X], 0
ROM:08B2		 jnz	 short FDD_CMD_DONE
ROM:08B4		 cmp	 [bp+RETRIES], 0
ROM:08B8		 jnz	 short FDD_CMD_DONE
ROM:08BA		 mov	 si, offset aFloppyTimeoutError	; "\nFloppy timeout error"
ROM:08BD		 push	 si
ROM:08BE
ROM:08BE PRINT_AND_RETURN:			 ; CODE	XREF: DO_SUBMIT_IOP+2B0j
ROM:08BE		 call	 PRINT_STRING
ROM:08C1		 add	 sp, 2
ROM:08C4
ROM:08C4 FDD_CMD_DONE:				 ; CODE	XREF: DO_SUBMIT_IOP+19Cj
ROM:08C4					 ; DO_SUBMIT_IOP+1A2j
ROM:08C4		 mov	 dl, byte ptr IOP_0D_STATUS ; FD/HD - Operation	status.	(FF=not	run, 00=success)
ROM:08C8		 mov	 BOOT_IOPB.RETURN_STATUS, dl
ROM:08CC		 jmp	 GO_RETURN
ROM:08CF ; ───────────────────────────────────────────────────────────────────────────
ROM:08CF
ROM:08CF IS_HARD_DISK:				 ; CODE	XREF: DO_SUBMIT_IOP+3Cj
ROM:08CF		 mov	 al, BOOT_IOPB.IOPCODE
ROM:08D2		 cbw
ROM:08D3		 cmp	 ax, 1
ROM:08D6		 jz	 short HDD_CMD_01_21_READ
ROM:08D8		 cmp	 ax, 2
ROM:08DB		 jnz	 short HDD_CMD_NOT_02
ROM:08DD		 jmp	 HDD_CMD_02
ROM:08E0 ; ───────────────────────────────────────────────────────────────────────────
ROM:08E0
ROM:08E0 HDD_CMD_NOT_02:			 ; CODE	XREF: DO_SUBMIT_IOP+1C5j
ROM:08E0		 cmp	 ax, 3
ROM:08E3		 jnz	 short HDD_CMD_NOT_03
ROM:08E5		 jmp	 HDD_CMD_03
ROM:08E8 ; ───────────────────────────────────────────────────────────────────────────
ROM:08E8
ROM:08E8 HDD_CMD_NOT_03:			 ; CODE	XREF: DO_SUBMIT_IOP+1CDj
ROM:08E8		 cmp	 ax, 20h ; ' '
ROM:08EB		 jnz	 short HDD_CMD_NOT_20
ROM:08ED		 jmp	 HDD_CMD_20
ROM:08F0 ; ───────────────────────────────────────────────────────────────────────────
ROM:08F0
ROM:08F0 HDD_CMD_NOT_20:			 ; CODE	XREF: DO_SUBMIT_IOP+1D5j
ROM:08F0		 cmp	 ax, 21h ; '!'
ROM:08F3		 jz	 short HDD_CMD_01_21_READ
ROM:08F5		 jmp	 HDD_COMMAND_NOT_SUPP
ROM:08F8 ; ───────────────────────────────────────────────────────────────────────────
ROM:08F8
ROM:08F8 HDD_CMD_01_21_READ:			 ; CODE	XREF: DO_SUBMIT_IOP+1C0j
ROM:08F8					 ; DO_SUBMIT_IOP+1DDj
ROM:08F8		 mov	 IOP_00_OPCODE,	2Ch ; ',' ; HD/FD - command
ROM:08FD
ROM:08FD HDD_HANDLE_CMD:			 ; CODE	XREF: DO_SUBMIT_IOP+299j
ROM:08FD					 ; DO_SUBMIT_IOP+2A1j ...
ROM:08FD		 mov	 al, BOOT_IOPB.DRIVE
ROM:0900		 cbw
ROM:0901		 mov	 cx, 3
ROM:0904		 shl	 ax, cl
ROM:0906		 mov	 dx, ax
ROM:0908		 mov	 al, INT34_IR2_HDD_PTR
ROM:090B		 cbw
ROM:090C		 or	 dx, ax
ROM:090E		 or	 dx, 20h
ROM:0912		 mov	 byte ptr IOP_01_BUSY, dl ; HD/FD - busy status
ROM:0916		 mov	 di, BOOT_IOPB.TRACK
ROM:091A		 mov	 dx, di
ROM:091C		 mov	 cx, 8
ROM:091F		 sar	 dx, cl
ROM:0921		 mov	 byte ptr IOP_02, dl ; FDD - read/write	track
ROM:0921					 ; HDD - read/write track LO
ROM:0921					 ; FDD - format	sector side (01/02)
ROM:0925		 mov	 ax, di
ROM:0927		 mov	 byte ptr IOP_03, al ; FDD - read/write	head/side
ROM:0927					 ; HDD - read/write track HI
ROM:0927					 ; FDD - format	sectors	per track
ROM:092A		 mov	 dl, BOOT_IOPB.SECTOR
ROM:092E		 mov	 byte ptr IOP_04_SECTOR, dl ; FDD - read/write start sector
ROM:092E					 ; HDD - read/write sector
ROM:092E					 ; FDD - format	tracks
ROM:0932		 mov	 dl, BOOT_IOPB.SECTOR_COUNT
ROM:0936		 mov	 byte ptr IOP_05, dl ; FDD read/write -	Sector size 02 = 512, 01 = 256
ROM:0936					 ; HDD read/write - Sector count
ROM:0936					 ; FDD format -	Fill byte E5h
ROM:093A		 mov	 al, BOOT_IOPB.HEAD
ROM:093D		 cbw
ROM:093E		 mov	 dx, ax
ROM:0940		 mov	 al, BOOT_IOPB.DRIVE
ROM:0943		 cbw
ROM:0944		 mov	 cx, 5
ROM:0947		 shl	 ax, cl
ROM:0949		 or	 dx, ax
ROM:094B		 mov	 byte ptr IOP_06, dl ; FDD - end sector
ROM:094B					 ; HDD - head |	0x80
ROM:094F
ROM:094F HDD_STATUS_NOT_DONE:			 ; CODE	XREF: DO_SUBMIT_IOP+277j
ROM:094F		 mov	 [bp+RETRIES], 64000
ROM:0954		 mov	 byte ptr IOP_0D_STATUS, 0FFh ;	FD/HD -	Operation status. (FF=not run, 00=success)
ROM:0959		 mov	 IOP_IRQ_DOORBELL, 0FFh	; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:095E		 mov	 si, 7000h	 ; IO PORT
ROM:0961		 push	 si
ROM:0962		 mov	 si, offset IOP_00_OPCODE ; Address of IOP block
ROM:0965		 push	 si
ROM:0966		 mov	 si, offset IOP1_PTR ; Pointer to IOPB
ROM:0969		 push	 si
ROM:096A		 call	 IOP_SEND
ROM:096D		 add	 sp, 6
ROM:0970
ROM:0970 HDD_WAIT_IRQ:				 ; CODE	XREF: DO_SUBMIT_IOP+264j
ROM:0970		 cmp	 IOP_IRQ_DOORBELL, 0 ; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:0975		 jz	 short HDD_IRQ_ARRIVED
ROM:0977		 dec	 [bp+RETRIES]
ROM:097A		 jnz	 short HDD_WAIT_IRQ
ROM:097C
ROM:097C HDD_IRQ_ARRIVED:			 ; CODE	XREF: DO_SUBMIT_IOP+25Fj
ROM:097C		 mov	 dl, BOOT_IOPB.RETRIES
ROM:0980		 dec	 BOOT_IOPB.RETRIES
ROM:0984		 test	 dl, dl
ROM:0986		 jle	 short HDD_IRQ_WAIT_DONE
ROM:0988		 cmp	 byte ptr IOP_0D_STATUS, 0 ; FD/HD - Operation status. (FF=not run, 00=success)
ROM:098D		 jnz	 short HDD_STATUS_NOT_DONE
ROM:098F
ROM:098F HDD_IRQ_WAIT_DONE:			 ; CODE	XREF: DO_SUBMIT_IOP+270j
ROM:098F		 cmp	 [bp+RETRIES], 0
ROM:0993		 jnz	 short HDD_CMD_DONE
ROM:0995		 mov	 si, offset aHardDiskTimeoutError ; "\nHard disk timeout error"
ROM:0998		 push	 si
ROM:0999		 call	 PRINT_STRING
ROM:099C		 add	 sp, 2
ROM:099F
ROM:099F HDD_CMD_DONE:				 ; CODE	XREF: DO_SUBMIT_IOP+27Dj
ROM:099F		 mov	 dl, byte ptr IOP_0D_STATUS ; FD/HD - Operation	status.	(FF=not	run, 00=success)
ROM:09A3		 mov	 BOOT_IOPB.RETURN_STATUS, dl
ROM:09A7
ROM:09A7 GO_RETURN:				 ; CODE	XREF: DO_SUBMIT_IOP+6Cj
ROM:09A7					 ; DO_SUBMIT_IOP+1B6j
ROM:09A7		 jmp	 COMMON_RETURN
ROM:09AA ; ───────────────────────────────────────────────────────────────────────────
ROM:09AA
ROM:09AA HDD_CMD_02:				 ; CODE	XREF: DO_SUBMIT_IOP+1C7j
ROM:09AA		 mov	 IOP_00_OPCODE,	34h ; '4' ; HD/FD - command
ROM:09AF		 jmp	 HDD_HANDLE_CMD
ROM:09B2 ; ───────────────────────────────────────────────────────────────────────────
ROM:09B2
ROM:09B2 HDD_CMD_20:				 ; CODE	XREF: DO_SUBMIT_IOP+1D7j
ROM:09B2		 mov	 IOP_00_OPCODE,	10h ; HD/FD - command
ROM:09B7		 jmp	 HDD_HANDLE_CMD
ROM:09BA ; ───────────────────────────────────────────────────────────────────────────
ROM:09BA
ROM:09BA HDD_CMD_03:				 ; CODE	XREF: DO_SUBMIT_IOP+1CFj
ROM:09BA		 mov	 IOP_00_OPCODE,	50h ; 'P' ; HD/FD - command
ROM:09BF		 jmp	 HDD_HANDLE_CMD
ROM:09C2 ; ───────────────────────────────────────────────────────────────────────────
ROM:09C2
ROM:09C2 HDD_COMMAND_NOT_SUPP:			 ; CODE	XREF: DO_SUBMIT_IOP+1DFj
ROM:09C2		 mov	 si, offset aHardDiskCommandNotSuppo ; "\nHard disk command not	supported."
ROM:09C5		 push	 si
ROM:09C6		 jmp	 PRINT_AND_RETURN
ROM:09C6 DO_SUBMIT_IOP	 endp
ROM:09C6
ROM:09C6 ; ───────────────────────────────────────────────────────────────────────────
ROM:09C9		 db    0
ROM:09CA
ROM:09CA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09CA
ROM:09CA ; Prints and asterisk on console and beeps
ROM:09CA ; Attributes: bp-based	frame
ROM:09CA
ROM:09CA ERROR_CONSOLE	 proc near		 ; CODE	XREF: sub_FC69A+1Cp
ROM:09CA					 ; sub_FCAA2:loc_FCB56p ...
ROM:09CA
ROM:09CA var_8		 = word	ptr -8
ROM:09CA var_6		 = byte	ptr -6
ROM:09CA
ROM:09CA		 push	 bp
ROM:09CB		 mov	 bp, sp
ROM:09CD		 push	 di
ROM:09CE		 push	 si
ROM:09CF		 sub	 sp, 4
ROM:09D2		 mov	 byte ptr [bp+var_8], '*'
ROM:09D6		 mov	 byte ptr [bp+var_8+1],	7 ; Beep
ROM:09DA		 mov	 [bp+var_6], ' '
ROM:09DE		 lea	 di, [bp+var_8]
ROM:09E1		 push	 di
ROM:09E2		 mov	 di, 3		 ; STRLEN('*\b ')
ROM:09E5		 push	 di
ROM:09E6		 sub	 di, di
ROM:09E8		 push	 di
ROM:09E9		 call	 PUTS_CONSOLE
ROM:09EC		 add	 sp, 6
ROM:09EF		 jmp	 COMMON_RETURN
ROM:09EF ERROR_CONSOLE	 endp
ROM:09EF
ROM:09F2
ROM:09F2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:09F2
ROM:09F2 ; Attributes: bp-based	frame
ROM:09F2
ROM:09F2 DO_FLOPPY_CMD	 proc near		 ; CODE	XREF: DO_FLOPPY_BOOT+4p
ROM:09F2					 ; BOOT_TYPE_01_OASIS+14p
ROM:09F2
ROM:09F2 DRIVE_NUMBER	 = byte	ptr  4
ROM:09F2 SEC_IS_256	 = byte	ptr  6
ROM:09F2
ROM:09F2		 push	 bp
ROM:09F3		 mov	 bp, sp
ROM:09F5		 push	 di
ROM:09F6		 push	 si
ROM:09F7		 cmp	 [bp+SEC_IS_256], 1
ROM:09FB		 jnz	 short SEC_512
ROM:09FD		 mov	 di, 256
ROM:0A00		 jmp	 short SEC_DONE
ROM:0A02 ; ───────────────────────────────────────────────────────────────────────────
ROM:0A02
ROM:0A02 SEC_512:				 ; CODE	XREF: DO_FLOPPY_CMD+9j
ROM:0A02		 mov	 di, 512
ROM:0A05
ROM:0A05 SEC_DONE:				 ; CODE	XREF: DO_FLOPPY_CMD+Ej
ROM:0A05		 mov	 al, [bp+DRIVE_NUMBER]
ROM:0A08		 cbw
ROM:0A09		 mov	 cx, 5
ROM:0A0C		 shl	 ax, cl
ROM:0A0E		 mov	 si, ax
ROM:0A10		 mov	 FDC_REGS.SECTOR_SIZE[si], di
ROM:0A14		 mov	 FDC_REGS.FLOPPY_DATA_BUF_PTR, offset FLOPPY_BUF
ROM:0A1A		 mov	 FDC_REGS.FLOPPY_COMMAND_REG, 87h ; 'ç'
ROM:0A1F		 inc	 NEW_CMD_REG
ROM:0A23
ROM:0A23 POLL_FLOPPY_COMMAND_DONE:		 ; CODE	XREF: DO_FLOPPY_CMD+3Dj
ROM:0A23		 mov	 dl, FDC_REGS.FLOPPY_COMMAND_REG
ROM:0A27		 and	 dx, 80h
ROM:0A2B		 cmp	 dx, 80h ; 'Ç'
ROM:0A2F		 jz	 short POLL_FLOPPY_COMMAND_DONE
ROM:0A31		 jmp	 COMMON_RETURN
ROM:0A31 DO_FLOPPY_CMD	 endp
ROM:0A31
ROM:0A34
ROM:0A34 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A34
ROM:0A34 ; Attributes: bp-based	frame
ROM:0A34
ROM:0A34 sub_FCA34	 proc near		 ; CODE	XREF: sub_FC69A:loc_FC6BCp
ROM:0A34					 ; sub_FCC14:loc_FCC36p ...
ROM:0A34
ROM:0A34 var_6		 = byte	ptr -6
ROM:0A34
ROM:0A34		 push	 bp
ROM:0A35		 mov	 bp, sp
ROM:0A37		 push	 di
ROM:0A38		 push	 si
ROM:0A39		 sub	 sp, 2
ROM:0A3C		 mov	 [bp+var_6], 1
ROM:0A40		 mov	 SYSCALL_ARG_SEG, 0
ROM:0A46		 mov	 di, 0F53h
ROM:0A49		 push	 di
ROM:0A4A		 call	 sub_FCAA2
ROM:0A4D		 add	 sp, 2
ROM:0A50		 test	 ax, ax
ROM:0A52		 jz	 short loc_FCA77
ROM:0A54		 cmp	 COMMAND_CHAR, 3Ah ; ':'
ROM:0A59		 jnz	 short loc_FCA7B
ROM:0A5B		 mov	 di, SYSCALL_ARG_OFF
ROM:0A5F		 mov	 SYSCALL_ARG_SEG, di
ROM:0A63		 call	 READ_CHAR_TO_AL
ROM:0A66		 mov	 COMMAND_CHAR, al
ROM:0A69		 mov	 di, 0F53h
ROM:0A6C		 push	 di
ROM:0A6D		 call	 sub_FCAA2
ROM:0A70		 add	 sp, 2
ROM:0A73		 test	 ax, ax
ROM:0A75		 jnz	 short loc_FCA7B
ROM:0A77
ROM:0A77 loc_FCA77:				 ; CODE	XREF: sub_FCA34+1Ej
ROM:0A77		 mov	 [bp+var_6], 0
ROM:0A7B
ROM:0A7B loc_FCA7B:				 ; CODE	XREF: sub_FCA34+25j
ROM:0A7B					 ; sub_FCA34+41j
ROM:0A7B		 mov	 al, [bp+var_6]
ROM:0A7E		 cbw
ROM:0A7F		 jmp	 COMMON_RETURN
ROM:0A7F sub_FCA34	 endp
ROM:0A7F
ROM:0A82
ROM:0A82 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0A82
ROM:0A82 ; Attributes: bp-based	frame
ROM:0A82
ROM:0A82 READ_CHAR_TO_AL proc near		 ; CODE	XREF: sub_FC69A+Fp
ROM:0A82					 ; sub_FCA34+2Fp ...
ROM:0A82
ROM:0A82 var_6		 = word	ptr -6
ROM:0A82
ROM:0A82		 push	 bp
ROM:0A83		 mov	 bp, sp
ROM:0A85		 push	 di
ROM:0A86		 push	 si
ROM:0A87		 sub	 sp, 2
ROM:0A8A		 call	 sub_FD9A6
ROM:0A8D		 mov	 byte ptr [bp+var_6], al
ROM:0A90		 lea	 di, [bp+var_6]
ROM:0A93		 push	 di
ROM:0A94		 call	 PUTCHAR_CONSOLE
ROM:0A97		 add	 sp, 2
ROM:0A9A		 mov	 al, byte ptr [bp+var_6]
ROM:0A9D		 cbw
ROM:0A9E		 jmp	 COMMON_RETURN
ROM:0A9E READ_CHAR_TO_AL endp
ROM:0A9E
ROM:0A9E ; ───────────────────────────────────────────────────────────────────────────
ROM:0AA1		 db    0
ROM:0AA2
ROM:0AA2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0AA2
ROM:0AA2 ; Attributes: bp-based	frame
ROM:0AA2
ROM:0AA2 sub_FCAA2	 proc near		 ; CODE	XREF: sub_FCA34+16p
ROM:0AA2					 ; sub_FCA34+39p ...
ROM:0AA2
ROM:0AA2 var_A		 = word	ptr -0Ah
ROM:0AA2 var_8		 = byte	ptr -8
ROM:0AA2 var_6		 = word	ptr -6
ROM:0AA2 arg_0		 = word	ptr  4
ROM:0AA2
ROM:0AA2		 push	 bp
ROM:0AA3		 mov	 bp, sp
ROM:0AA5		 push	 di
ROM:0AA6		 push	 si
ROM:0AA7		 sub	 sp, 6
ROM:0AAA		 mov	 [bp+var_8], 2Bh ; '+'
ROM:0AAE		 mov	 [bp+var_A], 0
ROM:0AB3		 mov	 di, [bp+arg_0]
ROM:0AB6		 mov	 word ptr [di],	0
ROM:0ABA		 jmp	 short loc_FCAE4
ROM:0ABC ; ───────────────────────────────────────────────────────────────────────────
ROM:0ABC
ROM:0ABC loc_FCABC:				 ; CODE	XREF: sub_FCAA2+53j
ROM:0ABC		 mov	 di, [bp+var_A]
ROM:0ABF		 mov	 cx, 4
ROM:0AC2		 shl	 di, cl
ROM:0AC4		 mov	 al, byte ptr [bp+var_6]
ROM:0AC7		 cbw
ROM:0AC8		 add	 di, ax
ROM:0ACA		 mov	 [bp+var_A], di
ROM:0ACD		 call	 sub_FD9A6
ROM:0AD0		 mov	 COMMAND_CHAR, al
ROM:0AD3		 cmp	 COMMAND_CHAR, 0Dh
ROM:0AD8		 jz	 short loc_FCAF7
ROM:0ADA		 mov	 di, offset COMMAND_CHAR
ROM:0ADD		 push	 di
ROM:0ADE		 call	 PUTCHAR_CONSOLE
ROM:0AE1		 add	 sp, 2
ROM:0AE4
ROM:0AE4 loc_FCAE4:				 ; CODE	XREF: sub_FCAA2+18j
ROM:0AE4					 ; sub_FCAA2+B1j
ROM:0AE4		 lea	 di, [bp+var_6]
ROM:0AE7		 push	 di
ROM:0AE8		 mov	 al, COMMAND_CHAR
ROM:0AEB		 cbw
ROM:0AEC		 push	 ax
ROM:0AED		 call	 sub_FD944
ROM:0AF0		 add	 sp, 4
ROM:0AF3		 test	 ax, ax
ROM:0AF5		 jnz	 short loc_FCABC
ROM:0AF7
ROM:0AF7 loc_FCAF7:				 ; CODE	XREF: sub_FCAA2+36j
ROM:0AF7		 cmp	 [bp+var_8], 2Bh ; '+'
ROM:0AFB		 jnz	 short loc_FCB07
ROM:0AFD		 mov	 bx, [bp+arg_0]
ROM:0B00		 mov	 di, [bp+var_A]
ROM:0B03		 add	 [bx], di
ROM:0B05		 jmp	 short loc_FCB0F
ROM:0B07 ; ───────────────────────────────────────────────────────────────────────────
ROM:0B07
ROM:0B07 loc_FCB07:				 ; CODE	XREF: sub_FCAA2+59j
ROM:0B07		 mov	 bx, [bp+arg_0]
ROM:0B0A		 mov	 di, [bp+var_A]
ROM:0B0D		 sub	 [bx], di
ROM:0B0F
ROM:0B0F loc_FCB0F:				 ; CODE	XREF: sub_FCAA2+63j
ROM:0B0F		 cmp	 COMMAND_CHAR, 0Dh
ROM:0B14		 jz	 short loc_FCB2B
ROM:0B16		 cmp	 COMMAND_CHAR, 3Ah ; ':'
ROM:0B1B		 jz	 short loc_FCB2B
ROM:0B1D		 cmp	 COMMAND_CHAR, 2Ch ; ','
ROM:0B22		 jz	 short loc_FCB2B
ROM:0B24		 cmp	 COMMAND_CHAR, 20h ; ' '
ROM:0B29		 jnz	 short loc_FCB33
ROM:0B2B
ROM:0B2B loc_FCB2B:				 ; CODE	XREF: sub_FCAA2+72j
ROM:0B2B					 ; sub_FCAA2+79j ...
ROM:0B2B		 mov	 di, 1
ROM:0B2E
ROM:0B2E loc_FCB2E:				 ; CODE	XREF: sub_FCAA2+B9j
ROM:0B2E		 mov	 ax, di
ROM:0B30		 jmp	 COMMON_RETURN
ROM:0B33 ; ───────────────────────────────────────────────────────────────────────────
ROM:0B33
ROM:0B33 loc_FCB33:				 ; CODE	XREF: sub_FCAA2+87j
ROM:0B33		 cmp	 COMMAND_CHAR, 2Bh ; '+'
ROM:0B38		 jz	 short loc_FCB41
ROM:0B3A		 cmp	 COMMAND_CHAR, 2Dh ; '-'
ROM:0B3F		 jnz	 short loc_FCB56
ROM:0B41
ROM:0B41 loc_FCB41:				 ; CODE	XREF: sub_FCAA2+96j
ROM:0B41		 mov	 dl, COMMAND_CHAR
ROM:0B45		 mov	 [bp+var_8], dl
ROM:0B48		 mov	 [bp+var_A], 0
ROM:0B4D		 call	 READ_CHAR_TO_AL
ROM:0B50		 mov	 COMMAND_CHAR, al
ROM:0B53		 jmp	 loc_FCAE4
ROM:0B56 ; ───────────────────────────────────────────────────────────────────────────
ROM:0B56
ROM:0B56 loc_FCB56:				 ; CODE	XREF: sub_FCAA2+9Dj
ROM:0B56		 call	 ERROR_CONSOLE
ROM:0B59		 sub	 di, di
ROM:0B5B		 jmp	 short loc_FCB2E
ROM:0B5B sub_FCAA2	 endp
ROM:0B5B
ROM:0B5B ; ───────────────────────────────────────────────────────────────────────────
ROM:0B5D		 db    0
ROM:0B5E
ROM:0B5E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0B5E
ROM:0B5E ; Attributes: bp-based	frame
ROM:0B5E
ROM:0B5E sub_FCB5E	 proc near		 ; CODE	XREF: sub_FD85A+85p
ROM:0B5E					 ; sub_FDC92+Ep
ROM:0B5E
ROM:0B5E var_6		 = word	ptr -6
ROM:0B5E arg_0		 = word	ptr  4
ROM:0B5E
ROM:0B5E		 push	 bp
ROM:0B5F		 mov	 bp, sp
ROM:0B61		 push	 di
ROM:0B62		 push	 si
ROM:0B63		 sub	 sp, 2
ROM:0B66		 mov	 bx, [bp+arg_0]
ROM:0B69		 mov	 byte ptr [bx],	0
ROM:0B6C		 jmp	 short loc_FCB9A
ROM:0B6E ; ───────────────────────────────────────────────────────────────────────────
ROM:0B6E
ROM:0B6E loc_FCB6E:				 ; CODE	XREF: sub_FCB5E+4Dj
ROM:0B6E		 mov	 bx, [bp+arg_0]
ROM:0B71		 mov	 al, [bx]
ROM:0B73		 cbw
ROM:0B74		 mov	 cx, 4
ROM:0B77		 shl	 ax, cl
ROM:0B79		 mov	 dx, ax
ROM:0B7B		 mov	 al, byte ptr [bp+var_6]
ROM:0B7E		 cbw
ROM:0B7F		 add	 dx, ax
ROM:0B81		 mov	 [bx], dl
ROM:0B83		 call	 sub_FD9A6
ROM:0B86		 mov	 COMMAND_CHAR, al
ROM:0B89		 cmp	 COMMAND_CHAR, 0Dh
ROM:0B8E		 jz	 short loc_FCBAD
ROM:0B90		 mov	 di, offset COMMAND_CHAR
ROM:0B93		 push	 di
ROM:0B94		 call	 PUTCHAR_CONSOLE
ROM:0B97		 add	 sp, 2
ROM:0B9A
ROM:0B9A loc_FCB9A:				 ; CODE	XREF: sub_FCB5E+Ej
ROM:0B9A		 lea	 di, [bp+var_6]
ROM:0B9D		 push	 di
ROM:0B9E		 mov	 al, COMMAND_CHAR
ROM:0BA1		 cbw
ROM:0BA2		 push	 ax
ROM:0BA3		 call	 sub_FD944
ROM:0BA6		 add	 sp, 4
ROM:0BA9		 test	 ax, ax
ROM:0BAB		 jnz	 short loc_FCB6E
ROM:0BAD
ROM:0BAD loc_FCBAD:				 ; CODE	XREF: sub_FCB5E+30j
ROM:0BAD		 cmp	 COMMAND_CHAR, 0Dh
ROM:0BB2		 jz	 short loc_FCBCC
ROM:0BB4		 cmp	 COMMAND_CHAR, 20h ; ' '
ROM:0BB9		 jz	 short loc_FCBCC
ROM:0BBB		 cmp	 COMMAND_CHAR, 2Ch ; ','
ROM:0BC0		 jz	 short loc_FCBCC
ROM:0BC2		 call	 ERROR_CONSOLE
ROM:0BC5		 sub	 di, di
ROM:0BC7
ROM:0BC7 loc_FCBC7:				 ; CODE	XREF: sub_FCB5E+71j
ROM:0BC7		 mov	 ax, di
ROM:0BC9		 jmp	 COMMON_RETURN
ROM:0BCC ; ───────────────────────────────────────────────────────────────────────────
ROM:0BCC
ROM:0BCC loc_FCBCC:				 ; CODE	XREF: sub_FCB5E+54j
ROM:0BCC					 ; sub_FCB5E+5Bj ...
ROM:0BCC		 mov	 di, 1
ROM:0BCF		 jmp	 short loc_FCBC7
ROM:0BCF sub_FCB5E	 endp
ROM:0BCF
ROM:0BCF ; ───────────────────────────────────────────────────────────────────────────
ROM:0BD1		 db    0
ROM:0BD2
ROM:0BD2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0BD2
ROM:0BD2
ROM:0BD2 RESTORE_REGS	 proc far		 ; CODE	XREF: AFTER_JUMP_TABLE:loc_FC676p
ROM:0BD2					 ; sub_FCC14+1Fp ...
ROM:0BD2		 mov	 ax, offset sub_FC2B1
ROM:0BD5		 mov	 bx, 4
ROM:0BD8		 mov	 [bx], ax
ROM:0BDA		 mov	 word ptr [bx+2], cs
ROM:0BDD		 mov	 bx, 0Ch
ROM:0BE0		 mov	 [bx], ax
ROM:0BE2		 mov	 word ptr [bx+2], cs
ROM:0BE5		 mov	 bx, offset REGISTERS
ROM:0BE8		 mov	 di, [bx+CPU_REGS.SAVE_DI]
ROM:0BEB		 mov	 si, [bx+CPU_REGS.SAVE_SI]
ROM:0BEE		 mov	 dx, [bx+CPU_REGS.SAVE_DX]
ROM:0BF1		 mov	 cx, [bx+CPU_REGS.SAVE_CX]
ROM:0BF4		 mov	 ax, [bx+CPU_REGS.SAVE_AX]
ROM:0BF7		 mov	 es, [bx+CPU_REGS.SAVE_ES]
ROM:0BFA		 mov	 ss, [bx+CPU_REGS.SAVE_SS]
ROM:0BFD		 mov	 sp, [bx+CPU_REGS.SAVE_SP]
ROM:0C00		 mov	 bp, [bx+CPU_REGS.SAVE_BP]
ROM:0C03		 push	 [bx+CPU_REGS.SAVE_FLAGS]
ROM:0C06		 push	 [bx+CPU_REGS.SAVE_CS]
ROM:0C09		 push	 [bx+CPU_REGS.SAVE_IP]
ROM:0C0C		 push	 [bx+CPU_REGS.SAVE_DS]
ROM:0C0F		 mov	 bx, [bx+CPU_REGS.SAVE_BX]
ROM:0C12		 pop	 ds
ROM:0C13		 iret
ROM:0C13 RESTORE_REGS	 endp ;	sp = -6
ROM:0C13
ROM:0C14
ROM:0C14 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C14
ROM:0C14 ; Attributes: bp-based	frame
ROM:0C14
ROM:0C14 sub_FCC14	 proc near		 ; CODE	XREF: sub_FD047p
ROM:0C14		 push	 bp
ROM:0C15		 mov	 bp, sp
ROM:0C17		 push	 di
ROM:0C18		 push	 si
ROM:0C19		 mov	 di, 1
ROM:0C1C		 push	 di
ROM:0C1D		 call	 PRINT_STH
ROM:0C20		 add	 sp, 2
ROM:0C23		 call	 READ_CHAR_TO_AL
ROM:0C26		 mov	 COMMAND_CHAR, al
ROM:0C29		 cmp	 COMMAND_CHAR, 0Dh
ROM:0C2E		 jnz	 short loc_FCC36
ROM:0C30		 call	 sub_FCC9E
ROM:0C33		 call	 near ptr RESTORE_REGS
ROM:0C36
ROM:0C36 loc_FCC36:				 ; CODE	XREF: sub_FCC14+1Aj
ROM:0C36		 call	 sub_FCA34
ROM:0C39		 test	 ax, ax
ROM:0C3B		 jz	 short loc_FCC53
ROM:0C3D		 mov	 di, SYSCALL_ARG_SEG
ROM:0C41		 mov	 REGISTERS.SAVE_CS, di
ROM:0C45		 mov	 di, SYSCALL_ARG_OFF
ROM:0C49		 mov	 REGISTERS.SAVE_IP, di
ROM:0C4D		 call	 sub_FCC9E
ROM:0C50		 call	 near ptr RESTORE_REGS
ROM:0C53
ROM:0C53 loc_FCC53:				 ; CODE	XREF: sub_FCC14+27j
ROM:0C53		 jmp	 COMMON_RETURN
ROM:0C53 sub_FCC14	 endp
ROM:0C53
ROM:0C56
ROM:0C56 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C56
ROM:0C56 ; Attributes: bp-based	frame
ROM:0C56
ROM:0C56 sub_FCC56	 proc near		 ; CODE	XREF: sub_FD06Ep
ROM:0C56		 push	 bp
ROM:0C57		 mov	 bp, sp
ROM:0C59		 push	 di
ROM:0C5A		 push	 si
ROM:0C5B		 mov	 di, 1
ROM:0C5E		 push	 di
ROM:0C5F		 call	 PRINT_STH
ROM:0C62		 add	 sp, 2
ROM:0C65		 call	 READ_CHAR_TO_AL
ROM:0C68		 mov	 COMMAND_CHAR, al
ROM:0C6B		 cmp	 COMMAND_CHAR, 0Dh
ROM:0C70		 jnz	 short loc_FCC7B
ROM:0C72		 or	 REGISTERS.SAVE_FLAGS, 100h
ROM:0C78		 call	 near ptr RESTORE_REGS
ROM:0C7B
ROM:0C7B loc_FCC7B:				 ; CODE	XREF: sub_FCC56+1Aj
ROM:0C7B		 call	 sub_FCA34
ROM:0C7E		 test	 ax, ax
ROM:0C80		 jz	 short loc_FCC9B
ROM:0C82		 mov	 di, SYSCALL_ARG_SEG
ROM:0C86		 mov	 REGISTERS.SAVE_CS, di
ROM:0C8A		 mov	 di, SYSCALL_ARG_OFF
ROM:0C8E		 mov	 REGISTERS.SAVE_IP, di
ROM:0C92		 or	 REGISTERS.SAVE_FLAGS, 100h
ROM:0C98		 call	 near ptr RESTORE_REGS
ROM:0C9B
ROM:0C9B loc_FCC9B:				 ; CODE	XREF: sub_FCC56+2Aj
ROM:0C9B		 jmp	 COMMON_RETURN
ROM:0C9B sub_FCC56	 endp
ROM:0C9B
ROM:0C9E
ROM:0C9E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0C9E
ROM:0C9E ; Attributes: bp-based	frame
ROM:0C9E
ROM:0C9E sub_FCC9E	 proc near		 ; CODE	XREF: AFTER_JUMP_TABLE+10p
ROM:0C9E					 ; sub_FCC14+1Cp ...
ROM:0C9E
ROM:0C9E var_6		 = word	ptr -6
ROM:0C9E
ROM:0C9E		 push	 bp
ROM:0C9F		 mov	 bp, sp
ROM:0CA1		 push	 di
ROM:0CA2		 push	 si
ROM:0CA3		 sub	 sp, 2
ROM:0CA6		 mov	 [bp+var_6], 0
ROM:0CAB
ROM:0CAB loc_FCCAB:				 ; CODE	XREF: sub_FCC9E+5Dj
ROM:0CAB		 mov	 ax, [bp+var_6]
ROM:0CAE		 mov	 cx, 6
ROM:0CB1		 imul	 cx
ROM:0CB3		 mov	 bx, ax
ROM:0CB5		 mov	 al, [bx+630h]
ROM:0CB9		 test	 al, al
ROM:0CBB		 jz	 short loc_FCCF4
ROM:0CBD		 mov	 ax, [bp+var_6]
ROM:0CC0		 mov	 cx, 6
ROM:0CC3		 imul	 cx
ROM:0CC5		 mov	 bx, ax
ROM:0CC7		 mov	 ax, [bx+632h]
ROM:0CCB		 mov	 SYSCALL_ARG_SEG, ax
ROM:0CCE		 mov	 ax, [bp+var_6]
ROM:0CD1		 imul	 cx
ROM:0CD3		 mov	 bx, ax
ROM:0CD5		 mov	 ax, [bx+634h]
ROM:0CD9		 mov	 SYSCALL_ARG_OFF, ax
ROM:0CDC		 mov	 ax, [bp+var_6]
ROM:0CDF		 imul	 cx
ROM:0CE1		 push	 ax
ROM:0CE2		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:0CE5		 pop	 bx
ROM:0CE6		 mov	 [bx+631h], al
ROM:0CEA		 mov	 di, 0CCh ; '╠'
ROM:0CED		 push	 di
ROM:0CEE		 call	 SYSCALL_ARG_PUT_VALUE ; Value on stack
ROM:0CF1		 add	 sp, 2
ROM:0CF4
ROM:0CF4 loc_FCCF4:				 ; CODE	XREF: sub_FCC9E+1Dj
ROM:0CF4		 inc	 [bp+var_6]
ROM:0CF7		 cmp	 [bp+var_6], 8
ROM:0CFB		 jb	 short loc_FCCAB
ROM:0CFD		 jmp	 COMMON_RETURN
ROM:0CFD sub_FCC9E	 endp
ROM:0CFD
ROM:0D00
ROM:0D00 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0D00
ROM:0D00 ; Attributes: bp-based	frame
ROM:0D00
ROM:0D00 BREAKPOINT	 proc near		 ; CODE	XREF: sub_FC2B1+5Bp
ROM:0D00
ROM:0D00 var_6		 = word	ptr -6
ROM:0D00
ROM:0D00		 push	 bp
ROM:0D01		 mov	 bp, sp
ROM:0D03		 push	 di
ROM:0D04		 push	 si
ROM:0D05		 sub	 sp, 2
ROM:0D08		 mov	 di, offset aBreak_____0 ; "\nBreak ...."
ROM:0D0B		 push	 di
ROM:0D0C		 call	 PRINT_STRING
ROM:0D0F		 add	 sp, 2
ROM:0D12		 mov	 [bp+var_6], 0
ROM:0D17
ROM:0D17 loc_FCD17:				 ; CODE	XREF: BREAKPOINT+62j
ROM:0D17		 mov	 ax, [bp+var_6]
ROM:0D1A		 mov	 cx, 6
ROM:0D1D		 imul	 cx
ROM:0D1F		 mov	 bx, ax
ROM:0D21		 mov	 al, [bx+630h]
ROM:0D25		 test	 al, al
ROM:0D27		 jz	 short loc_FCD5B
ROM:0D29		 mov	 ax, [bp+var_6]
ROM:0D2C		 mov	 cx, 6
ROM:0D2F		 imul	 cx
ROM:0D31		 mov	 bx, ax
ROM:0D33		 mov	 ax, [bx+632h]
ROM:0D37		 mov	 SYSCALL_ARG_SEG, ax
ROM:0D3A		 mov	 ax, [bp+var_6]
ROM:0D3D		 imul	 cx
ROM:0D3F		 mov	 bx, ax
ROM:0D41		 mov	 ax, [bx+634h]
ROM:0D45		 mov	 SYSCALL_ARG_OFF, ax
ROM:0D48		 mov	 ax, [bp+var_6]
ROM:0D4B		 imul	 cx
ROM:0D4D		 mov	 di, ax
ROM:0D4F		 mov	 al, [di+631h]
ROM:0D53		 cbw
ROM:0D54		 push	 ax
ROM:0D55		 call	 SYSCALL_ARG_PUT_VALUE ; Value on stack
ROM:0D58		 add	 sp, 2
ROM:0D5B
ROM:0D5B loc_FCD5B:				 ; CODE	XREF: BREAKPOINT+27j
ROM:0D5B		 inc	 [bp+var_6]
ROM:0D5E		 cmp	 [bp+var_6], 8
ROM:0D62		 jb	 short loc_FCD17
ROM:0D64		 or	 REGISTERS.SAVE_FLAGS, 100h
ROM:0D6A		 call	 near ptr RESTORE_REGS
ROM:0D6D		 jmp	 COMMON_RETURN
ROM:0D6D BREAKPOINT	 endp
ROM:0D6D
ROM:0D70
ROM:0D70 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0D70
ROM:0D70 ; Attributes: bp-based	frame
ROM:0D70
ROM:0D70 CHANNEL_IO	 proc near		 ; CODE	XREF: F14_RESERVED:loc_FC200p
ROM:0D70					 ; sub_FD073p
ROM:0D70
ROM:0D70 var_18		 = byte	ptr -18h
ROM:0D70 var_16		 = word	ptr -16h
ROM:0D70 var_14		 = word	ptr -14h
ROM:0D70 var_12		 = byte	ptr -12h
ROM:0D70 var_10		 = byte	ptr -10h
ROM:0D70 var_E		 = word	ptr -0Eh
ROM:0D70 var_C		 = word	ptr -0Ch
ROM:0D70 var_A		 = word	ptr -0Ah
ROM:0D70
ROM:0D70		 push	 bp
ROM:0D71		 mov	 bp, sp
ROM:0D73		 push	 di
ROM:0D74		 push	 si
ROM:0D75		 sub	 sp, 14h
ROM:0D78		 mov	 byte ptr [bp+var_A], 3Ah ; ':'
ROM:0D7C		 mov	 byte ptr [bp+var_C], 45h ; 'E'
ROM:0D80		 mov	 byte ptr [bp+var_E], 42h ; 'B'
ROM:0D84		 mov	 [bp+var_10], 1
ROM:0D88		 mov	 [bp+var_12], 0
ROM:0D8C		 mov	 byte ptr [bp+var_14], 6
ROM:0D90		 mov	 [bp+var_18], 0
ROM:0D94		 sub	 di, di
ROM:0D96		 jmp	 short loc_FCDB3
ROM:0D98 ; ───────────────────────────────────────────────────────────────────────────
ROM:0D98
ROM:0D98 loc_FCD98:				 ; CODE	XREF: CHANNEL_IO+47j
ROM:0D98		 mov	 di, offset aChannelNo_04_0 ; "\nChannel no.(0-4): "
ROM:0D9B		 push	 di
ROM:0D9C		 call	 PRINT_STRING
ROM:0D9F		 add	 sp, 2
ROM:0DA2		 call	 READ_CHAR_TO_AL
ROM:0DA5		 mov	 [bp+var_16], ax
ROM:0DA8		 lea	 di, [bp+var_14]
ROM:0DAB		 push	 di
ROM:0DAC		 push	 ax
ROM:0DAD		 call	 sub_FD944
ROM:0DB0		 add	 sp, 4
ROM:0DB3
ROM:0DB3 loc_FCDB3:				 ; CODE	XREF: CHANNEL_IO+26j
ROM:0DB3		 cmp	 byte ptr [bp+var_14], 4
ROM:0DB7		 jg	 short loc_FCD98
ROM:0DB9		 mov	 SYSCALL_ARG_SEG, 0
ROM:0DBF		 mov	 SYSCALL_ARG_OFF, 0
ROM:0DC5		 mov	 dl, byte ptr [bp+var_14]
ROM:0DC8		 mov	 byte_512, dl
ROM:0DCC		 mov	 al, byte_512
ROM:0DCF		 cbw
ROM:0DD0		 push	 ax
ROM:0DD1		 call	 CHANNEL_INIT_RX
ROM:0DD4		 add	 sp, 2
ROM:0DD7		 mov	 al, byte_512
ROM:0DDA		 cbw
ROM:0DDB		 push	 ax
ROM:0DDC		 call	 sub_FCF06
ROM:0DDF		 add	 sp, 2
ROM:0DE2		 mov	 di, offset aReady_0 ; " Ready-	"
ROM:0DE5		 push	 di
ROM:0DE6		 call	 PRINT_STRING
ROM:0DE9		 add	 sp, 2
ROM:0DEC		 mov	 word_F26, 0Fh
ROM:0DF2		 mov	 di, offset BOOT_SECTOR_BUF ; While overlaying the IO progrem this RAM area does not
ROM:0DF2					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:0DF2					 ; buffer to read the boot sectors in from the FD & HD.
ROM:0DF5		 push	 di
ROM:0DF6		 push	 word_F26
ROM:0DFA		 mov	 al, byte_512
ROM:0DFD		 cbw
ROM:0DFE		 push	 ax
ROM:0DFF		 call	 CHANNEL_RX
ROM:0E02		 add	 sp, 6
ROM:0E05		 mov	 word_F22, 0
ROM:0E0B		 mov	 word_F24, 0
ROM:0E11		 jmp	 loc_FCEE2
ROM:0E14 ; ───────────────────────────────────────────────────────────────────────────
ROM:0E14
ROM:0E14 loc_FCE14:				 ; CODE	XREF: CHANNEL_IO+B3j
ROM:0E14		 inc	 word_F24
ROM:0E18
ROM:0E18 loc_FCE18:				 ; CODE	XREF: CHANNEL_IO+178j
ROM:0E18		 call	 sub_FDC06
ROM:0E1B		 mov	 di, ax
ROM:0E1D		 mov	 al, byte ptr [bp+var_A]
ROM:0E20		 cbw
ROM:0E21		 cmp	 di, ax
ROM:0E23		 jnz	 short loc_FCE14
ROM:0E25		 cmp	 byte_512, 0
ROM:0E2A		 jz	 short loc_FCE36
ROM:0E2C		 lea	 di, [bp+var_A]
ROM:0E2F		 push	 di
ROM:0E30		 call	 PUTCHAR_CONSOLE
ROM:0E33		 add	 sp, 2
ROM:0E36
ROM:0E36 loc_FCE36:				 ; CODE	XREF: CHANNEL_IO+BAj
ROM:0E36		 mov	 word_F28, 0
ROM:0E3C		 call	 sub_FDBAC
ROM:0E3F		 mov	 [bp+var_12], al
ROM:0E42		 call	 sub_FDBE8
ROM:0E45		 mov	 SYSCALL_ARG_OFF, ax
ROM:0E48		 call	 sub_FDBAC
ROM:0E4B		 mov	 [bp+var_18], al
ROM:0E4E		 cmp	 [bp+var_18], 0
ROM:0E52		 jge	 short loc_FCE58
ROM:0E54		 mov	 [bp+var_18], 0
ROM:0E58
ROM:0E58 loc_FCE58:				 ; CODE	XREF: CHANNEL_IO+E2j
ROM:0E58		 mov	 al, [bp+var_12]
ROM:0E5B		 cbw
ROM:0E5C		 mov	 di, ax
ROM:0E5E		 mov	 al, [bp+var_12]
ROM:0E61		 cbw
ROM:0E62		 add	 di, ax
ROM:0E64		 add	 di, 0Bh
ROM:0E67		 add	 word_F24, di
ROM:0E6B		 mov	 al, [bp+var_18]
ROM:0E6E		 cbw
ROM:0E6F		 cmp	 ax, 3
ROM:0E72		 ja	 short loc_FCEB9
ROM:0E74		 shl	 ax, 1
ROM:0E76		 xchg	 ax, bx
ROM:0E77		 jmp	 cs:off_FCEC5[bx]
ROM:0E7C
ROM:0E7C loc_FCE7C:				 ; DATA	XREF: CHANNEL_IO:off_FCEC5o
ROM:0E7C		 mov	 [bp+var_16], 1
ROM:0E81
ROM:0E81 loc_FCE81:				 ; CODE	XREF: CHANNEL_IO+12Bj
ROM:0E81		 mov	 al, [bp+var_12]
ROM:0E84		 cbw
ROM:0E85		 cmp	 ax, [bp+var_16]
ROM:0E88		 jl	 short loc_FCECD
ROM:0E8A		 call	 sub_FDBAC
ROM:0E8D		 push	 ax
ROM:0E8E		 call	 SYSCALL_ARG_PUT_VALUE ; Value on stack
ROM:0E91		 add	 sp, 2
ROM:0E94		 inc	 SYSCALL_ARG_OFF
ROM:0E98		 inc	 [bp+var_16]
ROM:0E9B		 jmp	 short loc_FCE81
ROM:0E9D ; ───────────────────────────────────────────────────────────────────────────
ROM:0E9D
ROM:0E9D loc_FCE9D:				 ; CODE	XREF: CHANNEL_IO+107j
ROM:0E9D					 ; DATA	XREF: CHANNEL_IO+157o
ROM:0E9D		 mov	 [bp+var_10], 0
ROM:0EA1		 jmp	 short loc_FCECD
ROM:0EA3 ; ───────────────────────────────────────────────────────────────────────────
ROM:0EA3
ROM:0EA3 loc_FCEA3:				 ; CODE	XREF: CHANNEL_IO+107j
ROM:0EA3					 ; DATA	XREF: CHANNEL_IO+159o
ROM:0EA3		 call	 sub_FDBE8
ROM:0EA6		 mov	 SYSCALL_ARG_SEG, ax
ROM:0EA9		 jmp	 short loc_FCECD
ROM:0EAB ; ───────────────────────────────────────────────────────────────────────────
ROM:0EAB
ROM:0EAB loc_FCEAB:				 ; CODE	XREF: CHANNEL_IO+107j
ROM:0EAB					 ; DATA	XREF: CHANNEL_IO+15Bo
ROM:0EAB		 call	 sub_FDBE8
ROM:0EAE		 mov	 REGISTERS.SAVE_CS, ax
ROM:0EB1		 call	 sub_FDBE8
ROM:0EB4		 mov	 REGISTERS.SAVE_IP, ax
ROM:0EB7		 jmp	 short loc_FCECD
ROM:0EB9 ; ───────────────────────────────────────────────────────────────────────────
ROM:0EB9
ROM:0EB9 loc_FCEB9:				 ; CODE	XREF: CHANNEL_IO+102j
ROM:0EB9		 lea	 di, [bp+var_E]
ROM:0EBC		 push	 di
ROM:0EBD		 call	 PUTCHAR_CONSOLE
ROM:0EC0		 add	 sp, 2
ROM:0EC3		 jmp	 short loc_FCECD
ROM:0EC3 ; ───────────────────────────────────────────────────────────────────────────
ROM:0EC5 off_FCEC5	 dw offset loc_FCE7C	 ; DATA	XREF: CHANNEL_IO+107r
ROM:0EC7		 dw offset loc_FCE9D
ROM:0EC9		 dw offset loc_FCEA3
ROM:0ECB		 dw offset loc_FCEAB
ROM:0ECD ; ───────────────────────────────────────────────────────────────────────────
ROM:0ECD
ROM:0ECD loc_FCECD:				 ; CODE	XREF: CHANNEL_IO+118j
ROM:0ECD					 ; CHANNEL_IO+131j ...
ROM:0ECD		 call	 sub_FDBAC
ROM:0ED0		 test	 word_F28, 0FFh
ROM:0ED6		 jz	 short loc_FCEE2
ROM:0ED8		 lea	 di, [bp+var_C]
ROM:0EDB		 push	 di
ROM:0EDC		 call	 PUTCHAR_CONSOLE
ROM:0EDF		 add	 sp, 2
ROM:0EE2
ROM:0EE2 loc_FCEE2:				 ; CODE	XREF: CHANNEL_IO+A1j
ROM:0EE2					 ; CHANNEL_IO+166j
ROM:0EE2		 cmp	 [bp+var_10], 0
ROM:0EE6		 jz	 short loc_FCEEB
ROM:0EE8		 jmp	 loc_FCE18
ROM:0EEB ; ───────────────────────────────────────────────────────────────────────────
ROM:0EEB
ROM:0EEB loc_FCEEB:				 ; CODE	XREF: CHANNEL_IO+176j
ROM:0EEB		 mov	 di, offset aDone_0 ; "	-Done"
ROM:0EEE		 push	 di
ROM:0EEF		 call	 PRINT_STRING
ROM:0EF2		 add	 sp, 2
ROM:0EF5		 mov	 al, byte_512
ROM:0EF8		 cbw
ROM:0EF9		 push	 ax
ROM:0EFA		 call	 CHANNEL_INIT
ROM:0EFD		 add	 sp, 2
ROM:0F00		 call	 DUMP_REGS
ROM:0F03		 jmp	 COMMON_RETURN
ROM:0F03 CHANNEL_IO	 endp
ROM:0F03
ROM:0F06
ROM:0F06 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F06
ROM:0F06 ; Attributes: bp-based	frame
ROM:0F06
ROM:0F06 sub_FCF06	 proc near		 ; CODE	XREF: CHANNEL_IO+6Cp
ROM:0F06
ROM:0F06 arg_0		 = byte	ptr  4
ROM:0F06
ROM:0F06		 push	 bp
ROM:0F07		 mov	 bp, sp
ROM:0F09		 push	 di
ROM:0F0A		 push	 si
ROM:0F0B		 jmp	 short loc_FCF18
ROM:0F0D ; ───────────────────────────────────────────────────────────────────────────
ROM:0F0D
ROM:0F0D loc_FCF0D:				 ; CODE	XREF: sub_FCF06+28j
ROM:0F0D		 mov	 al, [bp+arg_0]
ROM:0F10		 cbw
ROM:0F11		 push	 ax
ROM:0F12		 call	 DO_GETCHAR
ROM:0F15		 add	 sp, 2
ROM:0F18
ROM:0F18 loc_FCF18:				 ; CODE	XREF: sub_FCF06+5j
ROM:0F18		 mov	 al, COMMAND_CHAR
ROM:0F1B		 cbw
ROM:0F1C		 push	 ax
ROM:0F1D		 mov	 di, 0FFFFh
ROM:0F20		 push	 di
ROM:0F21		 mov	 al, [bp+arg_0]
ROM:0F24		 cbw
ROM:0F25		 push	 ax
ROM:0F26		 call	 CHANNEL_RX
ROM:0F29
ROM:0F29 loc_FCF29:
ROM:0F29		 add	 sp, 6
ROM:0F2C		 test	 ax, ax
ROM:0F2E		 jnz	 short loc_FCF0D
ROM:0F30		 jmp	 COMMON_RETURN
ROM:0F30 sub_FCF06	 endp
ROM:0F30
ROM:0F30 ; ───────────────────────────────────────────────────────────────────────────
ROM:0F33		 db    0
ROM:0F34
ROM:0F34 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:0F34
ROM:0F34 ; Attributes: bp-based	frame
ROM:0F34
ROM:0F34 DO_AUTO_BOOT	 proc near		 ; CODE	XREF: F00_AUTO_BOOT+1Dp
ROM:0F34					 ; sub_FC2B1+55p
ROM:0F34
ROM:0F34 var_8		 = byte	ptr -8
ROM:0F34 var_6		 = word	ptr -6
ROM:0F34 arg_0		 = word	ptr  4
ROM:0F34
ROM:0F34		 push	 bp
ROM:0F35
ROM:0F35 loc_FCF35:
ROM:0F35		 mov	 bp, sp
ROM:0F37		 push	 di
ROM:0F38		 push	 si
ROM:0F39		 sub	 sp, 4
ROM:0F3C		 cmp	 [bp+arg_0], 0
ROM:0F40		 jnz	 short loc_FCF45
ROM:0F42		 jmp	 PROMPT_AND_DISPATCH
ROM:0F45 ; ───────────────────────────────────────────────────────────────────────────
ROM:0F45
ROM:0F45 loc_FCF45:				 ; CODE	XREF: DO_AUTO_BOOT+Cj
ROM:0F45		 mov	 di, offset aMonitorVersionA2_2	; "\nMonitor Version a2.2"
ROM:0F48		 push	 di
ROM:0F49		 call	 PRINT_STRING
ROM:0F4C		 add	 sp, 2
ROM:0F4F		 cmp	 POST_STATUS_01, 0
ROM:0F54		 jz	 short loc_FCF59
ROM:0F56		 jmp	 loc_FCFD0
ROM:0F59 ; ───────────────────────────────────────────────────────────────────────────
ROM:0F59
ROM:0F59 loc_FCF59:				 ; CODE	XREF: DO_AUTO_BOOT+20j
ROM:0F59		 mov	 di, offset aPressAnyKeyToInterruptB ; "\nPress	any key	to interrupt boot\n"
ROM:0F5C		 push	 di
ROM:0F5D		 call	 PRINT_STRING
ROM:0F60		 add	 sp, 2
ROM:0F63		 mov	 [bp+var_6], 1
ROM:0F68
ROM:0F68 loc_FCF68:				 ; CODE	XREF: DO_AUTO_BOOT+94j
ROM:0F68		 cmp	 [bp+var_6], 50h ; 'P'
ROM:0F6C		 ja	 short loc_FCFA3
ROM:0F6E
ROM:0F6E loc_FCF6E:
ROM:0F6E		 mov	 di, 64h ; 'd'
ROM:0F71		 push	 di
ROM:0F72		 call	 DELAY		 ; Time	on stack
ROM:0F75		 add	 sp, 2
ROM:0F78		 mov	 al, COMMAND_CHAR
ROM:0F7B		 cbw
ROM:0F7C		 push	 ax
ROM:0F7D		 mov	 di, 0FFFFh
ROM:0F80		 push	 di
ROM:0F81		 sub	 di, di
ROM:0F83		 push	 di
ROM:0F84		 call	 CHANNEL_RX
ROM:0F87		 add	 sp, 6
ROM:0F8A		 test	 ax, ax
ROM:0F8C		 jnz	 short loc_FCF92
ROM:0F8E		 sub	 di, di
ROM:0F90		 jmp	 short loc_FCF95
ROM:0F92 ; ───────────────────────────────────────────────────────────────────────────
ROM:0F92
ROM:0F92 loc_FCF92:				 ; CODE	XREF: DO_AUTO_BOOT+58j
ROM:0F92		 mov	 di, 1
ROM:0F95
ROM:0F95 loc_FCF95:				 ; CODE	XREF: DO_AUTO_BOOT+5Cj
ROM:0F95		 mov	 dx, di
ROM:0F97		 mov	 [bp+var_8], dl
ROM:0F9A		 test	 dl, dl
ROM:0F9C		 jz	 short loc_FCFC5
ROM:0F9E		 mov	 [bp+var_6], 51h ; 'Q'
ROM:0FA3
ROM:0FA3 loc_FCFA3:				 ; CODE	XREF: DO_AUTO_BOOT+38j
ROM:0FA3		 cmp	 [bp+var_8], 0
ROM:0FA7		 jnz	 short loc_FCFCA
ROM:0FA9		 mov	 di, offset aBootingFromHardDisk ; "\nBooting from Hard	Disk"
ROM:0FAC		 push	 di
ROM:0FAD		 call	 PRINT_STRING
ROM:0FB0		 add	 sp, 2
ROM:0FB3
ROM:0FB3 BOOT_CHOICE_HDD:			 ; CODE	XREF: DO_AUTO_BOOT+C2j
ROM:0FB3		 call	 IOP8089_CMD
ROM:0FB6		 mov	 di, 4		 ; 4 = Hard disk 0
ROM:0FB9		 push	 di
ROM:0FBA		 call	 DO_DISK_BOOT
ROM:0FBD		 add	 sp, 2
ROM:0FC0
ROM:0FC0 loc_FCFC0:				 ; CODE	XREF: DO_AUTO_BOOT+D1j
ROM:0FC0					 ; POST_NOT_FAILED+5j
ROM:0FC0		 call	 ERROR_CONSOLE
ROM:0FC3		 jmp	 short loc_FCFD0
ROM:0FC5 ; ───────────────────────────────────────────────────────────────────────────
ROM:0FC5
ROM:0FC5 loc_FCFC5:				 ; CODE	XREF: DO_AUTO_BOOT+68j
ROM:0FC5		 inc	 [bp+var_6]
ROM:0FC8		 jmp	 short loc_FCF68
ROM:0FCA ; ───────────────────────────────────────────────────────────────────────────
ROM:0FCA
ROM:0FCA loc_FCFCA:				 ; CODE	XREF: DO_AUTO_BOOT+73j
ROM:0FCA		 call	 sub_FD9A6
ROM:0FCD		 mov	 COMMAND_CHAR, al
ROM:0FD0
ROM:0FD0 loc_FCFD0:				 ; CODE	XREF: DO_AUTO_BOOT+22j
ROM:0FD0					 ; DO_AUTO_BOOT+8Fj ...
ROM:0FD0		 mov	 di, offset BOOT_PROMPT	; Enter	[1] to boot from Hard Disk
ROM:0FD0					 ; Enter [2] to	boot from Floppy Disk
ROM:0FD0					 ; Enter [3] to	enter Monitor
ROM:0FD3		 push	 di
ROM:0FD4		 call	 PRINT_STRING
ROM:0FD7		 add	 sp, 2
ROM:0FDA		 call	 READ_CHAR_TO_AL
ROM:0FDD		 mov	 COMMAND_CHAR, al
ROM:0FE0		 cmp	 POST_STATUS_01, 0
ROM:0FE5		 jz	 short loc_FCFEA
ROM:0FE7		 call	 CHANNEL_0_INIT
ROM:0FEA
ROM:0FEA loc_FCFEA:				 ; CODE	XREF: DO_AUTO_BOOT+B1j
ROM:0FEA		 mov	 al, COMMAND_CHAR
ROM:0FED		 cbw
ROM:0FEE		 cmp	 ax, 27		 ; ESC
ROM:0FF1		 jz	 short sub_FD024
ROM:0FF3		 cmp	 ax, '1'
ROM:0FF6		 jz	 short BOOT_CHOICE_HDD
ROM:0FF8		 cmp	 ax, '2'
ROM:0FFB		 jz	 short BOOT_CHOICE_FDD
ROM:0FFD		 cmp	 ax, '3'
ROM:1000		 jz	 short BOOT_CHOICE_MONITOR
ROM:1002		 cmp	 ax, '?'
ROM:1005		 jnz	 short loc_FCFC0
ROM:1007		 jmp	 short PROMPT_AND_DISPATCH
ROM:1009 ; ───────────────────────────────────────────────────────────────────────────
ROM:1009
ROM:1009 BOOT_CHOICE_FDD:			 ; CODE	XREF: DO_AUTO_BOOT+C7j
ROM:1009		 call	 IOP8089_CMD
ROM:100C		 sub	 di, di		 ; 0 = Floppy disk 0
ROM:100E		 push	 di
ROM:100F		 call	 DO_DISK_BOOT
ROM:1012
ROM:1012 loc_FD012:				 ; CODE	XREF: sub_FD04C+7j
ROM:1012		 add	 sp, 2
ROM:1015		 jmp	 short PROMPT_AND_DISPATCH
ROM:1015 DO_AUTO_BOOT	 endp
ROM:1015
ROM:1017
ROM:1017 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1017
ROM:1017
ROM:1017 DISPATCH_SOME_FUNC proc near		 ; CODE	XREF: PROMPT_AND_DISPATCH+1Cj
ROM:1017		 shl	 ax, 1
ROM:1019		 xchg	 ax, bx
ROM:101A		 jmp	 cs:SOME_FUNC_VECTOR[bx]
ROM:101A DISPATCH_SOME_FUNC endp
ROM:101A
ROM:101F
ROM:101F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:101F
ROM:101F
ROM:101F BOOT_CHOICE_MONITOR proc near		 ; CODE	XREF: DO_AUTO_BOOT+CCj
ROM:101F		 call	 IOP8089_CMD
ROM:1022		 jmp	 short PROMPT_AND_DISPATCH
ROM:1022 BOOT_CHOICE_MONITOR endp
ROM:1022
ROM:1024
ROM:1024 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1024
ROM:1024
ROM:1024 sub_FD024	 proc near		 ; CODE	XREF: DO_AUTO_BOOT+BDj
ROM:1024		 cmp	 POST_STATUS_02, 0
ROM:1029		 jz	 short POST_NOT_FAILED
ROM:102B		 call	 POST_FAILED
ROM:102E		 jmp	 short loc_FCFD0
ROM:102E sub_FD024	 endp
ROM:102E
ROM:1030
ROM:1030 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1030
ROM:1030
ROM:1030 POST_NOT_FAILED proc near		 ; CODE	XREF: sub_FD024+5j
ROM:1030		 mov	 COMMAND_CHAR, 20h ; ' '
ROM:1035		 jmp	 loc_FCFC0
ROM:1035 POST_NOT_FAILED endp
ROM:1035
ROM:1038
ROM:1038 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1038
ROM:1038
ROM:1038 sub_FD038	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1038					 ; DATA	XREF: ROM:SOME_FUNC_VECTORo
ROM:1038		 call	 sub_FD85A
ROM:103B		 jmp	 short PROMPT_AND_DISPATCH
ROM:103B sub_FD038	 endp
ROM:103B
ROM:103D
ROM:103D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:103D
ROM:103D
ROM:103D sub_FD03D	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:103D					 ; DATA	XREF: ROM:109Co
ROM:103D		 call	 sub_FD554
ROM:1040		 jmp	 short PROMPT_AND_DISPATCH
ROM:1040 sub_FD03D	 endp
ROM:1040
ROM:1042
ROM:1042 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1042
ROM:1042
ROM:1042 sub_FD042	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1042					 ; DATA	XREF: ROM:10A0o
ROM:1042		 call	 sub_FD9DE
ROM:1045		 jmp	 short PROMPT_AND_DISPATCH
ROM:1045 sub_FD042	 endp
ROM:1045
ROM:1047
ROM:1047 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1047
ROM:1047
ROM:1047 sub_FD047	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1047					 ; DATA	XREF: ROM:10A6o
ROM:1047		 call	 sub_FCC14
ROM:104A		 jmp	 short PROMPT_AND_DISPATCH
ROM:104A sub_FD047	 endp
ROM:104A
ROM:104C
ROM:104C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:104C
ROM:104C
ROM:104C sub_FD04C	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:104C					 ; DATA	XREF: ROM:10AAo
ROM:104C		 mov	 di, 1
ROM:104F		 push	 di
ROM:1050
ROM:1050 loc_FD050:				 ; CODE	XREF: sub_FD064+3j
ROM:1050		 call	 HANDLE_IO_COMMAND
ROM:1053		 jmp	 short loc_FD012
ROM:1053 sub_FD04C	 endp
ROM:1053
ROM:1055
ROM:1055 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1055
ROM:1055
ROM:1055 sub_FD055	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1055					 ; DATA	XREF: ROM:10AEo
ROM:1055		 call	 sub_FC69A
ROM:1058		 jmp	 short PROMPT_AND_DISPATCH
ROM:1058 sub_FD055	 endp
ROM:1058
ROM:105A
ROM:105A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:105A
ROM:105A
ROM:105A sub_FD05A	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:105A					 ; DATA	XREF: ROM:10B0o
ROM:105A		 call	 sub_FD906
ROM:105D		 jmp	 short PROMPT_AND_DISPATCH
ROM:105D sub_FD05A	 endp
ROM:105D
ROM:105F
ROM:105F ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:105F
ROM:105F
ROM:105F sub_FD05F	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:105F					 ; DATA	XREF: ROM:10B2o
ROM:105F		 call	 sub_FD0CE
ROM:1062		 jmp	 short PROMPT_AND_DISPATCH
ROM:1062 sub_FD05F	 endp
ROM:1062
ROM:1064
ROM:1064 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1064
ROM:1064
ROM:1064 sub_FD064	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1064					 ; DATA	XREF: ROM:10B6o
ROM:1064		 sub	 di, di
ROM:1066		 push	 di
ROM:1067		 jmp	 short loc_FD050
ROM:1067 sub_FD064	 endp
ROM:1067
ROM:1069
ROM:1069 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1069
ROM:1069
ROM:1069 DUMP_REGISTERS	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1069					 ; DATA	XREF: ROM:10BCo
ROM:1069		 call	 DO_DUMP_REGISTERS
ROM:106C		 jmp	 short PROMPT_AND_DISPATCH
ROM:106C DUMP_REGISTERS	 endp
ROM:106C
ROM:106E
ROM:106E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:106E
ROM:106E
ROM:106E sub_FD06E	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:106E					 ; DATA	XREF: ROM:10BEo
ROM:106E		 call	 sub_FCC56
ROM:1071		 jmp	 short PROMPT_AND_DISPATCH
ROM:1071 sub_FD06E	 endp
ROM:1071
ROM:1073
ROM:1073 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1073
ROM:1073
ROM:1073 sub_FD073	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1073					 ; DATA	XREF: ROM:10C8o
ROM:1073		 call	 CHANNEL_IO
ROM:1073 sub_FD073	 endp
ROM:1073
ROM:1076
ROM:1076 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1076
ROM:1076
ROM:1076 PROMPT_AND_DISPATCH proc near		 ; CODE	XREF: DO_AUTO_BOOT+Ej
ROM:1076					 ; DO_AUTO_BOOT+D3j ...
ROM:1076		 mov	 di, offset PROMPT_STR ; "\n< A, B, D, G, I, K,	L, M, O, R, S, X >"...
ROM:1079		 push	 di
ROM:107A		 call	 PRINT_STRING
ROM:107D		 add	 sp, 2
ROM:1080		 call	 READ_CHAR_TO_AL
ROM:1083		 mov	 COMMAND_CHAR, al
ROM:1086		 mov	 al, COMMAND_CHAR
ROM:1089		 cbw
ROM:108A		 sub	 ax, 'A'
ROM:108D		 cmp	 ax, 17h
ROM:1090		 ja	 short NEXT_ONE
ROM:1092		 jmp	 DISPATCH_SOME_FUNC
ROM:1092 PROMPT_AND_DISPATCH endp
ROM:1092
ROM:1095
ROM:1095 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1095
ROM:1095
ROM:1095 NEXT_ONE	 proc near		 ; CODE	XREF: DISPATCH_SOME_FUNC+3j
ROM:1095					 ; PROMPT_AND_DISPATCH+1Aj
ROM:1095					 ; DATA	XREF: ...
ROM:1095		 call	 ERROR_CONSOLE
ROM:1098		 jmp	 short PROMPT_AND_DISPATCH
ROM:1098 NEXT_ONE	 endp
ROM:1098
ROM:1098 ; ───────────────────────────────────────────────────────────────────────────
ROM:109A SOME_FUNC_VECTOR dw offset sub_FD038	 ; DATA	XREF: DISPATCH_SOME_FUNC+3r
ROM:109C		 dw offset sub_FD03D
ROM:109E		 dw offset NEXT_ONE
ROM:10A0		 dw offset sub_FD042
ROM:10A2		 dw offset NEXT_ONE
ROM:10A4		 dw offset NEXT_ONE
ROM:10A6		 dw offset sub_FD047
ROM:10A8		 dw offset NEXT_ONE
ROM:10AA		 dw offset sub_FD04C
ROM:10AC		 dw offset NEXT_ONE
ROM:10AE		 dw offset sub_FD055
ROM:10B0		 dw offset sub_FD05A
ROM:10B2		 dw offset sub_FD05F
ROM:10B4		 dw offset NEXT_ONE
ROM:10B6		 dw offset sub_FD064
ROM:10B8		 dw offset NEXT_ONE
ROM:10BA		 dw offset NEXT_ONE
ROM:10BC		 dw offset DUMP_REGISTERS
ROM:10BE		 dw offset sub_FD06E
ROM:10C0		 dw offset NEXT_ONE
ROM:10C2		 dw offset NEXT_ONE
ROM:10C4		 dw offset NEXT_ONE
ROM:10C6		 dw offset NEXT_ONE
ROM:10C8		 dw offset sub_FD073
ROM:10CA ; ───────────────────────────────────────────────────────────────────────────
ROM:10CA		 jmp	 PROMPT_AND_DISPATCH
ROM:10CA ; ───────────────────────────────────────────────────────────────────────────
ROM:10CD		 db    0
ROM:10CE
ROM:10CE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:10CE
ROM:10CE ; Attributes: bp-based	frame
ROM:10CE
ROM:10CE sub_FD0CE	 proc near		 ; CODE	XREF: sub_FD05Fp
ROM:10CE
ROM:10CE var_E		 = word	ptr -0Eh
ROM:10CE var_C		 = word	ptr -0Ch
ROM:10CE var_A		 = word	ptr -0Ah
ROM:10CE var_8		 = word	ptr -8
ROM:10CE var_6		 = word	ptr -6
ROM:10CE
ROM:10CE		 push	 bp
ROM:10CF		 mov	 bp, sp
ROM:10D1		 push	 di
ROM:10D2		 push	 si
ROM:10D3		 sub	 sp, 0Ah
ROM:10D6		 mov	 di, 1
ROM:10D9		 push	 di
ROM:10DA		 call	 PRINT_STH
ROM:10DD		 add	 sp, 2
ROM:10E0		 call	 sub_FDC68
ROM:10E3		 test	 ax, ax
ROM:10E5		 jz	 short loc_FD13C
ROM:10E7		 cmp	 COMMAND_CHAR, 0Dh
ROM:10EC		 jnz	 short loc_FD0F3
ROM:10EE
ROM:10EE loc_FD0EE:				 ; CODE	XREF: sub_FD0CE+3Fj
ROM:10EE		 call	 ERROR_CONSOLE
ROM:10F1		 jmp	 short loc_FD13C
ROM:10F3 ; ───────────────────────────────────────────────────────────────────────────
ROM:10F3
ROM:10F3 loc_FD0F3:				 ; CODE	XREF: sub_FD0CE+1Ej
ROM:10F3		 mov	 di, SYSCALL_ARG_OFF
ROM:10F7		 mov	 [bp+var_8], di
ROM:10FA		 mov	 di, SYSCALL_ARG_SEG
ROM:10FE		 mov	 [bp+var_6], di
ROM:1101		 call	 sub_FDC68
ROM:1104		 test	 ax, ax
ROM:1106		 jz	 short loc_FD13C
ROM:1108		 cmp	 COMMAND_CHAR, 0Dh
ROM:110D		 jz	 short loc_FD0EE
ROM:110F		 mov	 di, SYSCALL_ARG_OFF
ROM:1113		 mov	 [bp+var_C], di
ROM:1116		 mov	 di, SYSCALL_ARG_SEG
ROM:111A		 mov	 [bp+var_A], di
ROM:111D		 lea	 di, [bp+var_E]
ROM:1120		 push	 di
ROM:1121		 call	 SET_VALUE
ROM:1124		 add	 sp, 2
ROM:1127		 test	 ax, ax
ROM:1129		 jz	 short loc_FD13C
ROM:112B		 push	 [bp+var_E]
ROM:112E		 lea	 di, [bp+var_C]
ROM:1131		 push	 di
ROM:1132		 lea	 di, [bp+var_8]
ROM:1135		 push	 di
ROM:1136		 call	 sub_FD140
ROM:1139		 add	 sp, 6
ROM:113C
ROM:113C loc_FD13C:				 ; CODE	XREF: sub_FD0CE+17j
ROM:113C					 ; sub_FD0CE+23j ...
ROM:113C		 jmp	 COMMON_RETURN
ROM:113C sub_FD0CE	 endp
ROM:113C
ROM:113C ; ───────────────────────────────────────────────────────────────────────────
ROM:113F		 db    0
ROM:1140
ROM:1140 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1140
ROM:1140 ; Attributes: bp-based	frame
ROM:1140
ROM:1140 sub_FD140	 proc near		 ; CODE	XREF: BOOT_TYPE_00_CMP86+11p
ROM:1140					 ; BOOT_TYPE_01_OASIS:loc_FC61Dp ...
ROM:1140
ROM:1140 arg_0		 = word	ptr  4
ROM:1140 arg_2		 = word	ptr  6
ROM:1140 arg_4		 = word	ptr  8
ROM:1140
ROM:1140		 push	 bp
ROM:1141		 mov	 bp, sp
ROM:1143		 push	 ds
ROM:1144		 push	 di
ROM:1145		 push	 si
ROM:1146		 push	 es
ROM:1147		 mov	 di, [bp+arg_2]
ROM:114A		 mov	 es, word ptr [di+2]
ROM:114D		 mov	 di, [di]
ROM:114F		 mov	 bx, [bp+arg_0]
ROM:1152		 mov	 si, [bx]
ROM:1154		 mov	 ds, word ptr [bx+2]
ROM:1157		 mov	 cx, [bp+arg_4]
ROM:115A		 cld
ROM:115B		 rep movsb
ROM:115D		 pop	 es
ROM:115E		 pop	 si
ROM:115F		 pop	 di
ROM:1160		 pop	 ds
ROM:1161		 pop	 bp
ROM:1162		 retn
ROM:1162 sub_FD140	 endp
ROM:1162
ROM:1162 ; ───────────────────────────────────────────────────────────────────────────
ROM:1163		 db    0
ROM:1164
ROM:1164 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1164
ROM:1164 ; Attributes: bp-based	frame
ROM:1164
ROM:1164 HANDLE_IO_COMMAND proc	near		 ; CODE	XREF: sub_FD04C:loc_FD050p
ROM:1164
ROM:1164 IO_VALUE	 = word	ptr -0Ah
ROM:1164 IOPORT_ADDR	 = word	ptr -8
ROM:1164 WANT_WORD_IO	 = byte	ptr -6
ROM:1164 arg_0		 = byte	ptr  4
ROM:1164
ROM:1164		 push	 bp
ROM:1165		 mov	 bp, sp
ROM:1167		 push	 di
ROM:1168		 push	 si
ROM:1169		 sub	 sp, 6
ROM:116C		 mov	 [bp+WANT_WORD_IO], 1
ROM:1170		 mov	 di, 1
ROM:1173		 push	 di
ROM:1174		 call	 PRINT_STH
ROM:1177		 add	 sp, 2
ROM:117A		 call	 READ_CHAR_TO_AL
ROM:117D		 mov	 COMMAND_CHAR, al
ROM:1180		 cmp	 COMMAND_CHAR, 'B' ; 'B' Command - Byte
ROM:1185		 jnz	 short NOT_B
ROM:1187		 mov	 [bp+WANT_WORD_IO], 0
ROM:118B
ROM:118B W_COMMAND:				 ; CODE	XREF: HANDLE_IO_COMMAND+6Cj
ROM:118B		 mov	 di, 1
ROM:118E		 push	 di
ROM:118F		 call	 PRINT_STH
ROM:1192		 add	 sp, 2
ROM:1195		 lea	 di, [bp+IOPORT_ADDR]
ROM:1198		 push	 di
ROM:1199		 call	 SET_VALUE
ROM:119C		 add	 sp, 2
ROM:119F		 test	 ax, ax
ROM:11A1		 jz	 short loc_FD1D5
ROM:11A3		 mov	 di, 1
ROM:11A6		 push	 di
ROM:11A7		 call	 PRINT_STH
ROM:11AA		 add	 sp, 2
ROM:11AD		 cmp	 [bp+arg_0], 0
ROM:11B1		 jz	 short loc_FD1E7
ROM:11B3		 cmp	 [bp+WANT_WORD_IO], 0
ROM:11B7		 jz	 short DO_BYTE_IN
ROM:11B9		 push	 [bp+IOPORT_ADDR]
ROM:11BC		 call	 DO_INW
ROM:11BF		 add	 sp, 2
ROM:11C2		 push	 ax
ROM:11C3		 call	 sub_FD2E6
ROM:11C6
ROM:11C6 loc_FD1C6:				 ; CODE	XREF: HANDLE_IO_COMMAND+81j
ROM:11C6		 add	 sp, 2
ROM:11C9		 jmp	 short loc_FD1D5
ROM:11CB ; ───────────────────────────────────────────────────────────────────────────
ROM:11CB
ROM:11CB NOT_B:					 ; CODE	XREF: HANDLE_IO_COMMAND+21j
ROM:11CB		 cmp	 COMMAND_CHAR, 'W' ; 'W' Command - Word
ROM:11D0		 jz	 short W_COMMAND
ROM:11D2		 call	 ERROR_CONSOLE
ROM:11D5
ROM:11D5 loc_FD1D5:				 ; CODE	XREF: HANDLE_IO_COMMAND+3Dj
ROM:11D5					 ; HANDLE_IO_COMMAND+65j ...
ROM:11D5		 jmp	 COMMON_RETURN
ROM:11D8 ; ───────────────────────────────────────────────────────────────────────────
ROM:11D8
ROM:11D8 DO_BYTE_IN:				 ; CODE	XREF: HANDLE_IO_COMMAND+53j
ROM:11D8		 push	 [bp+IOPORT_ADDR]
ROM:11DB		 call	 DO_INB
ROM:11DE		 add	 sp, 2
ROM:11E1		 push	 ax
ROM:11E2		 call	 PRINT_HEX_STAT
ROM:11E5		 jmp	 short loc_FD1C6
ROM:11E7 ; ───────────────────────────────────────────────────────────────────────────
ROM:11E7
ROM:11E7 loc_FD1E7:				 ; CODE	XREF: HANDLE_IO_COMMAND+4Dj
ROM:11E7		 lea	 di, [bp+IO_VALUE]
ROM:11EA		 push	 di
ROM:11EB		 call	 SET_VALUE
ROM:11EE		 add	 sp, 2
ROM:11F1		 test	 ax, ax
ROM:11F3		 jz	 short loc_FD1D5
ROM:11F5		 cmp	 [bp+WANT_WORD_IO], 0
ROM:11F9		 jz	 short DO_BYTE_OUT
ROM:11FB		 push	 [bp+IO_VALUE]
ROM:11FE		 push	 [bp+IOPORT_ADDR]
ROM:1201		 call	 DO_OUTW
ROM:1204
ROM:1204 loc_FD204:				 ; CODE	XREF: HANDLE_IO_COMMAND+AEj
ROM:1204		 add	 sp, 4
ROM:1207		 jmp	 short loc_FD1D5
ROM:1209 ; ───────────────────────────────────────────────────────────────────────────
ROM:1209
ROM:1209 DO_BYTE_OUT:				 ; CODE	XREF: HANDLE_IO_COMMAND+95j
ROM:1209		 push	 [bp+IO_VALUE]
ROM:120C		 push	 [bp+IOPORT_ADDR]
ROM:120F		 call	 DO_OUTB
ROM:1212		 jmp	 short loc_FD204
ROM:1212 HANDLE_IO_COMMAND endp
ROM:1212
ROM:1214
ROM:1214 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1214
ROM:1214 ; Attributes: bp-based	frame
ROM:1214
ROM:1214 PRINT_STRING	 proc near		 ; CODE	XREF: POST_FINISH+E0p
ROM:1214					 ; POST_FAILED+23p ...
ROM:1214
ROM:1214 arg_0		 = word	ptr  4
ROM:1214
ROM:1214		 push	 bp
ROM:1215		 mov	 bp, sp
ROM:1217		 push	 di
ROM:1218		 push	 si
ROM:1219		 push	 [bp+arg_0]
ROM:121C		 sub	 di, di
ROM:121E		 push	 di
ROM:121F		 push	 di
ROM:1220		 call	 DO_PUTS
ROM:1223		 add	 sp, 6
ROM:1226		 jmp	 COMMON_RETURN
ROM:1226 PRINT_STRING	 endp
ROM:1226
ROM:1226 ; ───────────────────────────────────────────────────────────────────────────
ROM:1229		 db    0
ROM:122A
ROM:122A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:122A
ROM:122A ; Attributes: bp-based	frame
ROM:122A
ROM:122A DO_PUTS	 proc near		 ; CODE	XREF: F07_IO_PUTS+6p
ROM:122A					 ; PRINT_STRING+Cp
ROM:122A
ROM:122A var_8		 = byte	ptr -8
ROM:122A STR_LEN_ZERO	 = word	ptr -6
ROM:122A IO_CHAN	 = word	ptr  4
ROM:122A STR_SEG	 = word	ptr  6
ROM:122A STR_OFF	 = word	ptr  8
ROM:122A
ROM:122A		 push	 bp
ROM:122B		 mov	 bp, sp
ROM:122D		 push	 di
ROM:122E		 push	 si
ROM:122F		 sub	 sp, 4
ROM:1232		 mov	 [bp+STR_LEN_ZERO], 0
ROM:1237		 mov	 di, [bp+STR_SEG]
ROM:123A		 mov	 SYSCALL_ARG_SEG, di
ROM:123E		 mov	 di, [bp+STR_OFF]
ROM:1241		 mov	 SYSCALL_ARG_OFF, di
ROM:1245		 jmp	 short loc_FD28D
ROM:1247 ; ───────────────────────────────────────────────────────────────────────────
ROM:1247
ROM:1247 loc_FD247:				 ; CODE	XREF: DO_PUTS+54j
ROM:1247					 ; DO_PUTS+5Aj
ROM:1247		 push	 [bp+STR_OFF]
ROM:124A		 push	 [bp+STR_SEG]
ROM:124D		 push	 [bp+STR_LEN_ZERO]
ROM:1250		 push	 [bp+IO_CHAN]
ROM:1253		 call	 CHANNEL_TX
ROM:1256		 add	 sp, 8
ROM:1259		 cmp	 [bp+var_8], 0Ah
ROM:125D		 jnz	 short loc_FD26C
ROM:125F		 push	 [bp+IO_CHAN]
ROM:1262		 call	 DO_IO_NEWLINE
ROM:1265		 add	 sp, 2
ROM:1268		 inc	 SYSCALL_ARG_OFF
ROM:126C
ROM:126C loc_FD26C:				 ; CODE	XREF: DO_PUTS+33j
ROM:126C		 mov	 di, SYSCALL_ARG_OFF
ROM:1270		 mov	 [bp+STR_OFF], di
ROM:1273		 mov	 [bp+STR_LEN_ZERO], 0
ROM:1278		 jmp	 short loc_FD28D
ROM:127A ; ───────────────────────────────────────────────────────────────────────────
ROM:127A
ROM:127A loc_FD27A:				 ; CODE	XREF: DO_PUTS+6Bj
ROM:127A		 cmp	 [bp+var_8], 0Ah
ROM:127E		 jz	 short loc_FD247
ROM:1280		 cmp	 [bp+STR_LEN_ZERO], 0Ah
ROM:1284		 jge	 short loc_FD247
ROM:1286		 inc	 [bp+STR_LEN_ZERO]
ROM:1289		 inc	 SYSCALL_ARG_OFF
ROM:128D
ROM:128D loc_FD28D:				 ; CODE	XREF: DO_PUTS+1Bj
ROM:128D					 ; DO_PUTS+4Ej
ROM:128D		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:1290		 mov	 [bp+var_8], al
ROM:1293		 test	 al, al
ROM:1295		 jnz	 short loc_FD27A
ROM:1297		 push	 [bp+STR_OFF]
ROM:129A		 push	 [bp+STR_SEG]
ROM:129D		 push	 [bp+STR_LEN_ZERO]
ROM:12A0		 push	 [bp+IO_CHAN]
ROM:12A3		 call	 CHANNEL_TX
ROM:12A6		 add	 sp, 8
ROM:12A9		 jmp	 COMMON_RETURN
ROM:12A9 DO_PUTS	 endp
ROM:12A9
ROM:12AC
ROM:12AC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:12AC
ROM:12AC ; Attributes: bp-based	frame
ROM:12AC
ROM:12AC NEWLINE	 proc near		 ; CODE	XREF: POST_FINISH+B5p
ROM:12AC					 ; AFTER_JUMP_TABLE:loc_FC670p	...
ROM:12AC		 push	 bp
ROM:12AD		 mov	 bp, sp
ROM:12AF		 push	 di
ROM:12B0		 push	 si
ROM:12B1		 sub	 di, di
ROM:12B3		 push	 di
ROM:12B4		 call	 DO_IO_NEWLINE
ROM:12B7		 add	 sp, 2
ROM:12BA		 jmp	 COMMON_RETURN
ROM:12BA NEWLINE	 endp
ROM:12BA
ROM:12BA ; ───────────────────────────────────────────────────────────────────────────
ROM:12BD		 db    0
ROM:12BE
ROM:12BE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:12BE
ROM:12BE ; Attributes: bp-based	frame
ROM:12BE
ROM:12BE DO_IO_NEWLINE	 proc near		 ; CODE	XREF: F06_IO_NEWLINE+1p
ROM:12BE					 ; DO_PUTS+38p	...
ROM:12BE
ROM:12BE var_6		 = word	ptr -6
ROM:12BE IO_CHAN	 = word	ptr  4
ROM:12BE
ROM:12BE		 push	 bp
ROM:12BF		 mov	 bp, sp
ROM:12C1		 push	 di
ROM:12C2		 push	 si
ROM:12C3		 sub	 sp, 2
ROM:12C6		 mov	 byte ptr [bp+var_6], 0Dh
ROM:12CA		 mov	 byte ptr [bp+var_6+1],	0Ah
ROM:12CE		 lea	 di, [bp+var_6]
ROM:12D1		 push	 di
ROM:12D2		 sub	 di, di
ROM:12D4		 push	 di
ROM:12D5		 mov	 di, 2
ROM:12D8		 push	 di
ROM:12D9		 push	 [bp+IO_CHAN]
ROM:12DC		 call	 CHANNEL_TX
ROM:12DF		 add	 sp, 8
ROM:12E2		 jmp	 COMMON_RETURN
ROM:12E2 DO_IO_NEWLINE	 endp
ROM:12E2
ROM:12E2 ; ───────────────────────────────────────────────────────────────────────────
ROM:12E5		 db    0
ROM:12E6
ROM:12E6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:12E6
ROM:12E6 ; Attributes: bp-based	frame
ROM:12E6
ROM:12E6 sub_FD2E6	 proc near		 ; CODE	XREF: HANDLE_IO_COMMAND+5Fp
ROM:12E6					 ; DO_DUMP_REGISTERS+48p ...
ROM:12E6
ROM:12E6 arg_0		 = word	ptr  4
ROM:12E6
ROM:12E6		 push	 bp
ROM:12E7		 mov	 bp, sp
ROM:12E9		 push	 di
ROM:12EA		 push	 si
ROM:12EB		 mov	 di, [bp+arg_0]
ROM:12EE		 and	 di, 0FF00h
ROM:12F2		 mov	 cx, 8
ROM:12F5		 sar	 di, cl
ROM:12F7		 push	 di
ROM:12F8		 call	 PRINT_HEX_STAT
ROM:12FB		 add	 sp, 2
ROM:12FE		 mov	 di, [bp+arg_0]
ROM:1301		 and	 di, 0FFh
ROM:1305		 push	 di
ROM:1306		 call	 PRINT_HEX_STAT
ROM:1309		 add	 sp, 2
ROM:130C		 jmp	 COMMON_RETURN
ROM:130C sub_FD2E6	 endp
ROM:130C
ROM:130C ; ───────────────────────────────────────────────────────────────────────────
ROM:130F		 db    0
ROM:1310
ROM:1310 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1310
ROM:1310 ; Attributes: bp-based	frame
ROM:1310
ROM:1310 PRINT_HEX_STAT	 proc near		 ; CODE	XREF: BOOT_FAILED+14p
ROM:1310					 ; HANDLE_IO_COMMAND+7Ep ...
ROM:1310
ROM:1310 var_8		 = word	ptr -8
ROM:1310 var_6		 = word	ptr -6
ROM:1310 arg_0		 = byte	ptr  4
ROM:1310
ROM:1310		 push	 bp
ROM:1311		 mov	 bp, sp
ROM:1313		 push	 di
ROM:1314		 push	 si
ROM:1315		 sub	 sp, 4
ROM:1318		 lea	 di, [bp+var_8]
ROM:131B		 push	 di
ROM:131C		 lea	 di, [bp+var_6]
ROM:131F		 push	 di
ROM:1320		 mov	 al, [bp+arg_0]
ROM:1323		 cbw
ROM:1324		 push	 ax
ROM:1325		 call	 FORMAT_HEX_NUMBER
ROM:1328		 add	 sp, 6
ROM:132B		 lea	 di, [bp+var_6]
ROM:132E		 push	 di
ROM:132F		 call	 PUTCHAR_CONSOLE
ROM:1332		 add	 sp, 2
ROM:1335		 lea	 di, [bp+var_8]
ROM:1338		 push	 di
ROM:1339		 call	 PUTCHAR_CONSOLE
ROM:133C		 add	 sp, 2
ROM:133F		 jmp	 COMMON_RETURN
ROM:133F PRINT_HEX_STAT	 endp
ROM:133F
ROM:1342
ROM:1342 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1342
ROM:1342 ; Attributes: bp-based	frame
ROM:1342
ROM:1342 sub_FD342	 proc near		 ; CODE	XREF: sub_FD554+43p
ROM:1342					 ; sub_FD554:loc_FD612p ...
ROM:1342		 push	 bp
ROM:1343		 mov	 bp, sp
ROM:1345		 push	 di
ROM:1346		 push	 si
ROM:1347		 call	 NEWLINE
ROM:134A		 mov	 di, 2
ROM:134D		 push	 di
ROM:134E		 call	 PRINT_STH
ROM:1351		 add	 sp, 2
ROM:1354		 jmp	 COMMON_RETURN
ROM:1354 sub_FD342	 endp
ROM:1354
ROM:1354 ; ───────────────────────────────────────────────────────────────────────────
ROM:1357		 db    0
ROM:1358
ROM:1358 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1358
ROM:1358 ; Attributes: bp-based	frame
ROM:1358
ROM:1358 PRINT_STH	 proc near		 ; CODE	XREF: sub_FC69A+9p
ROM:1358					 ; sub_FCC14+9p ...
ROM:1358
ROM:1358 var_8		 = word	ptr -8
ROM:1358 var_6		 = word	ptr -6
ROM:1358 arg_0		 = word	ptr  4
ROM:1358
ROM:1358		 push	 bp
ROM:1359		 mov	 bp, sp
ROM:135B		 push	 di
ROM:135C		 push	 si
ROM:135D		 sub	 sp, 4
ROM:1360		 mov	 byte ptr [bp+var_6], 20h ; ' '
ROM:1364		 mov	 [bp+var_8], 1
ROM:1369		 jmp	 short loc_FD378
ROM:136B ; ───────────────────────────────────────────────────────────────────────────
ROM:136B
ROM:136B loc_FD36B:				 ; CODE	XREF: PRINT_STH+26j
ROM:136B		 lea	 di, [bp+var_6]
ROM:136E		 push	 di
ROM:136F		 call	 PUTCHAR_CONSOLE
ROM:1372		 add	 sp, 2
ROM:1375		 inc	 [bp+var_8]
ROM:1378
ROM:1378 loc_FD378:				 ; CODE	XREF: PRINT_STH+11j
ROM:1378		 mov	 di, [bp+arg_0]
ROM:137B		 cmp	 [bp+var_8], di
ROM:137E		 jle	 short loc_FD36B
ROM:1380		 jmp	 COMMON_RETURN
ROM:1380 PRINT_STH	 endp
ROM:1380
ROM:1380 ; ───────────────────────────────────────────────────────────────────────────
ROM:1383		 db    0
ROM:1384
ROM:1384 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1384
ROM:1384 ; Attributes: bp-based	frame
ROM:1384
ROM:1384 CHANNEL_RX	 proc near		 ; CODE	XREF: F01_05_IO_CHANNEL_STATUS+7p
ROM:1384					 ; DO_GETCHAR+15p ...
ROM:1384
ROM:1384 IO_CHAN	 = byte	ptr  4
ROM:1384 arg_2		 = word	ptr  6
ROM:1384 arg_4		 = word	ptr  8
ROM:1384
ROM:1384		 push	 bp
ROM:1385		 mov	 bp, sp
ROM:1387		 push	 si
ROM:1388		 push	 di
ROM:1389		 mov	 bx, [bp+arg_4]
ROM:138C		 mov	 al, 16h	 ; sizeof(CHAN_REGS)
ROM:138E		 mul	 [bp+IO_CHAN]
ROM:1391		 lea	 si, IO_REGS
ROM:1395		 add	 si, ax
ROM:1397		 cmp	 [bp+arg_2], 0FFFFh
ROM:139C		 jz	 short loc_FD40E
ROM:139E		 xor	 cx, cx
ROM:13A0		 cmp	 cx, [bp+arg_2]
ROM:13A3		 jnb	 short loc_FD405
ROM:13A5		 mov	 dx, [si+CHAN_REGS.CHAN_RX_LEN]	; Receive Data Buffer Length Register
ROM:13A8		 mov	 ax, [si+CHAN_REGS.CHAN_RX_OUT]	; Receive Buffer Output	Pointer	Register
ROM:13AB		 mov	 di, word ptr [si+CHAN_REGS.CHAN_RX_LO]	; Receive Data Buffer Address Register LO
ROM:13AE		 add	 di, ax
ROM:13B0
ROM:13B0 loc_FD3B0:				 ; CODE	XREF: CHANNEL_RX+34j
ROM:13B0					 ; CHANNEL_RX+39j ...
ROM:13B0		 call	 WAIT_FOR_COMMAND_DONE ; Wait until 0x80 (command valid) bit falls off
ROM:13B3		 mov	 ax, [si+CHAN_REGS.CHAN_RX_IN] ; Receive Buffer	Input Pointer Register
ROM:13B6		 test	 ax, ax
ROM:13B8		 js	 short loc_FD3B0
ROM:13BA		 cmp	 ax, [si+CHAN_REGS.CHAN_RX_OUT]	; Receive Buffer Output	Pointer	Register
ROM:13BD		 jz	 short loc_FD3B0
ROM:13BF		 mov	 ax, [si+CHAN_REGS.CHAN_STAT] ;	Channel	Status Register
ROM:13C2		 and	 ax, 0F0h
ROM:13C5		 jz	 short loc_FD3D2
ROM:13C7		 mov	 [si+CHAN_REGS.CHAN_CMD], 89h ;	'ë' ; Command 9 = Reset Error Condition
ROM:13CB		 call	 INC_NEW_CMD_REG
ROM:13CE		 mov	 al, 0
ROM:13D0		 jmp	 short loc_FD421
ROM:13D2 ; ───────────────────────────────────────────────────────────────────────────
ROM:13D2
ROM:13D2 loc_FD3D2:				 ; CODE	XREF: CHANNEL_RX+41j
ROM:13D2					 ; CHANNEL_RX+76j
ROM:13D2		 mov	 al, [di]
ROM:13D4		 and	 al, 7Fh
ROM:13D6		 inc	 [si+CHAN_REGS.CHAN_RX_OUT] ; Receive Buffer Output Pointer Register
ROM:13D9		 inc	 di
ROM:13DA		 cmp	 [si+CHAN_REGS.CHAN_RX_OUT], dx	; Receive Buffer Output	Pointer	Register
ROM:13DD		 jb	 short loc_FD3E7
ROM:13DF		 mov	 [si+CHAN_REGS.CHAN_RX_OUT], 0 ; Receive Buffer	Output Pointer Register
ROM:13E4		 mov	 di, word ptr [si+CHAN_REGS.CHAN_RX_LO]	; Receive Data Buffer Address Register LO
ROM:13E7
ROM:13E7 loc_FD3E7:				 ; CODE	XREF: CHANNEL_RX+59j
ROM:13E7		 mov	 [bx], al
ROM:13E9		 inc	 bx
ROM:13EA		 inc	 cx
ROM:13EB		 cmp	 cx, [bp+arg_2]
ROM:13EE		 jnb	 short loc_FD405
ROM:13F0
ROM:13F0 loc_FD3F0:				 ; CODE	XREF: CHANNEL_RX+71j
ROM:13F0		 mov	 ax, [si+CHAN_REGS.CHAN_RX_IN] ; Receive Buffer	Input Pointer Register
ROM:13F3		 test	 ax, ax
ROM:13F5		 js	 short loc_FD3F0
ROM:13F7		 cmp	 ax, [si+CHAN_REGS.CHAN_RX_OUT]	; Receive Buffer Output	Pointer	Register
ROM:13FA		 jnz	 short loc_FD3D2
ROM:13FC		 mov	 [si+CHAN_REGS.CHAN_CMD], 83h ;	'â' ; Command 3 = Acknowledge receiver
ROM:1400		 call	 INC_NEW_CMD_REG
ROM:1403		 jmp	 short loc_FD3B0
ROM:1405 ; ───────────────────────────────────────────────────────────────────────────
ROM:1405
ROM:1405 loc_FD405:				 ; CODE	XREF: CHANNEL_RX+1Fj
ROM:1405					 ; CHANNEL_RX+6Aj
ROM:1405		 mov	 [si+CHAN_REGS.CHAN_CMD], 83h ;	'â' ; Command 3 = Acknowledge receiver
ROM:1409		 call	 INC_NEW_CMD_REG
ROM:140C		 jmp	 short loc_FD421
ROM:140E ; ───────────────────────────────────────────────────────────────────────────
ROM:140E
ROM:140E loc_FD40E:				 ; CODE	XREF: CHANNEL_RX+18j
ROM:140E		 mov	 dx, [si+CHAN_REGS.CHAN_PARM] ;	Channel	Parameter Register
ROM:1411		 mov	 al, 0FFh
ROM:1413
ROM:1413 loc_FD413:				 ; CODE	XREF: CHANNEL_RX+94j
ROM:1413		 mov	 bx, [si+CHAN_REGS.CHAN_RX_IN] ; Receive Buffer	Input Pointer Register
ROM:1416		 test	 bx, bx
ROM:1418		 js	 short loc_FD413
ROM:141A		 cmp	 bx, [si+CHAN_REGS.CHAN_RX_OUT]	; Receive Buffer Output	Pointer	Register
ROM:141D		 jnz	 short loc_FD421
ROM:141F		 xor	 al, al
ROM:1421
ROM:1421 loc_FD421:				 ; CODE	XREF: CHANNEL_RX+4Cj
ROM:1421					 ; CHANNEL_RX+88j ...
ROM:1421		 pop	 di
ROM:1422		 pop	 si
ROM:1423		 pop	 bp
ROM:1424		 retn
ROM:1424 CHANNEL_RX	 endp
ROM:1424
ROM:1425
ROM:1425 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1425
ROM:1425 ; Attributes: bp-based	frame
ROM:1425
ROM:1425 CHANNEL_TX	 proc near		 ; CODE	XREF: F04_IO_SETATTR+6p
ROM:1425					 ; DO_PUTS+29p	...
ROM:1425
ROM:1425 IO_CHAN	 = byte	ptr  4
ROM:1425 STR_LEN_OR_ZERO_OF_FFFF= word ptr  6
ROM:1425 STR_OFF	 = word	ptr  8
ROM:1425 STR_SEG	 = word	ptr  0Ah
ROM:1425
ROM:1425		 push	 bp		 ; I/O channel number
ROM:1426		 mov	 bp, sp
ROM:1428		 push	 si
ROM:1429		 push	 di
ROM:142A		 mov	 al, 16h	 ; sizeof(CHAN_REGS)
ROM:142C		 mul	 [bp+IO_CHAN]
ROM:142F		 lea	 si, IO_REGS
ROM:1433		 add	 si, ax
ROM:1435		 cmp	 [bp+STR_LEN_OR_ZERO_OF_FFFF], 0FFFFh
ROM:143A		 jz	 short WRITE_ATTRS
ROM:143C		 cmp	 [bp+STR_LEN_OR_ZERO_OF_FFFF], 0
ROM:1441		 jle	 short ZERO_TERMINATED
ROM:1443		 call	 WAIT_FOR_COMMAND_DONE ; Wait until 0x80 (command valid) bit falls off
ROM:1446
ROM:1446 WAIT_FOR_CHAN_STATUS:			 ; CODE	XREF: CHANNEL_TX+2Cj
ROM:1446		 mov	 cx, [si+CHAN_REGS.CHAN_STAT] ;	Channel	Status Register
ROM:1449		 and	 cx, 1000h
ROM:144D		 cmp	 cx, 1000h
ROM:1451		 jnz	 short WAIT_FOR_CHAN_STATUS
ROM:1453		 mov	 al, 0Ah
ROM:1455		 mul	 [bp+IO_CHAN]
ROM:1458		 mov	 cl, 8
ROM:145A		 lea	 di, STR_BUFS
ROM:145E		 add	 di, ax
ROM:1460		 mov	 dx, di
ROM:1462		 and	 dx, 0FFh
ROM:1466		 mov	 [si+CHAN_REGS.CHAN_TX_LO], dl ; Transmit Data Buffer Address Register LO
ROM:1469		 mov	 dx, di
ROM:146B		 and	 dx, 0FF00h
ROM:146F		 shr	 dx, cl
ROM:1471		 mov	 word ptr [si+CHAN_REGS.CHAN_TX_MID], dx ; Transmit Data Buffer	Address	Register MID
ROM:1474		 mov	 cx, [bp+STR_LEN_OR_ZERO_OF_FFFF]
ROM:1477		 cmp	 cx, 0Ah
ROM:147B		 jbe	 short MAX_0A_CHARS
ROM:147D		 mov	 cx, 0Ah
ROM:1480
ROM:1480 MAX_0A_CHARS:				 ; CODE	XREF: CHANNEL_TX+56j
ROM:1480		 mov	 [si+CHAN_REGS.CHAN_TX_LEN], cx	; Transmit Data	Buffer Length Register
ROM:1483		 push	 si
ROM:1484		 mov	 ds, [bp+STR_OFF]
ROM:1487		 mov	 si, [bp+STR_SEG]
ROM:148A		 rep movsb
ROM:148C		 pop	 si
ROM:148D		 mov	 ax, 0
ROM:1490		 mov	 ds, ax
ROM:1492		 mov	 [si+CHAN_REGS.CHAN_CMD], 82h ;	'é' ; Channel Command Register
ROM:1496		 call	 INC_NEW_CMD_REG
ROM:1499		 jmp	 short ZERO_TERMINATED
ROM:149B ; ───────────────────────────────────────────────────────────────────────────
ROM:149B
ROM:149B WRITE_ATTRS:				 ; CODE	XREF: CHANNEL_TX+15j
ROM:149B		 mov	 ax, [bp+STR_OFF]
ROM:149E		 mov	 [si+CHAN_REGS.CHAN_PARM], ax ;	Channel	Parameter Register
ROM:14A1		 mov	 al, 81h ; 'ü'
ROM:14A3		 call	 SUMBIT_CHAN_CMD ; SI =	channel	register block
ROM:14A3					 ; AL =	command
ROM:14A6
ROM:14A6 ZERO_TERMINATED:			 ; CODE	XREF: CHANNEL_TX+1Cj
ROM:14A6					 ; CHANNEL_TX+74j
ROM:14A6		 pop	 di
ROM:14A7		 pop	 si
ROM:14A8		 pop	 bp
ROM:14A9		 retn
ROM:14A9 CHANNEL_TX	 endp
ROM:14A9
ROM:14AA
ROM:14AA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:14AA
ROM:14AA ; Attributes: bp-based	frame
ROM:14AA
ROM:14AA DO_DUMP_REGISTERS proc	near		 ; CODE	XREF: DUMP_REGISTERSp
ROM:14AA
ROM:14AA var_C		 = byte	ptr -0Ch
ROM:14AA var_A		 = byte	ptr -0Ah
ROM:14AA var_8		 = word	ptr -8
ROM:14AA var_6		 = word	ptr -6
ROM:14AA
ROM:14AA		 push	 bp
ROM:14AB		 mov	 bp, sp
ROM:14AD		 push	 di
ROM:14AE		 push	 si
ROM:14AF		 sub	 sp, 8
ROM:14B2		 mov	 byte ptr [bp+var_6], 2Dh ; '-'
ROM:14B6		 mov	 di, 1
ROM:14B9		 push	 di
ROM:14BA		 call	 PRINT_STH
ROM:14BD		 add	 sp, 2
ROM:14C0		 call	 READ_CHAR_TO_AL
ROM:14C3		 mov	 [bp+var_A], al
ROM:14C6		 cmp	 [bp+var_A], 0Dh
ROM:14CA		 jnz	 short loc_FD529
ROM:14CC		 call	 DUMP_REGS
ROM:14CF		 jmp	 short DO_RETURN
ROM:14D1 ; ───────────────────────────────────────────────────────────────────────────
ROM:14D1
ROM:14D1 loc_FD4D1:				 ; CODE	XREF: DO_DUMP_REGISTERS+98j
ROM:14D1		 mov	 bx, [bp+var_8]
ROM:14D4		 shl	 bx, 1
ROM:14D6		 mov	 dl, byte ptr (REG_NAMES+1)[bx]
ROM:14DA		 cmp	 dl, [bp+var_C]
ROM:14DD		 jnz	 short loc_FD545
ROM:14DF		 mov	 di, 2
ROM:14E2		 push	 di
ROM:14E3		 call	 PRINT_STH
ROM:14E6		 add	 sp, 2
ROM:14E9		 mov	 di, [bp+var_8]
ROM:14EC		 shl	 di, 1
ROM:14EE		 push	 word ptr REGISTERS.SAVE_AX[di]
ROM:14F2		 call	 sub_FD2E6
ROM:14F5		 add	 sp, 2
ROM:14F8		 lea	 di, [bp+var_6]
ROM:14FB		 push	 di
ROM:14FC		 call	 PUTCHAR_CONSOLE
ROM:14FF		 add	 sp, 2
ROM:1502		 call	 READ_CHAR_TO_AL
ROM:1505		 mov	 COMMAND_CHAR, al
ROM:1508		 cmp	 COMMAND_CHAR, 20h ; ' '
ROM:150D		 jz	 short DO_RETURN
ROM:150F		 cmp	 COMMAND_CHAR, 0Dh
ROM:1514		 jz	 short DO_RETURN
ROM:1516		 mov	 di, [bp+var_8]
ROM:1519		 shl	 di, 1
ROM:151B		 add	 di, 0F35h
ROM:151F		 push	 di
ROM:1520		 call	 sub_FCAA2
ROM:1523		 add	 sp, 2
ROM:1526
ROM:1526 DO_RETURN:				 ; CODE	XREF: DO_DUMP_REGISTERS+25j
ROM:1526					 ; DO_DUMP_REGISTERS+63j ...
ROM:1526		 jmp	 COMMON_RETURN
ROM:1529 ; ───────────────────────────────────────────────────────────────────────────
ROM:1529
ROM:1529 loc_FD529:				 ; CODE	XREF: DO_DUMP_REGISTERS+20j
ROM:1529		 call	 READ_CHAR_TO_AL
ROM:152C		 mov	 [bp+var_C], al
ROM:152F		 mov	 [bp+var_8], 0
ROM:1534
ROM:1534 loc_FD534:				 ; CODE	XREF: DO_DUMP_REGISTERS+A2j
ROM:1534		 mov	 bx, [bp+var_8]
ROM:1537		 shl	 bx, 1
ROM:1539		 mov	 dl, [bx+660h]
ROM:153D		 cmp	 dl, [bp+var_A]
ROM:1540		 jnz	 short loc_FD545
ROM:1542		 jmp	 loc_FD4D1
ROM:1545 ; ───────────────────────────────────────────────────────────────────────────
ROM:1545
ROM:1545 loc_FD545:				 ; CODE	XREF: DO_DUMP_REGISTERS+33j
ROM:1545					 ; DO_DUMP_REGISTERS+96j
ROM:1545		 inc	 [bp+var_8]
ROM:1548		 cmp	 [bp+var_8], 0Bh
ROM:154C		 jbe	 short loc_FD534
ROM:154E		 call	 ERROR_CONSOLE
ROM:1551		 jmp	 short DO_RETURN
ROM:1551 DO_DUMP_REGISTERS endp
ROM:1551
ROM:1551 ; ───────────────────────────────────────────────────────────────────────────
ROM:1553		 db    0
ROM:1554
ROM:1554 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1554
ROM:1554 ; Attributes: bp-based	frame
ROM:1554
ROM:1554 sub_FD554	 proc near		 ; CODE	XREF: sub_FD03Dp
ROM:1554
ROM:1554 var_A		 = word	ptr -0Ah
ROM:1554 var_8		 = word	ptr -8
ROM:1554 var_6		 = word	ptr -6
ROM:1554
ROM:1554		 push	 bp
ROM:1555		 mov	 bp, sp
ROM:1557		 push	 di
ROM:1558		 push	 si
ROM:1559		 sub	 sp, 6
ROM:155C		 mov	 byte ptr [bp+var_6], 3Ah ; ':'
ROM:1560		 mov	 di, 1
ROM:1563		 push	 di
ROM:1564		 call	 PRINT_STH
ROM:1567		 add	 sp, 2
ROM:156A		 call	 READ_CHAR_TO_AL
ROM:156D		 mov	 COMMAND_CHAR, al
ROM:1570		 cmp	 COMMAND_CHAR, 0Dh
ROM:1575		 jnz	 short loc_FD5E4
ROM:1577		 mov	 [bp+var_A], 0
ROM:157C
ROM:157C loc_FD57C:				 ; CODE	XREF: sub_FD554+8Ej
ROM:157C		 cmp	 [bp+var_A], 8
ROM:1580		 jb	 short loc_FD585
ROM:1582		 jmp	 loc_FD60F
ROM:1585 ; ───────────────────────────────────────────────────────────────────────────
ROM:1585
ROM:1585 loc_FD585:				 ; CODE	XREF: sub_FD554+2Cj
ROM:1585		 mov	 ax, [bp+var_A]
ROM:1588		 mov	 cx, 6
ROM:158B		 imul	 cx
ROM:158D		 mov	 bx, ax
ROM:158F		 mov	 al, byte_630[bx]
ROM:1593		 test	 al, al
ROM:1595		 jz	 short loc_FD5DF
ROM:1597		 call	 sub_FD342
ROM:159A		 push	 [bp+var_A]
ROM:159D		 call	 PRINT_HEX_STAT
ROM:15A0		 add	 sp, 2
ROM:15A3		 mov	 di, 2
ROM:15A6		 push	 di
ROM:15A7		 call	 PRINT_STH
ROM:15AA		 add	 sp, 2
ROM:15AD		 mov	 ax, [bp+var_A]
ROM:15B0		 mov	 cx, 6
ROM:15B3		 imul	 cx
ROM:15B5		 mov	 bx, ax
ROM:15B7		 push	 word_632[bx]
ROM:15BB		 call	 sub_FD2E6
ROM:15BE		 add	 sp, 2
ROM:15C1		 lea	 di, [bp+var_6]
ROM:15C4		 push	 di
ROM:15C5		 call	 PUTCHAR_CONSOLE
ROM:15C8		 add	 sp, 2
ROM:15CB		 mov	 ax, [bp+var_A]
ROM:15CE		 mov	 cx, 6
ROM:15D1		 imul	 cx
ROM:15D3		 mov	 bx, ax
ROM:15D5		 push	 word_634[bx]
ROM:15D9		 call	 sub_FD2E6
ROM:15DC		 add	 sp, 2
ROM:15DF
ROM:15DF loc_FD5DF:				 ; CODE	XREF: sub_FD554+41j
ROM:15DF		 inc	 [bp+var_A]
ROM:15E2		 jmp	 short loc_FD57C
ROM:15E4 ; ───────────────────────────────────────────────────────────────────────────
ROM:15E4
ROM:15E4 loc_FD5E4:				 ; CODE	XREF: sub_FD554+21j
ROM:15E4		 cmp	 COMMAND_CHAR, 2Dh ; '-'
ROM:15E9		 jnz	 short loc_FD61A
ROM:15EB		 lea	 di, [bp+var_8]
ROM:15EE		 push	 di
ROM:15EF		 call	 sub_FDC92
ROM:15F2		 add	 sp, 2
ROM:15F5		 test	 ax, ax
ROM:15F7		 jz	 short loc_FD612
ROM:15F9		 cmp	 byte ptr [bp+var_8], 8
ROM:15FD		 jge	 short loc_FD612
ROM:15FF		 mov	 al, byte ptr [bp+var_8]
ROM:1602		 cbw
ROM:1603		 mov	 cx, 6
ROM:1606		 imul	 cx
ROM:1608		 mov	 di, ax
ROM:160A		 mov	 byte_630[di], 0
ROM:160F
ROM:160F loc_FD60F:				 ; CODE	XREF: sub_FD554+2Ej
ROM:160F					 ; sub_FD554+C4j ...
ROM:160F		 jmp	 COMMON_RETURN
ROM:1612 ; ───────────────────────────────────────────────────────────────────────────
ROM:1612
ROM:1612 loc_FD612:				 ; CODE	XREF: sub_FD554+A3j
ROM:1612					 ; sub_FD554+A9j
ROM:1612		 call	 sub_FD342
ROM:1615
ROM:1615 loc_FD615:				 ; CODE	XREF: sub_FD554+E2j
ROM:1615					 ; sub_FD554+E9j ...
ROM:1615		 call	 ERROR_CONSOLE
ROM:1618		 jmp	 short loc_FD60F
ROM:161A ; ───────────────────────────────────────────────────────────────────────────
ROM:161A
ROM:161A loc_FD61A:				 ; CODE	XREF: sub_FD554+95j
ROM:161A		 mov	 [bp+var_A], 0
ROM:161F
ROM:161F loc_FD61F:				 ; CODE	XREF: sub_FD554+121j
ROM:161F		 mov	 ax, [bp+var_A]
ROM:1622		 mov	 cx, 6
ROM:1625		 imul	 cx
ROM:1627		 mov	 bx, ax
ROM:1629		 mov	 al, [bx+630h]
ROM:162D		 test	 al, al
ROM:162F		 jnz	 short loc_FD66E
ROM:1631		 call	 sub_FCA34
ROM:1634		 test	 ax, ax
ROM:1636		 jz	 short loc_FD615
ROM:1638		 cmp	 COMMAND_CHAR, 0Dh
ROM:163D		 jnz	 short loc_FD615
ROM:163F		 mov	 di, SYSCALL_ARG_SEG
ROM:1643		 mov	 ax, [bp+var_A]
ROM:1646		 mov	 cx, 6
ROM:1649		 imul	 cx
ROM:164B		 mov	 si, ax
ROM:164D		 mov	 [si+632h], di
ROM:1651		 mov	 di, SYSCALL_ARG_OFF
ROM:1655		 mov	 ax, [bp+var_A]
ROM:1658		 imul	 cx
ROM:165A		 mov	 si, ax
ROM:165C		 mov	 [si+634h], di
ROM:1660		 mov	 ax, [bp+var_A]
ROM:1663		 imul	 cx
ROM:1665		 mov	 di, ax
ROM:1667		 mov	 byte ptr [di+630h], 1
ROM:166C		 jmp	 short loc_FD60F
ROM:166E ; ───────────────────────────────────────────────────────────────────────────
ROM:166E
ROM:166E loc_FD66E:				 ; CODE	XREF: sub_FD554+DBj
ROM:166E		 inc	 [bp+var_A]
ROM:1671		 cmp	 [bp+var_A], 8
ROM:1675		 jb	 short loc_FD61F
ROM:1677		 jmp	 short loc_FD615
ROM:1677 sub_FD554	 endp
ROM:1677
ROM:1677 ; ───────────────────────────────────────────────────────────────────────────
ROM:1679		 db    0
ROM:167A
ROM:167A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:167A
ROM:167A ; Attributes: bp-based	frame
ROM:167A
ROM:167A DUMP_REGS	 proc near		 ; CODE	XREF: sub_FC2B1+4Fp
ROM:167A					 ; CHANNEL_IO+190p ...
ROM:167A
ROM:167A var_8		 = word	ptr -8
ROM:167A var_6		 = word	ptr -6
ROM:167A
ROM:167A		 push	 bp
ROM:167B		 mov	 bp, sp
ROM:167D		 push	 di
ROM:167E		 push	 si
ROM:167F		 sub	 sp, 4
ROM:1682		 mov	 byte ptr [bp+var_6], 3Ah ; ':'
ROM:1686		 mov	 di, offset aCsIp_0 ; "\nCS:IP "
ROM:1689		 push	 di
ROM:168A		 call	 PRINT_STRING
ROM:168D		 add	 sp, 2
ROM:1690		 push	 REGISTERS.SAVE_CS
ROM:1694		 call	 sub_FD2E6
ROM:1697		 add	 sp, 2
ROM:169A		 lea	 di, [bp+var_6]
ROM:169D		 push	 di
ROM:169E		 call	 PUTCHAR_CONSOLE
ROM:16A1		 add	 sp, 2
ROM:16A4		 push	 REGISTERS.SAVE_IP
ROM:16A8		 call	 sub_FD2E6
ROM:16AB		 add	 sp, 2
ROM:16AE		 mov	 di, offset aFlags_0 ; "  Flags	 "
ROM:16B1		 push	 di
ROM:16B2		 call	 PRINT_STRING
ROM:16B5		 add	 sp, 2
ROM:16B8		 call	 sub_FD71A
ROM:16BB		 call	 sub_FD342
ROM:16BE		 mov	 [bp+var_8], 0
ROM:16C3
ROM:16C3 loc_FD6C3:				 ; CODE	XREF: DUMP_REGS+71j
ROM:16C3		 mov	 di, [bp+var_8]
ROM:16C6		 shl	 di, 1
ROM:16C8		 add	 di, offset REG_NAMES ;	"AX"
ROM:16CC		 push	 di
ROM:16CD		 mov	 di, 2
ROM:16D0		 push	 di
ROM:16D1		 sub	 di, di
ROM:16D3		 push	 di
ROM:16D4		 call	 PUTS_CONSOLE
ROM:16D7		 add	 sp, 6
ROM:16DA		 mov	 di, 5
ROM:16DD		 push	 di
ROM:16DE		 call	 PRINT_STH
ROM:16E1		 add	 sp, 2
ROM:16E4		 inc	 [bp+var_8]
ROM:16E7		 cmp	 [bp+var_8], 0Bh
ROM:16EB		 jb	 short loc_FD6C3
ROM:16ED		 call	 sub_FD342
ROM:16F0		 mov	 [bp+var_8], 0
ROM:16F5
ROM:16F5 loc_FD6F5:				 ; CODE	XREF: DUMP_REGS+9Bj
ROM:16F5		 mov	 di, [bp+var_8]
ROM:16F8		 shl	 di, 1
ROM:16FA		 push	 word ptr [di+0F35h]
ROM:16FE		 call	 sub_FD2E6
ROM:1701		 add	 sp, 2
ROM:1704		 mov	 di, 3
ROM:1707		 push	 di
ROM:1708		 call	 PRINT_STH
ROM:170B		 add	 sp, 2
ROM:170E		 inc	 [bp+var_8]
ROM:1711		 cmp	 [bp+var_8], 0Bh
ROM:1715		 jb	 short loc_FD6F5
ROM:1717		 jmp	 COMMON_RETURN
ROM:1717 DUMP_REGS	 endp
ROM:1717
ROM:171A
ROM:171A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:171A
ROM:171A ; Attributes: bp-based	frame
ROM:171A
ROM:171A sub_FD71A	 proc near		 ; CODE	XREF: DUMP_REGS+3Ep
ROM:171A
ROM:171A var_1C		 = word	ptr -1Ch
ROM:171A var_1A		 = byte	ptr -1Ah
ROM:171A var_19		 = byte	ptr -19h
ROM:171A var_18		 = byte	ptr -18h
ROM:171A var_17		 = byte	ptr -17h
ROM:171A var_16		 = byte	ptr -16h
ROM:171A var_15		 = byte	ptr -15h
ROM:171A var_14		 = byte	ptr -14h
ROM:171A var_13		 = byte	ptr -13h
ROM:171A var_12		 = byte	ptr -12h
ROM:171A var_11		 = byte	ptr -11h
ROM:171A var_10		 = byte	ptr -10h
ROM:171A var_F		 = byte	ptr -0Fh
ROM:171A var_E		 = byte	ptr -0Eh
ROM:171A var_D		 = byte	ptr -0Dh
ROM:171A var_A		 = word	ptr -0Ah
ROM:171A var_8		 = word	ptr -8
ROM:171A var_6		 = word	ptr -6
ROM:171A
ROM:171A		 push	 bp
ROM:171B		 mov	 bp, sp
ROM:171D		 push	 di
ROM:171E		 push	 si
ROM:171F		 sub	 sp, 18h
ROM:1722		 mov	 byte ptr [bp+var_6], 2Dh ; '-'
ROM:1726		 mov	 dx, 20h ; ' '
ROM:1729		 mov	 [bp+var_E], dl
ROM:172C		 mov	 [bp+var_10], dl
ROM:172F		 mov	 [bp+var_12], dl
ROM:1732		 mov	 [bp+var_19], dl
ROM:1735		 mov	 [bp+var_1A], dl
ROM:1738		 mov	 byte ptr [bp+var_1C+1], dl
ROM:173B		 mov	 byte ptr [bp+var_1C], dl
ROM:173E		 mov	 [bp+var_18], 4Fh ; 'O'
ROM:1742		 mov	 [bp+var_17], 44h ; 'D'
ROM:1746		 mov	 [bp+var_16], 49h ; 'I'
ROM:174A		 mov	 [bp+var_15], 54h ; 'T'
ROM:174E		 mov	 [bp+var_14], 53h ; 'S'
ROM:1752		 mov	 [bp+var_13], 5Ah ; 'Z'
ROM:1756		 mov	 [bp+var_11], 41h ; 'A'
ROM:175A		 mov	 [bp+var_F], 50h ; 'P'
ROM:175E		 mov	 [bp+var_D], 43h ; 'C'
ROM:1762		 mov	 di, REGISTERS.SAVE_FLAGS
ROM:1766		 mov	 [bp+var_8], di
ROM:1769		 mov	 [bp+var_A], 0
ROM:176E
ROM:176E loc_FD76E:				 ; CODE	XREF: sub_FD71A+92j
ROM:176E		 lea	 bx, [bp+var_1C]
ROM:1771		 add	 bx, [bp+var_A]
ROM:1774		 cmp	 byte ptr [bx],	20h ; ' '
ROM:1777		 jz	 short loc_FD79D
ROM:1779		 cmp	 [bp+var_8], 8000h
ROM:177E		 jb	 short loc_FD789
ROM:1780		 lea	 di, [bp+var_1C]
ROM:1783		 add	 di, [bp+var_A]
ROM:1786		 push	 di
ROM:1787		 jmp	 short loc_FD78D
ROM:1789 ; ───────────────────────────────────────────────────────────────────────────
ROM:1789
ROM:1789 loc_FD789:				 ; CODE	XREF: sub_FD71A+64j
ROM:1789		 lea	 di, [bp+var_6]
ROM:178C		 push	 di
ROM:178D
ROM:178D loc_FD78D:				 ; CODE	XREF: sub_FD71A+6Dj
ROM:178D		 call	 PUTCHAR_CONSOLE
ROM:1790		 add	 sp, 2
ROM:1793		 mov	 di, 1
ROM:1796		 push	 di
ROM:1797		 call	 PRINT_STH
ROM:179A		 add	 sp, 2
ROM:179D
ROM:179D loc_FD79D:				 ; CODE	XREF: sub_FD71A+5Dj
ROM:179D		 mov	 di, [bp+var_8]
ROM:17A0		 shl	 di, 1
ROM:17A2		 mov	 [bp+var_8], di
ROM:17A5		 inc	 [bp+var_A]
ROM:17A8		 cmp	 [bp+var_A], 10h
ROM:17AC		 jb	 short loc_FD76E
ROM:17AE		 jmp	 COMMON_RETURN
ROM:17AE sub_FD71A	 endp
ROM:17AE
ROM:17AE ; ───────────────────────────────────────────────────────────────────────────
ROM:17B1		 db    0
ROM:17B2
ROM:17B2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:17B2
ROM:17B2 ; SI =	channel	register block
ROM:17B2 ; AL =	command
ROM:17B2
ROM:17B2 SUMBIT_CHAN_CMD proc near		 ; CODE	XREF: POST_FINISH:NEXT_CHANNELp
ROM:17B2					 ; CHANNEL_0_INIT+14p ...
ROM:17B2		 call	 WAIT_FOR_COMMAND_DONE ; Wait until 0x80 (command valid) bit falls off
ROM:17B5		 mov	 [si+CHAN_REGS.CHAN_CMD], al ; 41c + 4
ROM:17B8		 call	 INC_NEW_CMD_REG
ROM:17BB		 retn
ROM:17BB SUMBIT_CHAN_CMD endp
ROM:17BB
ROM:17BC
ROM:17BC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:17BC
ROM:17BC ; AL =	command
ROM:17BC
ROM:17BC SUBMIT_SYS_CMD	 proc near		 ; CODE	XREF: POST_FINISH+83p
ROM:17BC		 push	 dx
ROM:17BD
ROM:17BD WAIT_SYS_CMD_FINISH:			 ; CODE	XREF: SUBMIT_SYS_CMD+8j
ROM:17BD		 mov	 dh, byte ptr FW_REG+1
ROM:17C1		 and	 dh, 80h
ROM:17C4		 jnz	 short WAIT_SYS_CMD_FINISH
ROM:17C6		 mov	 byte ptr FW_REG+1, al
ROM:17C9		 call	 INC_NEW_CMD_REG
ROM:17CC		 pop	 dx
ROM:17CD		 retn
ROM:17CD SUBMIT_SYS_CMD	 endp
ROM:17CD
ROM:17CE
ROM:17CE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:17CE
ROM:17CE ; Value on stack
ROM:17CE ; Attributes: bp-based	frame
ROM:17CE
ROM:17CE SYSCALL_ARG_PUT_VALUE proc near	 ; CODE	XREF: DO_DISK_IOPB+37p
ROM:17CE					 ; sub_FCC9E+50p ...
ROM:17CE
ROM:17CE VALUE		 = byte	ptr  4
ROM:17CE
ROM:17CE		 push	 bp
ROM:17CF		 mov	 bp, sp
ROM:17D1		 push	 ds
ROM:17D2		 mov	 bx, SYSCALL_ARG_OFF
ROM:17D6		 mov	 ds, SYSCALL_ARG_SEG
ROM:17DA		 mov	 al, [bp+VALUE]
ROM:17DD		 mov	 [bx], al
ROM:17DF		 pop	 ds
ROM:17E0		 pop	 bp
ROM:17E1		 retn
ROM:17E1 SYSCALL_ARG_PUT_VALUE endp
ROM:17E1
ROM:17E2
ROM:17E2 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:17E2
ROM:17E2 ; BX =	offset
ROM:17E2
ROM:17E2 GET_SYSCALL_ARG_BYTE proc near		 ; CODE	XREF: DO_DISK_IOPB+10p
ROM:17E2					 ; sub_FCC9E+44p ...
ROM:17E2		 push	 ds
ROM:17E3		 mov	 bx, SYSCALL_ARG_OFF
ROM:17E7		 mov	 ds, SYSCALL_ARG_SEG
ROM:17EB		 mov	 al, [bx]
ROM:17ED		 pop	 ds
ROM:17EE		 retn
ROM:17EE GET_SYSCALL_ARG_BYTE endp
ROM:17EE
ROM:17EE ; ───────────────────────────────────────────────────────────────────────────
ROM:17EF		 db    0
ROM:17F0
ROM:17F0 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:17F0
ROM:17F0 ; Wait	until 0x80 (command valid) bit falls off
ROM:17F0
ROM:17F0 WAIT_FOR_COMMAND_DONE proc near	 ; CODE	XREF: CHANNEL_RX:loc_FD3B0p
ROM:17F0					 ; CHANNEL_TX+1Ep ...
ROM:17F0		 push	 dx
ROM:17F1
ROM:17F1 DO_POLL:				 ; CODE	XREF: WAIT_FOR_COMMAND_DONE+7j
ROM:17F1		 mov	 dh, [si+4]
ROM:17F4		 and	 dh, 80h
ROM:17F7		 jnz	 short DO_POLL
ROM:17F9		 pop	 dx
ROM:17FA		 retn
ROM:17FA WAIT_FOR_COMMAND_DONE endp
ROM:17FA
ROM:17FA ; ───────────────────────────────────────────────────────────────────────────
ROM:17FB		 db    0
ROM:17FC
ROM:17FC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:17FC
ROM:17FC ; Attributes: bp-based	frame
ROM:17FC
ROM:17FC PUTS_CONSOLE	 proc near		 ; CODE	XREF: DO_PUTCHAR+11p
ROM:17FC					 ; ERROR_CONSOLE+1Fp ...
ROM:17FC
ROM:17FC ZERO		 = word	ptr  4
ROM:17FC STR_LEN	 = word	ptr  6
ROM:17FC STR		 = word	ptr  8
ROM:17FC
ROM:17FC		 push	 bp
ROM:17FD		 mov	 bp, sp
ROM:17FF		 push	 di
ROM:1800		 push	 si
ROM:1801		 push	 [bp+STR]
ROM:1804		 sub	 di, di
ROM:1806		 push	 di
ROM:1807		 push	 [bp+STR_LEN]
ROM:180A		 push	 [bp+ZERO]
ROM:180D		 call	 CHANNEL_TX
ROM:1810		 add	 sp, 8
ROM:1813		 jmp	 COMMON_RETURN
ROM:1813 PUTS_CONSOLE	 endp
ROM:1813
ROM:1816
ROM:1816 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1816
ROM:1816 ; Attributes: bp-based	frame
ROM:1816
ROM:1816 CHANNEL_INIT	 proc near		 ; CODE	XREF: CHANNEL_IO+18Ap
ROM:1816
ROM:1816 IO_CHAN	 = byte	ptr  4
ROM:1816
ROM:1816		 push	 bp
ROM:1817		 mov	 bp, sp
ROM:1819		 push	 si
ROM:181A		 mov	 al, 16h	 ; sizeof(CHAN_REGS)
ROM:181C		 mul	 [bp+IO_CHAN]
ROM:181F		 lea	 si, IO_REGS
ROM:1823		 add	 si, ax
ROM:1825		 mov	 ax, CHAN_REGS.CHAN_RX_LO ; Receive Data Buffer	Address	Register LO
ROM:1828		 mov	 [si+CHAN_REGS.CHAN_RX_LEN], ax	; Receive Data Buffer Length Register
ROM:182B		 mov	 ax, 0
ROM:182E		 mov	 [si+CHAN_REGS.CHAN_RX_IN], ax ; Receive Buffer	Input Pointer Register
ROM:1831		 mov	 [si+CHAN_REGS.CHAN_RX_OUT], ax	; Receive Buffer Output	Pointer	Register
ROM:1834		 mov	 al, 81h ; 'ü'   ; Command 1 = Initialize Channel
ROM:1836		 call	 SUMBIT_CHAN_CMD ; SI =	channel	register block
ROM:1836					 ; AL =	command
ROM:1839		 pop	 si
ROM:183A		 pop	 bp
ROM:183B		 retn
ROM:183B CHANNEL_INIT	 endp
ROM:183B
ROM:183C
ROM:183C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:183C
ROM:183C ; Attributes: bp-based	frame
ROM:183C
ROM:183C CHANNEL_INIT_RX proc near		 ; CODE	XREF: CHANNEL_IO+61p
ROM:183C
ROM:183C IO_CHAN	 = byte	ptr  4
ROM:183C
ROM:183C		 push	 bp
ROM:183D		 mov	 bp, sp
ROM:183F		 push	 si
ROM:1840		 mov	 al, 16h	 ; sizeof(CHAN_REGS)
ROM:1842		 mul	 [bp+IO_CHAN]
ROM:1845		 lea	 si, IO_REGS
ROM:1849		 add	 si, ax
ROM:184B		 mov	 ax, 546h
ROM:184E		 mov	 [si+CHAN_REGS.CHAN_RX_LEN], ax	; Receive Data Buffer Length Register
ROM:1851		 mov	 al, 81h ; 'ü'   ; Command 1 = Initialize Channel
ROM:1853		 call	 SUMBIT_CHAN_CMD ; SI =	channel	register block
ROM:1853					 ; AL =	command
ROM:1856		 pop	 si
ROM:1857		 pop	 bp
ROM:1858		 retn
ROM:1858 CHANNEL_INIT_RX endp
ROM:1858
ROM:1858 ; ───────────────────────────────────────────────────────────────────────────
ROM:1859		 db    0
ROM:185A
ROM:185A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:185A
ROM:185A ; Attributes: bp-based	frame
ROM:185A
ROM:185A sub_FD85A	 proc near		 ; CODE	XREF: sub_FD038p
ROM:185A
ROM:185A var_A		 = byte	ptr -0Ah
ROM:185A var_8		 = word	ptr -8
ROM:185A var_6		 = word	ptr -6
ROM:185A
ROM:185A		 push	 bp
ROM:185B		 mov	 bp, sp
ROM:185D		 push	 di
ROM:185E		 push	 si
ROM:185F		 sub	 sp, 6
ROM:1862		 mov	 byte ptr [bp+var_8], 2Dh ; '-'
ROM:1866		 mov	 [bp+var_A], 1
ROM:186A		 mov	 di, 1
ROM:186D		 push	 di
ROM:186E		 call	 PRINT_STH
ROM:1871		 add	 sp, 2
ROM:1874		 call	 sub_FDC68
ROM:1877		 test	 ax, ax
ROM:1879		 jz	 short loc_FD885
ROM:187B		 cmp	 COMMAND_CHAR, 0Dh
ROM:1880		 jz	 short loc_FD890
ROM:1882		 call	 ERROR_CONSOLE
ROM:1885
ROM:1885 loc_FD885:				 ; CODE	XREF: sub_FD85A+1Fj
ROM:1885					 ; sub_FD85A+3Aj
ROM:1885		 jmp	 COMMON_RETURN
ROM:1888 ; ───────────────────────────────────────────────────────────────────────────
ROM:1888
ROM:1888 loc_FD888:				 ; CODE	XREF: sub_FD85A+7Fj
ROM:1888					 ; sub_FD85A+8Dj
ROM:1888		 mov	 [bp+var_A], 0
ROM:188C
ROM:188C loc_FD88C:				 ; CODE	XREF: sub_FD85A+65j
ROM:188C					 ; sub_FD85A+6Cj ...
ROM:188C		 inc	 SYSCALL_ARG_OFF
ROM:1890
ROM:1890 loc_FD890:				 ; CODE	XREF: sub_FD85A+26j
ROM:1890		 cmp	 [bp+var_A], 0
ROM:1894		 jz	 short loc_FD885
ROM:1896		 call	 sub_FDB72
ROM:1899		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:189C		 mov	 byte ptr [bp+var_6], al
ROM:189F		 mov	 al, byte ptr [bp+var_6]
ROM:18A2		 cbw
ROM:18A3		 push	 ax
ROM:18A4		 call	 PRINT_HEX_STAT
ROM:18A7		 add	 sp, 2
ROM:18AA		 lea	 di, [bp+var_8]
ROM:18AD		 push	 di
ROM:18AE		 call	 PUTCHAR_CONSOLE
ROM:18B1		 add	 sp, 2
ROM:18B4		 call	 READ_CHAR_TO_AL
ROM:18B7		 mov	 COMMAND_CHAR, al
ROM:18BA		 cmp	 COMMAND_CHAR, 20h ; ' '
ROM:18BF		 jz	 short loc_FD88C
ROM:18C1		 cmp	 COMMAND_CHAR, 0Dh
ROM:18C6		 jz	 short loc_FD88C
ROM:18C8		 lea	 di, [bp+var_6]
ROM:18CB		 push	 di
ROM:18CC		 mov	 al, COMMAND_CHAR
ROM:18CF		 cbw
ROM:18D0		 push	 ax
ROM:18D1		 call	 sub_FD944
ROM:18D4		 add	 sp, 4
ROM:18D7		 test	 ax, ax
ROM:18D9		 jz	 short loc_FD888
ROM:18DB		 lea	 di, [bp+var_6]
ROM:18DE		 push	 di
ROM:18DF		 call	 sub_FCB5E
ROM:18E2		 add	 sp, 2
ROM:18E5		 test	 ax, ax
ROM:18E7		 jz	 short loc_FD888
ROM:18E9		 mov	 al, byte ptr [bp+var_6]
ROM:18EC		 cbw
ROM:18ED		 push	 ax
ROM:18EE		 call	 SYSCALL_ARG_PUT_VALUE ; Value on stack
ROM:18F1		 add	 sp, 2
ROM:18F4		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:18F7		 mov	 di, ax
ROM:18F9		 mov	 al, byte ptr [bp+var_6]
ROM:18FC		 cbw
ROM:18FD		 cmp	 di, ax
ROM:18FF		 jz	 short loc_FD88C
ROM:1901		 call	 ERROR_CONSOLE
ROM:1904		 jmp	 short loc_FD88C
ROM:1904 sub_FD85A	 endp
ROM:1904
ROM:1906
ROM:1906 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1906
ROM:1906 ; Attributes: bp-based	frame
ROM:1906
ROM:1906 sub_FD906	 proc near		 ; CODE	XREF: sub_FD05Ap
ROM:1906
ROM:1906 var_6		 = word	ptr -6
ROM:1906
ROM:1906		 push	 bp
ROM:1907		 mov	 bp, sp
ROM:1909		 push	 di
ROM:190A		 push	 si
ROM:190B		 sub	 sp, 2
ROM:190E		 mov	 di, 1
ROM:1911		 push	 di
ROM:1912		 call	 PRINT_STH
ROM:1915		 add	 sp, 2
ROM:1918		 lea	 di, [bp+var_6]
ROM:191B		 push	 di
ROM:191C		 call	 sub_FDC92
ROM:191F		 add	 sp, 2
ROM:1922		 test	 ax, ax
ROM:1924		 jz	 short loc_FD93D
ROM:1926		 cmp	 byte ptr [bp+var_6], 0
ROM:192A		 jl	 short loc_FD93D
ROM:192C		 cmp	 byte ptr [bp+var_6], 5
ROM:1930		 jg	 short loc_FD93D
ROM:1932		 mov	 al, byte ptr [bp+var_6]
ROM:1935		 cbw
ROM:1936		 push	 ax
ROM:1937		 call	 DO_DISK_BOOT
ROM:193A		 add	 sp, 2
ROM:193D
ROM:193D loc_FD93D:				 ; CODE	XREF: sub_FD906+1Ej
ROM:193D					 ; sub_FD906+24j ...
ROM:193D		 call	 ERROR_CONSOLE
ROM:1940		 jmp	 COMMON_RETURN
ROM:1940 sub_FD906	 endp
ROM:1940
ROM:1940 ; ───────────────────────────────────────────────────────────────────────────
ROM:1943		 db    0
ROM:1944
ROM:1944 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1944
ROM:1944 ; Attributes: bp-based	frame
ROM:1944
ROM:1944 sub_FD944	 proc near		 ; CODE	XREF: sub_FCAA2+4Bp
ROM:1944					 ; sub_FCB5E+45p ...
ROM:1944
ROM:1944 var_6		 = byte	ptr -6
ROM:1944 arg_0		 = byte	ptr  4
ROM:1944 arg_2		 = word	ptr  6
ROM:1944
ROM:1944		 push	 bp
ROM:1945		 mov	 bp, sp
ROM:1947		 push	 di
ROM:1948		 push	 si
ROM:1949		 sub	 sp, 2
ROM:194C		 mov	 [bp+var_6], 1
ROM:1950		 cmp	 [bp+arg_0], 66h ; 'f'
ROM:1954		 jg	 short loc_FD98E
ROM:1956		 cmp	 [bp+arg_0], 61h ; 'a'
ROM:195A		 jl	 short loc_FD98E
ROM:195C		 mov	 bx, [bp+arg_2]
ROM:195F		 mov	 al, [bp+arg_0]
ROM:1962		 cbw
ROM:1963		 add	 ax, 0FFA9h
ROM:1966		 jmp	 short loc_FD98A
ROM:1968 ; ───────────────────────────────────────────────────────────────────────────
ROM:1968
ROM:1968 loc_FD968:				 ; CODE	XREF: sub_FD944+4Ej
ROM:1968		 cmp	 [bp+arg_0], 41h ; 'A'
ROM:196C		 jl	 short loc_FD994
ROM:196E		 mov	 bx, [bp+arg_2]
ROM:1971		 mov	 al, [bp+arg_0]
ROM:1974		 cbw
ROM:1975		 add	 ax, 0FFC9h
ROM:1978		 jmp	 short loc_FD98A
ROM:197A ; ───────────────────────────────────────────────────────────────────────────
ROM:197A
ROM:197A loc_FD97A:				 ; CODE	XREF: sub_FD944+54j
ROM:197A		 cmp	 [bp+arg_0], 30h ; '0'
ROM:197E		 jl	 short loc_FD99A
ROM:1980		 mov	 bx, [bp+arg_2]
ROM:1983		 mov	 al, [bp+arg_0]
ROM:1986		 cbw
ROM:1987		 add	 ax, 0FFD0h
ROM:198A
ROM:198A loc_FD98A:				 ; CODE	XREF: sub_FD944+22j
ROM:198A					 ; sub_FD944+34j
ROM:198A		 mov	 [bx], al
ROM:198C		 jmp	 short loc_FD99E
ROM:198E ; ───────────────────────────────────────────────────────────────────────────
ROM:198E
ROM:198E loc_FD98E:				 ; CODE	XREF: sub_FD944+10j
ROM:198E					 ; sub_FD944+16j
ROM:198E		 cmp	 [bp+arg_0], 46h ; 'F'
ROM:1992		 jle	 short loc_FD968
ROM:1994
ROM:1994 loc_FD994:				 ; CODE	XREF: sub_FD944+28j
ROM:1994		 cmp	 [bp+arg_0], 39h ; '9'
ROM:1998		 jle	 short loc_FD97A
ROM:199A
ROM:199A loc_FD99A:				 ; CODE	XREF: sub_FD944+3Aj
ROM:199A		 mov	 [bp+var_6], 0
ROM:199E
ROM:199E loc_FD99E:				 ; CODE	XREF: sub_FD944+48j
ROM:199E		 mov	 al, [bp+var_6]
ROM:19A1		 cbw
ROM:19A2		 jmp	 COMMON_RETURN
ROM:19A2 sub_FD944	 endp
ROM:19A2
ROM:19A2 ; ───────────────────────────────────────────────────────────────────────────
ROM:19A5		 db    0
ROM:19A6
ROM:19A6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:19A6
ROM:19A6 ; Attributes: bp-based	frame
ROM:19A6
ROM:19A6 sub_FD9A6	 proc near		 ; CODE	XREF: READ_CHAR_TO_AL+8p
ROM:19A6					 ; sub_FCAA2+2Bp ...
ROM:19A6
ROM:19A6 var_6		 = word	ptr -6
ROM:19A6
ROM:19A6		 push	 bp
ROM:19A7		 mov	 bp, sp
ROM:19A9		 push	 di
ROM:19AA		 push	 si
ROM:19AB		 sub	 sp, 2
ROM:19AE		 lea	 di, [bp+var_6]
ROM:19B1		 push	 di
ROM:19B2		 mov	 di, 1
ROM:19B5		 push	 di
ROM:19B6		 sub	 di, di
ROM:19B8		 push	 di
ROM:19B9		 call	 CHANNEL_RX
ROM:19BC		 add	 sp, 6
ROM:19BF		 mov	 al, byte ptr [bp+var_6]
ROM:19C2		 cbw
ROM:19C3		 jmp	 COMMON_RETURN
ROM:19C3 sub_FD9A6	 endp
ROM:19C3
ROM:19C6
ROM:19C6 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:19C6
ROM:19C6 ; Attributes: bp-based	frame
ROM:19C6
ROM:19C6 PUTCHAR_CONSOLE proc near		 ; CODE	XREF: DO_DISK_BOOT+AAp
ROM:19C6					 ; READ_CHAR_TO_AL+12p	...
ROM:19C6
ROM:19C6 CHARACTER	 = word	ptr  4
ROM:19C6
ROM:19C6		 push	 bp
ROM:19C7		 mov	 bp, sp
ROM:19C9		 push	 di
ROM:19CA		 push	 si
ROM:19CB		 push	 [bp+CHARACTER]
ROM:19CE		 mov	 di, 1		 ; Length
ROM:19D1		 push	 di
ROM:19D2		 sub	 di, di
ROM:19D4		 push	 di
ROM:19D5		 call	 PUTS_CONSOLE
ROM:19D8		 add	 sp, 6
ROM:19DB		 jmp	 COMMON_RETURN
ROM:19DB PUTCHAR_CONSOLE endp
ROM:19DB
ROM:19DE
ROM:19DE ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:19DE
ROM:19DE ; Attributes: bp-based	frame
ROM:19DE
ROM:19DE sub_FD9DE	 proc near		 ; CODE	XREF: sub_FD042p
ROM:19DE
ROM:19DE var_18		 = word	ptr -18h
ROM:19DE var_16		 = byte	ptr -16h
ROM:19DE var_15		 = byte	ptr -15h
ROM:19DE var_14		 = byte	ptr -14h
ROM:19DE var_13		 = byte	ptr -13h
ROM:19DE var_12		 = byte	ptr -12h
ROM:19DE var_11		 = byte	ptr -11h
ROM:19DE var_10		 = byte	ptr -10h
ROM:19DE var_F		 = byte	ptr -0Fh
ROM:19DE var_E		 = byte	ptr -0Eh
ROM:19DE var_D		 = byte	ptr -0Dh
ROM:19DE var_C		 = byte	ptr -0Ch
ROM:19DE var_B		 = byte	ptr -0Bh
ROM:19DE var_A		 = byte	ptr -0Ah
ROM:19DE var_9		 = byte	ptr -9
ROM:19DE var_8		 = word	ptr -8
ROM:19DE var_6		 = byte	ptr -6
ROM:19DE
ROM:19DE		 push	 bp
ROM:19DF		 mov	 bp, sp
ROM:19E1		 push	 di
ROM:19E2		 push	 si
ROM:19E3		 sub	 sp, 14h
ROM:19E6		 mov	 byte ptr [bp+var_18], 0
ROM:19EA		 mov	 byte ptr [bp+var_18+1], 2
ROM:19EE		 mov	 [bp+var_16], 4
ROM:19F2		 mov	 [bp+var_15], 6
ROM:19F6		 mov	 [bp+var_14], 9
ROM:19FA		 mov	 [bp+var_13], 0Bh
ROM:19FE		 mov	 [bp+var_12], 0Dh
ROM:1A02		 mov	 [bp+var_11], 0Fh
ROM:1A06		 mov	 [bp+var_10], 12h
ROM:1A0A		 mov	 [bp+var_F], 14h
ROM:1A0E		 mov	 [bp+var_E], 16h
ROM:1A12		 mov	 [bp+var_D], 18h
ROM:1A16		 mov	 [bp+var_C], 1Bh
ROM:1A1A		 mov	 [bp+var_B], 1Dh
ROM:1A1E		 mov	 [bp+var_A], 1Fh
ROM:1A22		 mov	 [bp+var_9], 21h ; '!'
ROM:1A26		 mov	 di, 1
ROM:1A29		 push	 di
ROM:1A2A		 call	 PRINT_STH
ROM:1A2D		 add	 sp, 2
ROM:1A30		 call	 sub_FDC68
ROM:1A33		 test	 ax, ax
ROM:1A35		 jnz	 short loc_FDA3A
ROM:1A37		 jmp	 loc_FDB01
ROM:1A3A ; ───────────────────────────────────────────────────────────────────────────
ROM:1A3A
ROM:1A3A loc_FDA3A:				 ; CODE	XREF: sub_FD9DE+57j
ROM:1A3A		 cmp	 COMMAND_CHAR, 0Dh
ROM:1A3F		 jnz	 short loc_FDA48
ROM:1A41		 mov	 [bp+var_8], 1
ROM:1A46		 jmp	 short loc_FDA59
ROM:1A48 ; ───────────────────────────────────────────────────────────────────────────
ROM:1A48
ROM:1A48 loc_FDA48:				 ; CODE	XREF: sub_FD9DE+61j
ROM:1A48		 lea	 di, [bp+var_8]
ROM:1A4B		 push	 di
ROM:1A4C		 call	 SET_VALUE
ROM:1A4F		 add	 sp, 2
ROM:1A52		 test	 ax, ax
ROM:1A54		 jnz	 short loc_FDA59
ROM:1A56		 jmp	 loc_FDB01
ROM:1A59 ; ───────────────────────────────────────────────────────────────────────────
ROM:1A59
ROM:1A59 loc_FDA59:				 ; CODE	XREF: sub_FD9DE+68j
ROM:1A59					 ; sub_FD9DE+76j
ROM:1A59		 call	 sub_FDB72
ROM:1A5C		 lea	 di, [bp+var_18]
ROM:1A5F		 mov	 si, SYSCALL_ARG_OFF
ROM:1A63		 and	 si, 0Fh
ROM:1A67		 add	 di, si
ROM:1A69		 mov	 al, [di]
ROM:1A6B		 cbw
ROM:1A6C		 push	 ax
ROM:1A6D		 call	 PRINT_STH
ROM:1A70		 add	 sp, 2
ROM:1A73
ROM:1A73 loc_FDA73:				 ; CODE	XREF: sub_FD9DE+F1j
ROM:1A73		 cmp	 [bp+var_8], 0
ROM:1A77		 jz	 short loc_FDAD4
ROM:1A79		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:1A7C		 mov	 [bp+var_6], al
ROM:1A7F		 mov	 al, [bp+var_6]
ROM:1A82		 cbw
ROM:1A83		 push	 ax
ROM:1A84		 call	 PRINT_HEX_STAT
ROM:1A87		 add	 sp, 2
ROM:1A8A		 inc	 SYSCALL_ARG_OFF
ROM:1A8E		 dec	 [bp+var_8]
ROM:1A91		 test	 SYSCALL_ARG_OFF, 3
ROM:1A97		 jnz	 short loc_FDAA3
ROM:1A99		 mov	 di, 1
ROM:1A9C		 push	 di
ROM:1A9D		 call	 PRINT_STH
ROM:1AA0		 add	 sp, 2
ROM:1AA3
ROM:1AA3 loc_FDAA3:				 ; CODE	XREF: sub_FD9DE+B9j
ROM:1AA3		 test	 SYSCALL_ARG_OFF, 0Fh
ROM:1AA9		 jnz	 short loc_FDABB
ROM:1AAB		 dec	 SYSCALL_ARG_OFF
ROM:1AAF		 call	 sub_FDB04
ROM:1AB2		 cmp	 [bp+var_8], 0
ROM:1AB6		 jz	 short loc_FDABB
ROM:1AB8		 call	 sub_FDB72
ROM:1ABB
ROM:1ABB loc_FDABB:				 ; CODE	XREF: sub_FD9DE+CBj
ROM:1ABB					 ; sub_FD9DE+D8j
ROM:1ABB		 mov	 al, COMMAND_CHAR
ROM:1ABE		 cbw
ROM:1ABF		 push	 ax
ROM:1AC0		 mov	 di, 0FFFFh
ROM:1AC3		 push	 di
ROM:1AC4		 sub	 di, di
ROM:1AC6		 push	 di
ROM:1AC7		 call	 CHANNEL_RX
ROM:1ACA		 add	 sp, 6
ROM:1ACD		 test	 ax, ax
ROM:1ACF		 jz	 short loc_FDA73
ROM:1AD1		 call	 sub_FD9A6
ROM:1AD4
ROM:1AD4 loc_FDAD4:				 ; CODE	XREF: sub_FD9DE+99j
ROM:1AD4		 test	 SYSCALL_ARG_OFF, 0Fh
ROM:1ADA		 jz	 short loc_FDB01
ROM:1ADC		 mov	 di, 24h ; '$'
ROM:1ADF		 lea	 si, [bp+var_18]
ROM:1AE2		 mov	 dx, SYSCALL_ARG_OFF
ROM:1AE6		 and	 dx, 0Fh
ROM:1AEA		 add	 si, dx
ROM:1AEC		 mov	 al, [si]
ROM:1AEE		 cbw
ROM:1AEF		 sub	 di, ax
ROM:1AF1		 push	 di
ROM:1AF2		 call	 PRINT_STH
ROM:1AF5		 add	 sp, 2
ROM:1AF8		 and	 SYSCALL_ARG_OFF, 0FFF0h
ROM:1AFE		 call	 sub_FDB04
ROM:1B01
ROM:1B01 loc_FDB01:				 ; CODE	XREF: sub_FD9DE+59j
ROM:1B01					 ; sub_FD9DE+78j ...
ROM:1B01		 jmp	 COMMON_RETURN
ROM:1B01 sub_FD9DE	 endp
ROM:1B01
ROM:1B04
ROM:1B04 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1B04
ROM:1B04 ; Attributes: bp-based	frame
ROM:1B04
ROM:1B04 sub_FDB04	 proc near		 ; CODE	XREF: sub_FD9DE+D1p
ROM:1B04					 ; sub_FD9DE+120p
ROM:1B04
ROM:1B04 var_C		 = word	ptr -0Ch
ROM:1B04 var_A		 = word	ptr -0Ah
ROM:1B04 var_8		 = word	ptr -8
ROM:1B04 var_6		 = word	ptr -6
ROM:1B04
ROM:1B04		 push	 bp
ROM:1B05		 mov	 bp, sp
ROM:1B07		 push	 di
ROM:1B08		 push	 si
ROM:1B09		 sub	 sp, 8
ROM:1B0C		 mov	 byte ptr [bp+var_6], 2Ah ; '*'
ROM:1B10		 mov	 byte ptr [bp+var_8], 2Eh ; '.'
ROM:1B14		 mov	 di, 2
ROM:1B17		 push	 di
ROM:1B18		 call	 PRINT_STH
ROM:1B1B		 add	 sp, 2
ROM:1B1E		 lea	 di, [bp+var_6]
ROM:1B21		 push	 di
ROM:1B22		 call	 PUTCHAR_CONSOLE
ROM:1B25		 add	 sp, 2
ROM:1B28		 and	 SYSCALL_ARG_OFF, 0FFF0h
ROM:1B2E		 mov	 [bp+var_C], 0
ROM:1B33
ROM:1B33 loc_FDB33:				 ; CODE	XREF: sub_FDB04+5Fj
ROM:1B33		 call	 GET_SYSCALL_ARG_BYTE ;	BX = offset
ROM:1B36		 and	 ax, 7Fh
ROM:1B39		 mov	 byte ptr [bp+var_A], al
ROM:1B3C		 cmp	 byte ptr [bp+var_A], 20h ; ' '
ROM:1B40		 jl	 short loc_FDB48
ROM:1B42		 cmp	 byte ptr [bp+var_A], 7Eh ; '~'
ROM:1B46		 jle	 short loc_FDB4E
ROM:1B48
ROM:1B48 loc_FDB48:				 ; CODE	XREF: sub_FDB04+3Cj
ROM:1B48		 lea	 di, [bp+var_8]
ROM:1B4B		 push	 di
ROM:1B4C		 jmp	 short loc_FDB52
ROM:1B4E ; ───────────────────────────────────────────────────────────────────────────
ROM:1B4E
ROM:1B4E loc_FDB4E:				 ; CODE	XREF: sub_FDB04+42j
ROM:1B4E		 lea	 di, [bp+var_A]
ROM:1B51		 push	 di
ROM:1B52
ROM:1B52 loc_FDB52:				 ; CODE	XREF: sub_FDB04+48j
ROM:1B52		 call	 PUTCHAR_CONSOLE
ROM:1B55		 add	 sp, 2
ROM:1B58		 inc	 SYSCALL_ARG_OFF
ROM:1B5C		 inc	 [bp+var_C]
ROM:1B5F		 cmp	 [bp+var_C], 0Fh
ROM:1B63		 jle	 short loc_FDB33
ROM:1B65		 lea	 di, [bp+var_6]
ROM:1B68		 push	 di
ROM:1B69		 call	 PUTCHAR_CONSOLE
ROM:1B6C		 add	 sp, 2
ROM:1B6F		 jmp	 COMMON_RETURN
ROM:1B6F sub_FDB04	 endp
ROM:1B6F
ROM:1B72
ROM:1B72 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1B72
ROM:1B72 ; Attributes: bp-based	frame
ROM:1B72
ROM:1B72 sub_FDB72	 proc near		 ; CODE	XREF: sub_FD85A+3Cp
ROM:1B72					 ; sub_FD9DE:loc_FDA59p ...
ROM:1B72
ROM:1B72 var_6		 = word	ptr -6
ROM:1B72
ROM:1B72		 push	 bp
ROM:1B73		 mov	 bp, sp
ROM:1B75		 push	 di
ROM:1B76		 push	 si
ROM:1B77		 sub	 sp, 2
ROM:1B7A		 mov	 byte ptr [bp+var_6], 3Ah ; ':'
ROM:1B7E		 call	 sub_FD342
ROM:1B81		 push	 SYSCALL_ARG_SEG
ROM:1B85		 call	 sub_FD2E6
ROM:1B88		 add	 sp, 2
ROM:1B8B		 lea	 di, [bp+var_6]
ROM:1B8E		 push	 di
ROM:1B8F		 call	 PUTCHAR_CONSOLE
ROM:1B92		 add	 sp, 2
ROM:1B95		 push	 SYSCALL_ARG_OFF
ROM:1B99		 call	 sub_FD2E6
ROM:1B9C		 add	 sp, 2
ROM:1B9F		 mov	 di, 2
ROM:1BA2		 push	 di
ROM:1BA3		 call	 PRINT_STH
ROM:1BA6		 add	 sp, 2
ROM:1BA9		 jmp	 COMMON_RETURN
ROM:1BA9 sub_FDB72	 endp
ROM:1BA9
ROM:1BAC
ROM:1BAC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1BAC
ROM:1BAC ; Attributes: bp-based	frame
ROM:1BAC
ROM:1BAC sub_FDBAC	 proc near		 ; CODE	XREF: CHANNEL_IO+CCp
ROM:1BAC					 ; CHANNEL_IO+D8p ...
ROM:1BAC
ROM:1BAC var_A		 = word	ptr -0Ah
ROM:1BAC var_8		 = word	ptr -8
ROM:1BAC var_6		 = word	ptr -6
ROM:1BAC
ROM:1BAC		 push	 bp
ROM:1BAD		 mov	 bp, sp
ROM:1BAF		 push	 di
ROM:1BB0		 push	 si
ROM:1BB1		 sub	 sp, 6
ROM:1BB4		 call	 sub_FDC06
ROM:1BB7		 mov	 [bp+var_8], ax
ROM:1BBA		 call	 sub_FDC06
ROM:1BBD		 mov	 [bp+var_A], ax
ROM:1BC0		 lea	 di, [bp+var_6]
ROM:1BC3		 push	 di
ROM:1BC4		 push	 ax
ROM:1BC5		 push	 [bp+var_8]
ROM:1BC8		 call	 sub_FDCDA
ROM:1BCB		 add	 sp, 6
ROM:1BCE		 test	 ax, ax
ROM:1BD0		 jz	 short loc_FDBDF
ROM:1BD2		 mov	 di, [bp+var_6]
ROM:1BD5		 and	 di, 0FFh
ROM:1BD9		 add	 word_F28, di
ROM:1BDD		 jmp	 short loc_FDBE2
ROM:1BDF ; ───────────────────────────────────────────────────────────────────────────
ROM:1BDF
ROM:1BDF loc_FDBDF:				 ; CODE	XREF: sub_FDBAC+24j
ROM:1BDF		 call	 ERROR_CONSOLE
ROM:1BE2
ROM:1BE2 loc_FDBE2:				 ; CODE	XREF: sub_FDBAC+31j
ROM:1BE2		 mov	 ax, [bp+var_6]
ROM:1BE5		 jmp	 COMMON_RETURN
ROM:1BE5 sub_FDBAC	 endp
ROM:1BE5
ROM:1BE8
ROM:1BE8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1BE8
ROM:1BE8 ; Attributes: bp-based	frame
ROM:1BE8
ROM:1BE8 sub_FDBE8	 proc near		 ; CODE	XREF: CHANNEL_IO+D2p
ROM:1BE8					 ; CHANNEL_IO:loc_FCEA3p ...
ROM:1BE8
ROM:1BE8 var_6		 = word	ptr -6
ROM:1BE8
ROM:1BE8		 push	 bp
ROM:1BE9		 mov	 bp, sp
ROM:1BEB		 push	 di
ROM:1BEC		 push	 si
ROM:1BED		 sub	 sp, 2
ROM:1BF0		 call	 sub_FDBAC
ROM:1BF3		 mov	 cx, 8
ROM:1BF6		 shl	 ax, cl
ROM:1BF8		 push	 ax
ROM:1BF9		 call	 sub_FDBAC
ROM:1BFC		 pop	 bx
ROM:1BFD		 add	 ax, bx
ROM:1BFF		 mov	 [bp+var_6], ax
ROM:1C02		 jmp	 COMMON_RETURN
ROM:1C02 sub_FDBE8	 endp
ROM:1C02
ROM:1C02 ; ───────────────────────────────────────────────────────────────────────────
ROM:1C05		 db    0
ROM:1C06
ROM:1C06 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C06
ROM:1C06 ; Attributes: bp-based	frame
ROM:1C06
ROM:1C06 sub_FDC06	 proc near		 ; CODE	XREF: CHANNEL_IO:loc_FCE18p
ROM:1C06					 ; sub_FDBAC+8p ...
ROM:1C06
ROM:1C06 var_6		 = word	ptr -6
ROM:1C06
ROM:1C06		 push	 bp
ROM:1C07		 mov	 bp, sp
ROM:1C09		 push	 di
ROM:1C0A		 push	 si
ROM:1C0B		 sub	 sp, 6
ROM:1C0E		 mov	 di, word_F26
ROM:1C12		 cmp	 word_F22, di
ROM:1C16		 jb	 short loc_FDC55
ROM:1C18		 cmp	 word_F24, 12Ch
ROM:1C1E		 jbe	 short loc_FDC2E
ROM:1C20		 mov	 word_F26, 12Ch
ROM:1C26		 sub	 word_F24, 12Ch
ROM:1C2C		 jmp	 short loc_FDC3C
ROM:1C2E ; ───────────────────────────────────────────────────────────────────────────
ROM:1C2E
ROM:1C2E loc_FDC2E:				 ; CODE	XREF: sub_FDC06+18j
ROM:1C2E		 mov	 di, word_F24
ROM:1C32		 mov	 word_F26, di
ROM:1C36		 mov	 word_F24, 0
ROM:1C3C
ROM:1C3C loc_FDC3C:				 ; CODE	XREF: sub_FDC06+26j
ROM:1C3C		 mov	 di, offset BOOT_SECTOR_BUF ; While overlaying the IO progrem this RAM area does not
ROM:1C3C					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:1C3C					 ; buffer to read the boot sectors in from the FD & HD.
ROM:1C3F		 push	 di
ROM:1C40		 push	 word_F26
ROM:1C44		 mov	 al, byte_512
ROM:1C47		 cbw
ROM:1C48		 push	 ax
ROM:1C49		 call	 CHANNEL_RX
ROM:1C4C		 add	 sp, 6
ROM:1C4F		 mov	 word_F22, 0
ROM:1C55
ROM:1C55 loc_FDC55:				 ; CODE	XREF: sub_FDC06+10j
ROM:1C55		 mov	 di, word_F22
ROM:1C59		 mov	 al, BOOT_SECTOR_BUF[di] ; While overlaying the	IO progrem this	RAM area does not
ROM:1C59					 ; seem	to be passed to	the IOP. Instead, it is	used as	a
ROM:1C59					 ; buffer to read the boot sectors in from the FD & HD.
ROM:1C5D		 cbw
ROM:1C5E		 mov	 [bp+var_6], ax
ROM:1C61		 inc	 word_F22
ROM:1C65		 jmp	 COMMON_RETURN
ROM:1C65 sub_FDC06	 endp
ROM:1C65
ROM:1C68
ROM:1C68 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C68
ROM:1C68 ; Attributes: bp-based	frame
ROM:1C68
ROM:1C68 sub_FDC68	 proc near		 ; CODE	XREF: sub_FD0CE+12p
ROM:1C68					 ; sub_FD0CE+33p ...
ROM:1C68		 push	 bp
ROM:1C69		 mov	 bp, sp
ROM:1C6B		 push	 di
ROM:1C6C		 push	 si
ROM:1C6D		 call	 READ_CHAR_TO_AL
ROM:1C70		 mov	 COMMAND_CHAR, al
ROM:1C73		 call	 sub_FCA34
ROM:1C76		 jmp	 COMMON_RETURN
ROM:1C76 sub_FDC68	 endp
ROM:1C76
ROM:1C76 ; ───────────────────────────────────────────────────────────────────────────
ROM:1C79		 db    0
ROM:1C7A
ROM:1C7A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C7A
ROM:1C7A ; Attributes: bp-based	frame
ROM:1C7A
ROM:1C7A SET_VALUE	 proc near		 ; CODE	XREF: sub_FD0CE+53p
ROM:1C7A					 ; HANDLE_IO_COMMAND+35p ...
ROM:1C7A
ROM:1C7A IOPORT_ADDR	 = word	ptr  4
ROM:1C7A
ROM:1C7A		 push	 bp
ROM:1C7B		 mov	 bp, sp
ROM:1C7D		 push	 di
ROM:1C7E		 push	 si
ROM:1C7F		 call	 READ_CHAR_TO_AL
ROM:1C82		 mov	 COMMAND_CHAR, al
ROM:1C85		 push	 [bp+IOPORT_ADDR]
ROM:1C88		 call	 sub_FCAA2
ROM:1C8B		 add	 sp, 2
ROM:1C8E		 jmp	 COMMON_RETURN
ROM:1C8E SET_VALUE	 endp
ROM:1C8E
ROM:1C8E ; ───────────────────────────────────────────────────────────────────────────
ROM:1C91		 db    0
ROM:1C92
ROM:1C92 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1C92
ROM:1C92 ; Attributes: bp-based	frame
ROM:1C92
ROM:1C92 sub_FDC92	 proc near		 ; CODE	XREF: sub_FD554+9Bp
ROM:1C92					 ; sub_FD906+16p
ROM:1C92
ROM:1C92 arg_0		 = word	ptr  4
ROM:1C92
ROM:1C92		 push	 bp
ROM:1C93		 mov	 bp, sp
ROM:1C95		 push	 di
ROM:1C96		 push	 si
ROM:1C97		 call	 READ_CHAR_TO_AL
ROM:1C9A		 mov	 COMMAND_CHAR, al
ROM:1C9D		 push	 [bp+arg_0]
ROM:1CA0		 call	 sub_FCB5E
ROM:1CA3		 add	 sp, 2
ROM:1CA6		 jmp	 COMMON_RETURN
ROM:1CA6 sub_FDC92	 endp
ROM:1CA6
ROM:1CA6 ; ───────────────────────────────────────────────────────────────────────────
ROM:1CA9		 db    0
ROM:1CAA
ROM:1CAA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CAA
ROM:1CAA ; Attributes: bp-based	frame
ROM:1CAA
ROM:1CAA DO_INB		 proc near		 ; CODE	XREF: HANDLE_IO_COMMAND+77p
ROM:1CAA
ROM:1CAA IOPORT_ADDR	 = word	ptr  4
ROM:1CAA
ROM:1CAA		 push	 bp
ROM:1CAB		 mov	 bp, sp
ROM:1CAD		 mov	 dx, [bp+IOPORT_ADDR]
ROM:1CB0		 in	 al, dx
ROM:1CB1		 pop	 bp
ROM:1CB2		 retn
ROM:1CB2 DO_INB		 endp
ROM:1CB2
ROM:1CB3
ROM:1CB3 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CB3
ROM:1CB3 ; Attributes: bp-based	frame
ROM:1CB3
ROM:1CB3 DO_INW		 proc near		 ; CODE	XREF: HANDLE_IO_COMMAND+58p
ROM:1CB3
ROM:1CB3 IOPORT_ADDR	 = word	ptr  4
ROM:1CB3
ROM:1CB3		 push	 bp
ROM:1CB4		 mov	 bp, sp
ROM:1CB6		 mov	 dx, [bp+IOPORT_ADDR]
ROM:1CB9		 in	 ax, dx
ROM:1CBA		 pop	 bp
ROM:1CBB		 retn
ROM:1CBB DO_INW		 endp
ROM:1CBB
ROM:1CBC
ROM:1CBC ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CBC
ROM:1CBC ; Attributes: bp-based	frame
ROM:1CBC
ROM:1CBC DO_OUTB	 proc near		 ; CODE	XREF: HANDLE_IO_COMMAND+ABp
ROM:1CBC
ROM:1CBC IOPORT_ADDR	 = word	ptr  4
ROM:1CBC BYTE_VAL	 = byte	ptr  6
ROM:1CBC
ROM:1CBC		 push	 bp
ROM:1CBD		 mov	 bp, sp
ROM:1CBF		 mov	 dx, [bp+IOPORT_ADDR]
ROM:1CC2		 mov	 al, [bp+BYTE_VAL]
ROM:1CC5		 out	 dx, al
ROM:1CC6		 pop	 bp
ROM:1CC7		 retn
ROM:1CC7 DO_OUTB	 endp
ROM:1CC7
ROM:1CC8
ROM:1CC8 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CC8
ROM:1CC8 ; Attributes: bp-based	frame
ROM:1CC8
ROM:1CC8 DO_OUTW	 proc near		 ; CODE	XREF: HANDLE_IO_COMMAND+9Dp
ROM:1CC8
ROM:1CC8 IOPORT_ADDR	 = word	ptr  4
ROM:1CC8 WORD_VAL	 = word	ptr  6
ROM:1CC8
ROM:1CC8		 push	 bp
ROM:1CC9		 mov	 bp, sp
ROM:1CCB		 mov	 dx, [bp+IOPORT_ADDR]
ROM:1CCE		 mov	 ax, [bp+WORD_VAL]
ROM:1CD1		 out	 dx, ax
ROM:1CD2		 pop	 bp
ROM:1CD3		 retn
ROM:1CD3 DO_OUTW	 endp
ROM:1CD3
ROM:1CD4
ROM:1CD4 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CD4
ROM:1CD4
ROM:1CD4 INC_NEW_CMD_REG proc near		 ; CODE	XREF: CHANNEL_RX+47p
ROM:1CD4					 ; CHANNEL_RX+7Cp ...
ROM:1CD4		 inc	 NEW_CMD_REG
ROM:1CD8		 retn
ROM:1CD8 INC_NEW_CMD_REG endp
ROM:1CD8
ROM:1CD8 ; ───────────────────────────────────────────────────────────────────────────
ROM:1CD9		 db    0
ROM:1CDA
ROM:1CDA ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1CDA
ROM:1CDA ; Attributes: bp-based	frame
ROM:1CDA
ROM:1CDA sub_FDCDA	 proc near		 ; CODE	XREF: sub_FDBAC+1Cp
ROM:1CDA
ROM:1CDA var_A		 = word	ptr -0Ah
ROM:1CDA var_8		 = word	ptr -8
ROM:1CDA var_6		 = byte	ptr -6
ROM:1CDA var_4		 = word	ptr -4
ROM:1CDA arg_0		 = byte	ptr  4
ROM:1CDA arg_2		 = byte	ptr  6
ROM:1CDA arg_4		 = word	ptr  8
ROM:1CDA
ROM:1CDA		 push	 bp
ROM:1CDB		 mov	 bp, sp
ROM:1CDD		 push	 di
ROM:1CDE		 push	 si
ROM:1CDF		 sub	 sp, 6
ROM:1CE2		 mov	 [bp+var_6], 1
ROM:1CE6		 lea	 di, [bp+var_8]
ROM:1CE9		 push	 di
ROM:1CEA		 mov	 al, [bp+arg_0]
ROM:1CED		 cbw
ROM:1CEE		 push	 ax
ROM:1CEF		 call	 sub_FD944
ROM:1CF2		 add	 sp, 4
ROM:1CF5		 mov	 [bp+var_6], al
ROM:1CF8		 cmp	 [bp+var_6], 0
ROM:1CFC		 jz	 short loc_FDD11
ROM:1CFE		 lea	 di, [bp+var_A]
ROM:1D01		 push	 di
ROM:1D02		 mov	 al, [bp+arg_2]
ROM:1D05		 cbw
ROM:1D06		 push	 ax
ROM:1D07		 call	 sub_FD944
ROM:1D0A		 add	 sp, 4
ROM:1D0D		 test	 ax, ax
ROM:1D0F		 jnz	 short loc_FDD15
ROM:1D11
ROM:1D11 loc_FDD11:				 ; CODE	XREF: sub_FDCDA+22j
ROM:1D11		 sub	 di, di
ROM:1D13		 jmp	 short loc_FDD18
ROM:1D15 ; ───────────────────────────────────────────────────────────────────────────
ROM:1D15
ROM:1D15 loc_FDD15:				 ; CODE	XREF: sub_FDCDA+35j
ROM:1D15		 mov	 di, 1
ROM:1D18
ROM:1D18 loc_FDD18:				 ; CODE	XREF: sub_FDCDA+39j
ROM:1D18		 mov	 dx, di
ROM:1D1A		 mov	 [bp+var_6], dl
ROM:1D1D		 mov	 bx, [bp+arg_4]
ROM:1D20		 mov	 al, byte ptr [bp+var_8]
ROM:1D23		 cbw
ROM:1D24		 mov	 cx, 4
ROM:1D27		 shl	 ax, cl
ROM:1D29		 mov	 dx, ax
ROM:1D2B		 mov	 al, byte ptr [bp+var_A]
ROM:1D2E		 cbw
ROM:1D2F		 add	 dx, ax
ROM:1D31		 mov	 [bx], dl
ROM:1D33		 mov	 al, [bp+var_6]
ROM:1D36		 cbw
ROM:1D37		 jmp	 $+3
ROM:1D37 sub_FDCDA	 endp
ROM:1D37
ROM:1D3A
ROM:1D3A ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:1D3A
ROM:1D3A
ROM:1D3A COMMON_RETURN	 proc near		 ; CODE	XREF: DO_GETCHAR:loc_FC3E6j
ROM:1D3A					 ; DO_PUTCHAR+17j ...
ROM:1D3A		 lea	 sp, [bp-4]
ROM:1D3D		 pop	 si
ROM:1D3E		 pop	 di
ROM:1D3F		 pop	 bp
ROM:1D40		 retn
ROM:1D40 COMMON_RETURN	 endp ;	sp =  6
ROM:1D40
ROM:1D40 ; ───────────────────────────────────────────────────────────────────────────
ROM:1D41		 db 2BFh dup(	0)
ROM:2000
ROM:2000 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:2000
ROM:2000
ROM:2000 SYSCALL_ENTRY	 proc near
ROM:2000		 jmp	 far ptr SYSCALL_TRAMPOLINE
ROM:2000 SYSCALL_ENTRY	 endp
ROM:2000
ROM:2005
ROM:2005 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:2005
ROM:2005 ; Attributes: thunk
ROM:2005
ROM:2005 POST_TRAMPOLINE proc near		 ; CODE	XREF: ENTRY:loc_FC029J
ROM:2005		 jmp	 POST
ROM:2005 POST_TRAMPOLINE endp
ROM:2005
ROM:2008
ROM:2008 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:2008
ROM:2008 ; Attributes: thunk
ROM:2008
ROM:2008 SETUP_INTC1_TRAMPOLINE	proc near	 ; CODE	XREF: SETUP_INTC1_TRAMPOLINE_2J
ROM:2008		 jmp	 SETUP_IRQS
ROM:2008 SETUP_INTC1_TRAMPOLINE	endp
ROM:2008
ROM:200B
ROM:200B ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:200B
ROM:200B ; Attributes: thunk
ROM:200B
ROM:200B POKE_IOP1_TRAMPOLINE proc near		 ; CODE	XREF: POKE_IOP1_TRAMPOLINE2J
ROM:200B		 jmp	 POKE_IOP1
ROM:200B POKE_IOP1_TRAMPOLINE endp
ROM:200B
ROM:200E
ROM:200E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:200E
ROM:200E
ROM:200E POST		 proc near		 ; CODE	XREF: POST_TRAMPOLINEj
ROM:200E		 mov	 ax, 0FC00h
ROM:2011		 mov	 ds, ax
ROM:2013		 assume	ds:ROM
ROM:2013		 xor	 bx, bx
ROM:2015		 xor	 al, al
ROM:2017		 mov	 cx, 4000h
ROM:201A
ROM:201A loc_FE01A:				 ; CODE	XREF: POST+Fj
ROM:201A		 add	 al, [bx]
ROM:201C		 inc	 bx
ROM:201D		 loop	 loc_FE01A
ROM:201F		 and	 al, al
ROM:2021		 jz	 short loc_FE027
ROM:2023		 mov	 bl, 1		 ; POST	error 1	-- BIOS	checksum failed
ROM:2025		 jmp	 short loc_FE049
ROM:2027 ; ───────────────────────────────────────────────────────────────────────────
ROM:2027
ROM:2027 loc_FE027:				 ; CODE	XREF: POST+13j
ROM:2027		 mov	 cx, 11h
ROM:202A		 xor	 si, si
ROM:202C		 mov	 dx, 200h
ROM:202F		 stc
ROM:2030
ROM:2030 loc_FE030:				 ; CODE	XREF: POST+35j
ROM:2030		 mov	 ax, si
ROM:2032		 mov	 bx, si
ROM:2034		 out	 dx, ax		 ; MMU Memory Management Ports
ROM:2035		 in	 ax, dx		 ; MMU Memory Management Ports
ROM:2036		 rcl	 si, 1
ROM:2038		 and	 ax, 0F8FFh
ROM:203B		 and	 bx, 0F8FFh
ROM:203F		 cmp	 ax, bx
ROM:2041		 jnz	 short POST_FAILED_02
ROM:2043		 loop	 loc_FE030
ROM:2045		 jmp	 short loc_FE04B
ROM:2047 ; ───────────────────────────────────────────────────────────────────────────
ROM:2047
ROM:2047 POST_FAILED_02:			 ; CODE	XREF: POST+33j
ROM:2047		 mov	 bl, 2		 ; POST	failed 2 -- MMU	port readback bad
ROM:2049
ROM:2049 loc_FE049:				 ; CODE	XREF: POST+17j
ROM:2049		 jmp	 short loc_FE08A
ROM:204B ; ───────────────────────────────────────────────────────────────────────────
ROM:204B
ROM:204B loc_FE04B:				 ; CODE	XREF: POST+37j
ROM:204B		 mov	 cx, 9
ROM:204E		 mov	 dx, 200h
ROM:2051		 xor	 ax, ax
ROM:2053		 mov	 bx, 1
ROM:2056
ROM:2056 loc_FE056:				 ; CODE	XREF: POST+51j
ROM:2056		 out	 dx, ax		 ; MMU Memory Management Ports
ROM:2057		 rcl	 bx, 1
ROM:2059		 mov	 dx, bx
ROM:205B		 add	 dx, 200h
ROM:205F		 loop	 loc_FE056
ROM:2061		 mov	 cx, 9
ROM:2064		 mov	 dx, 200h
ROM:2067		 mov	 bx, 1
ROM:206A
ROM:206A loc_FE06A:				 ; CODE	XREF: POST+76j
ROM:206A		 in	 ax, dx		 ; MMU Memory Management Ports
ROM:206B		 and	 ax, 0F8FFh
ROM:206E		 jnz	 short POST_FAILED_03
ROM:2070		 not	 ax
ROM:2072		 out	 dx, ax		 ; MMU Memory Management Ports
ROM:2073		 in	 ax, dx		 ; MMU Memory Management Ports
ROM:2074		 and	 ax, 0F8FFh
ROM:2077		 cmp	 ax, 0F8FFh
ROM:207A		 jnz	 short POST_FAILED_03
ROM:207C		 rcl	 bx, 1
ROM:207E		 mov	 dx, bx
ROM:2080		 add	 dx, 200h
ROM:2084		 loop	 loc_FE06A
ROM:2086		 jmp	 short loc_FE08C
ROM:2088 ; ───────────────────────────────────────────────────────────────────────────
ROM:2088
ROM:2088 POST_FAILED_03:			 ; CODE	XREF: POST+60j
ROM:2088					 ; POST+6Cj
ROM:2088		 mov	 bl, 3		 ; POST	error 3	-- MMU port error
ROM:208A
ROM:208A loc_FE08A:				 ; CODE	XREF: POST:loc_FE049j
ROM:208A		 jmp	 short loc_FE0B9
ROM:208C ; ───────────────────────────────────────────────────────────────────────────
ROM:208C
ROM:208C loc_FE08C:				 ; CODE	XREF: POST+78j
ROM:208C		 mov	 cx, 100h
ROM:208F		 mov	 dx, 200h
ROM:2092		 xor	 ax, ax
ROM:2094
ROM:2094 loc_FE094:				 ; CODE	XREF: POST+89j
ROM:2094		 out	 dx, ax		 ; MMU Memory Management Ports
ROM:2095		 inc	 dx
ROM:2096		 inc	 dx
ROM:2097		 loop	 loc_FE094
ROM:2099		 mov	 cx, 100h
ROM:209C		 mov	 dx, 200h
ROM:209F
ROM:209F loc_FE09F:				 ; CODE	XREF: POST+A5j
ROM:209F		 in	 ax, dx		 ; MMU Memory Management Ports
ROM:20A0		 and	 ax, 0F8FFh
ROM:20A3		 jnz	 short POST_FAILED_04
ROM:20A5		 not	 ax
ROM:20A7		 out	 dx, ax		 ; MMU Memory Management Ports
ROM:20A8		 in	 ax, dx		 ; MMU Memory Management Ports
ROM:20A9		 and	 ax, 0F8FFh
ROM:20AC		 cmp	 ax, 0F8FFh
ROM:20AF		 jnz	 short POST_FAILED_04
ROM:20B1		 inc	 dx
ROM:20B2		 inc	 dx
ROM:20B3		 loop	 loc_FE09F
ROM:20B5		 jmp	 short loc_FE0BB
ROM:20B7 ; ───────────────────────────────────────────────────────────────────────────
ROM:20B7
ROM:20B7 POST_FAILED_04:			 ; CODE	XREF: POST+95j
ROM:20B7					 ; POST+A1j
ROM:20B7		 mov	 bl, 4		 ; POST	error 4	-- MMU port readback bad
ROM:20B9
ROM:20B9 loc_FE0B9:				 ; CODE	XREF: POST:loc_FE08Aj
ROM:20B9		 jmp	 short loc_FE0DD
ROM:20BB ; ───────────────────────────────────────────────────────────────────────────
ROM:20BB
ROM:20BB loc_FE0BB:				 ; CODE	XREF: POST+A7j
ROM:20BB		 lea	 di, loc_FE0C2
ROM:20BF		 jmp	 INIT_MEMORY_MAPPING
ROM:20C2 ; ───────────────────────────────────────────────────────────────────────────
ROM:20C2
ROM:20C2 loc_FE0C2:				 ; DATA	XREF: POST:loc_FE0BBo
ROM:20C2		 xor	 ax, ax
ROM:20C4		 mov	 ds, ax
ROM:20C6		 assume	ds:ZERO
ROM:20C6		 mov	 INT0_OFF, ax
ROM:20C9		 mov	 cx, 11h
ROM:20CC		 mov	 dx, ax
ROM:20CE		 mov	 ax, 1
ROM:20D1
ROM:20D1 loc_FE0D1:				 ; CODE	XREF: POST+D6j
ROM:20D1		 mov	 INT0_OFF, dx
ROM:20D5		 cmp	 INT0_OFF, dx
ROM:20D9		 jz	 short loc_FE0E0
ROM:20DB		 mov	 bl, 5		 ; POST	error 5	--
ROM:20DD
ROM:20DD loc_FE0DD:				 ; CODE	XREF: POST:loc_FE0B9j
ROM:20DD		 jmp	 GO_LOW_INIT
ROM:20E0 ; ───────────────────────────────────────────────────────────────────────────
ROM:20E0
ROM:20E0 loc_FE0E0:				 ; CODE	XREF: POST+CBj
ROM:20E0		 mov	 dx, ax
ROM:20E2		 shl	 ax, 1
ROM:20E4		 loop	 loc_FE0D1
ROM:20E6		 lea	 di, loc_FE0ED
ROM:20EA		 jmp	 SWITCH_STACK
ROM:20ED ; ───────────────────────────────────────────────────────────────────────────
ROM:20ED
ROM:20ED loc_FE0ED:				 ; DATA	XREF: POST+D8o
ROM:20ED		 mov	 si, 20h ; ' '
ROM:20F0		 and	 ax, ax
ROM:20F2		 jz	 short loc_FE0F7
ROM:20F4		 mov	 si, 3Fh ; '?'
ROM:20F7
ROM:20F7 loc_FE0F7:				 ; CODE	XREF: POST+E4j
ROM:20F7		 mov	 bp, si
ROM:20F9		 xor	 ax, ax
ROM:20FB		 lea	 di, RET_5
ROM:20FF
ROM:20FF loc_FE0FF:				 ; CODE	XREF: POST+F7j
ROM:20FF		 jmp	 short loc_FE119
ROM:2101 ; ───────────────────────────────────────────────────────────────────────────
ROM:2101
ROM:2101 RET_5:					 ; DATA	XREF: POST+EDo
ROM:2101		 add	 ax, 400h
ROM:2104		 dec	 si
ROM:2105		 jnz	 short loc_FE0FF
ROM:2107		 mov	 si, bp
ROM:2109		 xor	 ax, ax
ROM:210B		 lea	 di, RET_6
ROM:210F
ROM:210F loc_FE10F:				 ; CODE	XREF: POST+107j
ROM:210F		 jmp	 short loc_FE12B
ROM:2111 ; ───────────────────────────────────────────────────────────────────────────
ROM:2111
ROM:2111 RET_6:					 ; DATA	XREF: POST+FDo
ROM:2111		 add	 ax, 400h
ROM:2114		 dec	 si
ROM:2115		 jnz	 short loc_FE10F
ROM:2117		 jmp	 short loc_FE152
ROM:2119 ; ───────────────────────────────────────────────────────────────────────────
ROM:2119
ROM:2119 loc_FE119:				 ; CODE	XREF: POST:loc_FE0FFj
ROM:2119		 mov	 cx, 0Fh
ROM:211C		 xor	 bx, bx
ROM:211E		 mov	 ds, ax
ROM:2120		 assume	ds:nothing
ROM:2120		 mov	 dl, 55h ; 'U'
ROM:2122		 stc
ROM:2123
ROM:2123 loc_FE123:				 ; CODE	XREF: POST+119j
ROM:2123		 mov	 [bx], dl
ROM:2125		 rcl	 bx, 1
ROM:2127		 loop	 loc_FE123
ROM:2129		 jmp	 di
ROM:212B ; ───────────────────────────────────────────────────────────────────────────
ROM:212B
ROM:212B loc_FE12B:				 ; CODE	XREF: POST:loc_FE10Fj
ROM:212B		 mov	 cx, 0Fh
ROM:212E		 xor	 bx, bx
ROM:2130		 mov	 bp, 1
ROM:2133		 mov	 ds, ax
ROM:2135		 mov	 dl, 55h ; 'U'
ROM:2137
ROM:2137 loc_FE137:				 ; CODE	XREF: POST+13Bj
ROM:2137		 cmp	 [bx], dl
ROM:2139		 jnz	 short POST_FAILED_06
ROM:213B		 not	 dl
ROM:213D		 mov	 [bx], dl
ROM:213F		 cmp	 [bx], dl
ROM:2141		 jnz	 short POST_FAILED_06
ROM:2143		 not	 dl
ROM:2145		 mov	 bx, bp
ROM:2147		 shl	 bp, 1
ROM:2149		 loop	 loc_FE137
ROM:214B		 jmp	 di
ROM:214D ; ───────────────────────────────────────────────────────────────────────────
ROM:214D
ROM:214D POST_FAILED_06:			 ; CODE	XREF: POST+12Bj
ROM:214D					 ; POST+133j
ROM:214D		 mov	 bl, 6		 ; POST	error 6	--
ROM:214F		 jmp	 loc_FE206
ROM:2152 ; ───────────────────────────────────────────────────────────────────────────
ROM:2152
ROM:2152 loc_FE152:				 ; CODE	XREF: POST+109j
ROM:2152		 mov	 ax, 0FFFFh
ROM:2155		 xor	 di, di
ROM:2157		 mov	 es, di
ROM:2159		 mov	 ds, di
ROM:215B		 assume	ds:ZERO
ROM:215B		 mov	 cx, 1000h
ROM:215E		 rep stosw
ROM:2160		 mov	 dx, ax
ROM:2162		 lea	 di, loc_FE169
ROM:2166		 jmp	 INIT_TIMERS_INTERRUPTS
ROM:2169 ; ───────────────────────────────────────────────────────────────────────────
ROM:2169
ROM:2169 loc_FE169:				 ; DATA	XREF: POST+154o
ROM:2169		 cld
ROM:216A		 lea	 di, loc_FE171
ROM:216E		 jmp	 SWITCH_STACK
ROM:2171 ; ───────────────────────────────────────────────────────────────────────────
ROM:2171
ROM:2171 loc_FE171:				 ; DATA	XREF: POST+15Co
ROM:2171		 mov	 bl, 3Eh ; '>'
ROM:2173		 and	 ax, ax
ROM:2175		 jz	 short loc_FE179
ROM:2177		 mov	 bl, 7Dh ; '}'
ROM:2179
ROM:2179 loc_FE179:				 ; CODE	XREF: POST+167j
ROM:2179		 xor	 ax, ax
ROM:217B		 mov	 ds, ax
ROM:217D		 mov	 IOP1_PTR.CCW, bl
ROM:2181		 xor	 ax, ax
ROM:2183		 mov	 ss, ax
ROM:2185		 mov	 sp, 1000h
ROM:2188		 lea	 di, INT2_NMI_HANDLER
ROM:218C		 mov	 INT2_NMI_OFF, di
ROM:2190		 mov	 INT2_NMI_SEG, cs
ROM:2194		 in	 ax, 70h	 ; MMU Clear Violation Port
ROM:2196		 mov	 ax, 4
ROM:2199		 out	 58h, ax	 ; Z80A	I/O Processor Chan att.
ROM:219B		 mov	 dx, 101h
ROM:219E		 lea	 bp, loc_FE1A5
ROM:21A2		 jmp	 loc_FE1B1
ROM:21A5 ; ───────────────────────────────────────────────────────────────────────────
ROM:21A5
ROM:21A5 loc_FE1A5:				 ; DATA	XREF: POST+190o
ROM:21A5		 mov	 dx, 0FFFFh
ROM:21A8		 lea	 bp, loc_FE1AF
ROM:21AC		 jmp	 loc_FE1B1
ROM:21AF ; ───────────────────────────────────────────────────────────────────────────
ROM:21AF
ROM:21AF loc_FE1AF:				 ; DATA	XREF: POST+19Ao
ROM:21AF		 jmp	 short loc_FE208
ROM:21B1 ; ───────────────────────────────────────────────────────────────────────────
ROM:21B1
ROM:21B1 loc_FE1B1:				 ; CODE	XREF: POST+194j
ROM:21B1					 ; POST+19Ej
ROM:21B1		 xor	 ax, ax
ROM:21B3		 mov	 ds, ax
ROM:21B5		 mov	 bl, IOP1_PTR.CCW
ROM:21B9		 mov	 ax, 200h
ROM:21BC
ROM:21BC loc_FE1BC:				 ; CODE	XREF: POST+1C0j
ROM:21BC		 mov	 es, ax
ROM:21BE		 assume	es:nothing
ROM:21BE		 mov	 ax, dx
ROM:21C0		 xor	 di, di
ROM:21C2		 mov	 cx, 1000h
ROM:21C5		 rep stosw
ROM:21C7		 mov	 ax, es
ROM:21C9		 add	 ax, 200h
ROM:21CC		 dec	 bl
ROM:21CE		 jnz	 short loc_FE1BC
ROM:21D0		 mov	 bl, IOP1_PTR.CCW
ROM:21D4		 mov	 ax, 200h
ROM:21D7
ROM:21D7 loc_FE1D7:				 ; CODE	XREF: POST+1D9j
ROM:21D7		 mov	 ds, ax
ROM:21D9		 assume	ds:nothing
ROM:21D9		 lea	 di, loc_FE1E0
ROM:21DD		 jmp	 INIT_TIMERS_INTERRUPTS
ROM:21E0 ; ───────────────────────────────────────────────────────────────────────────
ROM:21E0
ROM:21E0 loc_FE1E0:				 ; DATA	XREF: POST+1CBo
ROM:21E0		 mov	 ax, ds
ROM:21E2		 add	 ax, 200h
ROM:21E5		 dec	 bl
ROM:21E7		 jnz	 short loc_FE1D7
ROM:21E9		 jmp	 bp
ROM:21EB ; ───────────────────────────────────────────────────────────────────────────
ROM:21EB
ROM:21EB INIT_TIMERS_INTERRUPTS:		 ; CODE	XREF: POST+158j
ROM:21EB					 ; POST+1CFj
ROM:21EB		 mov	 cx, 1000h
ROM:21EE		 xor	 si, si
ROM:21F0
ROM:21F0 loc_FE1F0:				 ; CODE	XREF: POST+1F2j
ROM:21F0		 cmp	 [si], dx
ROM:21F2		 jnz	 short POST_FAILED_07
ROM:21F4		 not	 dx
ROM:21F6		 mov	 [si], dx
ROM:21F8		 cmp	 [si], dx
ROM:21FA		 jnz	 short POST_FAILED_07
ROM:21FC		 not	 dx
ROM:21FE		 inc	 si
ROM:21FF		 inc	 si
ROM:2200		 loop	 loc_FE1F0
ROM:2202		 jmp	 di
ROM:2204 ; ───────────────────────────────────────────────────────────────────────────
ROM:2204
ROM:2204 POST_FAILED_07:			 ; CODE	XREF: POST+1E4j
ROM:2204					 ; POST+1ECj
ROM:2204		 mov	 bl, 7		 ; POST	error 7	-- ???
ROM:2206
ROM:2206 loc_FE206:				 ; CODE	XREF: POST+141j
ROM:2206		 jmp	 short loc_FE224
ROM:2208 ; ───────────────────────────────────────────────────────────────────────────
ROM:2208
ROM:2208 loc_FE208:				 ; CODE	XREF: POST:loc_FE1AFj
ROM:2208		 mov	 al, 70h ; 'p'
ROM:220A		 mov	 dx, 101h
ROM:220D		 out	 dx, al		 ; 8254	Timer Control Word Register - Write Only
ROM:220E		 mov	 ax, 0AAh ; '¬'
ROM:2211		 mov	 dx, 105h
ROM:2214		 out	 dx, al		 ; 8254	Timer Counter 1
ROM:2215		 mov	 cx, ax
ROM:2217
ROM:2217 loc_FE217:				 ; CODE	XREF: POST:loc_FE217j
ROM:2217		 loop	 loc_FE217
ROM:2219		 in	 al, dx		 ; 8254	Timer Counter 1
ROM:221A		 mov	 ah, al
ROM:221C		 in	 al, dx		 ; 8254	Timer Counter 1
ROM:221D		 cmp	 ax, 0AAAAh
ROM:2220		 jnz	 short loc_FE227
ROM:2222		 mov	 bl, 8		 ; POST	error 8	-- Timer error?
ROM:2224
ROM:2224 loc_FE224:				 ; CODE	XREF: POST:loc_FE206j
ROM:2224		 jmp	 loc_FE29B
ROM:2227 ; ───────────────────────────────────────────────────────────────────────────
ROM:2227
ROM:2227 loc_FE227:				 ; CODE	XREF: POST+212j
ROM:2227		 mov	 al, 70h ; 'p'
ROM:2229		 mov	 dx, 101h
ROM:222C		 out	 dx, al		 ; 8254	Timer Control Word Register - Write Only
ROM:222D		 mov	 dx, 105h
ROM:2230		 out	 dx, al		 ; 8254	Timer Counter 1
ROM:2231		 mov	 ax, 1F00h
ROM:2234		 mov	 ss, ax
ROM:2236		 assume	ss:nothing
ROM:2236		 mov	 sp, 0FFh
ROM:2239		 mov	 cx, 100h
ROM:223C		 lea	 dx, ds:32Ah
ROM:2240		 xor	 bx, bx
ROM:2242		 mov	 ds, bx
ROM:2244		 assume	ds:ZERO
ROM:2244
ROM:2244 loc_FE244:				 ; CODE	XREF: POST+23Ej
ROM:2244		 mov	 [bx], dx
ROM:2246		 inc	 bx
ROM:2247		 inc	 bx
ROM:2248		 mov	 word ptr [bx],	cs
ROM:224A		 inc	 bx
ROM:224B		 inc	 bx
ROM:224C		 loop	 loc_FE244
ROM:224E		 lea	 di, INT2_NMI_HANDLER
ROM:2252		 mov	 INT2_NMI_OFF, di
ROM:2256		 mov	 INT2_NMI_SEG, cs
ROM:225A		 lea	 dx, INT33_TEST_TIMER_HANDLER ;	Puts 0x21 to BH	and 1 to CX to terminate the test loop
ROM:225E		 mov	 INT33_TIMER_OFF, dx
ROM:2262		 mov	 INT33_TIMER_SEG, cs
ROM:2266		 mov	 al, 13h
ROM:2268		 out	 82h, al	 ; PIC ICW1, OCW2, or OCW3
ROM:226A		 mov	 al, 20h ; ' '
ROM:226C		 mov	 dx, 80h ; 'Ç'
ROM:226F		 out	 dx, al		 ; PIC ICW2, ICW3, ICW4, or OCW1
ROM:2270		 mov	 al, 3
ROM:2272		 out	 dx, al		 ; PIC ICW2, ICW3, ICW4, or OCW1
ROM:2273		 mov	 al, 71h ; 'q'
ROM:2275		 out	 dx, al		 ; PIC ICW2, ICW3, ICW4, or OCW1
ROM:2276		 sti
ROM:2277		 mov	 al, 56h ; 'V'
ROM:2279		 mov	 dx, 101h
ROM:227C		 out	 dx, al		 ; 8254	Timer Control Word Register - Write Only
ROM:227D		 mov	 al, 90h ; 'É'
ROM:227F		 out	 dx, al		 ; 8254	Timer Control Word Register - Write Only
ROM:2280		 mov	 al, 50h ; 'P'
ROM:2282		 mov	 dx, 105h
ROM:2285		 out	 dx, al		 ; 8254	Timer Counter 1
ROM:2286		 mov	 dx, 103h
ROM:2289		 out	 dx, al		 ; 8254	Timer Counter 2
ROM:228A		 mov	 bh, 0FFh
ROM:228C		 mov	 cx, 1FFFh
ROM:228F
ROM:228F loc_FE28F:				 ; CODE	XREF: POST+283j
ROM:228F		 mul	 si
ROM:2291		 loop	 loc_FE28F
ROM:2293		 cli
ROM:2294		 cmp	 bh, 21h ; '!'
ROM:2297		 jz	 short POKE_IOP1
ROM:2299		 mov	 bl, 9		 ; POST	error 9	--
ROM:229B
ROM:229B loc_FE29B:				 ; CODE	XREF: POST:loc_FE224j
ROM:229B		 jmp	 SETUP_AND_INST_DEF_IRQ
ROM:229E ; ───────────────────────────────────────────────────────────────────────────
ROM:229E
ROM:229E POKE_IOP1:				 ; CODE	XREF: POKE_IOP1_TRAMPOLINEj
ROM:229E					 ; POST+289j
ROM:229E		 xor	 ax, ax
ROM:22A0		 mov	 ds, ax
ROM:22A2		 mov	 IOP_00_OPCODE,	90h ; 'É' ; HD/FD - command
ROM:22A7		 mov	 byte ptr IOP_0D_STATUS, 0FFh ;	FD/HD -	Operation status. (FF=not run, 00=success)
ROM:22AC		 mov	 ax, 7000h	 ; IO PORT
ROM:22AF		 push	 ax
ROM:22B0		 lea	 ax, IOP_00_OPCODE ; HD/FD - command
ROM:22B4		 push	 ax
ROM:22B5		 mov	 ax, offset IOP1_PTR
ROM:22B8		 push	 ax
ROM:22B9		 mov	 IOP_IRQ_DOORBELL, 0FFh	; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:22BE		 call	 IOP_SEND
ROM:22C1		 add	 sp, 6
ROM:22C5		 mov	 cx, 0
ROM:22C8
ROM:22C8 WAIT_FOR_IOP_DOORBELL:			 ; CODE	XREF: POST+2C1j
ROM:22C8		 cmp	 IOP_IRQ_DOORBELL, 0 ; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:22CD		 jz	 short DOORBELL_RUNG
ROM:22CF		 loop	 WAIT_FOR_IOP_DOORBELL
ROM:22D1		 jmp	 short loc_FE2DA
ROM:22D3 ; ───────────────────────────────────────────────────────────────────────────
ROM:22D3
ROM:22D3 DOORBELL_RUNG:				 ; CODE	XREF: POST+2BFj
ROM:22D3		 cmp	 byte ptr IOP_0D_STATUS, 0 ; FD/HD - Operation status. (FF=not run, 00=success)
ROM:22D8		 jz	 short SETUP_AND_INST_DEF_IRQ
ROM:22DA
ROM:22DA loc_FE2DA:				 ; CODE	XREF: POST+2C3j
ROM:22DA		 mov	 bl, 0Bh	 ; POST	error B	-- Hard	disk board timeout
ROM:22DC
ROM:22DC SETUP_AND_INST_DEF_IRQ:		 ; CODE	XREF: POST:loc_FE29Bj
ROM:22DC					 ; POST+2CAj
ROM:22DC		 push	 bx
ROM:22DD		 mov	 al, 80h ; 'Ç'
ROM:22DF		 or	 bl, bl
ROM:22E1		 jnz	 short loc_FE2EC
ROM:22E3		 cmp	 byte_508, 0
ROM:22E8		 jnz	 short loc_FE2EC
ROM:22EA		 mov	 al, 0
ROM:22EC
ROM:22EC loc_FE2EC:				 ; CODE	XREF: POST+2D3j
ROM:22EC					 ; POST+2DAj
ROM:22EC		 mov	 INT34_IR2_HDD_PTR, al
ROM:22EF		 mov	 cx, 256
ROM:22F2		 lea	 dx, DEFAULT_HANDLER
ROM:22F6		 xor	 bx, bx
ROM:22F8		 mov	 ds, bx
ROM:22FA
ROM:22FA loc_FE2FA:				 ; CODE	XREF: POST+2F4j
ROM:22FA		 mov	 [bx], dx
ROM:22FC		 inc	 bx
ROM:22FD		 inc	 bx
ROM:22FE		 mov	 word ptr [bx],	cs
ROM:2300		 inc	 bx
ROM:2301		 inc	 bx
ROM:2302		 loop	 loc_FE2FA
ROM:2304		 pop	 bx
ROM:2305		 call	 SETUP_IRQS
ROM:2308
ROM:2308 GO_LOW_INIT:				 ; CODE	XREF: POST:loc_FE0DDj
ROM:2308		 jmp	 far ptr LOW_INIT_TRAMPOLINE
ROM:2308 POST		 endp
ROM:2308
ROM:230D
ROM:230D ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:230D
ROM:230D
ROM:230D SETUP_IRQS	 proc near		 ; CODE	XREF: SETUP_INTC1_TRAMPOLINEj
ROM:230D					 ; POST+2F7p
ROM:230D		 push	 dx
ROM:230E		 lea	 ax, INT2_NMI_HANDLER
ROM:2312		 mov	 INT2_NMI_OFF, ax
ROM:2315		 mov	 INT2_NMI_SEG, cs
ROM:2319		 lea	 ax, INT34_IR2_HDD_HANDLER_SIMPLE
ROM:231D		 mov	 INT34_IR2_HDD_OFF, ax
ROM:2320		 mov	 INT34_IR2_HDD_SEG, cs
ROM:2324		 lea	 ax, INT39_IR7_FDD_HANDLER
ROM:2328		 mov	 INT39_IR7_FDD_OFF, ax
ROM:232B		 mov	 INT39_IR7_FDD_SEG, cs
ROM:232F		 mov	 al, 13h
ROM:2331		 out	 82h, al	 ; PIC ICW1, OCW2, or OCW3
ROM:2333		 mov	 al, 20h ; ' '
ROM:2335		 mov	 dx, 80h ; 'Ç'
ROM:2338		 out	 dx, al		 ; PIC ICW2, ICW3, ICW4, or OCW1
ROM:2339		 mov	 al, 3
ROM:233B		 out	 dx, al		 ; PIC ICW2, ICW3, ICW4, or OCW1
ROM:233C		 mov	 al, 73h ; 's'
ROM:233E		 out	 dx, al		 ; PIC ICW2, ICW3, ICW4, or OCW1
ROM:233F		 pop	 dx
ROM:2340		 sti
ROM:2341		 retn
ROM:2341 SETUP_IRQS	 endp
ROM:2341
ROM:2342
ROM:2342 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:2342
ROM:2342
ROM:2342 INT39_IR7_FDD_HANDLER proc far		 ; DATA	XREF: SETUP_IRQS+17o
ROM:2342		 push	 ds
ROM:2343		 push	 ax
ROM:2344		 xor	 ax, ax
ROM:2346		 mov	 ds, ax
ROM:2348		 cmp	 FDD_DOORBELL, 0
ROM:234D		 jz	 short IS_0
ROM:234F		 push	 bx
ROM:2350		 push	 si
ROM:2351		 mov	 si, offset IOP1_PTR.PB_SEG
ROM:2354		 mov	 bx, [si]
ROM:2356		 inc	 bx
ROM:2357		 mov	 al, [bx]	 ; Status
ROM:2359		 and	 al, 80h	 ; Still busy?
ROM:235B		 jnz	 short loc_FE367
ROM:235D		 mov	 IOP_IRQ_DOORBELL, 0 ; IR2/IR7 "Hard/Floppy Disk Interrupt" zero this out
ROM:2362		 mov	 FDD_DOORBELL, 0
ROM:2367
ROM:2367 loc_FE367:				 ; CODE	XREF: INT39_IR7_FDD_HANDLER+19j
ROM:2367		 pop	 si
ROM:2368		 pop	 bx
ROM:2369
ROM:2369 IS_0:					 ; CODE	XREF: INT39_IR7_FDD_HANDLER+Bj
ROM:2369		 pop	 ax
ROM:236A		 pop	 ds
ROM:236B		 iret
ROM:236B INT39_IR7_FDD_HANDLER endp
ROM:236B
ROM:236C
ROM:236C ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:236C
ROM:236C
ROM:236C sub_FE36C	 proc near		 ; CODE	XREF: sub_FE36Cj
ROM:236C		 jmp	 short sub_FE36C
ROM:236C sub_FE36C	 endp
ROM:236C
ROM:236E
ROM:236E ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:236E
ROM:236E
ROM:236E sub_FE36E	 proc near		 ; CODE	XREF: sub_FE36Ej
ROM:236E		 jmp	 short sub_FE36E
ROM:236E sub_FE36E	 endp
ROM:236E
ROM:2370
ROM:2370 ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
ROM:2370
ROM:2370
ROM:2370 sub_FE370	 proc near		 ; CODE	XREF: sub_FE370j
ROM:2370		 jmp	 short sub_FE370
ROM:2370 sub_FE370	 endp
ROM:2370
ROM:2370 ; ───────────────────────────────────────────────────────────────────────────
ROM:2372		 db    0
ROM:2373		 db    0
ROM:2374		 db    0
ROM:2375		 db    0
ROM:2376		 db    0
ROM:2377		 db    0
ROM:2378		 db    0
ROM:2379		 db    0
ROM:237A		 db    0
ROM:237B		 db    0
ROM:237C		 db    0
ROM:237D		 db    0
ROM:237E		 db    0
ROM:237F		 db    0
ROM:2380		 db    0,86Fh dup(0FFh)
ROM:2BF0		 db 0FFh
ROM:2BF1		 db 0FFh
ROM:2BF2		 db 40Eh dup(0FFh)
ROM:3000 DATA_ROM	 db 1,0,0,0,'@',0,0,0,0,0,0,0,'┤~',0,0,0,0,0,0,0,0,'á',9,0,0Ah
ROM:3000					 ; DATA	XREF: POST_FINISH+2Eo
ROM:3000		 db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'¬',9,0,0Ah
ROM:3000		 db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'┤',9,0,0Ah
ROM:3000		 db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'¥',9,0,0Ah
ROM:3000		 db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'╚',9,0,0Ah
ROM:3000		 db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'Ê',9,0,0Ah
ROM:3000		 db 0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,6,0,0,0,0,0,0,0,0,0,0,0,0
ROM:3000		 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11h,11h,11h,11h,'""""',0,0,0FFh,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0Ch,0,0FFh,1Fh,2,0Ah
ROM:3000		 db 'Monitor Version a2.2',0,0Ah
ROM:3000		 db 'PASSED POWER-UP TEST',0,0Ah
ROM:3000		 db 'FAILED POWER-UP TEST ',0,0,0,0Ah
ROM:3000		 db 'Boot Failed, Status=',0,0Ah
ROM:3000		 db 'Floppy command not supported.',0,0Ah
ROM:3000		 db 'Floppy timeout error',0,0Ah
ROM:3000		 db 'Hard disk command not supported.',0,0Ah
ROM:3000		 db 'Hard disk timeout error',0,0Ah
ROM:3000		 db 'Break ....',0,'COPYRIGHT ALTOS COMPUTER SYSTEMS',0,0Ah
ROM:3000		 db 'Channel no.(0-4): ',0,' Ready- ',0,' -Done',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ROM:3000		 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'AXBXCXDXSIDIDSESSSSPBPFL'
ROM:3268 IOP8089_PROGRAM db  51h, 30h,0D0h,0FFh	 ;	   movi	   gc,0ffd0h
ROM:326C		 db 0AAh, 0BBh,	4, 20h	 ;	   jnbt	   [pp].4h,5,x3290
ROM:3270		 db 0Ah, 4Eh, 6, 80h	 ;	   movbi   [gc].6h,80h
ROM:3274		 db 2, 93h, 8, 2, 0CEh,	2 ;	    movb    [gc].2h,[pp].8h
ROM:327A		 db 0EAh, 0BAh,	6, 0FCh	 ; x327a:  jnbt	   [gc].6h,7,x327a
ROM:327E		 db 0Ah, 4Eh, 6, 20h	 ;	   movbi   [gc].6h,20h
ROM:3282		 db 13h, 4Fh, 14h, 2 dup(0) ;	      movi    [pp].14h,0h
ROM:3287		 db 0Ah, 0BEh, 6, 0FCh	 ; x3287:  jbt	   [gc].6h,0,x3287
ROM:328B		 db 12h, 0BAh, 4, 0E2h,	0 ;	    ljnbt   [gc].4h,0,x3372
ROM:3290		 db 0Ah, 0CBh, 4, 0Fh	 ; x3290:  andbi   [pp].4h,0fh
ROM:3294		 db 12h, 0E7h, 4, 0B1h,	0 ;	    ljzb    [pp].4h,x334a
ROM:3299		 db 2, 93h, 8, 2, 0CEh,	2 ;	    movb    [gc].2h,[pp].8h
ROM:329F		 db 0EAh, 0BAh,	6, 0FCh	 ; x329f:  jnbt	   [gc].6h,7,x329f
ROM:32A3		 db 2, 93h, 14h, 0, 0CEh ;	   movb	   [gc],[pp].14h
ROM:32A8		 db 2, 93h, 15h, 0, 0CEh ;	   movb	   [gc],[pp].15h
ROM:32AD		 db 2, 93h, 6, 2, 0CEh,	4 ;	    movb    [gc].4h,[pp].6h
ROM:32B3		 db 2, 93h, 7, 2, 0CEh,	4 ;	    movb    [gc].4h,[pp].7h
ROM:32B9		 db 0Ah, 4Eh, 6, 10h	 ;	   movbi   [gc].6h,10h
ROM:32BD		 db 3, 93h, 6, 3, 0CFh,	14h ;	      mov     [pp].14h,[pp].6h
ROM:32C3		 db 0Ah, 0BEh, 6, 0FCh	 ; x32c3:  jbt	   [gc].6h,0,x32c3
ROM:32C7		 db 2Ah, 0BAh, 4, 0FCh	 ; x32c7:  jnbt	   [gc].4h,1,x32c7
ROM:32CB		 db 0Ah, 0E7h, 10h, 7Bh	 ;	   jzb	   [pp].10h,x334a
ROM:32CF		 db 0Ah, 0BFh, 4, 0Eh	 ;	   jbt	   [pp].4h,0,x32e1
ROM:32D3		 db 3, 8Bh, 0Ch		 ;	   lpd	   ga,[pp].0ch
ROM:32D6		 db 31h, 30h, 2	dup(0)	 ;	   movi	   gb,0h
ROM:32DA		 db 63h, 83h, 0Ah	 ;	   mov	   bc,[pp].0ah
ROM:32DD		 db 8Bh, 9Fh, 16h, 70h	 ;	   call	   [pp].16h,x3351
ROM:32E1		 db 31h, 30h, 2	dup(0)	 ; x32e1:  movi	   gb,0h
ROM:32E5		 db 0F1h, 30h, 80h, 0FEh ;	   movi	   mc,0fe80h
ROM:32E9		 db 11h, 30h, 0D0h, 0FFh ;	   movi	   ga,0ffd0h
ROM:32ED		 db 13h, 4Fh, 12h, 0, 2	 ;	   movi	   [pp].12h,200h
ROM:32F2		 db 0Ah, 0BBh, 4, 12h	 ;	   jnbt	   [pp].4h,0,x3308
ROM:32F6		 db 0D1h, 30h, 28h, 8Ah	 ;	   movi	   cc,8a28h
ROM:32FA		 db 0A0h, 0		 ;	   wid	   8,16
ROM:32FC		 db 6Ah, 0BBh, 4, 17h	 ;	   jnbt	   [pp].4h,3,x3317
ROM:3300		 db 13h, 4Fh, 12h, 5, 2	 ;	   movi	   [pp].12h,205h
ROM:3305		 db 88h, 20h, 0Fh	 ;	   jmp	   x3317
ROM:3308		 db 0D1h, 30h, 28h, 56h	 ; x3308:  movi	   cc,5628h
ROM:330C		 db 0C0h, 0		 ;	   wid	   16,8
ROM:330E		 db 4Ah, 0BBh, 4, 5	 ;	   jnbt	   [pp].4h,2,x3317
ROM:3312		 db 13h, 4Fh, 12h, 4, 0	 ;	   movi	   [pp].12h,4h
ROM:3317		 db 63h, 83h, 12h	 ; x3317:  mov	   bc,[pp].12h
ROM:331A		 db 2, 93h, 9, 0, 0CEh	 ;	   movb	   [gc],[pp].9h
ROM:331F		 db 60h, 0		 ;	   xfer
ROM:3321		 db 2, 93h, 4, 2, 0CEh,	6 ;	    movb    [gc].6h,[pp].4h
ROM:3327		 db 0Ah, 0B6h, 6, 33h	 ;	   jmcne   [gc].6h,x335e
ROM:332B		 db 2, 0EFh, 10h	 ;	   decb	   [pp].10h
ROM:332E		 db 0Ah, 0E7h, 10h, 6	 ;	   jzb	   [pp].10h,x3338
ROM:3332		 db 2, 0EBh, 9		 ;	   incb	   [pp].9h
ROM:3335		 db 88h, 20h, 0DFh	 ;	   jmp	   x3317
ROM:3338		 db 0Ah, 0BBh, 4, 0Eh	 ; x3338:  jnbt	   [pp].4h,0,x334a
ROM:333C		 db 23h, 8Bh, 0Ch	 ;	   lpd	   gb,[pp].0ch
ROM:333F		 db 11h, 30h, 2	dup(0)	 ;	   movi	   ga,0h
ROM:3343		 db 63h, 83h, 0Ah	 ;	   mov	   bc,[pp].0ah
ROM:3346		 db 8Bh, 9Fh, 16h, 7	 ;	   call	   [pp].16h,x3351
ROM:334A		 db 0Ah, 4Fh, 5, 0	 ; x334a:  movbi   [pp].5h,0h
ROM:334E		 db 88h, 20h, 26h	 ;	   jmp	   x3377
ROM:3351		 db 0E0h, 0		 ; x3351:  wid	   16,16
ROM:3353		 db 0D1h, 30h, 8, 0C2h	 ;	   movi	   cc,0c208h
ROM:3357		 db 60h, 0		 ;	   xfer
ROM:3359		 db 2 dup(0)		 ;	   nop
ROM:335B		 db 83h, 8Fh, 16h	 ;	   movp	   tp,[pp].16h
ROM:335E		 db 2, 92h, 6, 2, 0CFh,	5 ; x335e:  movb    [pp].5h,[gc].6h
ROM:3364		 db 0Ah, 0CBh, 5, 7Eh	 ;	   andbi   [pp].5h,7eh
ROM:3368		 db 0E2h, 0F7h,	5	 ;	   setb	   [pp].5h,7
ROM:336B		 db 0Ah, 4Eh, 6, 0	 ;	   movbi   [gc].6h,0h
ROM:336F		 db 88h, 20h, 5		 ;	   jmp	   x3377
ROM:3372		 db 13h, 4Fh, 5, 81h, 0	 ; x3372:  movi	   [pp].5h,81h
ROM:3377		 db 40h, 0		 ; x3377:  sintr
ROM:3379		 db 20h, 48h		 ;	   hlt
ROM:337B		 db 0FFh
ROM:337C		 db 0FFh
ROM:337D		 db 0EBh dup(0)
ROM:3468 MORE_DATA_ROM	 db 0Ah
ROM:3468		 db 'Press any key to interrupt boot',0Ah
ROM:3468		 db 0,0Ah
ROM:3468		 db 'Booting from Hard Disk',0,0Ah
ROM:3468		 db 'Enter [1] to boot from Hard Disk',0Ah
ROM:3468		 db 'Enter [2] to boot from Floppy Disk',0Ah
ROM:3468		 db 'Enter [3] to enter Monitor',0Ah
ROM:3468		 db 0Ah
ROM:3468		 db 'Enter option: ',0,0Ah
ROM:3468		 db '< A, B, D, G, I, K, L, M, O, R, S, X > ',0,0,0Ah
ROM:3468		 db 'CS:IP ',0,'  Flags  ',0
ROM:354E PAD		 db 0AA2h dup(0FFh)
ROM:354E ROM		 ends
ROM:354E
HIGH:FFF0 ; ───────────────────────────────────────────────────────────────────────────
HIGH:FFF0 ; ═══════════════════════════════════════════════════════════════════════════
HIGH:FFF0
HIGH:FFF0 ; Segment type: Regular
HIGH:FFF0 HIGH		  segment byte public '' use16
HIGH:FFF0		  assume cs:HIGH
HIGH:FFF0		  ;org 0FFF0h
HIGH:FFF0		  assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
HIGH:FFF0		  jmp	  far ptr ENTRY_TRAMPOLINE
HIGH:FFF0 ; ───────────────────────────────────────────────────────────────────────────
HIGH:FFF5		  db	0
HIGH:FFF6 IOP8089_FLAGS	  IOP8089_SCP <1, 0FFh,	410h, 0>
HIGH:FFFC		  db 0FFh
HIGH:FFFD		  db 0FFh
HIGH:FFFE		  db 0FFh
HIGH:FFFF		  db 0FBh ; ¹
HIGH:FFFF HIGH		  ends
HIGH:FFFF
HIGH:FFFF
HIGH:FFFF		  end
