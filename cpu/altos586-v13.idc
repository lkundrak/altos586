//
// ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
// บ     This file is generated by The Interactive Disassembler (IDA)        บ
// บ     Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>           บ
// บ                      Licensed to: Freeware version                      บ
// ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        GenInfo();              // various settings
        Segments();             // segmentation
        Enums();                // enumerations
        Structures();           // structure types
        Bytes();                // individual bytes (code,data)
        Functions();            // function definitions
        SegRegs();              // segment register values
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("8086");
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0XFE00);
	SetSelector(0X2,0X0);
	SetSelector(0X3,0X0);
	;
	SegCreate(0X0,0X1000,0X0,0,1,2);
	SegRename(0X0,"ZERO");
	SegClass (0X0,"ZERO");
	SegCreate(0XFE000,0XFFFF0,0X1,0,1,2);
	SegRename(0XFE000,"FE00");
	SegClass (0XFE000,"CODE");
	SegDefReg(0xFE000,"es",0x0);
	SegDefReg(0xFE000,"ss",0x0);
	SegDefReg(0xFE000,"ds",0x0);
	SetSegmentType(0XFE000,2);
	SegCreate(0XFFFF0,0X100000,0XFFFF,0,1,2);
	SegRename(0XFFFF0,"FFFF");
	SegClass (0XFFFF0,"FFFF");
	LowVoids(0x0);
	HighVoids(0x10000);
}

static Enums_0(id) {

	id = AddEnum(-1,"IO_PORT",0x1100000);
	AddConstEx(id,"Z80_CHAN_ATTN",	0X50,	-1);
	SetConstCmt(GetConstEx(id,0X50,0,-1),"Z80A I/O Processor Chan att. ",1);
	AddConstEx(id,"CONTROL_BITS",	0X58,	-1);
	SetConstCmt(GetConstEx(id,0X58,0,-1),"Control Bits Port - Write Only. ",1);
	AddConstEx(id,"MMU_ERROR",	0X60,	-1);
	SetConstCmt(GetConstEx(id,0X60,0,-1),"MMU - Error Address 2 - Read Only. ",1);
	AddConstEx(id,"MMU_MEMV_CLEAR",	0X70,	-1);
	SetConstCmt(GetConstEx(id,0X70,0,-1),"MMU - Clear Violation Port",1);
	AddConstEx(id,"MMU_MEMV",	0X78,	-1);
	SetConstCmt(GetConstEx(id,0X78,0,-1),"MMU - Violation Port - Read Only. ",1);
	AddConstEx(id,"PIC_2",	0X80,	-1);
	SetConstCmt(GetConstEx(id,0X80,0,-1),"PIC - ICW2, ICW3, ICW4, or OCW1",1);
	AddConstEx(id,"PIC_1",	0X82,	-1);
	SetConstCmt(GetConstEx(id,0X82,0,-1),"PIC - ICW1, OCW2, or OCW3",1);
	AddConstEx(id,"PIT_CTRL",	0X101,	-1);
	SetConstCmt(GetConstEx(id,0X101,0,-1),"PIT - Control Word Register - Write Only",1);
	AddConstEx(id,"PIT_CNT_2",	0X103,	-1);
	SetConstCmt(GetConstEx(id,0X103,0,-1),"PIT - Counter 2",1);
	AddConstEx(id,"PIT_CNT_1",	0X105,	-1);
	SetConstCmt(GetConstEx(id,0X105,0,-1),"PIT - Counter 1",1);
	AddConstEx(id,"PIT_CNT_0",	0X107,	-1);
	SetConstCmt(GetConstEx(id,0X107,0,-1),"PIT - Counter 0",1);
	AddConstEx(id,"MMU_BASE",	0X200,	-1);
	AddConstEx(id,"IO_HDD",	0X7000,	-1);
	SetConstCmt(GetConstEx(id,0X7000,0,-1),"Requests hard disk or memory-to-memory operation",1);
	AddConstEx(id,"IO_FDD",	0X7008,	-1);
	SetConstCmt(GetConstEx(id,0X7008,0,-1),"Requests floppy disk operation",1);
	AddConstEx(id,"IO_TAPE",	0X7010,	-1);
	SetConstCmt(GetConstEx(id,0X7010,0,-1),"Requests tape operation",1);
	AddConstEx(id,"BUS_RSVD_0",	0XFF00,	-1);
	SetConstCmt(GetConstEx(id,0XFF00,0,-1),"Reserved for system bus I/O. ",1);
	AddConstEx(id,"BUS_RSVD_1",	0XFF80,	-1);
	SetConstCmt(GetConstEx(id,0XFF80,0,-1),"Reserved for system bus I/O. ",1);
	id = AddEnum(-1,"FDC_COMMANDS",0x1100000);
	AddConstEx(id,"FDC_BUSY",	0X80,	-1);
	AddConstEx(id,"FDC_FLOPPY_PARAMS",	0X87,	-1);
	AddConstEx(id,"FDC_RUN_IO",	0X88,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
	id = Enums_0(id);
}

static Structures_0(id) {

	id = AddStrucEx(-1,"CHAN_REGS",0);
	id = AddStrucEx(-1,"IOP8089_SCP",0);
	id = AddStrucEx(-1,"IOP8089_SCB",0);
	id = AddStrucEx(-1,"IOP8089_CB",0);
	id = AddStrucEx(-1,"CPU_REGS",0);
	id = AddStrucEx(-1,"FDC_REGS",0);
	id = AddStrucEx(-1,"IO_BLOCK",0);
	id = AddStrucEx(-1,"IOP8089_PB",0);
	
	id = GetStrucIdByName("CHAN_REGS");
	AddStrucMember(id,"CHAN_PARM",	0X0,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X0,	"Channel Parameter Register",	1);
	AddStrucMember(id,"CHAN_STAT",	0X2,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X2,	"Channel Status Register",	1);
	AddStrucMember(id,"CHAN_CMD",	0X4,	0x000400,	-1,	1);
	SetMemberComment(id,	0X4,	"Channel Command Register",	1);
	AddStrucMember(id,"CHAN_TX_LO",	0X5,	0x000400,	-1,	1);
	SetMemberComment(id,	0X5,	"Transmit Data Buffer Address Register LO",	1);
	AddStrucMember(id,"CHAN_TX_MID",	0X6,	0x000400,	-1,	1);
	SetMemberComment(id,	0X6,	"Transmit Data Buffer Address Register MID",	1);
	AddStrucMember(id,"CHAN_TX_HI",	0X7,	0x000400,	-1,	1);
	SetMemberComment(id,	0X7,	"Transmit Data Buffer Address Register HI",	1);
	AddStrucMember(id,"CHAN_TX_LEN",	0X8,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X8,	"Transmit Data Buffer Length Register",	1);
	AddStrucMember(id,"CHAN_RX_LO",	0XA,	0x000400,	-1,	1);
	SetMemberComment(id,	0XA,	"Receive Data Buffer Address Register LO",	1);
	AddStrucMember(id,"CHAN_RX_MID",	0XB,	0x000400,	-1,	1);
	SetMemberComment(id,	0XB,	"Receive Data Buffer Address Register MID",	1);
	AddStrucMember(id,"CHAN_RX_HI",	0XC,	0x000400,	-1,	1);
	SetMemberComment(id,	0XC,	"Receive Data Buffer Address Register HI",	1);
	AddStrucMember(id,"CHAN_RX_LEN",	0XD,	0x10000400,	-1,	2);
	SetMemberComment(id,	0XD,	"Receive Data Buffer Length Register",	1);
	AddStrucMember(id,"CHAN_RX_IN",	0XF,	0x10000400,	-1,	2);
	SetMemberComment(id,	0XF,	"Receive Buffer Input Pointer Register",	1);
	AddStrucMember(id,"CHAN_RX_OUT_TTY",	0X11,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X11,	"Receive Buffer Output Pointer Register (buffered mode)\nTTY Receive Register (tty mode)",	1);
	AddStrucMember(id,"CHAN_RATE",	0X13,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X13,	"Selectable baud rate",	1);
	AddStrucMember(id,"CHAN_RESERVED",	0X15,	0x000400,	-1,	1);
	
	id = GetStrucIdByName("IOP8089_SCP");
	AddStrucMember(id,"BUS_TYPE",	0X0,	0x000400,	-1,	1);
	SetMemberComment(id,	0X0,	"1 = 16-bit, 0 = 8-bit",	0);
	AddStrucMember(id,"_UNUSED_0",	0X1,	0x000400,	-1,	1);
	AddStrucMember(id,"SCB_OFF",	0X2,	0x10500400,	0X0,	2);
	AddStrucMember(id,"SCB_SEG",	0X4,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("IOP8089_SCB");
	AddStrucMember(id,"SOC",	0X0,	0x000400,	-1,	1);
	AddStrucMember(id,"_UNUSED_1",	0X1,	0x000400,	-1,	1);
	AddStrucMember(id,"CB_OFF",	0X2,	0x10000400,	-1,	2);
	AddStrucMember(id,"CB_SEG",	0X4,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("IOP8089_CB");
	AddStrucMember(id,"CCW",	0X0,	0x000400,	-1,	1);
	AddStrucMember(id,"BUSY",	0X1,	0x000400,	-1,	1);
	AddStrucMember(id,"PB_OFF",	0X2,	0x10000400,	-1,	2);
	AddStrucMember(id,"PB_SEG",	0X4,	0x10000400,	-1,	2);
	AddStrucMember(id,"_UNUSED_2",	0X6,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("CPU_REGS");
	AddStrucMember(id,"SAVE_AX",	0X0,	0x10009400,	-1,	2);
	AddStrucMember(id,"SAVE_BX",	0X2,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_CX",	0X4,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_DX",	0X6,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_SI",	0X8,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_DI",	0XA,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_DS",	0XC,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_ES",	0XE,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_SS",	0X10,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_SP",	0X12,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_BP",	0X14,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_FLAGS",	0X16,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_IP",	0X18,	0x10000400,	-1,	2);
	AddStrucMember(id,"SAVE_CS",	0X1A,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("FDC_REGS");
	AddStrucMember(id,"FDC_COMMAND",	0X0,	0x085d00,	-1,	1);
	AddStrucMember(id,"FDC_STATUS",	0X1,	0x005d00,	-1,	1);
	AddStrucMember(id,"FDC_QUEUE_ADDR_LO",	0X2,	0x10085d00,	-1,	2);
	AddStrucMember(id,"FDC_QUEUE_ADDR_HI",	0X4,	0x10004500,	-1,	2);
	AddStrucMember(id,"FDC_QUEUE_SIZE",	0X6,	0x000400,	-1,	1);
	AddStrucMember(id,"FDC_QUEUE_PTR",	0X7,	0x000400,	-1,	1);
	AddStrucMember(id,"FDC_PARAMS_1",	0XA,	0x004500,	-1,	32);
	AddStrucMember(id,"FDC_PARAMS_2",	0X2A,	0x004500,	-1,	32);
	
	id = GetStrucIdByName("IO_BLOCK");
	AddStrucMember(id,"MON_RSVD_1",	0X0,	0x10600400,	-1,	2);
	AddStrucMember(id,"MON_RSVD_2",	0X2,	0x10000400,	-1,	2);
	AddStrucMember(id,"DISK_OPCODE",	0X4,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_DRIVE_NUM",	0X5,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_TRACK",	0X6,	0x10085400,	-1,	2);
	AddStrucMember(id,"DISK_HEAD",	0X8,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_SECTOR",	0X9,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_SECTOR_COUNT",	0XA,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_OP_STATUS",	0XB,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_RETRIES",	0XD,	0x085400,	-1,	1);
	AddStrucMember(id,"DISK_DMA_OFFSET",	0XE,	0x10085400,	-1,	2);
	AddStrucMember(id,"DISK_DMA_SEGMENT",	0X10,	0x10085400,	-1,	2);
	AddStrucMember(id,"DISK_SECTOR_LEN",	0X12,	0x10085400,	-1,	2);
	
	id = GetStrucIdByName("IOP8089_PB");
	AddStrucMember(id,"IOP_OFFSET",	0X0,	0x10000400,	-1,	2);
	AddStrucMember(id,"IOP_SEGMENT",	0X2,	0x10000400,	-1,	2);
	AddStrucMember(id,"HDD_OPCODE",	0X4,	0x085400,	-1,	1);
	AddStrucMember(id,"HDD_STATUS",	0X5,	0x085400,	-1,	1);
	AddStrucMember(id,"HDD_CYLINDER",	0X6,	0x10085400,	-1,	2);
	AddStrucMember(id,"HDD_DRIVE_AND_HEAD",	0X8,	0x085400,	-1,	1);
	AddStrucMember(id,"HDD_SECTOR",	0X9,	0x085400,	-1,	1);
	AddStrucMember(id,"HDD_SECTOR_LEN",	0XA,	0x10085400,	-1,	2);
	AddStrucMember(id,"HDD_DMA_OFFSET",	0XC,	0x10085400,	-1,	2);
	AddStrucMember(id,"HDD_DMA_SEGMENT",	0XE,	0x10085400,	-1,	2);
	AddStrucMember(id,"RESVD_0",	0X10,	0x10000400,	-1,	2);
	AddStrucMember(id,"RESVD_1",	0X12,	0x10000400,	-1,	2);
	AddStrucMember(id,"RESVD_2",	0X14,	0x10000400,	-1,	2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	MakeWord	(0X0);
	MakeName	(0X0,	"INT0_OFF");
	MakeWord	(0X2);
	MakeName	(0X2,	"INT0_SEG");
	MakeWord	(0X4);
	MakeByte	(0X6);
	MakeArray	(0X6,	0X7E);
	MakeWord	(0X84);
	MakeName	(0X84,	"INT33_TIMER_OFF");
	MakeWord	(0X86);
	MakeName	(0X86,	"INT33_TIMER_SEG");
	MakeByte	(0X88);
	MakeArray	(0X88,	0X35D);
	MakeByte	(0X3E5);
	MakeArray	(0X3E5,	0X1B);
	MakeStruct	(0X400,	"IOP8089_CB");
	MakeName	(0X400,	"IOP1_PTR");
	MakeStruct	(0X408,	"IOP8089_CB");
	MakeName	(0X408,	"IOP3_PTR");
	MakeStruct	(0X410,	"IOP8089_SCB");
	MakeName	(0X410,	"SCB");
	MakeComm	(0X416,	"SYS - Firmware Version Register");
	MakeByte	(0X416);
	MakeName	(0X416,	"FW_REG");
	MakeComm	(0X417,	"SYS - Firmware Version Register");
	MakeByte	(0X417);
	MakeName	(0X417,	"SYS_CMD_REG");
	MakeComm	(0X418,	"SYS - System Status Register");
	MakeByte	(0X418);
	MakeName	(0X418,	"SYS_STAT_REG");
	MakeComm	(0X419,	"SYS - Interrupt Vector Register");
	MakeWord	(0X419);
	MakeName	(0X419,	"INT_VECTOR_REG");
	MakeComm	(0X41B,	"SYS - New Command Register");
	MakeByte	(0X41B);
	MakeName	(0X41B,	"NEW_CMD_REG");
	MakeComm	(0X41C,	"CH 0 - Channel Parameter Register");
	MakeStruct	(0X41C,	"CHAN_REGS");
	MakeName	(0X41C,	"SIO_REGS_0");
	MakeComm	(0X432,	"CH 1 - Channel Parameter Register");
	MakeStruct	(0X432,	"CHAN_REGS");
	MakeName	(0X432,	"SIO_REGS_1");
	MakeComm	(0X448,	"CH 2 - Channel Parameter Register");
	MakeStruct	(0X448,	"CHAN_REGS");
	MakeName	(0X448,	"SIO_REGS_2");
	MakeComm	(0X45E,	"CH 3 - Channel Parameter Register");
	MakeStruct	(0X45E,	"CHAN_REGS");
	MakeComm	(0X474,	"CH 4 - Channel Parameter Register");
	MakeStruct	(0X474,	"CHAN_REGS");
	MakeComm	(0X48A,	"CH 5 - Channel Parameter Register");
	MakeStruct	(0X48A,	"CHAN_REGS");
	MakeComm	(0X4A0,	"UNK - Command Register?");
	MakeStruct	(0X4A0,	"FDC_REGS");
	MakeName	(0X4A0,	"FDC_REGS_0");
	MakeComm	(0X4A1,	"UNK - Command Register?");
	MakeComm	(0X4A2,	"UNK - Command Register?");
	MakeComm	(0X4AC,	"UNK - Command Register?");
	MakeByte	(0X4EA);
	MakeArray	(0X4EA,	0XA);
	MakeName	(0X4EA,	"UNKNOWN");
	MakeDword	(0X4F4);
	MakeByte	(0X4F8);
	MakeName	(0X4F8,	"HEX_byte_4F8");
	MakeStr		(0X4F9,	0X52C);
	MakeName	(0X4F9,	"STR_VERSION_BANNER");
	MakeStr		(0X52C,	0X542);
	MakeName	(0X52C,	"STR_POST_GOOD");
	MakeStr		(0X542,	0X558);
	MakeName	(0X542,	"STR_POST_FAILED");
	MakeName	(0X558,	"HEX_BUF_FOR_POST_NUMBER");
	MakeByte	(x=0X55A);
	MakeArray	(x,	0X10);
	OpChr		(x,	0);
	MakeName	(0X55A,	"HEX_NUMS");
	MakeStr		(0X56C,	0X582);
	MakeName	(0X56C,	"STR_BOOT_FAILED");
	MakeStr		(0X582,	0X586);
	MakeName	(0X582,	"STR_ERR_BEEP");
	MakeStr		(0X586,	0X592);
	MakeName	(0X586,	"STR_BREAK");
	MakeStr		(0X592,	0X594);
	MakeName	(0X592,	"REG_NAMES");
	MakeStr		(0X594,	0X596);
	MakeStr		(0X596,	0X598);
	MakeStr		(0X598,	0X59A);
	MakeStr		(0X59A,	0X59C);
	MakeStr		(0X59C,	0X59E);
	MakeStr		(0X59E,	0X5A0);
	MakeStr		(0X5A0,	0X5A2);
	MakeStr		(0X5A2,	0X5A4);
	MakeStr		(0X5A4,	0X5A6);
	MakeStr		(0X5A6,	0X5A8);
	MakeStr		(0X5A8,	0X5AA);
	MakeStr		(0X5AA,	0X5CC);
	MakeName	(0X5AA,	"STR_BOOT_INTERRUPT");
	MakeStr		(0X5CC,	0X5E4);
	MakeName	(0X5CC,	"STR_BOOT_HDD");
	MakeStr		(0X5E4,	0X654);
	MakeName	(0X5E4,	"STR_BOOT_PROMPT");
	MakeStr		(0X654,	0X67D);
	MakeName	(0X654,	"STR_MONITOR_PROMPT");
	MakeStr		(0X67E,	0X680);
	MakeName	(0X67E,	"CHR_SPACE");
	MakeStr		(0X680,	0X682);
	MakeName	(0X680,	"CHR_DASH_0");
	MakeStr		(0X682,	0X684);
	MakeName	(0X682,	"CHR_COLON");
	MakeStr		(0X684,	0X686);
	MakeName	(0X684,	"CHR_DASH_1");
	MakeStr		(0X686,	0X697);
	MakeName	(0X686,	"STR_FLAG_NAMES");
	MakeStr		(0X698,	0X6A0);
	MakeName	(0X698,	"STR_REG_CS_IP");
	MakeStr		(0X6A0,	0X6AA);
	MakeName	(0X6A0,	"STR_REG_FLAGS");
	MakeByte	(0X6AA);
	MakeArray	(0X6AA,	0X10);
	MakeName	(0X6AA,	"REG_DISP_OFFSETS");
	MakeStr		(0X6BA,	0X6C3);
	MakeName	(0X6BA,	"STR_READY");
	MakeStr		(0X6C3,	0X6CA);
	MakeName	(0X6C3,	"STR_DONE");
	MakeByte	(0X6CA);
	MakeArray	(0X6CA,	0X200);
	MakeName	(0X6CA,	"DISK_DATA_BUF");
	MakeByte	(0X8CA);
	MakeByte	(0X8CB);
	MakeWord	(0X8CC);
	MakeWord	(0X8CE);
	MakeArray	(0X8CE,	0X17);
	MakeWord	(0X8FC);
	MakeName	(0X8FC,	"FDC_QUEUE");
	MakeWord	(0X8FE);
	MakeByte	(0X900);
	MakeArray	(0X900,	0X5B4);
	MakeName	(0X900,	"SIO_BUFS_unk_900");
	MakeWord	(0XEB4);
	MakeName	(0XEB4,	"HEX_word_EB4");
	MakeWord	(0XEB6);
	MakeName	(0XEB6,	"HEX_word_EB6");
	MakeWord	(0XEB8);
	MakeName	(0XEB8,	"HEX_word_EB8");
	MakeWord	(0XEBA);
	MakeName	(0XEBA,	"HEX_word_EBA");
	MakeByte	(0XEBC);
	MakeName	(0XEBC,	"CHAR_BUF_byte_EBC");
	MakeWord	(0XEBD);
	MakeName	(0XEBD,	"SAVED_SS_word_EBD");
	MakeWord	(0XEBF);
	MakeName	(0XEBF,	"SAVED_SP_word_EBF");
	MakeRptCmt	(0XEC1,	"Saved on syscall entry");
	MakeWord	(0XEC1);
	MakeName	(0XEC1,	"SAVED_ES");
	MakeWord	(0XEC3);
	MakeName	(0XEC3,	"MEM_SIZE");
	MakeByte	(0XEC6);
	MakeName	(0XEC6,	"WHATS_CB_SEG");
	MakeByte	(0XEC7);
	MakeName	(0XEC7,	"POST_RESULT");
	MakeRptCmt	(0XEC8,	"1 = HDD, 2 = FDD");
	MakeByte	(0XEC8);
	MakeName	(0XEC8,	"BOOT_DISK_CODE");
	MakeStruct	(0XEC9,	"CPU_REGS");
	MakeName	(0XEC9,	"SAVED_CPU_REGS");
	MakeWord	(0XEE5);
	MakeName	(0XEE5,	"ADDR_SEGMENT");
	MakeWord	(0XEE7);
	MakeName	(0XEE7,	"ADDR_OFFSET");
	MakeStruct	(0XEE9,	"IOP8089_PB");
	MakeName	(0XEE9,	"IOP_BLOCK");
	MakeStruct	(0XF03,	"IO_BLOCK");
	MakeName	(0XF03,	"DISK_IOPB");
	MakeWord	(0XF18);
	MakeName	(0XF18,	"GETCHAR_ECHO_BUF");
	MakeName	(0XF1A,	"PRINTHEX_unk_F1A");
	MakeName	(0XF1C,	"PRINTHEX_unk_F1C");
	MakeByte	(0XF1D);
	MakeArray	(0XF1D,	0XE3);
	MakeCode	(0XFE000);
	MakeName	(0XFE000,	"SYSCALL_ENTRY");
	MakeCode	(0XFE003);
	MakeName	(0XFE003,	"POST");
	MakeCode	(x=0XFE004);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE006);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE008);
	OpHex		(x,	1);
	MakeCode	(x=0XFE00D);
	OpHex		(x,	1);
	MakeCode	(x=0XFE00F);
	OpEnumEx		(x,	0,	GetEnum("IO_PORT"),0);
	MakeComm	(0XFE019,	"Firmware start");
	MakeCode	(0XFE019);
	MakeComm	(0XFE022,	"Firmware length");
	MakeComm	(0XFE02E,	"POST FAIL 1: Bad checksum");
	MakeCode	(0XFE032);
	MakeCode	(x=0XFE037);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE03F);
	OpHex		(x,	1);
	MakeCode	(x=0XFE042);
	OpHex		(x,	1);
	MakeCode	(x=0XFE04A);
	OpHex		(x,	1);
	MakeComm	(0XFE050,	"POST FAIL 2: Bad MMU");
	MakeCode	(0XFE050);
	MakeCode	(0XFE054);
	MakeCode	(x=0XFE057);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE060);
	OpHex		(x,	1);
	MakeCode	(x=0XFE064);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE06D);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE074);
	OpHex		(x,	1);
	MakeCode	(x=0XFE07D);
	OpHex		(x,	1);
	MakeCode	(x=0XFE085);
	OpHex		(x,	1);
	MakeCode	(x=0XFE089);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeComm	(0XFE091,	"POST FAIL 3:");
	MakeCode	(0XFE091);
	MakeCode	(0XFE095);
	MakeCode	(x=0XFE098);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE0A5);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE0A9);
	OpHex		(x,	1);
	MakeCode	(x=0XFE0B2);
	OpHex		(x,	1);
	MakeComm	(0XFE0C0,	"POST FAIL 4: MMU test");
	MakeCode	(0XFE0C0);
	MakeCode	(x=0XFE0C4);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(0XFE0CB);
	MakeComm	(0XFE0E4,	"POST FAIL 5: MMU interrupt test");
	MakeCode	(0XFE0E8);
	MakeCode	(x=0XFE0EA);
	OpHex		(x,	1);
	MakeCode	(x=0XFE0F3);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(0XFE0F9);
	MakeCode	(x=0XFE104);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(0XFE10A);
	MakeCode	(0XFE112);
	MakeCode	(x=0XFE11F);
	OpHex		(x,	1);
	MakeCode	(0XFE12C);
	MakeCode	(x=0XFE143);
	OpHex		(x,	1);
	MakeComm	(0XFE152,	"POST FAIL 6: Memory error");
	MakeCode	(0XFE152);
	MakeName	(0XFE152,	"FAIL_TEST_6");
	MakeName	(0XFE154,	"POST_CHECK_FAILED_4");
	MakeCode	(0XFE156);
	MakeName	(0XFE163,	"POST_sub_FE163");
	MakeComm	(0XFE19B,	"POST FAIL 7: Memory error");
	MakeCode	(0XFE19B);
	MakeName	(0XFE19D,	"POST_CHECK_FAILED_5");
	MakeCode	(0XFE19F);
	MakeName	(0XFE19F,	"SUCCESS_TEST_7");
	MakeCode	(x=0XFE1A1);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE1A8);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeComm	(0XFE1BA,	"POST FAIL 8: PIT Error");
	MakeName	(0XFE1BC,	"POST_CHECK_FAILED_6");
	MakeCode	(0XFE1BE);
	MakeName	(0XFE1BE,	"SUCCESS_TEST_8");
	MakeCode	(x=0XFE1C0);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE1C4);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE1D3);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(x=0XFE1E5);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(x=0XFE1F3);
	OpEnumEx		(x,	0,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE1F7);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE204);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE20D);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE211);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeComm	(0XFE224,	"POST FAIL 9: Interrupt test failure");
	MakeName	(0XFE226,	"POST_CHECK_FAILED_7");
	MakeComm	(0XFE228,	"POST SUCCESSFUL");
	MakeCode	(0XFE228);
	MakeName	(0XFE228,	"SUCCESS_TEST_9");
	MakeName	(0XFE22A,	"POST_CHECK_FAILED_8");
	MakeComm	(0XFE22C,	"FALLTHROUGH");
	MakeCode	(0XFE22C);
	MakeName	(0XFE22C,	"TIMER_INT");
	MakeName	(0XFE22E,	"DEFAULT_INT");
	MakeCode	(x=0XFE232);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeName	(0XFE232,	"MMU_LINEAR_MAPPING");
	MakeCode	(x=0XFE244);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeName	(0XFE244,	"POST_FINISHED");
	MakeCode	(0XFE24A);
	MakeComm	(0XFE24E,	"FALLTHROUGH");
	MakeCode	(x=0XFE252);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeName	(0XFE252,	"WARM_POST");
	MakeCode	(0XFE259);
	MakeComm	(0XFE25D,	"Start the memory test at 7E00:1FFF");
	MakeRptCmt	(0XFE260,	"That is 7FFFF");
	MakeCode	(0XFE27A);
	MakeCode	(x=0XFE285);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE287);
	OpHex		(x,	1);
	MakeCode	(0XFE2A5);
	MakeComm	(0XFE2A7,	"FALLTHROUGH");
	MakeCode	(0XFE2A7);
	MakeName	(0XFE2AC,	"FINISH_POST");
	MakeComm	(0XFE2B5,	"From FE00:1C00");
	MakeCode	(x=0XFE2B5);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeComm	(0XFE2B9,	"To   0000:0410");
	MakeCode	(x=0XFE2B9);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFE2BD,	"504 Words = 1008 Bytes");
	MakeCode	(x=0XFE2BD);
	OpDecimal	(x,	1);
	MakeComm	(0XFE2C0,	"Copy .data to DRAM");
	MakeCode	(x=0XFE2C5);
	OpEnumEx		(x,	0,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE2CB);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE2CD);
	OpHex		(x,	1);
	MakeCode	(0XFE2E1);
	MakeCode	(x=0XFE2EB);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE301);
	OpEnumEx		(x,	0,	GetEnum("IO_PORT"),0);
	MakeComm	(0XFE303,	"Enable controller");
	MakeCode	(x=0XFE30B);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFE30F,	"Enable channel");
	MakeComm	(0XFE314,	"sizeof(SIO_REGS_BLOCK)");
	MakeComm	(0XFE31A,	"25 newlines\n99 luftbaloons");
	MakeCode	(x=0XFE31A);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE335);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE33D);
	OpHex		(x,	1);
	MakeCode	(x=0XFE342);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE34C);
	OpHex		(x,	1);
	MakeCode	(x=0XFE34F);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE357);
	OpHex		(x,	1);
	MakeComm	(0XFE35E,	"Init floppy");
	MakeCode	(x=0XFE361);
	OpHex		(x,	1);
	MakeName	(0XFE36B,	"SYSCALL_0_MONITOR");
	MakeCode	(x=0XFE376);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFE387,	"FALLTHROUGH");
	MakeName	(0XFE38A,	"DO_SYSCALL_ENTRY");
	MakeCode	(x=0XFE3A7);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(0XFE3AE);
	MakeCode	(x=0XFE3B6);
	OpHex		(x,	1);
	MakeComm	(0XFE3B8,	"FALLTHROUGH");
	MakeCode	(x=0XFE3B8);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeName	(0XFE3BD,	"DO_SYSCALL_RETURN");
	MakeWord	(x=0XFE3CB);
	MakeArray	(x,	0XD);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeName	(0XFE3CB,	"SYSCALL_HANDLERS");
	MakeCode	(0XFE3E5);
	MakeName	(0XFE3E5,	"SYSCALL_1_5_SIO_GET_STAT_ATTR");
	MakeComm	(0XFE3E7,	"Just get the attributes");
	MakeCode	(x=0XFE3EF);
	OpHex		(x,	1);
	MakeCode	(0XFE3FB);
	MakeName	(0XFE3FB,	"SYSCALL_2_SIO_GETC");
	MakeCode	(x=0XFE3FF);
	OpHex		(x,	1);
	MakeCode	(0XFE403);
	MakeName	(0XFE403,	"SYSCALL_3_SIO_PUTC");
	MakeCode	(x=0XFE407);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFE40C,	"Character");
	MakeCode	(x=0XFE410);
	OpHex		(x,	1);
	MakeComm	(0XFE414,	"Attributes");
	MakeCode	(0XFE414);
	MakeName	(0XFE414,	"SYSCALL_4_SIO_SET_ATTRS");
	MakeComm	(0XFE419,	"Channel No.");
	MakeCode	(x=0XFE41D);
	OpHex		(x,	1);
	MakeComm	(0XFE421,	"Channel");
	MakeCode	(0XFE421);
	MakeName	(0XFE421,	"SYSCALL_6_PRINT_CRLF");
	MakeCode	(x=0XFE425);
	OpHex		(x,	1);
	MakeCode	(0XFE429);
	MakeName	(0XFE429,	"SYSCALL_7_PUTS");
	MakeCode	(x=0XFE432);
	OpHex		(x,	1);
	MakeCode	(0XFE436);
	MakeName	(0XFE436,	"SYSCALL_8_DISK_IO");
	MakeCode	(0XFE444);
	MakeName	(0XFE444,	"SYSCALL_10_GET_CONS_AND_MEM");
	MakeComm	(0XFE44C,	"Current console is always 0");
	MakeCode	(0XFE44F);
	MakeName	(0XFE44F,	"SYSCALL_11_GET_BOOT_DISK");
	MakeCode	(0XFE453);
	MakeName	(0XFE453,	"SYSCALL_12_DISK_BOOT");
	MakeCode	(x=0XFE457);
	OpHex		(x,	1);
	MakeCode	(0XFE45B);
	MakeName	(0XFE45B,	"SAVE_REGS_AND_BREAK");
	MakeCode	(x=0XFE461);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE464);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE467);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE46A);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE46D);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE470);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE473);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE476);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE479);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE47D);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE481);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE485);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE489);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE48D);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE490);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFE49E);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	OpHex		(x,	1);
	MakeCode	(x=0XFE4A5);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	OpHex		(x,	1);
	MakeCode	(x=0XFE4B3);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(0XFE4BA);
	MakeName	(0XFE4BA,	"IOP8086_DO_IO");
	MakeCode	(x=0XFE4BB);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFE4D3,	"40:0 -- 0:400");
	MakeCode	(x=0XFE4D3);
	OpStroffEx	(x,	0,	GetStrucIdByName("IOP8089_CB"),	0);
	MakeComm	(0XFE4D7,	"40:2 -- 0:402");
	MakeCode	(x=0XFE4D7);
	OpStroffEx	(x,	0,	GetStrucIdByName("IOP8089_CB"),	0);
	MakeComm	(0XFE4DC,	"40:4 -- 0:404");
	MakeCode	(x=0XFE4DC);
	OpStroffEx	(x,	0,	GetStrucIdByName("IOP8089_CB"),	0);
	MakeComm	(0XFE4E1,	"40:1 -- 0:401   Busy?");
	MakeCode	(x=0XFE4E1);
	OpStroffEx	(x,	0,	GetStrucIdByName("IOP8089_CB"),	0);
	MakeCode	(x=0XFE4E7);
	OpEnumEx		(x,	1,	GetEnum("IO_PORT"),0);
	MakeCode	(x=0XFE4EB);
	OpDecimal	(x,	1);
	MakeComm	(0XFE4EE,	"40:1 -- 0:401   Busy no more?");
	MakeCode	(x=0XFE4EE);
	OpDecimal	(x,	0);
	MakeCode	(x=0XFE4FD);
	OpHex		(x,	1);
	MakeCode	(0XFE504);
	MakeName	(0XFE504,	"SIO_GETC");
	MakeCode	(x=0XFE509);
	OpHex		(x,	1);
	MakeCode	(x=0XFE50C);
	OpStkvar	(x,	1);
	MakeComm	(0XFE510,	"Length");
	MakeCode	(x=0XFE514);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE51C);
	OpHex		(x,	1);
	MakeCode	(x=0XFE51F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE522);
	OpStkvar	(x,	1);
	MakeCode	(0XFE52A);
	MakeName	(0XFE52A,	"DO_SYSCALL_3_PUTC");
	MakeCode	(x=0XFE52F);
	OpStkvar	(x,	0);
	MakeRptCmt	(0XFE532,	"Length");
	MakeCode	(x=0XFE536);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE53E);
	OpHex		(x,	1);
	MakeCode	(0XFE544);
	MakeName	(0XFE544,	"FMT_HEX");
	MakeCode	(x=0XFE549);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE54C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE54F);
	OpHex		(x,	1);
	MakeCode	(x=0XFE558);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE55F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE562);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE565);
	OpHex		(x,	1);
	MakeCode	(x=0XFE569);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XFE574);
	MakeName	(0XFE574,	"DELAY");
	MakeCode	(x=0XFE57F);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE582);
	OpDecimal	(x,	1);
	MakeCode	(0XFE590);
	MakeName	(0XFE590,	"DISK_BOOT");
	MakeCode	(x=0XFE595);
	OpHex		(x,	1);
	MakeCode	(x=0XFE598);
	OpStkvar	(x,	0);
	MakeCode	(0XFE5A3);
	MakeCode	(x=0XFE5AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE5B1);
	OpStkvar	(x,	0);
	MakeCode	(0XFE5BC);
	MakeCode	(x=0XFE5CE);
	OpStkvar	(x,	0);
	MakeCode	(0XFE5D8);
	MakeCode	(x=0XFE5E4);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE5E9);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE5F5);
	OpDecimal	(x,	1);
	MakeCode	(0XFE60B);
	MakeCode	(x=0XFE61C);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE61F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE628);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE62F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE634);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE648);
	OpHex		(x,	1);
	MakeCode	(x=0XFE64B);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeCode	(x=0XFE650);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFE655,	"Length");
	MakeCode	(x=0XFE659);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE65D);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE664);
	OpHex		(x,	1);
	MakeCode	(x=0XFE667);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE672);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE69F);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE6A4);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE6B6);
	OpHex		(x,	1);
	MakeCode	(x=0XFE6B9);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE6BF);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE6C4);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE6C9);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE6CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE6D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE6D7);
	OpHex		(x,	1);
	MakeCode	(x=0XFE6DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE6DD);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE6E4);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE6EB);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE6F0);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE6F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE6F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE6FF);
	OpHex		(x,	1);
	MakeCode	(x=0XFE702);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE705);
	OpDecimal	(x,	1);
	MakeWord	(x=0XFE714);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeWord	(x=0XFE716);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeWord	(x=0XFE718);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeCode	(0XFE71A);
	MakeCode	(0XFE727);
	MakeCode	(0XFE734);
	MakeName	(0XFE734,	"BOOT_FAILED_ERR");
	MakeCode	(x=0XFE739);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE740);
	OpHex		(x,	1);
	MakeCode	(x=0XFE74B);
	OpHex		(x,	1);
	MakeCode	(0XFE752);
	MakeName	(0XFE752,	"M_DISK_IO");
	MakeCode	(x=0XFE75E);
	OpHex		(x,	1);
	MakeCode	(0XFE774);
	MakeCode	(0XFE780);
	MakeName	(0XFE780,	"DISK_IO");
	MakeCode	(x=0XFE785);
	OpHex		(x,	1);
	MakeCode	(x=0XFE788);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE78D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE794);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFE79C);
	OpStkvar	(x,	0);
	MakeRptCmt	(0XFE79F,	"sizeof(IOPB)");
	MakeCode	(x=0XFE79F);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE7A5);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE7AD);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE7BA);
	OpHex		(x,	1);
	MakeCode	(0XFE7C0);
	MakeName	(0XFE7C0,	"DISK_READ");
	MakeCode	(0XFE7D2);
	MakeCode	(0XFE7D8);
	MakeName	(0XFE7D8,	"ERR_BEEP");
	MakeCode	(x=0XFE7DD);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE7EB);
	OpHex		(x,	1);
	MakeCode	(0XFE7F2);
	MakeName	(0XFE7F2,	"FDC_SET_FLOPPY_PARAMS");
	MakeCode	(x=0XFE7F7);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE7FD);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE802);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE805);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE810);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFE814);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE81A);
	OpEnumEx		(x,	1,	GetEnum("FDC_COMMANDS"),0);
	MakeCode	(x=0XFE827);
	OpEnumEx		(x,	1,	GetEnum("FDC_COMMANDS"),0);
	MakeCode	(x=0XFE82B);
	OpEnumEx		(x,	1,	GetEnum("FDC_COMMANDS"),0);
	MakeCode	(0XFE834);
	MakeName	(0XFE834,	"FDC_READ");
	MakeCode	(x=0XFE839);
	OpHex		(x,	1);
	MakeCode	(x=0XFE840);
	OpHex		(x,	1);
	MakeCode	(x=0XFE84A);
	OpHex		(x,	1);
	MakeCode	(x=0XFE852);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE855);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE85D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE864);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE86B);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE872);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE875);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE880);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE88A);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFE895);
	OpStkvar	(x,	1);
	MakeCode	(0XFE89C);
	MakeCode	(x=0XFE8A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE8A8);
	OpHex		(x,	1);
	MakeCode	(x=0XFE8AF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8B6);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8B9);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8C1);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE8C4);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8CC);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE8D7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE8DA);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE8E5);
	OpHex		(x,	1);
	MakeCode	(x=0XFE8EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE8F1);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE8F8);
	OpHex		(x,	1);
	MakeComm	(0XFE905,	"Submit commands");
	MakeCode	(x=0XFE905);
	OpEnumEx		(x,	1,	GetEnum("FDC_COMMANDS"),0);
	MakeCode	(x=0XFE912);
	OpEnumEx		(x,	1,	GetEnum("FDC_COMMANDS"),0);
	MakeCode	(x=0XFE916);
	OpEnumEx		(x,	1,	GetEnum("FDC_COMMANDS"),0);
	MakeCode	(x=0XFE920);
	OpHex		(x,	1);
	MakeCode	(x=0XFE930);
	OpStkvar	(x,	0);
	MakeComm	(0XFE934,	"Error?");
	MakeCode	(x=0XFE93A);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE93D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE940);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE947);
	OpStkvar	(x,	1);
	MakeComm	(0XFE94A,	"All done?");
	MakeCode	(x=0XFE94F);
	OpStkvar	(x,	1);
	MakeCode	(0XFE95A);
	MakeName	(0XFE95A,	"FDC_ENQUEUE_CMD");
	MakeCode	(x=0XFE95F);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE962);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XFE96E);
	MakeName	(0XFE96E,	"PARSE_ADDR_sub_FE96E");
	MakeCode	(x=0XFE973);
	OpHex		(x,	1);
	MakeCode	(x=0XFE976);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE980);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE987);
	OpHex		(x,	1);
	MakeCode	(x=0XFE98E);
	OpChr		(x,	1);
	MakeCode	(x=0XFE9A3);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE9AA);
	OpHex		(x,	1);
	MakeCode	(x=0XFE9B1);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE9B5);
	OpStkvar	(x,	1);
	MakeCode	(0XFE9BC);
	MakeName	(0XFE9BC,	"GETCHAR_ECHO");
	MakeCode	(x=0XFE9C7);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFE9CE);
	OpHex		(x,	1);
	MakeCode	(0XFE9D8);
	MakeName	(0XFE9D8,	"READ_MEM_ADDR_sub_FE9D8");
	MakeCode	(x=0XFE9DD);
	OpHex		(x,	1);
	MakeCode	(x=0XFE9E0);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFE9E4);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFE9E9);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE9F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE9FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEA00);
	OpStkvar	(x,	0);
	MakeComm	(0XFEA09,	"END_OF_LINE");
	MakeCode	(x=0XFEA10);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEA17);
	OpHex		(x,	1);
	MakeCode	(x=0XFEA1A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEA26);
	OpHex		(x,	1);
	MakeCode	(x=0XFEA2D);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFEA33);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEA36);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEA3D);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEA40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEA4C);
	OpChr		(x,	1);
	MakeCode	(x=0XFEA53);
	OpChr		(x,	1);
	MakeCode	(x=0XFEA5A);
	OpChr		(x,	1);
	MakeCode	(x=0XFEA69);
	OpChr		(x,	1);
	MakeCode	(x=0XFEA70);
	OpChr		(x,	1);
	MakeCode	(x=0XFEA7B);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEA7E);
	OpStkvar	(x,	0);
	MakeCode	(0XFEA8C);
	MakeCode	(0XFEA94);
	MakeCode	(x=0XFEA99);
	OpHex		(x,	1);
	MakeCode	(x=0XFEA9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEAA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEAB1);
	OpStkvar	(x,	1);
	MakeComm	(0XFEABF,	"CRLF");
	MakeCode	(x=0XFEAC6);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEACD);
	OpHex		(x,	1);
	MakeCode	(x=0XFEAD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEADC);
	OpHex		(x,	1);
	MakeCode	(x=0XFEAEA);
	OpChr		(x,	1);
	MakeCode	(x=0XFEAF1);
	OpChr		(x,	1);
	MakeCode	(0XFEB02);
	MakeCode	(x=0XFEB08);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeName	(0XFEB08,	"RESTORE_REGS_AND_IRET");
	MakeCode	(x=0XFEB10);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB18);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB1B);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEB1F);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB22);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB25);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB28);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB2B);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB2E);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB31);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB34);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB37);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB3A);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB3D);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB40);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB43);
	OpStroffEx	(x,	0,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(x=0XFEB46);
	OpStroffEx	(x,	1,	GetStrucIdByName("CPU_REGS"),	0);
	MakeCode	(0XFEB4C);
	MakeName	(0XFEB4C,	"M_GOTO");
	MakeCode	(x=0XFEB58);
	OpHex		(x,	1);
	MakeCode	(0XFEB8E);
	MakeName	(0XFEB8E,	"M_SINGLE_STEP");
	MakeCode	(x=0XFEB9A);
	OpHex		(x,	1);
	MakeCode	(x=0XFEBAA);
	OpHex		(x,	1);
	MakeCode	(x=0XFEBCA);
	OpHex		(x,	1);
	MakeCode	(0XFEBD6);
	MakeCode	(x=0XFEBDB);
	OpHex		(x,	1);
	MakeCode	(x=0XFEBDE);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEBE3);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEBED);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEBF5);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEBFF);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC06);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEC0D);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEC1E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFEC29);
	OpHex		(x,	1);
	MakeCode	(x=0XFEC2C);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEC2F);
	OpStkvar	(x,	0);
	MakeCode	(0XFEC38);
	MakeName	(0XFEC38,	"INT3_sub_FEC38");
	MakeCode	(x=0XFEC3D);
	OpHex		(x,	1);
	MakeCode	(x=0XFEC40);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC47);
	OpHex		(x,	1);
	MakeCode	(x=0XFEC4A);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEC4F);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEC59);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC61);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEC6B);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC72);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEC79);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEC87);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEC90);
	OpHex		(x,	1);
	MakeCode	(x=0XFEC93);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEC96);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEC9C);
	OpHex		(x,	1);
	MakeCode	(0XFECA8);
	MakeName	(0XFECA8,	"HDD_READ");
	MakeCode	(x=0XFECAD);
	OpHex		(x,	1);
	MakeCode	(x=0XFECC5);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFECCA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFED03);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED06);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED10);
	OpStkvar	(x,	0);
	MakeCode	(0XFED17);
	MakeCode	(x=0XFED1C);
	OpStkvar	(x,	0);
	MakeCode	(0XFED23);
	MakeCode	(x=0XFED2D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFED34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFED45);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED4C);
	OpStkvar	(x,	1);
	MakeCode	(0XFED5C);
	MakeName	(0XFED5C,	"AUTOBOOT_PROMPT");
	MakeCode	(x=0XFED61);
	OpHex		(x,	1);
	MakeCode	(x=0XFED64);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED6D);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFED74);
	OpHex		(x,	1);
	MakeCode	(x=0XFED77);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFED7E);
	OpHex		(x,	1);
	MakeCode	(x=0XFED81);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFED86);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFED8D);
	OpHex		(x,	1);
	MakeCode	(x=0XFED9F);
	OpHex		(x,	1);
	MakeCode	(0XFEDAA);
	MakeCode	(x=0XFEDAF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEDB6);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEDB9);
	OpStkvar	(x,	0);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFEDBF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEDC5);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEDCC);
	OpHex		(x,	1);
	MakeCode	(x=0XFEDD9);
	OpHex		(x,	1);
	MakeCode	(0XFEDDE);
	MakeCode	(x=0XFEDE6);
	OpChr		(x,	1);
	MakeCode	(x=0XFEDEB);
	OpChr		(x,	1);
	MakeCode	(0XFEDF3);
	MakeCode	(x=0XFEDF6);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFEDFD);
	OpHex		(x,	1);
	MakeCode	(x=0XFEE0A);
	OpChr		(x,	1);
	MakeCode	(x=0XFEE0F);
	OpChr		(x,	1);
	MakeName	(0XFEE17,	"KEY_2_FD_BOOT");
	MakeComm	(0XFEE19,	"0 = FLOPPY");
	MakeComm	(0XFEE1A,	"FALLTHROUGH");
	MakeCode	(x=0XFEE1D);
	OpHex		(x,	1);
	MakeName	(0XFEE1D,	"MONITOR");
	MakeCode	(x=0XFEE22);
	OpHex		(x,	1);
	MakeName	(0XFEE22,	"DISPATCH_COMMAND");
	MakeCode	(x=0XFEE25);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeCode	(0XFEE2A);
	MakeCode	(0XFEE2F);
	MakeName	(0XFEE2F,	"MON_A_LTER_MEMORY");
	MakeCode	(0XFEE34);
	MakeName	(0XFEE34,	"MON_B_REAKPOINT");
	MakeCode	(0XFEE39);
	MakeName	(0XFEE39,	"MON_D_ISPLAY_MEMORY");
	MakeCode	(0XFEE3E);
	MakeName	(0XFEE3E,	"MON_G_O_TO");
	MakeCode	(0XFEE43);
	MakeName	(0XFEE43,	"MON_I_NPUT_FROM_PORT");
	MakeCode	(0XFEE4C);
	MakeName	(0XFEE4C,	"MON_K_DISK_IO");
	MakeCode	(0XFEE51);
	MakeName	(0XFEE51,	"MON_L_OAD_BOOT");
	MakeCode	(0XFEE56);
	MakeName	(0XFEE56,	"MON_M_EMCPY");
	MakeCode	(0XFEE5B);
	MakeName	(0XFEE5B,	"MON_O_UTPUT_TO_PORT");
	MakeCode	(0XFEE60);
	MakeName	(0XFEE60,	"MON_R_EGISTERS");
	MakeCode	(0XFEE65);
	MakeName	(0XFEE65,	"MON_S_INGLE_STEP");
	MakeCode	(0XFEE6A);
	MakeName	(0XFEE6A,	"MON_X_HEX_DOWNLOAD");
	MakeCode	(x=0XFEE6D);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeName	(0XFEE6D,	"MONITOR_PROMPT");
	MakeCode	(x=0XFEE74);
	OpHex		(x,	1);
	MakeCode	(x=0XFEE81);
	OpChr		(x,	1);
	MakeComm	(0XFEE84,	"Num of letters of alphabet");
	MakeCode	(x=0XFEE84);
	OpDecimal	(x,	1);
	MakeName	(0XFEE89,	"MON___NO_CMD");
	MakeRptCmt	(0XFEE8C,	"Try to autoboot.\nAllow breaking into boot menu and monitor.");
	MakeWord	(x=0XFEE8E);
	MakeArray	(x,	0X18);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeName	(0XFEE8E,	"MONITOR_COMMANDS");
	MakeCode	(0XFEEBE);
	MakeCode	(0XFEEC2);
	MakeName	(0XFEEC2,	"M_MEMCPY");
	MakeCode	(x=0XFEEC7);
	OpHex		(x,	1);
	MakeCode	(x=0XFEED1);
	OpHex		(x,	1);
	MakeCode	(0XFEEE7);
	MakeCode	(x=0XFEEEB);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEEF2);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEF07);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEF0E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEF11);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEF18);
	OpHex		(x,	1);
	MakeCode	(x=0XFEF1F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEF22);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEF26);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEF2D);
	OpHex		(x,	1);
	MakeCode	(0XFEF34);
	MakeName	(0XFEF34,	"MEMCPY");
	MakeCode	(x=0XFEF3B);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEF43);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEF4B);
	OpStkvar	(x,	1);
	MakeCode	(0XFEF58);
	MakeName	(0XFEF58,	"M_PORT_IO");
	MakeCode	(x=0XFEF5D);
	OpHex		(x,	1);
	MakeCode	(x=0XFEF60);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEF6B);
	OpHex		(x,	1);
	MakeCode	(x=0XFEF74);
	OpChr		(x,	1);
	MakeCode	(x=0XFEF7B);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEF86);
	OpHex		(x,	1);
	MakeCode	(x=0XFEF89);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEF90);
	OpHex		(x,	1);
	MakeCode	(x=0XFEF9E);
	OpHex		(x,	1);
	MakeCode	(x=0XFEFA1);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFA7);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFAD);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFB3);
	OpHex		(x,	1);
	MakeCode	(x=0XFEFBA);
	OpHex		(x,	1);
	MakeCode	(x=0XFEFBF);
	OpChr		(x,	1);
	MakeCode	(x=0XFEFCC);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFD2);
	OpHex		(x,	1);
	MakeCode	(x=0XFEFDB);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFEFE2);
	OpHex		(x,	1);
	MakeCode	(x=0XFEFE9);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFEF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFF2);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFEFF8);
	OpHex		(x,	1);
	MakeCode	(x=0XFEFFD);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF000);
	OpStkvar	(x,	0);
	MakeCode	(0XFF008);
	MakeName	(0XFF008,	"PUTS");
	MakeCode	(x=0XFF00D);
	OpStkvar	(x,	0);
	MakeComm	(0XFF012,	"Attrs");
	MakeComm	(0XFF013,	"Channel = 0");
	MakeCode	(x=0XFF017);
	OpHex		(x,	1);
	MakeCode	(0XFF01E);
	MakeName	(0XFF01E,	"DO_PUTS");
	MakeCode	(x=0XFF023);
	OpHex		(x,	1);
	MakeCode	(x=0XFF026);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF02B);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF032);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF03B);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF03E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF041);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF044);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF04A);
	OpHex		(x,	1);
	MakeCode	(x=0XFF04D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF053);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF059);
	OpHex		(x,	1);
	MakeCode	(x=0XFF064);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF067);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF06E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF074);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF07A);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF084);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF08B);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF08E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF091);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF094);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF09A);
	OpHex		(x,	1);
	MakeCode	(0XFF0A0);
	MakeName	(0XFF0A0,	"PRINT_CRLF");
	MakeCode	(x=0XFF0AB);
	OpHex		(x,	1);
	MakeCode	(0XFF0B2);
	MakeName	(0XFF0B2,	"DO_PRINT_CRLF");
	MakeCode	(x=0XFF0B7);
	OpHex		(x,	1);
	MakeCode	(x=0XFF0BA);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF0BE);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF0C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF0CD);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF0D3);
	OpHex		(x,	1);
	MakeCode	(0XFF0DA);
	MakeName	(0XFF0DA,	"PRINTHEX16");
	MakeCode	(x=0XFF0DF);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF0E2);
	OpHex		(x,	1);
	MakeCode	(x=0XFF0EF);
	OpHex		(x,	1);
	MakeCode	(x=0XFF0F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF0F5);
	OpHex		(x,	1);
	MakeCode	(x=0XFF0FD);
	OpHex		(x,	1);
	MakeCode	(0XFF104);
	MakeName	(0XFF104,	"PRINTHEX8");
	MakeCode	(x=0XFF109);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF10D);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF111);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF119);
	OpHex		(x,	1);
	MakeCode	(x=0XFF11C);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF123);
	OpHex		(x,	1);
	MakeCode	(x=0XFF126);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF12D);
	OpHex		(x,	1);
	MakeCode	(0XFF134);
	MakeCode	(x=0XFF143);
	OpHex		(x,	1);
	MakeCode	(0XFF14A);
	MakeCode	(x=0XFF14F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF152);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF159);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF160);
	OpHex		(x,	1);
	MakeCode	(x=0XFF163);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF166);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF169);
	OpStkvar	(x,	0);
	MakeCode	(0XFF172);
	MakeName	(0XFF172,	"SIO_RX");
	MakeCode	(x=0XFF177);
	OpStkvar	(x,	1);
	MakeComm	(0XFF17A,	"sizeof(SIO_CHAN_REGS)");
	MakeCode	(x=0XFF17C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF17F);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeComm	(0XFF185,	"Just the attributes?");
	MakeCode	(x=0XFF185);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF18E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF193);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF196);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF199);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1A1);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1A8);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1AD);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1B0);
	OpHex		(x,	1);
	MakeCode	(x=0XFF1B5);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(0XFF1C0);
	MakeCode	(x=0XFF1C2);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1C6);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1CB);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1D0);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1D7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF1DC);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1E3);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1E8);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1F1);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1FA);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF1FF);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF206);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(0XFF211);
	MakeName	(0XFF211,	"SIO_TX");
	MakeCode	(x=0XFF218);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF21B);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF221);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF228);
	OpStkvar	(x,	0);
	MakeComm	(0XFF22D,	"Zero length write");
	MakeCode	(x=0XFF232);
	OpStroffEx	(x,	1,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF235);
	OpHex		(x,	1);
	MakeCode	(x=0XFF23F);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFF241);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF246);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF24E);
	OpHex		(x,	1);
	MakeCode	(x=0XFF252);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF257);
	OpHex		(x,	1);
	MakeCode	(x=0XFF25D);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF260);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF263);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFF269);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFF26C);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF270);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF273);
	OpStkvar	(x,	1);
	MakeComm	(0XFF276,	"Copy data to TX buffer");
	MakeCode	(x=0XFF27E);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(x=0XFF287);
	OpStkvar	(x,	1);
	MakeCode	(0XFF296);
	MakeName	(0XFF296,	"M_REGISTER");
	MakeCode	(x=0XFF29B);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2A5);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2AB);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF2AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF2B9);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF2BC);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2BE);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF2C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF2CE);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2D1);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF2D4);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2D6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF2DD);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2E0);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF2E7);
	OpHex		(x,	1);
	MakeCode	(x=0XFF2F0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF2FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF301);
	OpHex		(x,	1);
	MakeCode	(x=0XFF303);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF30B);
	OpHex		(x,	1);
	MakeCode	(0XFF311);
	MakeCode	(x=0XFF314);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF317);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF31C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF31F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF321);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF325);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF32D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF330);
	OpStkvar	(x,	0);
	MakeCode	(0XFF33C);
	MakeName	(0XFF33C,	"M_BREAKPOINT");
	MakeCode	(x=0XFF341);
	OpHex		(x,	1);
	MakeCode	(x=0XFF344);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF34F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF35F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF364);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF36D);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF377);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF382);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF388);
	OpHex		(x,	1);
	MakeCode	(x=0XFF392);
	OpHex		(x,	1);
	MakeCode	(x=0XFF395);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF39F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF3A6);
	OpHex		(x,	1);
	MakeCode	(x=0XFF3A9);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF3B0);
	OpHex		(x,	1);
	MakeCode	(x=0XFF3B3);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF3BD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF3C4);
	OpHex		(x,	1);
	MakeCode	(x=0XFF3C7);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF3CC);
	OpChr		(x,	1);
	MakeCode	(x=0XFF3D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF3DA);
	OpHex		(x,	1);
	MakeCode	(x=0XFF3E1);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF3E7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF3F2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(0XFF3FA);
	MakeCode	(x=0XFF402);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF407);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF411);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF42B);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF435);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF43D);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF444);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF448);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF44F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF456);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF459);
	OpStkvar	(x,	0);
	MakeCode	(0XFF462);
	MakeName	(0XFF462,	"PRINT_REGS");
	MakeCode	(x=0XFF467);
	OpHex		(x,	1);
	MakeCode	(x=0XFF46A);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF471);
	OpHex		(x,	1);
	MakeCode	(x=0XFF47B);
	OpHex		(x,	1);
	MakeCode	(x=0XFF47E);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF485);
	OpHex		(x,	1);
	MakeCode	(x=0XFF48F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF492);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF499);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4A2);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF4A7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF4AA);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4AC);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF4BB);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4C5);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4C8);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF4CB);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF4D4);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF4D9);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF4DC);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4DE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeCode	(x=0XFF4E5);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4EF);
	OpHex		(x,	1);
	MakeCode	(x=0XFF4F2);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF4F5);
	OpStkvar	(x,	0);
	MakeCode	(0XFF4FE);
	MakeName	(0XFF4FE,	"PRINT_FLAGS_REG");
	MakeCode	(x=0XFF503);
	OpHex		(x,	1);
	MakeCode	(x=0XFF50A);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF50D);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF512);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF517);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF51E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF525);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF52C);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF533);
	OpHex		(x,	1);
	MakeCode	(x=0XFF53D);
	OpHex		(x,	1);
	MakeCode	(x=0XFF540);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF543);
	OpHex		(x,	1);
	MakeCode	(x=0XFF545);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF548);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF54B);
	OpStkvar	(x,	0);
	MakeCode	(0XFF554);
	MakeName	(0XFF554,	"SIO_COMMAND_WHEN_READY");
	MakeCode	(x=0XFF557);
	OpStroffEx	(x,	0,	GetStrucIdByName("CHAN_REGS"),	0);
	MakeCode	(0XFF55E);
	MakeName	(0XFF55E,	"SYS_CMD_WHEN_READY");
	MakeCode	(x=0XFF563);
	OpHex		(x,	1);
	MakeCode	(0XFF570);
	MakeName	(0XFF570,	"MEM_WRITE8");
	MakeCode	(x=0XFF57C);
	OpStkvar	(x,	1);
	MakeCode	(0XFF584);
	MakeName	(0XFF584,	"MEM_READ8");
	MakeCode	(0XFF592);
	MakeName	(0XFF592,	"SIO_WAIT_READY");
	MakeCode	(x=0XFF596);
	OpHex		(x,	1);
	MakeCode	(0XFF59E);
	MakeName	(0XFF59E,	"PRINT_BUF");
	MakeCode	(x=0XFF5A3);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5A9);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5AC);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5B2);
	OpHex		(x,	1);
	MakeCode	(0XFF5B8);
	MakeName	(0XFF5B8,	"M_ALTER_MEMORY");
	MakeCode	(x=0XFF5BD);
	OpHex		(x,	1);
	MakeCode	(x=0XFF5C0);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF5C4);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5CF);
	OpHex		(x,	1);
	MakeCode	(x=0XFF5E6);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5FA);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF5FD);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF605);
	OpHex		(x,	1);
	MakeCode	(x=0XFF608);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF60F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF618);
	OpChr		(x,	1);
	MakeCode	(x=0XFF626);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF632);
	OpHex		(x,	1);
	MakeCode	(x=0XFF639);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF640);
	OpHex		(x,	1);
	MakeCode	(x=0XFF647);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF64F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF657);
	OpStkvar	(x,	1);
	MakeCode	(0XFF664);
	MakeName	(0XFF664,	"M_LOAD_BOOT");
	MakeCode	(x=0XFF669);
	OpHex		(x,	1);
	MakeCode	(x=0XFF673);
	OpHex		(x,	1);
	MakeCode	(x=0XFF676);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF67D);
	OpHex		(x,	1);
	MakeCode	(x=0XFF684);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF68A);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF690);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF698);
	OpHex		(x,	1);
	MakeCode	(0XFF6A2);
	MakeName	(0XFF6A2,	"FDC_sub_FF6A2");
	MakeCode	(x=0XFF6AB);
	OpHex		(x,	1);
	MakeCode	(x=0XFF6B1);
	OpHex		(x,	1);
	MakeCode	(0XFF6BA);
	MakeName	(0XFF6BA,	"PARSE_HEX_sub_FF6BA");
	MakeCode	(x=0XFF6BF);
	OpHex		(x,	1);
	MakeCode	(x=0XFF6C2);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF6C6);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF6CC);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF6D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF6D5);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF6D9);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeCode	(x=0XFF6DE);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF6E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF6E7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF6EB);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeCode	(x=0XFF6F0);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF6F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF6F9);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF6FD);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeCode	(x=0XFF704);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF70A);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF710);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF714);
	OpStkvar	(x,	1);
	MakeCode	(0XFF71C);
	MakeName	(0XFF71C,	"GETCHAR");
	MakeCode	(x=0XFF721);
	OpHex		(x,	1);
	MakeCode	(x=0XFF724);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF732);
	OpHex		(x,	1);
	MakeCode	(x=0XFF735);
	OpStkvar	(x,	1);
	MakeCode	(0XFF73C);
	MakeName	(0XFF73C,	"PUTCHAR");
	MakeCode	(x=0XFF741);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF74E);
	OpHex		(x,	1);
	MakeCode	(0XFF754);
	MakeName	(0XFF754,	"M_DISPLAY_MEMORY");
	MakeCode	(x=0XFF759);
	OpHex		(x,	1);
	MakeCode	(x=0XFF763);
	OpHex		(x,	1);
	MakeCode	(0XFF770);
	MakeCode	(x=0XFF777);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF77E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF785);
	OpHex		(x,	1);
	MakeCode	(0XFF78F);
	MakeCode	(x=0XFF796);
	OpHex		(x,	1);
	MakeCode	(x=0XFF79A);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF7A3);
	OpHex		(x,	1);
	MakeCode	(x=0XFF7A6);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF7AF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF7B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF7BA);
	OpHex		(x,	1);
	MakeCode	(x=0XFF7C1);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF7C4);
	OpHex		(x,	1);
	MakeCode	(x=0XFF7D3);
	OpHex		(x,	1);
	MakeCode	(x=0XFF7D6);
	OpHex		(x,	1);
	MakeCode	(x=0XFF7E5);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF7EE);
	OpOff		(x,	1,	0XFE000);
	OpOff		(x,	129,	0XFE000);
	MakeCode	(x=0XFF7FD);
	OpHex		(x,	1);
	MakeCode	(x=0XFF807);
	OpHex		(x,	1);
	MakeCode	(x=0XFF80F);
	OpChr		(x,	1);
	MakeCode	(x=0XFF816);
	OpHex		(x,	1);
	MakeCode	(x=0XFF81A);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF825);
	OpHex		(x,	1);
	MakeCode	(x=0XFF828);
	OpHex		(x,	1);
	MakeCode	(0XFF834);
	MakeName	(0XFF834,	"DISPMEM_sub_FF834");
	MakeCode	(x=0XFF839);
	OpHex		(x,	1);
	MakeCode	(x=0XFF83C);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF840);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF84B);
	OpHex		(x,	1);
	MakeCode	(x=0XFF84E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF855);
	OpHex		(x,	1);
	MakeCode	(x=0XFF858);
	OpHex		(x,	1);
	MakeCode	(x=0XFF85E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF866);
	OpHex		(x,	1);
	MakeCode	(x=0XFF869);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF86C);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF872);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF878);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF87E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF885);
	OpHex		(x,	1);
	MakeCode	(x=0XFF88C);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF88F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF895);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF89C);
	OpHex		(x,	1);
	MakeCode	(0XFF8A2);
	MakeName	(0XFF8A2,	"PRINT_MEM_ADDR_sub_FF8A2");
	MakeCode	(x=0XFF8A7);
	OpHex		(x,	1);
	MakeCode	(x=0XFF8AA);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF8B8);
	OpHex		(x,	1);
	MakeCode	(x=0XFF8BB);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF8C2);
	OpHex		(x,	1);
	MakeCode	(x=0XFF8CC);
	OpHex		(x,	1);
	MakeCode	(x=0XFF8D6);
	OpHex		(x,	1);
	MakeCode	(0XFF8DC);
	MakeCode	(0XFF8EE);
	MakeCode	(x=0XFF8F9);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF8FF);
	OpHex		(x,	1);
	MakeCode	(0XFF906);
	MakeCode	(x=0XFF911);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF917);
	OpHex		(x,	1);
	MakeCode	(0XFF91E);
	MakeName	(0XFF91E,	"M_HEX_DOWNLOAD");
	MakeCode	(x=0XFF923);
	OpHex		(x,	1);
	MakeCode	(x=0XFF926);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF92A);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF92E);
	OpStkvar	(x,	0);
	OpChr		(x,	1);
	MakeCode	(x=0XFF932);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF936);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF93A);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF952);
	OpHex		(x,	1);
	MakeCode	(x=0XFF955);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF95C);
	OpHex		(x,	1);
	MakeCode	(x=0XFF965);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFF975);
	OpHex		(x,	1);
	MakeCode	(0XFF987);
	MakeCode	(x=0XFF990);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF998);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF99F);
	OpHex		(x,	1);
	MakeCode	(x=0XFF9AB);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF9B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF9BA);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF9C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF9C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF9CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF9D7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF9E0);
	OpHex		(x,	1);
	MakeCode	(x=0XFF9E3);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeCode	(x=0XFF9E8);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFF9ED);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF9F1);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFF9FD);
	OpHex		(x,	1);
	MakeCode	(x=0XFFA04);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFA09);
	OpStkvar	(x,	0);
	MakeCode	(0XFFA0F);
	MakeCode	(0XFFA17);
	MakeCode	(x=0XFFA25);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFA2C);
	OpHex		(x,	1);
	MakeWord	(x=0XFFA31);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeWord	(x=0XFFA33);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeWord	(x=0XFFA35);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeWord	(x=0XFFA37);
	OpOff		(x,	0,	0XFE000);
	OpOff		(x,	128,	0XFE000);
	MakeCode	(0XFFA39);
	MakeCode	(x=0XFFA3C);
	OpHex		(x,	1);
	MakeCode	(x=0XFFA44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFA4B);
	OpHex		(x,	1);
	MakeCode	(x=0XFFA4E);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFA57);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFFA5E);
	OpHex		(x,	1);
	MakeCode	(0XFFA68);
	MakeName	(0XFFA68,	"HEX_sub_FFA68");
	MakeCode	(x=0XFFA6F);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFA77);
	OpHex		(x,	1);
	MakeCode	(x=0XFFA83);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFA8B);
	OpHex		(x,	1);
	MakeCode	(0XFFA96);
	MakeName	(0XFFA96,	"IN8");
	MakeCode	(x=0XFFA99);
	OpStkvar	(x,	1);
	MakeCode	(0XFFA9F);
	MakeName	(0XFFA9F,	"IN16");
	MakeCode	(x=0XFFAA2);
	OpStkvar	(x,	1);
	MakeCode	(0XFFAA8);
	MakeName	(0XFFAA8,	"OUT8");
	MakeCode	(x=0XFFAAB);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFAAE);
	OpStkvar	(x,	1);
	MakeCode	(0XFFAB4);
	MakeName	(0XFFAB4,	"OUT16");
	MakeCode	(x=0XFFAB7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFABA);
	OpStkvar	(x,	1);
	MakeCode	(0XFFAC0);
	MakeName	(0XFFAC0,	"NEW_COMMAND");
	MakeCode	(0XFFAC6);
	MakeName	(0XFFAC6,	"HEX_sub_FFAC6");
	MakeCode	(x=0XFFACB);
	OpHex		(x,	1);
	MakeCode	(x=0XFFAD1);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFAD7);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFADA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFADF);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFAE5);
	OpHex		(x,	1);
	MakeCode	(x=0XFFAEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFAEF);
	OpHex		(x,	1);
	MakeCode	(0XFFAF9);
	MakeCode	(x=0XFFAFC);
	OpStkvar	(x,	1);
	MakeCode	(0XFFB02);
	MakeName	(0XFFB02,	"HEX_sub_FFB02");
	MakeCode	(x=0XFFB07);
	OpHex		(x,	1);
	MakeCode	(x=0XFFB19);
	OpStkvar	(x,	0);
	MakeCode	(0XFFB20);
	MakeName	(0XFFB20,	"HEX_sub_FFB20");
	MakeCode	(x=0XFFB25);
	OpHex		(x,	1);
	MakeCode	(x=0XFFB32);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFFB3A);
	OpDecimal	(x,	1);
	MakeCode	(x=0XFFB40);
	OpDecimal	(x,	1);
	MakeCode	(0XFFB48);
	MakeCode	(x=0XFFB56);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFFB66);
	OpHex		(x,	1);
	MakeCode	(x=0XFFB73);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XFFB77);
	OpHex		(x,	1);
	MakeCode	(x=0XFFB7A);
	OpStkvar	(x,	0);
	MakeCode	(0XFFB84);
	MakeName	(0XFFB84,	"HEX_sub_FFB84");
	MakeCode	(x=0XFFB89);
	OpHex		(x,	1);
	MakeCode	(x=0XFFB8C);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFB90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFB94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFB9C);
	OpHex		(x,	1);
	MakeCode	(x=0XFFB9F);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFBA2);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFBA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFBAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFBB4);
	OpHex		(x,	1);
	MakeCode	(0XFFBBF);
	MakeCode	(x=0XFFBC4);
	OpStkvar	(x,	0);
	MakeCode	(x=0XFFBC7);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFBCA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFBD5);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFFBDD);
	OpStkvar	(x,	1);
	MakeComm	(0XFFBE1,	"FALLTHROUGH");
	MakeName	(0XFFBE4,	"TAIL_loc_FFBE4");
	MakeCode	(0XFFBEC);
	MakeName	(0XFFBEC,	"ORPHAN_sub_FFBEC");
	MakeWord	(0XFFBF4);
	MakeWord	(0XFFBF6);
	MakeWord	(0XFFBF8);
	MakeStr		(0XFFC00,	0XFFEBA);
	MakeName	(0XFFC00,	"ROM_DATA");
	MakeComm	(0XFFEBA,	"        movi    gc,0ffd0h");
	MakeByte	(0XFFEBA);
	MakeArray	(0XFFEBA,	0X4);
	MakeName	(0XFFEBA,	"IOPB_BLOCK");
	MakeComm	(0XFFEBE,	"        jnbt    [pp].4h,5,x1ee2");
	MakeByte	(0XFFEBE);
	MakeArray	(0XFFEBE,	0X4);
	MakeComm	(0XFFEC2,	"        movbi   [gc].6h,80h");
	MakeByte	(0XFFEC2);
	MakeArray	(0XFFEC2,	0X4);
	MakeComm	(0XFFEC6,	"        movb    [gc].2h,[pp].8h");
	MakeByte	(0XFFEC6);
	MakeArray	(0XFFEC6,	0X6);
	MakeComm	(0XFFECC,	"x1ecc:  jnbt    [gc].6h,7,x1ecc");
	MakeByte	(0XFFECC);
	MakeArray	(0XFFECC,	0X4);
	MakeComm	(0XFFED0,	"        movbi   [gc].6h,20h");
	MakeByte	(0XFFED0);
	MakeArray	(0XFFED0,	0X4);
	MakeComm	(0XFFED4,	"        movi    [pp].14h,0h");
	MakeByte	(0XFFED4);
	MakeArray	(0XFFED4,	0X5);
	MakeComm	(0XFFED9,	"x1ed9:  jbt     [gc].6h,0,x1ed9");
	MakeByte	(0XFFED9);
	MakeArray	(0XFFED9,	0X4);
	MakeComm	(0XFFEDD,	"        ljnbt   [gc].4h,0,x1fc4");
	MakeByte	(0XFFEDD);
	MakeArray	(0XFFEDD,	0X5);
	MakeComm	(0XFFEE2,	"x1ee2:  andbi   [pp].4h,0fh");
	MakeByte	(0XFFEE2);
	MakeArray	(0XFFEE2,	0X4);
	MakeComm	(0XFFEE6,	"        ljzb    [pp].4h,x1f9c");
	MakeByte	(0XFFEE6);
	MakeArray	(0XFFEE6,	0X5);
	MakeComm	(0XFFEEB,	"        movb    [gc].2h,[pp].8h");
	MakeByte	(0XFFEEB);
	MakeArray	(0XFFEEB,	0X6);
	MakeComm	(0XFFEF1,	"x1ef1:  jnbt    [gc].6h,7,x1ef1");
	MakeByte	(0XFFEF1);
	MakeArray	(0XFFEF1,	0X4);
	MakeComm	(0XFFEF5,	"        movb    [gc],[pp].14h");
	MakeByte	(0XFFEF5);
	MakeArray	(0XFFEF5,	0X5);
	MakeComm	(0XFFEFA,	"        movb    [gc],[pp].15h");
	MakeByte	(0XFFEFA);
	MakeArray	(0XFFEFA,	0X5);
	MakeComm	(0XFFEFF,	"        movb    [gc].4h,[pp].6h");
	MakeByte	(0XFFEFF);
	MakeArray	(0XFFEFF,	0X6);
	MakeComm	(0XFFF05,	"        movb    [gc].4h,[pp].7h");
	MakeByte	(0XFFF05);
	MakeArray	(0XFFF05,	0X6);
	MakeComm	(0XFFF0B,	"        movbi   [gc].6h,10h");
	MakeByte	(0XFFF0B);
	MakeArray	(0XFFF0B,	0X4);
	MakeComm	(0XFFF0F,	"        mov     [pp].14h,[pp].6h");
	MakeByte	(0XFFF0F);
	MakeArray	(0XFFF0F,	0X6);
	MakeComm	(0XFFF15,	"x1f15:  jbt     [gc].6h,0,x1f15");
	MakeByte	(0XFFF15);
	MakeArray	(0XFFF15,	0X4);
	MakeComm	(0XFFF19,	"x1f19:  jnbt    [gc].4h,1,x1f19");
	MakeByte	(0XFFF19);
	MakeArray	(0XFFF19,	0X4);
	MakeComm	(0XFFF1D,	"        jzb     [pp].10h,x1f9c");
	MakeByte	(0XFFF1D);
	MakeArray	(0XFFF1D,	0X4);
	MakeComm	(0XFFF21,	"        jbt     [pp].4h,0,x1f33");
	MakeByte	(0XFFF21);
	MakeArray	(0XFFF21,	0X4);
	MakeComm	(0XFFF25,	"        lpd     ga,[pp].0ch");
	MakeByte	(0XFFF25);
	MakeArray	(0XFFF25,	0X3);
	MakeComm	(0XFFF28,	"        movi    gb,0h");
	MakeByte	(0XFFF28);
	MakeArray	(0XFFF28,	0X4);
	MakeComm	(0XFFF2C,	"        mov     bc,[pp].0ah");
	MakeByte	(0XFFF2C);
	MakeArray	(0XFFF2C,	0X3);
	MakeComm	(0XFFF2F,	"        call    [pp].16h,x1fa3");
	MakeByte	(0XFFF2F);
	MakeArray	(0XFFF2F,	0X4);
	MakeComm	(0XFFF33,	"x1f33:  movi    gb,0h");
	MakeByte	(0XFFF33);
	MakeArray	(0XFFF33,	0X4);
	MakeComm	(0XFFF37,	"        movi    mc,0fe80h");
	MakeByte	(0XFFF37);
	MakeArray	(0XFFF37,	0X4);
	MakeComm	(0XFFF3B,	"        movi    ga,0ffd0h");
	MakeByte	(0XFFF3B);
	MakeArray	(0XFFF3B,	0X4);
	MakeComm	(0XFFF3F,	"        movi    [pp].12h,200h");
	MakeByte	(0XFFF3F);
	MakeArray	(0XFFF3F,	0X5);
	MakeComm	(0XFFF44,	"        jnbt    [pp].4h,0,x1f5a");
	MakeByte	(0XFFF44);
	MakeArray	(0XFFF44,	0X4);
	MakeComm	(0XFFF48,	"        movi    cc,8a28h");
	MakeByte	(0XFFF48);
	MakeArray	(0XFFF48,	0X4);
	MakeComm	(0XFFF4C,	"        wid     8,16");
	MakeByte	(0XFFF4C);
	MakeArray	(0XFFF4C,	0X2);
	MakeComm	(0XFFF4E,	"        jnbt    [pp].4h,3,x1f69");
	MakeByte	(0XFFF4E);
	MakeArray	(0XFFF4E,	0X4);
	MakeComm	(0XFFF52,	"        movi    [pp].12h,205h");
	MakeByte	(0XFFF52);
	MakeArray	(0XFFF52,	0X5);
	MakeComm	(0XFFF57,	"        jmp     x1f69");
	MakeByte	(0XFFF57);
	MakeArray	(0XFFF57,	0X3);
	MakeComm	(0XFFF5A,	"x1f5a:  movi    cc,5628h");
	MakeByte	(0XFFF5A);
	MakeArray	(0XFFF5A,	0X4);
	MakeComm	(0XFFF5E,	"        wid     16,8");
	MakeByte	(0XFFF5E);
	MakeArray	(0XFFF5E,	0X2);
	MakeComm	(0XFFF60,	"        jnbt    [pp].4h,2,x1f69");
	MakeByte	(0XFFF60);
	MakeArray	(0XFFF60,	0X4);
	MakeComm	(0XFFF64,	"        movi    [pp].12h,4h");
	MakeByte	(0XFFF64);
	MakeArray	(0XFFF64,	0X5);
	MakeComm	(0XFFF69,	"x1f69:  mov     bc,[pp].12h");
	MakeByte	(0XFFF69);
	MakeArray	(0XFFF69,	0X3);
	MakeComm	(0XFFF6C,	"        movb    [gc],[pp].9h");
	MakeByte	(0XFFF6C);
	MakeArray	(0XFFF6C,	0X5);
	MakeComm	(0XFFF71,	"        xfer    ");
	MakeByte	(0XFFF71);
	MakeArray	(0XFFF71,	0X2);
	MakeComm	(0XFFF73,	"        movb    [gc].6h,[pp].4h");
	MakeByte	(0XFFF73);
	MakeArray	(0XFFF73,	0X6);
	MakeComm	(0XFFF79,	"        jmcne   [gc].6h,x1fb0");
	MakeByte	(0XFFF79);
	MakeArray	(0XFFF79,	0X4);
	MakeComm	(0XFFF7D,	"        decb    [pp].10h");
	MakeByte	(0XFFF7D);
	MakeArray	(0XFFF7D,	0X3);
	MakeComm	(0XFFF80,	"        jzb     [pp].10h,x1f8a");
	MakeByte	(0XFFF80);
	MakeArray	(0XFFF80,	0X4);
	MakeComm	(0XFFF84,	"        incb    [pp].9h");
	MakeByte	(0XFFF84);
	MakeArray	(0XFFF84,	0X3);
	MakeComm	(0XFFF87,	"        jmp     x1f69");
	MakeByte	(0XFFF87);
	MakeArray	(0XFFF87,	0X3);
	MakeComm	(0XFFF8A,	"x1f8a:  jnbt    [pp].4h,0,x1f9c");
	MakeByte	(0XFFF8A);
	MakeArray	(0XFFF8A,	0X4);
	MakeComm	(0XFFF8E,	"        lpd     gb,[pp].0ch");
	MakeByte	(0XFFF8E);
	MakeArray	(0XFFF8E,	0X3);
	MakeComm	(0XFFF91,	"        movi    ga,0h");
	MakeByte	(0XFFF91);
	MakeArray	(0XFFF91,	0X4);
	MakeComm	(0XFFF95,	"        mov     bc,[pp].0ah");
	MakeByte	(0XFFF95);
	MakeArray	(0XFFF95,	0X3);
	MakeComm	(0XFFF98,	"        call    [pp].16h,x1fa3");
	MakeByte	(0XFFF98);
	MakeArray	(0XFFF98,	0X4);
	MakeComm	(0XFFF9C,	"x1f9c:  movbi   [pp].5h,0h");
	MakeByte	(0XFFF9C);
	MakeArray	(0XFFF9C,	0X4);
	MakeComm	(0XFFFA0,	"        jmp     x1fc9");
	MakeByte	(0XFFFA0);
	MakeArray	(0XFFFA0,	0X3);
	MakeComm	(0XFFFA3,	"x1fa3:  wid     16,16");
	MakeByte	(0XFFFA3);
	MakeArray	(0XFFFA3,	0X2);
	MakeComm	(0XFFFA5,	"        movi    cc,0c208h");
	MakeByte	(0XFFFA5);
	MakeArray	(0XFFFA5,	0X4);
	MakeComm	(0XFFFA9,	"        xfer    ");
	MakeByte	(0XFFFA9);
	MakeArray	(0XFFFA9,	0X2);
	MakeComm	(0XFFFAB,	"        nop     ");
	MakeByte	(0XFFFAB);
	MakeArray	(0XFFFAB,	0X2);
	MakeComm	(0XFFFAD,	"        movp    tp,[pp].16h");
	MakeByte	(0XFFFAD);
	MakeArray	(0XFFFAD,	0X3);
	MakeComm	(0XFFFB0,	"x1fb0:  movb    [pp].5h,[gc].6h");
	MakeByte	(0XFFFB0);
	MakeArray	(0XFFFB0,	0X6);
	MakeComm	(0XFFFB6,	"        andbi   [pp].5h,7eh");
	MakeByte	(0XFFFB6);
	MakeArray	(0XFFFB6,	0X4);
	MakeComm	(0XFFFBA,	"        setb    [pp].5h,7");
	MakeByte	(0XFFFBA);
	MakeArray	(0XFFFBA,	0X3);
	MakeComm	(0XFFFBD,	"        movbi   [gc].6h,0h");
	MakeByte	(0XFFFBD);
	MakeArray	(0XFFFBD,	0X4);
	MakeComm	(0XFFFC1,	"        jmp     x1fc9");
	MakeByte	(0XFFFC1);
	MakeArray	(0XFFFC1,	0X3);
	MakeComm	(0XFFFC4,	"x1fc4:  movi    [pp].5h,81h");
	MakeByte	(0XFFFC4);
	MakeArray	(0XFFFC4,	0X5);
	MakeComm	(0XFFFC9,	"x1fc9:  sintr   ");
	MakeByte	(0XFFFC9);
	MakeArray	(0XFFFC9,	0X2);
	MakeComm	(0XFFFCB,	"        hlt     ");
	MakeByte	(0XFFFCB);
	MakeArray	(0XFFFCB,	0X2);
	MakeByte	(0XFFFCD);
	MakeArray	(0XFFFCD,	0X11);
	MakeWord	(0XFFFDE);
	MakeWord	(0XFFFE0);
	MakeByte	(0XFFFE2);
	MakeArray	(0XFFFE2,	0XE);
	MakeCode	(0XFFFF0);
	MakeStruct	(0XFFFF6,	"IOP8089_SCP");
	MakeName	(0XFFFF6,	"IOP8089_FLAGS");
	MakeComm	(0XFFFFE,	"Checksum???");
	MakeWord	(0XFFFFE);
}

static Functions_0(void) {

	MakeFunction    (0XFE000,0XFE003);
	SetFunctionFlags(0XFE000,0x82);
	MakeFunction    (0XFE003,0XFE22C);
	SetFunctionFlags(0XFE003,0x0);
	MakeNameEx(0XFE019, "COLD_BOOT", SN_LOCAL);
	MakeNameEx(0XFE025, "CHECKSUM_NEXT_BYTE", SN_LOCAL);
	MakeNameEx(0XFE032, "SUCCESS_TEST_1", SN_LOCAL);
	MakeNameEx(0XFE03B, "CHECK_NEXT_MMU_PORT", SN_LOCAL);
	MakeNameEx(0XFE050, "FAIL_TEST_2", SN_LOCAL);
	MakeNameEx(0XFE052, "POST_CHECK_FAILED_0", SN_LOCAL);
	MakeNameEx(0XFE054, "SUCCESS_TEST_2", SN_LOCAL);
	MakeNameEx(0XFE091, "FAIL_TEST_3", SN_LOCAL);
	MakeNameEx(0XFE093, "POST_CHECK_FAILED_1", SN_LOCAL);
	MakeNameEx(0XFE095, "SUCCESS_TEST_3", SN_LOCAL);
	MakeNameEx(0XFE0C0, "FAIL_TEST_4", SN_LOCAL);
	MakeNameEx(0XFE0C2, "POST_CHECK_FAILED_2", SN_LOCAL);
	MakeNameEx(0XFE0C4, "SUCCESS_TEST_4", SN_LOCAL);
	MakeNameEx(0XFE0E6, "POST_CHECK_FAILED_3", SN_LOCAL);
	MakeNameEx(0XFE0E8, "SUCCESS_TEST_5", SN_LOCAL);
	MakeNameEx(0XFE156, "SUCCESS_TEST_6", SN_LOCAL);
	MakeNameEx(0XFE19B, "FAIL_TEST_7", SN_LOCAL);
	MakeNameEx(0XFE1DB, "INSTALL_DEFAULT_IRQS", SN_LOCAL);
	MakeFunction    (0XFE22C,0XFE22E);
	SetFunctionFlags(0XFE22C,0x0);
	MakeFunction    (0XFE22E,0XFE232);
	SetFunctionFlags(0XFE22E,0x2);
	MakeFunction    (0XFE232,0XFE244);
	SetFunctionFlags(0XFE232,0x0);
	MakeFunction    (0XFE244,0XFE252);
	SetFunctionFlags(0XFE244,0x0);
	MakeFunction    (0XFE252,0XFE2AC);
	SetFunctionFlags(0XFE252,0x0);
	MakeFunction    (0XFE2AC,0XFE36B);
	SetFunctionFlags(0XFE2AC,0x0);
	MakeNameEx(0XFE342, "POST_FAILED", SN_LOCAL);
	MakeNameEx(0XFE35A, "POST_DONE", SN_LOCAL);
	MakeFunction    (0XFE36B,0XFE38A);
	SetFunctionFlags(0XFE36B,0x2);
	MakeFunction    (0XFE38A,0XFE3BD);
	SetFunctionFlags(0XFE38A,0x0);
	MakeFrame(0XFE38A, 0X0, 2, 0X0);
	MakeFunction    (0XFE3BD,0XFE3CB);
	SetFunctionFlags(0XFE3BD,0x2);
	MakeFunction    (0XFE3E5,0XFE3FB);
	SetFunctionFlags(0XFE3E5,0x0);
	MakeFrame(0XFE3E5, 0X0, 8, 0X0);
	MakeFunction    (0XFE3FB,0XFE403);
	SetFunctionFlags(0XFE3FB,0x0);
	MakeFrame(0XFE3FB, 0X0, 2, 0X0);
	MakeFunction    (0XFE403,0XFE414);
	SetFunctionFlags(0XFE403,0x0);
	MakeFunction    (0XFE414,0XFE421);
	SetFunctionFlags(0XFE414,0x0);
	MakeFrame(0XFE414, 0X0, 6, 0X0);
	MakeFunction    (0XFE421,0XFE429);
	SetFunctionFlags(0XFE421,0x0);
	MakeFrame(0XFE421, 0X0, 2, 0X0);
	MakeFunction    (0XFE429,0XFE436);
	SetFunctionFlags(0XFE429,0x0);
	MakeFunction    (0XFE436,0XFE444);
	SetFunctionFlags(0XFE436,0x0);
	MakeFunction    (0XFE444,0XFE44F);
	SetFunctionFlags(0XFE444,0x0);
	MakeFunction    (0XFE44F,0XFE453);
	SetFunctionFlags(0XFE44F,0x0);
	MakeFunction    (0XFE453,0XFE45B);
	SetFunctionFlags(0XFE453,0x0);
	MakeFrame(0XFE453, 0X0, 2, 0X0);
	MakeFunction    (0XFE45B,0XFE4B9);
	SetFunctionFlags(0XFE45B,0x0);
	MakeFrame(0XFE45B, 0X0, 4, 0X0);
	MakeFunction    (0XFE4BA,0XFE504);
	SetFunctionFlags(0XFE4BA,0x0);
	MakeFrame(0XFE4BA, 0X0, 2, 0X0);
	MakeNameEx(0XFE4EE, "WAIT_IOP_NOT_BUSY", SN_LOCAL);
	MakeNameEx(0XFE502, "IOP_NOT_BUSY", SN_LOCAL);
	MakeFunction    (0XFE504,0XFE529);
	SetFunctionFlags(0XFE504,0x10);
	MakeFrame(0XFE504, 0XA, 2, 0X0);
	MakeLocal(0XFE504, 0XFE529, "[bp-0X6]", "CHARACTER");
	MakeLocal(0XFE504, 0XFE529, "[bp+0X4]", "CHANNEL");
	MakeFunction    (0XFE52A,0XFE544);
	SetFunctionFlags(0XFE52A,0x10);
	MakeFrame(0XFE52A, 0X0, 2, 0X0);
	MakeLocal(0XFE52A, 0XFE544, "[bp+0X4]", "CHARACTER");
	MakeFunction    (0XFE544,0XFE573);
	SetFunctionFlags(0XFE544,0x10);
	MakeFrame(0XFE544, 0X0, 2, 0X0);
	MakeFunction    (0XFE574,0XFE58F);
	SetFunctionFlags(0XFE574,0x0);
	MakeFrame(0XFE574, 0X0, 2, 0X0);
	MakeNameEx(0XFE57F, "OUTER_LOOP", SN_LOCAL);
	MakeNameEx(0XFE582, "INNER_LOOP", SN_LOCAL);
	MakeNameEx(0XFE58C, "ZERO_WAIT", SN_LOCAL);
	MakeFunction    (0XFE590,0XFE733);
	SetFunctionFlags(0XFE590,0x10);
	MakeFrame(0XFE590, 0X12, 2, 0X0);
	MakeLocal(0XFE590, 0XFE733, "[bp-0XE]", "LEN");
	MakeLocal(0XFE590, 0XFE733, "[bp-0XC]", "DEST");
	MakeLocal(0XFE590, 0XFE733, "[bp-0X8]", "SRC");
	MakeLocal(0XFE590, 0XFE733, "[bp+0X4]", "DISK_NUMBER");
	MakeNameEx(0XFE5A3, "FLOPPY_DISK", SN_LOCAL);
	MakeNameEx(0XFE5A6, "HARD_DISK", SN_LOCAL);
	MakeNameEx(0XFE605, "BOOT_FAILED", SN_LOCAL);
	MakeNameEx(0XFE60B, "BOOT_GOOD", SN_LOCAL);
	MakeNameEx(0XFE650, "BOOT_TYPE_0_loc_FE650", SN_LOCAL);
	MakeNameEx(0XFE69F, "BOOT_TYPE_1_loc_FE69F", SN_LOCAL);
	MakeNameEx(0XFE6EB, "BOOT_TYPE_2_loc_FE6EB", SN_LOCAL);
	MakeNameEx(0XFE71A, "BOOT_TYPE_PARAMS_SET", SN_LOCAL);
	MakeNameEx(0XFE727, "BOOT_GOOD_", SN_LOCAL);
	MakeFunction    (0XFE734,0XFE751);
	SetFunctionFlags(0XFE734,0x10);
	MakeFrame(0XFE734, 0X0, 2, 0X0);
	MakeFunction    (0XFE752,0XFE780);
	SetFunctionFlags(0XFE752,0x10);
	MakeFrame(0XFE752, 0X0, 2, 0X0);
	MakeFunction    (0XFE780,0XFE7C0);
	SetFunctionFlags(0XFE780,0x10);
	MakeFrame(0XFE780, 0XA, 2, 0X0);
	MakeLocal(0XFE780, 0XFE7C0, "[bp-0X6]", "COUNTER");
	MakeNameEx(0XFE78D, "COPY_IOPB_BYTE", SN_LOCAL);
	MakeFunction    (0XFE7C0,0XFE7D7);
	SetFunctionFlags(0XFE7C0,0x10);
	MakeFrame(0XFE7C0, 0X0, 2, 0X0);
	MakeNameEx(0XFE7CF, "ALL_DONE", SN_LOCAL);
	MakeNameEx(0XFE7D2, "DO_FLOPPY", SN_LOCAL);
	MakeFunction    (0XFE7D8,0XFE7F1);
	SetFunctionFlags(0XFE7D8,0x10);
	MakeFrame(0XFE7D8, 0X0, 2, 0X0);
	MakeFunction    (0XFE7F2,0XFE834);
	SetFunctionFlags(0XFE7F2,0x10);
	MakeFrame(0XFE7F2, 0X0, 2, 0X0);
	MakeLocal(0XFE7F2, 0XFE834, "[bp+0X6]", "SECTOR_SIZE");
	MakeNameEx(0XFE802, "SECTOR_512", SN_LOCAL);
	MakeNameEx(0XFE805, "SECTOR_256", SN_LOCAL);
	MakeNameEx(0XFE823, "WAIT_FDC_BUSY", SN_LOCAL);
	MakeFunction    (0XFE834,0XFE959);
	SetFunctionFlags(0XFE834,0x10);
	MakeFrame(0XFE834, 0X1A, 2, 0X0);
	MakeLocal(0XFE834, 0XFE959, "[bp-0X16]", "DMA_SEGMENT");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X14]", "DMA_OFFSET");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X12]", "SECTORS_READ");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X10]", "DMA_ADDRESS");
	MakeLocal(0XFE834, 0XFE959, "[bp-0XE]", "COMMAND");
	MakeLocal(0XFE834, 0XFE959, "[bp-0XD]", "STATUS");
	MakeLocal(0XFE834, 0XFE959, "[bp-0XC]", "DRIVE_NUM");
	MakeLocal(0XFE834, 0XFE959, "[bp-0XB]", "TRACK");
	MakeLocal(0XFE834, 0XFE959, "[bp-0XA]", "HEAD");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X9]", "SECTOR");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X8]", "DATA_BUF_LO");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X7]", "DATA_BUF_MID");
	MakeLocal(0XFE834, 0XFE959, "[bp-0X6]", "DATA_BUF_HI");
	MakeNameEx(0XFE89C, "SECTOR_LEN_256", SN_LOCAL);
	MakeNameEx(0XFE8C1, "READ_SECTORS", SN_LOCAL);
	MakeNameEx(0XFE90E, "WAIT_FDC_NOT_BUSY", SN_LOCAL);
	MakeNameEx(0XFE91C, "WAIT_FOR_FDC_READY", SN_LOCAL);
	MakeNameEx(0XFE926, "WAIT_FOR_QUEUE_DRAIN", SN_LOCAL);
	MakeNameEx(0XFE94F, "FDC_READ_FINISHED", SN_LOCAL);
	MakeFunction    (0XFE95A,0XFE96D);
	SetFunctionFlags(0XFE95A,0x10);
	MakeFrame(0XFE95A, 0X0, 2, 0X0);
	MakeLocal(0XFE95A, 0XFE96D, "[bp+0X4]", "FDC_CMD");
	MakeFunction    (0XFE96E,0XFE9BC);
	SetFunctionFlags(0XFE96E,0x10);
	MakeFrame(0XFE96E, 0XA, 2, 0X0);
	MakeFunction    (0XFE9BC,0XFE9D7);
	SetFunctionFlags(0XFE9BC,0x10);
	MakeFrame(0XFE9BC, 0X0, 2, 0X0);
	MakeFunction    (0XFE9D8,0XFEA93);
	SetFunctionFlags(0XFE9D8,0x10);
	MakeFrame(0XFE9D8, 0XE, 2, 0X0);
	MakeNameEx(0XFEA2D, "GOT_CRLF", SN_LOCAL);
	MakeFunction    (0XFEA94,0XFEB07);
	SetFunctionFlags(0XFEA94,0x10);
	MakeFrame(0XFEA94, 0XA, 2, 0X0);
	MakeNameEx(0XFEAE3, "GOT_END_OF_LINE", SN_LOCAL);
	MakeFunction    (0XFEB08,0XFEB4B);
	SetFunctionFlags(0XFEB08,0x2);
	MakeFunction    (0XFEB4C,0XFEB8E);
	SetFunctionFlags(0XFEB4C,0x10);
	MakeFrame(0XFEB4C, 0X0, 2, 0X0);
	MakeFunction    (0XFEB8E,0XFEBD6);
	SetFunctionFlags(0XFEB8E,0x10);
	MakeFrame(0XFEB8E, 0X0, 2, 0X0);
	MakeFunction    (0XFEBD6,0XFEC38);
	SetFunctionFlags(0XFEBD6,0x10);
	MakeFrame(0XFEBD6, 0XA, 2, 0X0);
	MakeLocal(0XFEBD6, 0XFEC38, "[bp-0X6]", "COUNTER");
	MakeFunction    (0XFEC38,0XFECA8);
	SetFunctionFlags(0XFEC38,0x10);
	MakeFrame(0XFEC38, 0XA, 2, 0X0);
	MakeFunction    (0XFECA8,0XFED5C);
	SetFunctionFlags(0XFECA8,0x10);
	MakeFrame(0XFECA8, 0XE, 2, 0X0);
	MakeLocal(0XFECA8, 0XFED5C, "[bp-0XA]", "HDD_RETRIES");
	MakeLocal(0XFECA8, 0XFED5C, "[bp-0X8]", "HDD_SECTORS_READ");
	MakeLocal(0XFECA8, 0XFED5C, "[bp-0X6]", "RETRIES_DONE");
	MakeNameEx(0XFED10, "RETRIES_NOW_NONZERO", SN_LOCAL);
	MakeNameEx(0XFED17, "HDD_READ_SECTORS", SN_LOCAL);
	MakeNameEx(0XFED39, "NO_LONGER_BUSY", SN_LOCAL);
	MakeFunction    (0XFED5C,0XFEEC1);
	SetFunctionFlags(0XFED5C,0x10);
	MakeFrame(0XFED5C, 0XC, 2, 0X0);
	MakeLocal(0XFED5C, 0XFEEC1, "[bp-0X8]", "DO_AUTO_BOOT");
	MakeLocal(0XFED5C, 0XFEEC1, "[bp+0X4]", "SKIP_SETUP");
	MakeNameEx(0XFED6D, "DO_SETUP", SN_LOCAL);
	MakeNameEx(0XFED86, "CHECK_KEY_INPUT", SN_LOCAL);
	MakeNameEx(0XFEDCF, "KEY_1_HD_BOOT", SN_LOCAL);
	MakeNameEx(0XFEDDE, "NO_AUTO_BOOT", SN_LOCAL);
	MakeNameEx(0XFEDE6, "NOT_KEY_2_FD_BOOT", SN_LOCAL);
	MakeNameEx(0XFEDF3, "BOOT_ERR", SN_LOCAL);
	MakeNameEx(0XFEDF6, "BOOT_MENU", SN_LOCAL);
	MakeNameEx(0XFEE47, "DO_PORT_IO", SN_LOCAL);
	MakeFunction    (0XFEEC2,0XFEF33);
	SetFunctionFlags(0XFEEC2,0x10);
	MakeFrame(0XFEEC2, 0X12, 2, 0X0);
	MakeFunction    (0XFEF34,0XFEF57);
	SetFunctionFlags(0XFEF34,0x10);
	MakeFrame(0XFEF34, 0X0, 2, 0X0);
	MakeLocal(0XFEF34, 0XFEF57, "[bp+0X4]", "SRC");
	MakeLocal(0XFEF34, 0XFEF57, "[bp+0X6]", "DEST");
	MakeLocal(0XFEF34, 0XFEF57, "[bp+0X8]", "LEN");
	MakeFunction    (0XFEF58,0XFF008);
	SetFunctionFlags(0XFEF58,0x10);
	MakeFrame(0XFEF58, 0XE, 2, 0X0);
	MakeLocal(0XFEF58, 0XFF008, "[bp-0XA]", "IO_VAL16");
	MakeLocal(0XFEF58, 0XFF008, "[bp-0X8]", "IO_PORT");
	MakeLocal(0XFEF58, 0XFF008, "[bp-0X6]", "PORT_WIDTH");
	MakeLocal(0XFEF58, 0XFF008, "[bp+0X4]", "DIRECTION_INPUT");
	MakeNameEx(0XFEF7F, "GOT_WIDTH", SN_LOCAL);
	MakeNameEx(0XFEFBF, "NOT_BYTE", SN_LOCAL);
	MakeFunction    (0XFF008,0XFF01D);
	SetFunctionFlags(0XFF008,0x10);
	MakeFrame(0XFF008, 0X0, 2, 0X0);
	MakeLocal(0XFF008, 0XFF01D, "[bp+0X4]", "BUFFER");
	MakeFunction    (0XFF01E,0XFF0A0);
	SetFunctionFlags(0XFF01E,0x10);
	MakeFrame(0XFF01E, 0XC, 2, 0X0);
	MakeLocal(0XFF01E, 0XFF0A0, "[bp-0X6]", "LEN");
	MakeLocal(0XFF01E, 0XFF0A0, "[bp+0X4]", "CHANNEL");
	MakeLocal(0XFF01E, 0XFF0A0, "[bp+0X6]", "ATTRS");
	MakeLocal(0XFF01E, 0XFF0A0, "[bp+0X8]", "BUFFER");
	MakeFunction    (0XFF0A0,0XFF0B1);
	SetFunctionFlags(0XFF0A0,0x10);
	MakeFrame(0XFF0A0, 0X0, 2, 0X0);
	MakeFunction    (0XFF0B2,0XFF0D9);
	SetFunctionFlags(0XFF0B2,0x10);
	MakeFrame(0XFF0B2, 0XA, 2, 0X0);
	MakeLocal(0XFF0B2, 0XFF0D9, "[bp+0X4]", "CHANNEL");
	MakeFunction    (0XFF0DA,0XFF103);
	SetFunctionFlags(0XFF0DA,0x10);
	MakeFrame(0XFF0DA, 0X0, 2, 0X0);
	MakeLocal(0XFF0DA, 0XFF103, "[bp+0X4]", "ARG16");
	MakeFunction    (0XFF104,0XFF133);
	SetFunctionFlags(0XFF104,0x10);
	MakeFrame(0XFF104, 0X0, 2, 0X0);
	MakeLocal(0XFF104, 0XFF133, "[bp+0X4]", "ARG8");
	MakeFunction    (0XFF134,0XFF149);
	SetFunctionFlags(0XFF134,0x10);
	MakeFrame(0XFF134, 0X0, 2, 0X0);
	MakeFunction    (0XFF14A,0XFF171);
	SetFunctionFlags(0XFF14A,0x10);
	MakeFrame(0XFF14A, 0XA, 2, 0X0);
	MakeFunction    (0XFF172,0XFF211);
	SetFunctionFlags(0XFF172,0x10);
	MakeFrame(0XFF172, 0X0, 2, 0X0);
	MakeLocal(0XFF172, 0XFF211, "[bp+0X4]", "CHANNEL");
	MakeLocal(0XFF172, 0XFF211, "[bp+0X6]", "LEN");
	MakeLocal(0XFF172, 0XFF211, "[bp+0X8]", "BUFFER");
	MakeNameEx(0XFF19E, "WAIT_FOR_IO", SN_LOCAL);
	MakeNameEx(0XFF1FA, "SET_ATTRS", SN_LOCAL);
	MakeNameEx(0XFF20D, "SIO_RX_DONE", SN_LOCAL);
	MakeFunction    (0XFF211,0XFF296);
	SetFunctionFlags(0XFF211,0x10);
	MakeFrame(0XFF211, 0X0, 2, 0X0);
	MakeLocal(0XFF211, 0XFF296, "[bp+0X4]", "CHANNEL");
	MakeLocal(0XFF211, 0XFF296, "[bp+0X6]", "LEN");
	MakeLocal(0XFF211, 0XFF296, "[bp+0X8]", "OFFSET_OR_ATTRS");
	MakeLocal(0XFF211, 0XFF296, "[bp+0XA]", "BUFFER");
	MakeNameEx(0XFF232, "WAIT_CHAN_READY", SN_LOCAL);
	MakeNameEx(0XFF26C, "LENGTH_NOW_LESS_THAN_10", SN_LOCAL);
	MakeNameEx(0XFF287, "JUST_SET_ATTR", SN_LOCAL);
	MakeNameEx(0XFF292, "SIO_TX_DONE", SN_LOCAL);
	MakeFunction    (0XFF296,0XFF33B);
	SetFunctionFlags(0XFF296,0x10);
	MakeFrame(0XFF296, 0XE, 2, 0X0);
	MakeFunction    (0XFF33C,0XFF461);
	SetFunctionFlags(0XFF33C,0x10);
	MakeFrame(0XFF33C, 0XE, 2, 0X0);
	MakeFunction    (0XFF462,0XFF4FE);
	SetFunctionFlags(0XFF462,0x10);
	MakeFrame(0XFF462, 0XA, 2, 0X0);
	MakeFunction    (0XFF4FE,0XFF554);
	SetFunctionFlags(0XFF4FE,0x10);
	MakeFrame(0XFF4FE, 0XC, 2, 0X0);
	MakeLocal(0XFF4FE, 0XFF554, "[bp-0X8]", "FLAG_NUMBER");
	MakeNameEx(0XFF512, "PRINT_FLAG", SN_LOCAL);
	MakeFunction    (0XFF554,0XFF55E);
	SetFunctionFlags(0XFF554,0x0);
	MakeFunction    (0XFF55E,0XFF570);
	SetFunctionFlags(0XFF55E,0x0);
	MakeFrame(0XFF55E, 0X0, 2, 0X0);
	MakeNameEx(0XFF55F, "WAIT_READY", SN_LOCAL);
	MakeFunction    (0XFF570,0XFF584);
	SetFunctionFlags(0XFF570,0x10);
	MakeFrame(0XFF570, 0X0, 2, 0X0);
	MakeLocal(0XFF570, 0XFF584, "[bp+0X4]", "DATA8");
	MakeFunction    (0XFF584,0XFF591);
	SetFunctionFlags(0XFF584,0x0);
	MakeFrame(0XFF584, 0X0, 2, 0X0);
	MakeFunction    (0XFF592,0XFF59D);
	SetFunctionFlags(0XFF592,0x0);
	MakeFrame(0XFF592, 0X0, 2, 0X0);
	MakeNameEx(0XFF593, "WAIT_SIO_READY", SN_LOCAL);
	MakeFunction    (0XFF59E,0XFF5B8);
	SetFunctionFlags(0XFF59E,0x10);
	MakeFrame(0XFF59E, 0X0, 2, 0X0);
	MakeLocal(0XFF59E, 0XFF5B8, "[bp+0X4]", "AUTOLEN");
	MakeLocal(0XFF59E, 0XFF5B8, "[bp+0X6]", "LEN");
	MakeLocal(0XFF59E, 0XFF5B8, "[bp+0X8]", "BUF");
	MakeFunction    (0XFF5B8,0XFF664);
	SetFunctionFlags(0XFF5B8,0x10);
	MakeFrame(0XFF5B8, 0XE, 2, 0X0);
	MakeFunction    (0XFF664,0XFF6A1);
	SetFunctionFlags(0XFF664,0x10);
	MakeFrame(0XFF664, 0XA, 2, 0X0);
	MakeFunction    (0XFF6A2,0XFF6B9);
	SetFunctionFlags(0XFF6A2,0x0);
	MakeFrame(0XFF6A2, 0X0, 2, 0X0);
	MakeFunction    (0XFF6BA,0XFF71B);
	SetFunctionFlags(0XFF6BA,0x10);
	MakeFrame(0XFF6BA, 0XA, 2, 0X0);
	MakeFunction    (0XFF71C,0XFF73C);
	SetFunctionFlags(0XFF71C,0x10);
	MakeFrame(0XFF71C, 0XA, 2, 0X0);
	MakeFunction    (0XFF73C,0XFF754);
	SetFunctionFlags(0XFF73C,0x10);
	MakeFrame(0XFF73C, 0X0, 2, 0X0);
	MakeLocal(0XFF73C, 0XFF754, "[bp+0X4]", "CHAR");
	MakeFunction    (0XFF754,0XFF834);
	SetFunctionFlags(0XFF754,0x10);
	MakeFrame(0XFF754, 0XC, 2, 0X0);
	MakeFunction    (0XFF834,0XFF8A2);
	SetFunctionFlags(0XFF834,0x10);
	MakeFrame(0XFF834, 0X10, 2, 0X0);
	MakeFunction    (0XFF8A2,0XFF8DC);
	SetFunctionFlags(0XFF8A2,0x10);
	MakeFrame(0XFF8A2, 0XA, 2, 0X0);
	MakeFunction    (0XFF8DC,0XFF8ED);
	SetFunctionFlags(0XFF8DC,0x10);
	MakeFrame(0XFF8DC, 0X0, 2, 0X0);
	MakeFunction    (0XFF8EE,0XFF905);
	SetFunctionFlags(0XFF8EE,0x10);
	MakeFrame(0XFF8EE, 0X0, 2, 0X0);
	MakeFunction    (0XFF906,0XFF91D);
	SetFunctionFlags(0XFF906,0x10);
	MakeFrame(0XFF906, 0X0, 2, 0X0);
	MakeFunction    (0XFF91E,0XFFA67);
	SetFunctionFlags(0XFF91E,0x10);
	MakeFrame(0XFF91E, 0X1A, 2, 0X0);
	MakeFunction    (0XFFA68,0XFFA95);
	SetFunctionFlags(0XFFA68,0x10);
	MakeFrame(0XFFA68, 0X0, 2, 0X0);
	MakeFunction    (0XFFA96,0XFFA9F);
	SetFunctionFlags(0XFFA96,0x10);
	MakeFrame(0XFFA96, 0X0, 2, 0X0);
	MakeLocal(0XFFA96, 0XFFA9F, "[bp+0X4]", "IO_PORT");
	MakeFunction    (0XFFA9F,0XFFAA8);
	SetFunctionFlags(0XFFA9F,0x10);
	MakeFrame(0XFFA9F, 0X0, 2, 0X0);
	MakeLocal(0XFFA9F, 0XFFAA8, "[bp+0X4]", "IO_PORT");
	MakeFunction    (0XFFAA8,0XFFAB4);
	SetFunctionFlags(0XFFAA8,0x10);
	MakeFrame(0XFFAA8, 0X0, 2, 0X0);
	MakeLocal(0XFFAA8, 0XFFAB4, "[bp+0X4]", "IO_PORT");
	MakeLocal(0XFFAA8, 0XFFAB4, "[bp+0X6]", "IO_VAL");
	MakeFunction    (0XFFAB4,0XFFAC0);
	SetFunctionFlags(0XFFAB4,0x10);
	MakeFrame(0XFFAB4, 0X0, 2, 0X0);
	MakeLocal(0XFFAB4, 0XFFAC0, "[bp+0X4]", "IO_PORT");
	MakeLocal(0XFFAB4, 0XFFAC0, "[bp+0X6]", "IO_VAL");
	MakeFunction    (0XFFAC0,0XFFAC5);
	SetFunctionFlags(0XFFAC0,0x0);
	MakeFunction    (0XFFAC6,0XFFB02);
	SetFunctionFlags(0XFFAC6,0x10);
	MakeFrame(0XFFAC6, 0XE, 2, 0X0);
	MakeFunction    (0XFFB02,0XFFB1F);
	SetFunctionFlags(0XFFB02,0x10);
	MakeFrame(0XFFB02, 0XA, 2, 0X0);
	MakeFunction    (0XFFB20,0XFFB84);
	SetFunctionFlags(0XFFB20,0x10);
	MakeFrame(0XFFB20, 0XE, 2, 0X0);
	MakeFunction    (0XFFB84,0XFFBE4);
	SetFunctionFlags(0XFFB84,0x10);
	MakeFrame(0XFFB84, 0XE, 2, 0X0);
	MakeFunction    (0XFFBE4,0XFFBEB);
	SetFunctionFlags(0XFFBE4,0x0);
	MakeFrame(0XFFBE4, 0X4, 0, 0X0);
	MakeFunction    (0XFFBEC,0XFFBF4);
	SetFunctionFlags(0XFFBEC,0x10);
	MakeFrame(0XFFBEC, 0X0, 2, 0X0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetReg(0XFE2B1,"ds",0X1);
	SetReg(0XFE2B5,"es",0X0);
	SetReg(0XFE4D1,"es",0X40);
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
}

// End of file.
