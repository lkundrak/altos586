zero:0000 ;
zero:0000 ; ╔═════════════════════════════════════════════════════════════════════════╗
zero:0000 ; ║	  This file is generated by The	Interactive Disassembler (IDA)	      ║
zero:0000 ; ║	  Copyright (c)	2010 by	Hex-Rays SA, <support@hex-rays.com>	      ║
zero:0000 ; ║			   Licensed to:	Freeware version		      ║
zero:0000 ; ╚═════════════════════════════════════════════════════════════════════════╝
zero:0000 ;
zero:0000 ; Input MD5	: 334B06466E9953EF6019F5106B316701
zero:0000
zero:0000
zero:0000		  .686p
zero:0000		  .mmx
zero:0000		  .model flat
zero:0000
zero:0000 ; ═══════════════════════════════════════════════════════════════════════════
zero:0000
zero:0000 ; Segment type: Regular
zero:0000 zero		  segment byte public 'zero' use16
zero:0000		  assume cs:zero
zero:0000		  assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
zero:0000 INT0_OFF	  dw ?			  ; DATA XREF: DO_RESET_ENTRY+CCw
zero:0000					  ; DO_RESET_ENTRY:loc_FE0DAw ...
zero:0002 INT0_SEG	  dw ?
zero:0004 word_4	  dw ?
zero:0006 byte_6	  db 7Eh dup(?)
zero:0084 INT33_TIMER_OFF dw ?			  ; DATA XREF: POST_PIT+2Bw
zero:0086 INT33_TIMER_SEG dw ?			  ; DATA XREF: POST_PIT+2Fw
zero:0088 byte_88	  db 35Dh dup(?)
zero:03E5		  db 1Bh dup(?)
zero:0400 IOP1_PTR	  IOP8089_CB <?>	  ; DATA XREF: IOP8086_DO_IO+19w
zero:0400					  ; IOP8086_DO_IO+27w ...
zero:0408 IOP3_PTR	  IOP8089_CB <?>
zero:0410 SCB		  IOP8089_SCB <1, 0, 0,	40h> ; DATA XREF: FINISH_POST+Do
zero:0410					  ; HIGH:IOP8089_FLAGSo ...
zero:0416 FW_REG	  db 0			  ; DATA XREF: FINISH_POST+3Fo
zero:0416					  ; FINISH_POST+52w
zero:0416					  ; SYS	- Firmware Version Register
zero:0417 SYS_CMD_REG	  db 0			  ; DATA XREF: SYS_CMD_WHEN_READY:WAIT_READYr
zero:0417					  ; SYS_CMD_WHEN_READY+Aw
zero:0417					  ; SYS	- Firmware Version Register
zero:0418 SYS_STAT_REG	  db 0			  ; SYS	- System Status	Register
zero:0419 INT_VECTOR_REG  dw 0			  ; SYS	- Interrupt Vector Register
zero:041B NEW_CMD_REG	  db 0			  ; DATA XREF: FDC_SET_FLOPPY_PARAMS+2Dw
zero:041B					  ; FDC_READ+D6w ...
zero:041B					  ; SYS	- New Command Register
zero:041C SIO_REGS_0	  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 3Ch, 9, 0, 0Ah, 0, 0, 0,	0>
zero:041C					  ; DATA XREF: FINISH_POST+5Fo
zero:041C					  ; SIO_RX+Do ...
zero:041C					  ; CH 0 - Channel Parameter Register
zero:0432 SIO_REGS_1	  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 46h, 9, 0, 546h,	0, 0, 0, 0> ; CH 1 - Channel Parameter Register
zero:0448 SIO_REGS_2	  CHAN_REGS <0F7B4h, 0,	0, 0, 0, 0, 0, 8Ch, 0Eh, 0, 0Ah, 0, 0, 0, 0> ; CH 2 - Channel Parameter	Register
zero:045E		  CHAN_REGS <0FAB4h, 0,	0, 0, 0, 0, 0, 96h, 0Eh, 0, 0Ah, 0, 0, 0, 0> ; CH 3 - Channel Parameter	Register
zero:0474		  CHAN_REGS <0F796h, 0,	0, 0, 0, 0, 0, 0A0h, 0Eh, 0, 0Ah, 0, 0,	0, 0> ;	CH 4 - Channel Parameter Register
zero:048A		  CHAN_REGS <0FEB4h, 0,	0, 0, 0, 0, 0, 0AAh, 0Eh, 0, 0Ah, 0, 0,	0, 0> ;	CH 5 - Channel Parameter Register
zero:04A0 FDC_REGS_0	  db 0			  ; FDC_COMMAND
zero:04A0					  ; DATA XREF: FDC_SET_FLOPPY_PARAMS+28w
zero:04A0					  ; FDC_SET_FLOPPY_PARAMS:WAIT_FDC_BUSYr ...
zero:04A0		  db 0			  ; FDC_STATUS ; UNK - Command Register?
zero:04A0		  dw 0			  ; FDC_QUEUE_ADDR_LO
zero:04A0		  dw 200h		  ; FDC_QUEUE_ADDR_HI
zero:04A0		  db 0			  ; FDC_QUEUE_SIZE
zero:04A0		  db 0			  ; FDC_QUEUE_PTR
zero:04A0		  db 2 dup(0)
zero:04A0		  db 0,	2, 0, 2, 6, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0; FDC_PARAMS_1
zero:04A0		  db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0; FDC_PARAMS_1
zero:04A0		  db 0,	2, 0, 2, 6, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0; FDC_PARAMS_2
zero:04A0		  db 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0; FDC_PARAMS_2
zero:04EA UNKNOWN	  db 11h, 11h, 11h, 11h
zero:04EA		  db 22h, 22h, 22h, 22h
zero:04EA		  db 22h, 22h
zero:04F4 dword_4F4	  dd 1FFF000Ch		  ; DATA XREF: FINISH_POST:loc_FE2E7r
zero:04F4					  ; SYSCALL_0_MONITOR+18r
zero:04F8 HEX_byte_4F8	  db 1			  ; DATA XREF: M_HEX_DOWNLOAD+2Cr
zero:04F8					  ; M_HEX_DOWNLOAD+4Fr	...
zero:04F9 STR_VERSION_BANNER db	'                             ',0Ah
zero:04F9					  ; DATA XREF: AUTOBOOT_PROMPT:DO_SETUPo
zero:04F9		  db 'Monitor Version V1.3',0
zero:052C STR_POST_GOOD	  db 0Ah		  ; DATA XREF: FINISH_POST+89o
zero:052C		  db 'PASSED POWER-UP TEST',0
zero:0542 STR_POST_FAILED db 0Ah		  ; DATA XREF: FINISH_POST+A3o
zero:0542		  db 'FAILED POWER-UP TEST '
zero:0558 HEX_BUF_FOR_POST_NUMBER db	0	  ; DATA XREF: FINISH_POST:loc_FE342o
zero:0559		  db	0
zero:055A HEX_NUMS	  db '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A'
zero:055A					  ; DATA XREF: FMT_HEX+14r
zero:055A					  ; FMT_HEX+25r
zero:055A		  db 'B', 'C', 'D', 'E', 'F'
zero:056A		  db	0
zero:056B		  db	0
zero:056C STR_BOOT_FAILED db 0Ah		  ; DATA XREF: BOOT_FAILED_ERR+5o
zero:056C		  db 'Boot Failed, Status=',0
zero:0582 STR_ERR_BEEP	  db '*',7,' ',0          ; DATA XREF: ERR_BEEP+5o
zero:0586 STR_BREAK	  db 0Ah		  ; DATA XREF: INT3_sub_FEC38+8o
zero:0586		  db 'Break ....',0
zero:0592 REG_NAMES	  db 'AX'                 ; DATA XREF: M_REGISTER+8Br
zero:0592					  ; PRINT_REGS+4Ao ...
zero:0594		  db 'BX'
zero:0596		  db 'CX'
zero:0598		  db 'DX'
zero:059A		  db 'SI'
zero:059C		  db 'DI'
zero:059E		  db 'DS'
zero:05A0		  db 'ES'
zero:05A2		  db 'SS'
zero:05A4		  db 'SP'
zero:05A6		  db 'BP'
zero:05A8		  db 'FL'
zero:05AA STR_BOOT_INTERRUPT db	0Ah		  ; DATA XREF: AUTOBOOT_PROMPT+1Bo
zero:05AA		  db 'Press any key to interrupt boot',0Ah,0
zero:05CC STR_BOOT_HDD	  db 0Ah		  ; DATA XREF: AUTOBOOT_PROMPT+69o
zero:05CC		  db 'Booting from Hard Disk',0
zero:05E4 STR_BOOT_PROMPT db 0Ah		  ; DATA XREF: AUTOBOOT_PROMPT:BOOT_MENUo
zero:05E4		  db 'Enter [1] to boot from Hard Disk',0Ah
zero:05E4		  db 'Enter [2] to boot from Floppy Disk',0Ah
zero:05E4		  db 'Enter [3] to enter Monitor',0Ah
zero:05E4		  db 0Ah
zero:05E4		  db 'Enter option: ',0
zero:0654 STR_MONITOR_PROMPT db	0Ah		  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_PROMPTo
zero:0654		  db '< A, B, D, G, I, K, L, M, O, R, S, X > ',0
zero:067D		  db	0
zero:067E CHR_SPACE	  db ' ',0                ; DATA XREF: sub_FF14A:loc_FF159o
zero:0680 CHR_DASH_0	  db '-',0                ; DATA XREF: M_REGISTER+4Ao
zero:0682 CHR_COLON	  db ':',0                ; DATA XREF: PRINT_REGS+1Co
zero:0684 CHR_DASH_1	  db '-',0                ; DATA XREF: PRINT_FLAGS_REG:loc_FF52Co
zero:0686 STR_FLAG_NAMES  db '    ODITSZ A P C',0 ; DATA XREF: PRINT_FLAGS_REG+19r
zero:0686					  ; PRINT_FLAGS_REG+27o
zero:0697		  db	0
zero:0698 STR_REG_CS_IP	  db 0Ah		  ; DATA XREF: PRINT_REGS+8o
zero:0698		  db 'CS:IP ',0
zero:06A0 STR_REG_FLAGS	  db '  Flags  ',0        ; DATA XREF: PRINT_REGS+30o
zero:06AA REG_DISP_OFFSETS db 0, 2, 4, 6, 9, 0Bh, 0Dh, 0Fh, 12h, 14h, 16h, 18h,	1Bh
zero:06AA					  ; DATA XREF: M_DISPLAY_MEMORY+46r
zero:06AA					  ; M_DISPLAY_MEMORY+C6r
zero:06AA		  db 1Dh, 1Fh, 21h
zero:06BA STR_READY	  db ' Ready- ',0         ; DATA XREF: M_HEX_DOWNLOAD+37o
zero:06C3 STR_DONE	  db ' -Done',0           ; DATA XREF: M_HEX_DOWNLOAD:loc_FFA57o
zero:06CA DISK_DATA_BUF	  db 51h, 30h, 0D0h, 0FFh, 0AAh, 0BBh, 4, 20h, 0Ah, 4Eh
zero:06CA					  ; DATA XREF: DISK_BOOT+59o
zero:06CA					  ; DISK_BOOT:BOOT_TYPE_2_loc_FE6EBo ...
zero:06CA		  db 6,	80h, 2,	93h, 8,	2, 0CEh, 2, 0EAh, 0BAh,	6, 0FCh
zero:06CA		  db 0Ah, 4Eh, 6, 20h, 13h, 4Fh, 14h, 2	dup(0),	0Ah, 0BEh
zero:06CA		  db 6,	0FCh, 12h, 0BAh, 4, 0E2h, 0, 0Ah, 0CBh,	4, 0Fh,	12h
zero:06CA		  db 0E7h, 4, 0B1h, 0, 2, 93h, 8, 2, 0CEh, 2, 0EAh, 0BAh
zero:06CA		  db 6,	0FCh, 2, 93h, 14h, 0, 0CEh, 2, 93h, 15h, 0, 0CEh
zero:06CA		  db 2,	93h, 6,	2, 0CEh, 4, 2, 93h, 7, 2, 0CEh,	4, 0Ah,	4Eh
zero:06CA		  db 6,	10h, 3,	93h, 6,	3, 0CFh, 14h, 0Ah, 0BEh, 6, 0FCh
zero:06CA		  db 2Ah, 0BAh,	4, 0FCh, 0Ah, 0E7h, 10h, 7Bh, 0Ah, 0BFh
zero:06CA		  db 4,	0Eh, 3,	8Bh, 0Ch, 31h, 30h, 2 dup(0), 63h, 83h,	0Ah
zero:06CA		  db 8Bh, 9Fh, 16h, 70h, 31h, 30h, 2 dup(0), 0F1h, 30h,	80h
zero:06CA		  db 0FEh, 11h,	30h, 0D0h, 0FFh, 13h, 4Fh, 12h,	0, 2, 0Ah
zero:06CA		  db 0BBh, 4, 12h, 0D1h, 30h, 28h, 8Ah,	0A0h, 0, 6Ah, 0BBh
zero:06CA		  db 4,	17h, 13h, 4Fh, 12h, 5, 2, 88h, 20h, 0Fh, 0D1h, 30h
zero:06CA		  db 28h, 56h, 0C0h, 0,	4Ah, 0BBh, 4, 5, 13h, 4Fh, 12h,	4
zero:06CA		  db 0,	63h, 83h, 12h, 2, 93h, 9, 0, 0CEh, 60h,	0, 2, 93h
zero:06CA		  db 4,	2, 0CEh, 6, 0Ah, 0B6h, 6, 33h, 2, 0EFh,	10h, 0Ah
zero:06CA		  db 0E7h, 10h,	6, 2, 0EBh, 9, 88h, 20h, 0DFh, 0Ah, 0BBh
zero:06CA		  db 4,	0Eh, 23h, 8Bh, 0Ch, 11h, 30h, 2	dup(0),	63h, 83h
zero:06CA		  db 0Ah, 8Bh, 9Fh, 16h, 7, 0Ah, 4Fh, 5, 0, 88h, 20h, 26h
zero:06CA		  db 0E0h, 0, 0D1h, 30h, 8, 0C2h, 60h, 3 dup(0), 83h, 8Fh
zero:06CA		  db 16h, 2, 92h, 6, 2,	0CFh, 5, 0Ah, 0CBh, 5, 7Eh, 0E2h
zero:06CA		  db 0F7h, 5, 0Ah, 4Eh,	6, 0, 88h, 20h,	5, 13h,	4Fh, 5,	81h
zero:06CA		  db 0,	40h, 0,	20h, 48h, 11h dup(0), 0C8h, 1Eh, 0, 0FEh
zero:06CA		  db 0Eh dup(0), 0CAh dup(?)
zero:08CA byte_8CA	  db ?			  ; DATA XREF: sub_FEBD6+17r
zero:08CA					  ; INT3_sub_FEC38+21r	...
zero:08CB byte_8CB	  db ?			  ; DATA XREF: sub_FEBD6+48w
zero:08CB					  ; INT3_sub_FEC38+4Fr
zero:08CC word_8CC	  dw ?			  ; DATA XREF: sub_FEBD6+29r
zero:08CC					  ; INT3_sub_FEC38+33r	...
zero:08CE word_8CE	  dw 17h dup(?)		  ; DATA XREF: sub_FEBD6+37r
zero:08CE					  ; INT3_sub_FEC38+41r	...
zero:08FC FDC_QUEUE	  dw ?			  ; DATA XREF: FDC_SET_FLOPPY_PARAMS+22o
zero:08FC					  ; FDC_ENQUEUE_CMD+8o
zero:08FE		  dw ?
zero:0900 SIO_BUFS_unk_900 db 5B4h dup(?)	  ; DATA XREF: SIO_TX+35o
zero:0EB4 HEX_word_EB4	  dw ?			  ; DATA XREF: M_HEX_DOWNLOAD+5Aw
zero:0EB4					  ; HEX_sub_FFB20+Cr ...
zero:0EB6 HEX_word_EB6	  dw ?			  ; DATA XREF: M_HEX_DOWNLOAD+60w
zero:0EB6					  ; M_HEX_DOWNLOAD:loc_FF987w ...
zero:0EB8 HEX_word_EB8	  dw ?			  ; DATA XREF: M_HEX_DOWNLOAD+41w
zero:0EB8					  ; M_HEX_DOWNLOAD+4Br	...
zero:0EBA HEX_word_EBA	  dw ?			  ; DATA XREF: M_HEX_DOWNLOAD+84w
zero:0EBA					  ; M_HEX_DOWNLOAD+11Er ...
zero:0EBC CHAR_BUF_byte_EBC db ?		  ; DATA XREF: M_DISK_IO+12w
zero:0EBC					  ; M_DISK_IO+15r ...
zero:0EBD SAVED_SS_word_EBD dw ?		  ; DATA XREF: DO_SYSCALL_ENTRY+Bw
zero:0EBD					  ; DO_SYSCALL_RETURNr
zero:0EBF SAVED_SP_word_EBF dw ?		  ; DATA XREF: DO_SYSCALL_ENTRY+Fw
zero:0EBF					  ; DO_SYSCALL_RETURN+4r
zero:0EC1 SAVED_ES	  dw ?			  ; DATA XREF: DO_SYSCALL_ENTRY+5w
zero:0EC1					  ; DO_SYSCALL_RETURN+8r ...
zero:0EC1					  ; Saved on syscall entry
zero:0EC3 MEM_SIZE	  dw ?			  ; DATA XREF: POST_START+3Dw
zero:0EC3					  ; SYSCALL_10_GET_CONS_AND_MEMr
zero:0EC5 unk_EC5	  db	? ;		  ; DATA XREF: POST_START+39w
zero:0EC5					  ; POST_START:loc_FE291r
zero:0EC6 WHATS_CB_SEG	  db ?			  ; DATA XREF: FINISH_POST+26r
zero:0EC7 POST_RESULT_byte_EC7 db ?		  ; DATA XREF: POST_START+Aw
zero:0EC7					  ; POST_START:POST_FF_loc_FE2A7w ...
zero:0EC8 BOOT_DISK_CODE  db ?			  ; DATA XREF: SYSCALL_11_GET_BOOT_DISKr
zero:0EC8					  ; DISK_BOOT:HARD_DISKw
zero:0EC8					  ; 1 =	HDD, 2 = FDD
zero:0EC9 SAVED_CPU_REGS  CPU_REGS <?>		  ; DATA XREF: SYSCALL_0_MONITOR+Bo
zero:0EC9					  ; SAVE_REGS_AND_BREAK+6o ...
zero:0EE5 ADDR_SEGMENT	  dw ?			  ; DATA XREF: SYSCALL_8_DISK_IO+7w
zero:0EE5					  ; PARSE_ADDR_sub_FE96E+Cw ...
zero:0EE7 ADDR_OFFSET	  dw ?			  ; DATA XREF: SYSCALL_8_DISK_IO+3w
zero:0EE7					  ; DISK_IO+18w ...
zero:0EE9 IOP_BLOCK	  IOP8089_PB <?>	  ; DATA XREF: IOP8086_DO_IO+1o
zero:0EE9					  ; HDD_READ+Cw ...
zero:0EFF		  db	? ;
zero:0F00		  db	? ;
zero:0F01		  db	? ;
zero:0F02		  db	? ;
zero:0F03 DISK_IOPB	  IO_BLOCK <?>		  ; DATA XREF: DISK_IO+14w
zero:0F03					  ; DISK_BOOT:loc_FE5BFw ...
zero:0F17		  db	? ;
zero:0F18 GETCHAR_ECHO_BUF dw ?			  ; DATA XREF: GETCHAR_ECHO+8w
zero:0F18					  ; GETCHAR_ECHO+Bo ...
zero:0F1A PRINTHEX_unk_F1A db	 ? ;		  ; DATA XREF: PRINTHEX8+9o
zero:0F1A					  ; PRINTHEX8+18o
zero:0F1B		  db	? ;
zero:0F1C PRINTHEX_unk_F1C db	 ? ;		  ; DATA XREF: PRINTHEX8+5o
zero:0F1C					  ; PRINTHEX8+22o
zero:0F1D		  db 0E3h dup(?)
zero:0F1D zero		  ends
zero:0F1D
FE00:0000 ; ═══════════════════════════════════════════════════════════════════════════
FE00:0000
FE00:0000 ; Segment type: Pure code
FE00:0000 FE00		  segment byte public 'CODE' use16
FE00:0000		  assume cs:FE00
FE00:0000		  assume es:zero, ss:zero, ds:zero, fs:zero, gs:zero
FE00:0000
FE00:0000 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0000
FE00:0000 ; Attributes:	thunk
FE00:0000
FE00:0000 SYSCALL_ENTRY	  proc far
FE00:0000		  jmp	  DO_SYSCALL_ENTRY
FE00:0000 SYSCALL_ENTRY	  endp
FE00:0000
FE00:0003
FE00:0003 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0003
FE00:0003
FE00:0003 DO_RESET_ENTRY  proc near		  ; CODE XREF: HIGH:loc_FFFF0J
FE00:0003		  cli
FE00:0004
FE00:0004 loc_FE004:				  ; CMOS Memory
FE00:0004		  in	  ax, MMU_MEMV_CLEAR
FE00:0006
FE00:0006 loc_FE006:				  ; AT Keyboard	controller 8042.
FE00:0006		  in	  ax, MMU_ERROR
FE00:0008
FE00:0008 loc_FE008:
FE00:0008		  and	  ax, 200h
FE00:000B
FE00:000B loc_FE00B:
FE00:000B		  mov	  bh, ah
FE00:000D		  shr	  ax, 1
FE00:000F
FE00:000F loc_FE00F:				  ; Control Bits Port -	Write Only.
FE00:000F		  out	  CONTROL_BITS,	ax
FE00:0011
FE00:0011 loc_FE011:
FE00:0011		  cmp	  bh, 2
FE00:0014
FE00:0014 loc_FE014:
FE00:0014		  jnz	  short	loc_FE019
FE00:0016		  jmp	  loc_FE252
FE00:0019 ; ───────────────────────────────────────────────────────────────────────────
FE00:0019
FE00:0019 loc_FE019:				  ; CODE XREF: DO_RESET_ENTRY:loc_FE014j
FE00:0019		  mov	  ax, 0FE00h
FE00:001C		  mov	  ds, ax
FE00:001E		  assume ds:nothing
FE00:001E		  xor	  bx, bx
FE00:0020		  xor	  al, al
FE00:0022		  mov	  cx, 2000h
FE00:0025
FE00:0025 loc_FE025:				  ; CODE XREF: DO_RESET_ENTRY+25j
FE00:0025		  add	  al, [bx]
FE00:0027		  inc	  bx
FE00:0028		  loop	  loc_FE025
FE00:002A		  and	  al, al
FE00:002C		  jz	  short	loc_FE032
FE00:002E		  mov	  bl, 1
FE00:0030		  jmp	  short	loc_FE052
FE00:0032 ; ───────────────────────────────────────────────────────────────────────────
FE00:0032
FE00:0032 loc_FE032:				  ; CODE XREF: DO_RESET_ENTRY+29j
FE00:0032		  mov	  cx, 11h
FE00:0035		  xor	  bx, bx
FE00:0037		  mov	  dx, MMU_BASE
FE00:003A		  stc
FE00:003B
FE00:003B loc_FE03B:				  ; CODE XREF: DO_RESET_ENTRY+49j
FE00:003B		  mov	  ax, bx
FE00:003D		  out	  dx, ax	  ; Game I/O port
FE00:003E		  in	  ax, dx	  ; Game I/O port
FE00:003F		  and	  ax, 0F8FFh
FE00:0042		  and	  bx, 0F8FFh
FE00:0046		  cmp	  ax, bx
FE00:0048		  jnz	  short	loc_FE050
FE00:004A		  rcl	  bx, 1
FE00:004C		  loop	  loc_FE03B
FE00:004E		  jmp	  short	loc_FE054
FE00:0050 ; ───────────────────────────────────────────────────────────────────────────
FE00:0050
FE00:0050 loc_FE050:				  ; CODE XREF: DO_RESET_ENTRY+45j
FE00:0050		  mov	  bl, 2
FE00:0052
FE00:0052 loc_FE052:				  ; CODE XREF: DO_RESET_ENTRY+2Dj
FE00:0052		  jmp	  short	loc_FE093
FE00:0054 ; ───────────────────────────────────────────────────────────────────────────
FE00:0054
FE00:0054 loc_FE054:				  ; CODE XREF: DO_RESET_ENTRY+4Bj
FE00:0054		  mov	  cx, 9
FE00:0057		  mov	  dx, MMU_BASE
FE00:005A		  xor	  ax, ax
FE00:005C		  mov	  bx, 1
FE00:005F
FE00:005F loc_FE05F:				  ; CODE XREF: DO_RESET_ENTRY+65j
FE00:005F		  out	  dx, ax	  ; Game I/O port
FE00:0060		  rcl	  bx, 1
FE00:0062		  mov	  dx, bx
FE00:0064		  add	  dx, MMU_BASE
FE00:0068		  loop	  loc_FE05F
FE00:006A		  mov	  cx, 9
FE00:006D		  mov	  dx, MMU_BASE
FE00:0070		  mov	  bx, 1
FE00:0073
FE00:0073 loc_FE073:				  ; CODE XREF: DO_RESET_ENTRY+8Aj
FE00:0073		  in	  ax, dx	  ; Game I/O port
FE00:0074		  and	  ax, 0F8FFh
FE00:0077		  jnz	  short	loc_FE091
FE00:0079		  not	  ax
FE00:007B		  out	  dx, ax	  ; Game I/O port
FE00:007C		  in	  ax, dx	  ; Game I/O port
FE00:007D		  and	  ax, 0F8FFh
FE00:0080		  cmp	  ax, 0F8FFh
FE00:0083		  jnz	  short	loc_FE091
FE00:0085		  rcl	  bx, 1
FE00:0087
FE00:0087 loc_FE087:
FE00:0087		  mov	  dx, bx
FE00:0089		  add	  dx, MMU_BASE
FE00:008D		  loop	  loc_FE073
FE00:008F		  jmp	  short	loc_FE095
FE00:0091 ; ───────────────────────────────────────────────────────────────────────────
FE00:0091
FE00:0091 loc_FE091:				  ; CODE XREF: DO_RESET_ENTRY+74j
FE00:0091					  ; DO_RESET_ENTRY+80j
FE00:0091		  mov	  bl, 3
FE00:0093
FE00:0093 loc_FE093:				  ; CODE XREF: DO_RESET_ENTRY:loc_FE052j
FE00:0093		  jmp	  short	loc_FE0C2
FE00:0095 ; ───────────────────────────────────────────────────────────────────────────
FE00:0095
FE00:0095 loc_FE095:				  ; CODE XREF: DO_RESET_ENTRY+8Cj
FE00:0095		  mov	  cx, 100h
FE00:0098		  mov	  dx, MMU_BASE
FE00:009B		  xor	  ax, ax
FE00:009D
FE00:009D loc_FE09D:				  ; CODE XREF: DO_RESET_ENTRY+9Dj
FE00:009D		  out	  dx, ax	  ; Game I/O port
FE00:009E		  inc	  dx
FE00:009F		  inc	  dx
FE00:00A0		  loop	  loc_FE09D
FE00:00A2		  mov	  cx, 100h
FE00:00A5		  mov	  dx, MMU_BASE
FE00:00A8
FE00:00A8 loc_FE0A8:				  ; CODE XREF: DO_RESET_ENTRY+B9j
FE00:00A8		  in	  ax, dx	  ; Game I/O port
FE00:00A9		  and	  ax, 0F8FFh
FE00:00AC		  jnz	  short	loc_FE0C0
FE00:00AE		  not	  ax
FE00:00B0		  out	  dx, ax	  ; Game I/O port
FE00:00B1		  in	  ax, dx	  ; Game I/O port
FE00:00B2		  and	  ax, 0F8FFh
FE00:00B5		  cmp	  ax, 0F8FFh
FE00:00B8		  jnz	  short	loc_FE0C0
FE00:00BA		  inc	  dx
FE00:00BB		  inc	  dx
FE00:00BC		  loop	  loc_FE0A8
FE00:00BE		  jmp	  short	loc_FE0C4
FE00:00C0 ; ───────────────────────────────────────────────────────────────────────────
FE00:00C0
FE00:00C0 loc_FE0C0:				  ; CODE XREF: DO_RESET_ENTRY+A9j
FE00:00C0					  ; DO_RESET_ENTRY+B5j
FE00:00C0		  mov	  bl, 4
FE00:00C2
FE00:00C2 loc_FE0C2:				  ; CODE XREF: DO_RESET_ENTRY:loc_FE093j
FE00:00C2		  jmp	  short	loc_FE0E6
FE00:00C4 ; ───────────────────────────────────────────────────────────────────────────
FE00:00C4
FE00:00C4 loc_FE0C4:				  ; CODE XREF: DO_RESET_ENTRY+BBj
FE00:00C4		  lea	  di, loc_FE0CB
FE00:00C8		  jmp	  MMU_sub_FE232
FE00:00CB ; ───────────────────────────────────────────────────────────────────────────
FE00:00CB
FE00:00CB loc_FE0CB:				  ; DATA XREF: DO_RESET_ENTRY:loc_FE0C4o
FE00:00CB		  xor	  ax, ax
FE00:00CD		  mov	  ds, ax
FE00:00CF		  assume ds:zero
FE00:00CF		  mov	  INT0_OFF, ax
FE00:00D2		  mov	  cx, 11h
FE00:00D5		  mov	  dx, ax
FE00:00D7		  mov	  ax, 1
FE00:00DA
FE00:00DA loc_FE0DA:				  ; CODE XREF: DO_RESET_ENTRY+E9j
FE00:00DA		  mov	  INT0_OFF, dx
FE00:00DE		  cmp	  INT0_OFF, dx
FE00:00E2		  jz	  short	loc_FE0E8
FE00:00E4		  mov	  bl, 5
FE00:00E6
FE00:00E6 loc_FE0E6:				  ; CODE XREF: DO_RESET_ENTRY:loc_FE0C2j
FE00:00E6		  jmp	  short	TRMP
FE00:00E8 ; ───────────────────────────────────────────────────────────────────────────
FE00:00E8
FE00:00E8 loc_FE0E8:				  ; CODE XREF: DO_RESET_ENTRY+DFj
FE00:00E8		  mov	  dx, ax
FE00:00EA		  shl	  ax, 1
FE00:00EC		  loop	  loc_FE0DA
FE00:00EE
FE00:00EE loc_FE0EE:
FE00:00EE		  mov	  si, 4
FE00:00F1		  xor	  ax, ax
FE00:00F3		  lea	  di, loc_FE0F9
FE00:00F7
FE00:00F7 loc_FE0F7:				  ; CODE XREF: DO_RESET_ENTRY+FAj
FE00:00F7		  jmp	  short	POST_MEM_1_sub_FE112
FE00:00F9 ; ───────────────────────────────────────────────────────────────────────────
FE00:00F9
FE00:00F9 loc_FE0F9:				  ; DATA XREF: DO_RESET_ENTRY+F0o
FE00:00F9		  add	  ax, 1000h
FE00:00FC		  dec	  si
FE00:00FD		  jnz	  short	loc_FE0F7
FE00:00FF
FE00:00FF loc_FE0FF:
FE00:00FF		  mov	  si, 4
FE00:0102		  xor	  ax, ax
FE00:0104		  lea	  di, sub_FE10A
FE00:0104 DO_RESET_ENTRY  endp
FE00:0104
FE00:0108
FE00:0108 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0108
FE00:0108
FE00:0108 TRMP_0	  proc near		  ; CODE XREF: sub_FE10A+4j
FE00:0108		  jmp	  short	sub_FE12C
FE00:0108 TRMP_0	  endp
FE00:0108
FE00:010A
FE00:010A ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:010A
FE00:010A
FE00:010A sub_FE10A	  proc near		  ; DATA XREF: DO_RESET_ENTRY+101o
FE00:010A		  add	  ax, 1000h
FE00:010D		  dec	  si
FE00:010E		  jnz	  short	TRMP_0
FE00:0110		  jmp	  short	sub_FE156
FE00:0110 sub_FE10A	  endp
FE00:0110
FE00:0112
FE00:0112 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0112
FE00:0112
FE00:0112 POST_MEM_1_sub_FE112 proc near	  ; CODE XREF: DO_RESET_ENTRY:loc_FE0F7j
FE00:0112		  stc
FE00:0113		  mov	  cx, 12h
FE00:0116		  xor	  bx, bx
FE00:0118		  mov	  ds, ax
FE00:011A		  assume ds:nothing
FE00:011A		  mov	  dx, 5555h
FE00:011D
FE00:011D loc_FE11D:				  ; CODE XREF: POST_MEM_1_sub_FE112:loc_FE128j
FE00:011D		  mov	  [bx],	dx
FE00:011F		  rcl	  bx, 1
FE00:0121		  jnb	  short	loc_FE128
FE00:0123		  add	  ax, 1000h
FE00:0126		  mov	  ds, ax
FE00:0128		  assume ds:nothing
FE00:0128
FE00:0128 loc_FE128:				  ; CODE XREF: POST_MEM_1_sub_FE112+Fj
FE00:0128		  loop	  loc_FE11D
FE00:012A		  jmp	  di
FE00:012A POST_MEM_1_sub_FE112 endp
FE00:012A
FE00:012C
FE00:012C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:012C
FE00:012C
FE00:012C sub_FE12C	  proc near		  ; CODE XREF: TRMP_0j
FE00:012C		  stc
FE00:012D		  mov	  cx, 12h
FE00:0130		  xor	  bx, bx
FE00:0132		  mov	  ds, ax
FE00:0134		  mov	  dx, 5555h
FE00:0137
FE00:0137 loc_FE137:				  ; CODE XREF: sub_FE12C:loc_FE14Ej
FE00:0137		  cmp	  [bx],	dx
FE00:0139		  jnz	  short	EARLY_BEFORE_POST_sub_FE152
FE00:013B		  not	  dx
FE00:013D		  mov	  [bx],	dx
FE00:013F		  cmp	  [bx],	dx
FE00:0141		  jnz	  short	EARLY_BEFORE_POST_sub_FE152
FE00:0143		  rcl	  bx, 1
FE00:0145		  jnb	  short	loc_FE14E
FE00:0147		  add	  ax, 1000h
FE00:014A		  mov	  ds, ax
FE00:014C		  assume ds:nothing
FE00:014C		  not	  dx
FE00:014E
FE00:014E loc_FE14E:				  ; CODE XREF: sub_FE12C+19j
FE00:014E		  loop	  loc_FE137
FE00:0150		  jmp	  di
FE00:0152 ; ───────────────────────────────────────────────────────────────────────────
FE00:0152
FE00:0152 EARLY_BEFORE_POST_sub_FE152:		  ; CODE XREF: sub_FE12C+Dj
FE00:0152					  ; sub_FE12C+15j
FE00:0152		  mov	  bl, 6
FE00:0152 sub_FE12C	  endp
FE00:0152
FE00:0154
FE00:0154 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0154
FE00:0154
FE00:0154 TRMP		  proc near		  ; CODE XREF: DO_RESET_ENTRY:loc_FE0E6j
FE00:0154		  jmp	  short	TRMP_1
FE00:0154 TRMP		  endp
FE00:0154
FE00:0156
FE00:0156 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0156
FE00:0156
FE00:0156 sub_FE156	  proc near		  ; CODE XREF: sub_FE10A+6j
FE00:0156		  cld
FE00:0157		  mov	  bx, 8
FE00:015A		  xor	  ax, ax
FE00:015C
FE00:015C loc_FE15C:				  ; CODE XREF: POST_sub_FE163+Bj
FE00:015C		  mov	  es, ax
FE00:015E		  mov	  ax, 0FFFFh
FE00:0161		  xor	  di, di
FE00:0161 sub_FE156	  endp
FE00:0161
FE00:0163
FE00:0163 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0163
FE00:0163
FE00:0163 POST_sub_FE163  proc near
FE00:0163		  mov	  cx, 8000h
FE00:0166		  rep stosw
FE00:0168		  mov	  ax, es
FE00:016A		  add	  ax, 1000h
FE00:016D		  dec	  bx
FE00:016E		  jnz	  short	loc_FE15C
FE00:0170		  mov	  bx, 8
FE00:0173		  xor	  ax, ax
FE00:0175		  mov	  dx, 0FFFFh
FE00:0178
FE00:0178 loc_FE178:				  ; CODE XREF: POST_sub_FE163+34j
FE00:0178		  mov	  cx, 8000h
FE00:017B		  mov	  ds, ax
FE00:017D		  assume ds:zero
FE00:017D		  xor	  di, di
FE00:017F
FE00:017F loc_FE17F:				  ; CODE XREF: POST_sub_FE163+2Cj
FE00:017F		  cmp	  [di],	dx
FE00:0181		  jnz	  short	loc_FE19B
FE00:0183		  not	  dx
FE00:0185		  mov	  [di],	dx
FE00:0187		  cmp	  [di],	dx
FE00:0189		  jnz	  short	loc_FE19B
FE00:018B		  not	  dx
FE00:018D		  inc	  di
FE00:018E		  inc	  di
FE00:018F		  loop	  loc_FE17F
FE00:0191		  mov	  ax, ds
FE00:0193		  add	  ax, 1000h
FE00:0196		  dec	  bx
FE00:0197		  jnz	  short	loc_FE178
FE00:0199		  jmp	  short	POST_PIT_1
FE00:019B ; ───────────────────────────────────────────────────────────────────────────
FE00:019B
FE00:019B loc_FE19B:				  ; CODE XREF: POST_sub_FE163+1Ej
FE00:019B					  ; POST_sub_FE163+26j
FE00:019B		  mov	  bl, 7
FE00:019B POST_sub_FE163  endp
FE00:019B
FE00:019D
FE00:019D ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:019D
FE00:019D
FE00:019D TRMP_1	  proc near		  ; CODE XREF: TRMPj
FE00:019D		  jmp	  short	TRMP_2
FE00:019D TRMP_1	  endp
FE00:019D
FE00:019F
FE00:019F ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:019F
FE00:019F
FE00:019F POST_PIT_1	  proc near		  ; CODE XREF: POST_sub_FE163+36j
FE00:019F		  mov	  al, 70h ; 'p'
FE00:01A1		  mov	  dx, PIT_CTRL	  ; PIT	- Control Word Register	- Write	Only
FE00:01A4		  out	  dx, al
FE00:01A5		  mov	  ax, 0AAh ; '¬'
FE00:01A8		  mov	  dx, PIT_CNT_1	  ; PIT	- Counter 1
FE00:01AB		  out	  dx, al
FE00:01AC		  out	  dx, al
FE00:01AD		  mov	  cx, ax
FE00:01AF
FE00:01AF loc_FE1AF:				  ; CODE XREF: POST_PIT_1:loc_FE1AFj
FE00:01AF		  loop	  loc_FE1AF
FE00:01B1		  in	  al, dx
FE00:01B2		  mov	  ah, al
FE00:01B4		  in	  al, dx
FE00:01B5		  cmp	  ax, 0AAAAh
FE00:01B8		  jnz	  short	POST_PIT
FE00:01BA		  mov	  bl, 8
FE00:01BA POST_PIT_1	  endp
FE00:01BA
FE00:01BC
FE00:01BC ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:01BC
FE00:01BC
FE00:01BC TRMP_2	  proc near		  ; CODE XREF: TRMP_1j
FE00:01BC		  jmp	  short	TRMP_3
FE00:01BC TRMP_2	  endp
FE00:01BC
FE00:01BE
FE00:01BE ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:01BE
FE00:01BE
FE00:01BE POST_PIT	  proc near		  ; CODE XREF: POST_PIT_1+19j
FE00:01BE		  mov	  al, 70h ; 'p'
FE00:01C0		  mov	  dx, PIT_CTRL	  ; PIT	- Control Word Register	- Write	Only
FE00:01C3		  out	  dx, al
FE00:01C4		  mov	  dx, PIT_CNT_1	  ; PIT	- Counter 1
FE00:01C7		  out	  dx, al
FE00:01C8		  mov	  ax, 1F00h
FE00:01CB		  mov	  ss, ax
FE00:01CD		  assume ss:nothing
FE00:01CD		  mov	  sp, 0FFh
FE00:01D0		  mov	  cx, 100h
FE00:01D3		  lea	  dx, DEFAULT_INT
FE00:01D7		  xor	  bx, bx
FE00:01D9		  mov	  ds, bx
FE00:01DB
FE00:01DB loc_FE1DB:				  ; CODE XREF: POST_PIT+25j
FE00:01DB		  mov	  [bx],	dx
FE00:01DD		  inc	  bx
FE00:01DE		  inc	  bx
FE00:01DF		  mov	  word ptr [bx], cs
FE00:01E1		  inc	  bx
FE00:01E2		  inc	  bx
FE00:01E3		  loop	  loc_FE1DB
FE00:01E5		  lea	  dx, TIMER_INT
FE00:01E9		  mov	  INT33_TIMER_OFF, dx
FE00:01ED		  mov	  INT33_TIMER_SEG, cs
FE00:01F1		  mov	  al, 13h
FE00:01F3		  out	  PIC_1, al	  ; DMA	page register 74LS612:
FE00:01F3					  ; Channel 3 (hard disk DMA) (address bits 16-23)
FE00:01F5		  mov	  al, 20h ; ' '
FE00:01F7		  mov	  dx, PIC_2	  ; PIC	- ICW2,	ICW3, ICW4, or OCW1
FE00:01FA		  out	  dx, al	  ; manufacture's diagnostic checkpoint
FE00:01FB		  mov	  al, 3
FE00:01FD		  out	  dx, al	  ; manufacture's diagnostic checkpoint
FE00:01FE		  mov	  al, 0FDh ; '²'
FE00:0200		  out	  dx, al	  ; manufacture's diagnostic checkpoint
FE00:0201		  sti
FE00:0202		  mov	  al, 56h ; 'V'
FE00:0204		  mov	  dx, PIT_CTRL	  ; PIT	- Control Word Register	- Write	Only
FE00:0207		  out	  dx, al
FE00:0208		  mov	  al, 90h ; 'É'
FE00:020A		  out	  dx, al
FE00:020B		  mov	  al, 50h ; 'P'
FE00:020D		  mov	  dx, PIT_CNT_1	  ; PIT	- Counter 1
FE00:0210		  out	  dx, al
FE00:0211		  mov	  dx, PIT_CNT_2	  ; PIT	- Counter 2
FE00:0214		  out	  dx, al
FE00:0215		  mov	  bh, 0FFh
FE00:0217		  mov	  cx, 1FFFh
FE00:021A
FE00:021A loc_FE21A:				  ; CODE XREF: POST_PIT+5Ej
FE00:021A		  mul	  si
FE00:021C		  loop	  loc_FE21A
FE00:021E		  cli
FE00:021F		  cmp	  bh, 21h ; '!'
FE00:0222		  jz	  short	POST_PIT_BL
FE00:0224		  mov	  bl, 9
FE00:0224 POST_PIT	  endp
FE00:0224
FE00:0226
FE00:0226 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0226
FE00:0226
FE00:0226 TRMP_3	  proc near		  ; CODE XREF: TRMP_2j
FE00:0226		  jmp	  short	TRMP_4
FE00:0226 TRMP_3	  endp
FE00:0226
FE00:0228
FE00:0228 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0228
FE00:0228
FE00:0228 POST_PIT_BL	  proc near		  ; CODE XREF: POST_PIT+64j
FE00:0228		  xor	  bl, bl
FE00:0228 POST_PIT_BL	  endp
FE00:0228
FE00:022A
FE00:022A ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:022A
FE00:022A
FE00:022A TRMP_4	  proc near		  ; CODE XREF: TRMP_3j
FE00:022A		  jmp	  short	POST_START ; First part	of self-test
FE00:022A TRMP_4	  endp			  ; Tests memory
FE00:022A
FE00:022C
FE00:022C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:022C
FE00:022C
FE00:022C TIMER_INT	  proc near		  ; DATA XREF: POST_PIT+27o
FE00:022C		  mov	  bh, 21h ; '!'   ; FALLTHROUGH
FE00:022C TIMER_INT	  endp
FE00:022C
FE00:022E
FE00:022E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:022E
FE00:022E
FE00:022E DEFAULT_INT	  proc far		  ; DATA XREF: POST_PIT+15o
FE00:022E		  mov	  cx, 1
FE00:0231		  iret
FE00:0231 DEFAULT_INT	  endp
FE00:0231
FE00:0232
FE00:0232 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0232
FE00:0232
FE00:0232 MMU_sub_FE232	  proc near		  ; CODE XREF: DO_RESET_ENTRY+C5j
FE00:0232					  ; POST_START+4j ...
FE00:0232		  mov	  dx, MMU_BASE
FE00:0235		  mov	  cl, 0
FE00:0237
FE00:0237 loc_FE237:				  ; CODE XREF: MMU_sub_FE232+Ej
FE00:0237		  mov	  ah, 0DCh ; '▄'
FE00:0239		  mov	  al, cl
FE00:023B		  out	  dx, ax	  ; Game I/O port
FE00:023C		  inc	  dx
FE00:023D		  inc	  dx
FE00:023E		  inc	  cl
FE00:0240		  jnz	  short	loc_FE237
FE00:0242		  jmp	  di
FE00:0242 MMU_sub_FE232	  endp
FE00:0242
FE00:0244
FE00:0244 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0244
FE00:0244 ; First part of self-test
FE00:0244 ; Tests memory
FE00:0244
FE00:0244 POST_START	  proc near		  ; CODE XREF: TRMP_4j
FE00:0244		  lea	  di, loc_FE24A
FE00:0248		  jmp	  short	MMU_sub_FE232
FE00:024A ; ───────────────────────────────────────────────────────────────────────────
FE00:024A
FE00:024A loc_FE24A:				  ; DATA XREF: POST_STARTo
FE00:024A		  xor	  ax, ax
FE00:024C		  mov	  ds, ax
FE00:024E		  mov	  POST_RESULT_byte_EC7,	bl
FE00:0252
FE00:0252 loc_FE252:				  ; CODE XREF: DO_RESET_ENTRY+13j
FE00:0252		  lea	  di, loc_FE259
FE00:0256		  jmp	  MMU_sub_FE232
FE00:0259 ; ───────────────────────────────────────────────────────────────────────────
FE00:0259
FE00:0259 loc_FE259:				  ; DATA XREF: POST_START:loc_FE252o
FE00:0259		  xor	  ax, ax
FE00:025B		  mov	  ds, ax
FE00:025D		  mov	  dx, 7E00h	  ; Start the memory test at 7E00:1FFF
FE00:0260		  mov	  bx, 1FFFh	  ; That is 7FFFF
FE00:0263
FE00:0263 loc_FE263:				  ; CODE XREF: POST_START+34j
FE00:0263		  mov	  es, dx
FE00:0265		  assume es:nothing
FE00:0265		  mov	  al, es:[bx]
FE00:0268		  not	  byte ptr es:[bx]
FE00:026B		  not	  al
FE00:026D		  cmp	  al, es:[bx]
FE00:0270		  not	  byte ptr es:[bx]
FE00:0273		  jnz	  short	loc_FE27A
FE00:0275		  add	  dh, 2
FE00:0278		  jmp	  short	loc_FE263
FE00:027A ; ───────────────────────────────────────────────────────────────────────────
FE00:027A
FE00:027A loc_FE27A:				  ; CODE XREF: POST_START+2Fj
FE00:027A		  sub	  dh, 2
FE00:027D		  mov	  word ptr unk_EC5, dx
FE00:0281		  mov	  MEM_SIZE, bx
FE00:0285		  in	  ax, MMU_ERROR	  ; AT Keyboard	controller 8042.
FE00:0287		  and	  ah, 2
FE00:028A		  jnz	  short	POST_FF_loc_FE2A7
FE00:028C		  mov	  dx, 8000h
FE00:028F		  xor	  ax, ax
FE00:0291
FE00:0291 loc_FE291:				  ; CODE XREF: POST_START+5Fj
FE00:0291		  cmp	  dx, word ptr unk_EC5
FE00:0295		  ja	  short	loc_FE2A5
FE00:0297		  mov	  es, dx
FE00:0299		  assume es:nothing
FE00:0299		  mov	  di, ax
FE00:029B		  mov	  cx, 1000h
FE00:029E		  rep stosw
FE00:02A0		  add	  dh, 2
FE00:02A3		  jmp	  short	loc_FE291
FE00:02A5 ; ───────────────────────────────────────────────────────────────────────────
FE00:02A5
FE00:02A5 loc_FE2A5:				  ; CODE XREF: POST_START+51j
FE00:02A5		  jmp	  short	FINISH_POST
FE00:02A7 ; ───────────────────────────────────────────────────────────────────────────
FE00:02A7
FE00:02A7 POST_FF_loc_FE2A7:			  ; CODE XREF: POST_START+46j
FE00:02A7		  mov	  POST_RESULT_byte_EC7,	0FFh ; FALLTHROUGH
FE00:02A7 POST_START	  endp
FE00:02A7
FE00:02AC
FE00:02AC ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:02AC
FE00:02AC
FE00:02AC FINISH_POST	  proc near		  ; CODE XREF: POST_START:loc_FE2A5j
FE00:02AC					  ; DO_SYSCALL_ENTRY+29j
FE00:02AC		  mov	  ax, 0FE00h
FE00:02AF		  mov	  ds, ax
FE00:02B1		  assume ds:FE00
FE00:02B1		  xor	  ax, ax
FE00:02B3		  mov	  es, ax
FE00:02B5		  assume es:zero
FE00:02B5		  lea	  si, ROM_DATA	  ; From FE00:1C00
FE00:02B9		  lea	  di, SCB	  ; To	 0000:0410
FE00:02BD		  mov	  cx, 504	  ; 504	Words =	1008 Bytes
FE00:02C0		  repne	movsw		  ; Copy .data to DRAM
FE00:02C2		  mov	  ax, 100h
FE00:02C5		  out	  CONTROL_BITS,	ax ; Control Bits Port - Write Only.
FE00:02C7		  xor	  ax, ax
FE00:02C9		  mov	  ds, ax
FE00:02CB		  assume ds:zero
FE00:02CB		  in	  ax, MMU_MEMV	  ; MMU	- Violation Port - Read	Only.
FE00:02CD		  and	  ah, 10h
FE00:02D0		  jnz	  short	loc_FE2E7
FE00:02D2		  cmp	  WHATS_CB_SEG,	7Eh ; '~'
FE00:02D7		  jz	  short	loc_FE2E1
FE00:02D9		  mov	  SCB.CB_SEG, 0FDFFh
FE00:02DF		  jmp	  short	loc_FE2E7
FE00:02E1 ; ───────────────────────────────────────────────────────────────────────────
FE00:02E1
FE00:02E1 loc_FE2E1:				  ; CODE XREF: FINISH_POST+2Bj
FE00:02E1		  mov	  SCB.CB_SEG, 7FFFh
FE00:02E7
FE00:02E7 loc_FE2E7:				  ; CODE XREF: FINISH_POST+24j
FE00:02E7					  ; FINISH_POST+33j
FE00:02E7		  lds	  di, dword_4F4
FE00:02EB		  mov	  word ptr [di], offset	FW_REG
FE00:02EF		  inc	  di
FE00:02F0		  inc	  di
FE00:02F1		  xor	  ax, ax
FE00:02F3		  mov	  [di],	al
FE00:02F5		  mov	  ds, ax
FE00:02F7		  mov	  es, ax
FE00:02F9		  mov	  ss, ax
FE00:02FB		  assume ss:zero
FE00:02FB		  mov	  sp, 1000h
FE00:02FE		  mov	  word ptr FW_REG, ax
FE00:0301		  out	  Z80_CHAN_ATTN, ax ; Z80A I/O Processor Chan att.
FE00:0303		  mov	  al, 81h ; 'ü'   ; Enable controller
FE00:0305		  call	  SYS_CMD_WHEN_READY
FE00:0308		  mov	  cx, 2
FE00:030B		  lea	  si, SIO_REGS_0
FE00:030F		  mov	  al, 81h ; 'ü'   ; Enable channel
FE00:0311
FE00:0311 loc_FE311:				  ; CODE XREF: FINISH_POST+6Cj
FE00:0311		  call	  SIO_COMMAND_WHEN_READY ; AL=command
FE00:0314		  add	  si, 16h	  ; sizeof(SIO_REGS_BLOCK)
FE00:0318		  loop	  loc_FE311
FE00:031A		  mov	  cx, 25	  ; 25 newlines
FE00:031A					  ; 99 luftbaloons
FE00:031D
FE00:031D loc_FE31D:				  ; CODE XREF: FINISH_POST+76j
FE00:031D		  push	  cx
FE00:031E		  call	  PRINT_CRLF
FE00:0321		  pop	  cx
FE00:0322		  loop	  loc_FE31D
FE00:0324		  cmp	  POST_RESULT_byte_EC7,	10h
FE00:0329		  ja	  short	loc_FE35A
FE00:032B		  mov	  bl, POST_RESULT_byte_EC7
FE00:032F		  xor	  ax, ax
FE00:0331		  cmp	  bl, al
FE00:0333		  jnz	  short	loc_FE342
FE00:0335		  lea	  dx, STR_POST_GOOD ; "\nPASSED	POWER-UP TEST"
FE00:0339		  push	  dx
FE00:033A		  call	  PUTS
FE00:033D		  add	  sp, 2
FE00:0340		  jmp	  short	loc_FE35A
FE00:0342 ; ───────────────────────────────────────────────────────────────────────────
FE00:0342
FE00:0342 loc_FE342:				  ; CODE XREF: FINISH_POST+87j
FE00:0342		  lea	  dx, HEX_BUF_FOR_POST_NUMBER
FE00:0346		  push	  dx
FE00:0347		  push	  dx
FE00:0348		  push	  bx
FE00:0349		  call	  FMT_HEX
FE00:034C		  add	  sp, 6
FE00:034F		  lea	  dx, STR_POST_FAILED ;	"\nFAILED POWER-UP TEST	"
FE00:0353		  push	  dx
FE00:0354		  call	  PUTS
FE00:0357		  add	  sp, 2
FE00:035A
FE00:035A loc_FE35A:				  ; CODE XREF: FINISH_POST+7Dj
FE00:035A					  ; FINISH_POST+94j
FE00:035A		  xor	  ax, ax
FE00:035C		  push	  ax
FE00:035D		  push	  ax
FE00:035E		  call	  FDC_SET_FLOPPY_PARAMS	; Init floppy
FE00:0361		  add	  sp, 4
FE00:0364		  cmp	  POST_RESULT_byte_EC7,	0FEh ; '■'
FE00:0369		  jz	  short	near ptr DO_SYSCALL_RETURN
FE00:0369 FINISH_POST	  endp
FE00:0369
FE00:036B
FE00:036B ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:036B
FE00:036B
FE00:036B SYSCALL_0_MONITOR proc far		  ; CODE XREF: DO_SYSCALL_ENTRY+2Ep
FE00:036B					  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:036B		  xor	  ax, ax
FE00:036D		  mov	  ds, ax
FE00:036F		  mov	  es, ax
FE00:0371		  mov	  ss, ax
FE00:0373		  mov	  sp, 1000h
FE00:0376		  lea	  di, SAVED_CPU_REGS
FE00:037A		  mov	  cx, 0Eh
FE00:037D		  rep stosw
FE00:037F		  mov	  SAVED_CPU_REGS.SAVE_SP, sp
FE00:0383		  push	  word ptr dword_4F4
FE00:0387		  call	  AUTOBOOT_PROMPT ; FALLTHROUGH
FE00:0387 SYSCALL_0_MONITOR endp
FE00:0387
FE00:038A
FE00:038A ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:038A
FE00:038A
FE00:038A DO_SYSCALL_ENTRY proc	near		  ; CODE XREF: SYSCALL_ENTRYj
FE00:038A		  push	  ds
FE00:038B		  xor	  ax, ax
FE00:038D		  mov	  ds, ax
FE00:038F		  mov	  SAVED_ES, es	  ; Saved on syscall entry
FE00:0393		  mov	  es, ax
FE00:0395		  mov	  SAVED_SS_word_EBD, ss
FE00:0399		  mov	  SAVED_SP_word_EBF, sp
FE00:039D		  mov	  ss, ax
FE00:039F		  mov	  sp, 1000h
FE00:03A2		  cmp	  bl, 0Fh
FE00:03A5		  jnz	  short	loc_FE3B6
FE00:03A7		  lea	  di, loc_FE3AE
FE00:03AB		  jmp	  MMU_sub_FE232
FE00:03AE ; ───────────────────────────────────────────────────────────────────────────
FE00:03AE
FE00:03AE loc_FE3AE:				  ; DATA XREF: DO_SYSCALL_ENTRY+1Do
FE00:03AE		  mov	  POST_RESULT_byte_EC7,	0FEh ; '■'
FE00:03B3		  jmp	  FINISH_POST
FE00:03B6 ; ───────────────────────────────────────────────────────────────────────────
FE00:03B6
FE00:03B6 loc_FE3B6:				  ; CODE XREF: DO_SYSCALL_ENTRY+1Bj
FE00:03B6		  shl	  bx, 1
FE00:03B8		  call	  cs:SYSCALL_HANDLERS[bx] ; FALLTHROUGH
FE00:03B8 DO_SYSCALL_ENTRY endp
FE00:03B8
FE00:03BD
FE00:03BD ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:03BD
FE00:03BD
FE00:03BD DO_SYSCALL_RETURN proc far		  ; CODE XREF: FINISH_POST+BDj
FE00:03BD		  mov	  ss, SAVED_SS_word_EBD
FE00:03C1		  mov	  sp, SAVED_SP_word_EBF
FE00:03C5		  mov	  es, SAVED_ES	  ; Saved on syscall entry
FE00:03C9		  pop	  ds
FE00:03CA		  retf
FE00:03CA DO_SYSCALL_RETURN endp ; sp =	 2
FE00:03CA
FE00:03CA ; ───────────────────────────────────────────────────────────────────────────
FE00:03CB SYSCALL_HANDLERS dw offset SYSCALL_0_MONITOR;	0 ; DATA XREF: DO_SYSCALL_ENTRY+2Er
FE00:03CB		  dw offset SYSCALL_1_5_SIO_GET_STAT_ATTR; 1
FE00:03CB		  dw offset SYSCALL_2_SIO_GETC;	2
FE00:03CB		  dw offset SYSCALL_3_SIO_PUTC;	3
FE00:03CB		  dw offset SYSCALL_4_SIO_SET_ATTRS; 4
FE00:03CB		  dw offset SYSCALL_1_5_SIO_GET_STAT_ATTR; 5
FE00:03CB		  dw offset SYSCALL_6_PRINT_CRLF; 6
FE00:03CB		  dw offset SYSCALL_7_PUTS; 7
FE00:03CB		  dw offset SYSCALL_8_DISK_IO; 8
FE00:03CB		  dw offset SYSCALL_8_DISK_IO; 9
FE00:03CB		  dw offset SYSCALL_10_GET_CONS_AND_MEM; 10
FE00:03CB		  dw offset SYSCALL_11_GET_BOOT_DISK; 11
FE00:03CB		  dw offset SYSCALL_12_DISK_BOOT; 12
FE00:03E5
FE00:03E5 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:03E5
FE00:03E5
FE00:03E5 SYSCALL_1_5_SIO_GET_STAT_ATTR	proc near ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:03E5		  push	  bx
FE00:03E6		  push	  cx
FE00:03E7		  mov	  ax, 0FFFFh	  ; Just get the attributes
FE00:03EA		  push	  ax
FE00:03EB		  push	  cx
FE00:03EC		  call	  SIO_RX
FE00:03EF		  add	  sp, 6
FE00:03F2		  pop	  bx
FE00:03F3		  cmp	  bl, 2
FE00:03F6		  jz	  short	locret_FE3FA
FE00:03F8		  mov	  ax, dx
FE00:03FA
FE00:03FA locret_FE3FA:				  ; CODE XREF: SYSCALL_1_5_SIO_GET_STAT_ATTR+11j
FE00:03FA		  retn
FE00:03FA SYSCALL_1_5_SIO_GET_STAT_ATTR	endp
FE00:03FA
FE00:03FB
FE00:03FB ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:03FB
FE00:03FB
FE00:03FB SYSCALL_2_SIO_GETC proc near		  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:03FB		  push	  cx
FE00:03FC		  call	  SIO_GETC
FE00:03FF		  add	  sp, 2
FE00:0402		  retn
FE00:0402 SYSCALL_2_SIO_GETC endp
FE00:0402
FE00:0403
FE00:0403 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0403
FE00:0403
FE00:0403 SYSCALL_3_SIO_PUTC proc near		  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0403		  mov	  POST_RESULT_byte_EC7,	dl
FE00:0407		  lea	  dx, POST_RESULT_byte_EC7
FE00:040B		  push	  dx
FE00:040C		  push	  cx		  ; Character
FE00:040D		  call	  DO_SYSCALL_3_PUTC
FE00:0410		  add	  sp, 4
FE00:0413		  retn
FE00:0413 SYSCALL_3_SIO_PUTC endp
FE00:0413
FE00:0414
FE00:0414 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0414
FE00:0414
FE00:0414 SYSCALL_4_SIO_SET_ATTRS proc near	  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0414		  push	  dx		  ; Attributes
FE00:0415		  mov	  ax, 0FFFFh
FE00:0418		  push	  ax
FE00:0419		  push	  cx		  ; Channel No.
FE00:041A		  call	  SIO_TX
FE00:041D		  add	  sp, 6
FE00:0420		  retn
FE00:0420 SYSCALL_4_SIO_SET_ATTRS endp
FE00:0420
FE00:0421
FE00:0421 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0421
FE00:0421
FE00:0421 SYSCALL_6_PRINT_CRLF proc near	  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0421		  push	  cx		  ; Channel
FE00:0422		  call	  DO_PRINT_CRLF
FE00:0425		  add	  sp, 2
FE00:0428		  retn
FE00:0428 SYSCALL_6_PRINT_CRLF endp
FE00:0428
FE00:0429
FE00:0429 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0429
FE00:0429
FE00:0429 SYSCALL_7_PUTS  proc near		  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0429		  mov	  ax, SAVED_ES	  ; Saved on syscall entry
FE00:042C		  push	  dx
FE00:042D		  push	  ax
FE00:042E		  push	  cx
FE00:042F		  call	  DO_PUTS
FE00:0432		  add	  sp, 6
FE00:0435		  retn
FE00:0435 SYSCALL_7_PUTS  endp
FE00:0435
FE00:0436
FE00:0436 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0436
FE00:0436
FE00:0436 SYSCALL_8_DISK_IO proc near		  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0436		  mov	  ax, SAVED_ES	  ; Saved on syscall entry
FE00:0439		  mov	  ADDR_OFFSET, cx
FE00:043D		  mov	  ADDR_SEGMENT,	ax
FE00:0440		  call	  DISK_IO
FE00:0443		  retn
FE00:0443 SYSCALL_8_DISK_IO endp
FE00:0443
FE00:0444
FE00:0444 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0444
FE00:0444
FE00:0444 SYSCALL_10_GET_CONS_AND_MEM proc near	  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0444		  les	  dx, dword ptr	MEM_SIZE
FE00:0448		  mov	  SAVED_ES, es	  ; Saved on syscall entry
FE00:044C		  xor	  ax, ax	  ; Current console is always 0
FE00:044E		  retn
FE00:044E SYSCALL_10_GET_CONS_AND_MEM endp
FE00:044E
FE00:044F
FE00:044F ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:044F
FE00:044F
FE00:044F SYSCALL_11_GET_BOOT_DISK proc	near	  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:044F		  mov	  al, BOOT_DISK_CODE ; 1 = HDD,	2 = FDD
FE00:0452		  retn
FE00:0452 SYSCALL_11_GET_BOOT_DISK endp
FE00:0452
FE00:0453
FE00:0453 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0453
FE00:0453
FE00:0453 SYSCALL_12_DISK_BOOT proc near	  ; DATA XREF: FE00:SYSCALL_HANDLERSo
FE00:0453		  push	  cx
FE00:0454		  call	  DISK_BOOT
FE00:0457		  add	  sp, 2
FE00:045A		  retn
FE00:045A SYSCALL_12_DISK_BOOT endp
FE00:045A
FE00:045B
FE00:045B ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:045B
FE00:045B
FE00:045B SAVE_REGS_AND_BREAK proc near		  ; DATA XREF: RESTORE_REGS_AND_IRETo
FE00:045B		  push	  bx
FE00:045C		  push	  ds
FE00:045D		  xor	  bx, bx
FE00:045F		  mov	  ds, bx
FE00:0461		  mov	  bx, offset SAVED_CPU_REGS
FE00:0464		  mov	  [bx+CPU_REGS.SAVE_ES], es
FE00:0467		  mov	  [bx+CPU_REGS.SAVE_AX], ax
FE00:046A		  mov	  [bx+CPU_REGS.SAVE_CX], cx
FE00:046D		  mov	  [bx+CPU_REGS.SAVE_DX], dx
FE00:0470		  mov	  [bx+CPU_REGS.SAVE_SI], si
FE00:0473		  mov	  [bx+CPU_REGS.SAVE_DI], di
FE00:0476		  mov	  [bx+CPU_REGS.SAVE_BP], bp
FE00:0479		  mov	  [bx+CPU_REGS.SAVE_SS], ss
FE00:047C		  pop	  ax
FE00:047D		  mov	  [bx+CPU_REGS.SAVE_DS], ax
FE00:0480		  pop	  ax
FE00:0481		  mov	  [bx+CPU_REGS.SAVE_BX], ax
FE00:0484		  pop	  ax
FE00:0485		  mov	  [bx+CPU_REGS.SAVE_IP], ax
FE00:0488		  pop	  ax
FE00:0489		  mov	  [bx+CPU_REGS.SAVE_CS], ax
FE00:048C		  pop	  ax
FE00:048D		  mov	  [bx+CPU_REGS.SAVE_FLAGS], ax
FE00:0490		  mov	  [bx+CPU_REGS.SAVE_SP], sp
FE00:0493		  xor	  ax, ax
FE00:0495		  mov	  ds, ax
FE00:0497		  mov	  es, ax
FE00:0499		  mov	  ss, ax
FE00:049B		  mov	  sp, 1000h
FE00:049E		  test	  [bx+CPU_REGS.SAVE_FLAGS], 100h
FE00:04A3		  jz	  short	loc_FE4B3
FE00:04A5		  and	  [bx+CPU_REGS.SAVE_FLAGS], 0FEFFh
FE00:04AA
FE00:04AA loc_FE4AA:
FE00:04AA		  call	  PRINT_REGS
FE00:04AD		  xor	  ax, ax
FE00:04AF		  push	  ax
FE00:04B0		  call	  AUTOBOOT_PROMPT
FE00:04B3
FE00:04B3 loc_FE4B3:				  ; CODE XREF: SAVE_REGS_AND_BREAK+48j
FE00:04B3		  dec	  [bx+CPU_REGS.SAVE_IP]
FE00:04B6		  call	  INT3_sub_FEC38
FE00:04B6 SAVE_REGS_AND_BREAK endp
FE00:04B6
FE00:04B6 ; ───────────────────────────────────────────────────────────────────────────
FE00:04B9		  db	0
FE00:04BA
FE00:04BA ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:04BA
FE00:04BA
FE00:04BA IOP8086_DO_IO	  proc near		  ; CODE XREF: HDD_READ:loc_FED23p
FE00:04BA					  ; AUTOBOOT_PROMPT:KEY_1_HD_BOOTp ...
FE00:04BA		  push	  es
FE00:04BB		  lea	  si, IOP_BLOCK
FE00:04BF		  mov	  word ptr [si], 6CAh
FE00:04C3		  add	  word ptr [si], 17F0h
FE00:04C7		  mov	  word ptr [si+2], 0FE00h
FE00:04CC		  mov	  ax, SCB.CB_SEG
FE00:04CF		  mov	  es, ax
FE00:04D1		  assume es:nothing
FE00:04D1		  mov	  al, 3
FE00:04D3		  mov	  es:IOP8089_CB, al ; 40:0 -- 0:400
FE00:04D7		  mov	  es:IOP8089_CB.PB_OFF,	si ; 40:2 -- 0:402
FE00:04DC		  mov	  word ptr es:IOP8089_CB.PB_SEG, ds ; 40:4 -- 0:404
FE00:04E1		  mov	  byte ptr es:IOP8089_CB.BUSY, 1 ; 40:1	-- 0:401   Busy?
FE00:04E7		  mov	  dx, BUS_RSVD_0  ; Reserved for system	bus I/O.
FE00:04EA		  out	  dx, al
FE00:04EB		  mov	  cx, 6000
FE00:04EE
FE00:04EE WAIT_IOP_NOT_BUSY:			  ; CODE XREF: IOP8086_DO_IO+46j
FE00:04EE		  cmp	  byte ptr es:1, 0 ; 40:1 -- 0:401   Busy no more?
FE00:04F4		  jz	  short	IOP_NOT_BUSY
FE00:04F6		  mov	  ax, 1
FE00:04F9		  push	  ax
FE00:04FA		  call	  DELAY
FE00:04FD		  add	  sp, 2
FE00:0500		  loop	  WAIT_IOP_NOT_BUSY
FE00:0502
FE00:0502 IOP_NOT_BUSY:				  ; CODE XREF: IOP8086_DO_IO+3Aj
FE00:0502		  pop	  es
FE00:0503		  assume es:zero
FE00:0503		  retn
FE00:0503 IOP8086_DO_IO	  endp
FE00:0503
FE00:0504
FE00:0504 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0504
FE00:0504 ; Attributes:	bp-based frame
FE00:0504
FE00:0504 SIO_GETC	  proc near		  ; CODE XREF: SYSCALL_2_SIO_GETC+1p
FE00:0504					  ; HEX_sub_FFA68+Cp
FE00:0504
FE00:0504 CHARACTER	  = word ptr -6
FE00:0504 CHANNEL	  = byte ptr  4
FE00:0504
FE00:0504		  push	  bp
FE00:0505		  mov	  bp, sp
FE00:0507		  push	  di
FE00:0508		  push	  si
FE00:0509		  sub	  sp, 2
FE00:050C		  lea	  di, [bp+CHARACTER]
FE00:050F		  push	  di
FE00:0510		  mov	  di, 1		  ; Length
FE00:0513		  push	  di
FE00:0514		  mov	  al, [bp+CHANNEL]
FE00:0517		  cbw
FE00:0518		  push	  ax
FE00:0519		  call	  SIO_RX
FE00:051C		  add	  sp, 6
FE00:051F		  mov	  byte ptr [bp+CHARACTER], al
FE00:0522		  mov	  al, byte ptr [bp+CHARACTER]
FE00:0525		  cbw
FE00:0526		  jmp	  TAIL_loc_FFBE4
FE00:0526 SIO_GETC	  endp
FE00:0526
FE00:0526 ; ───────────────────────────────────────────────────────────────────────────
FE00:0529		  db	0
FE00:052A
FE00:052A ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:052A
FE00:052A ; Attributes:	bp-based frame
FE00:052A
FE00:052A DO_SYSCALL_3_PUTC proc near		  ; CODE XREF: SYSCALL_3_SIO_PUTC+Ap
FE00:052A
FE00:052A CHARACTER	  = byte ptr  4
FE00:052A arg_2		  = word ptr  6
FE00:052A
FE00:052A		  push	  bp
FE00:052B		  mov	  bp, sp
FE00:052D		  push	  di
FE00:052E		  push	  si
FE00:052F		  push	  [bp+arg_2]
FE00:0532		  mov	  di, 1		  ; Length
FE00:0535		  push	  di
FE00:0536		  mov	  al, [bp+CHARACTER]
FE00:0539		  cbw
FE00:053A		  push	  ax
FE00:053B		  call	  PRINT_BUF
FE00:053E		  add	  sp, 6
FE00:0541		  jmp	  TAIL_loc_FFBE4
FE00:0541 DO_SYSCALL_3_PUTC endp
FE00:0541
FE00:0544
FE00:0544 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0544
FE00:0544 ; Attributes:	bp-based frame
FE00:0544
FE00:0544 FMT_HEX	  proc near		  ; CODE XREF: FINISH_POST+9Dp
FE00:0544					  ; PRINTHEX8+12p
FE00:0544
FE00:0544 arg_0		  = byte ptr  4
FE00:0544 arg_2		  = word ptr  6
FE00:0544 arg_4		  = word ptr  8
FE00:0544
FE00:0544		  push	  bp
FE00:0545		  mov	  bp, sp
FE00:0547		  push	  di
FE00:0548		  push	  si
FE00:0549		  push	  [bp+arg_2]
FE00:054C		  mov	  bl, [bp+arg_0]
FE00:054F		  and	  bx, 0F0h
FE00:0553		  mov	  cx, 4
FE00:0556		  sar	  bx, cl
FE00:0558		  mov	  dl, HEX_NUMS[bx]
FE00:055C		  pop	  bx
FE00:055D		  mov	  [bx],	dl
FE00:055F		  push	  [bp+arg_4]
FE00:0562		  mov	  bl, [bp+arg_0]
FE00:0565		  and	  bx, 0Fh
FE00:0569		  mov	  dl, HEX_NUMS[bx]
FE00:056D		  pop	  bx
FE00:056E		  mov	  [bx],	dl
FE00:0570		  jmp	  TAIL_loc_FFBE4
FE00:0570 FMT_HEX	  endp
FE00:0570
FE00:0570 ; ───────────────────────────────────────────────────────────────────────────
FE00:0573		  db	0
FE00:0574
FE00:0574 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0574
FE00:0574
FE00:0574 DELAY		  proc near		  ; CODE XREF: IOP8086_DO_IO+40p
FE00:0574					  ; AUTOBOOT_PROMPT+2Ep
FE00:0574		  push	  bx
FE00:0575		  mov	  bx, sp
FE00:0577		  push	  cx
FE00:0578		  mov	  ax, [bx+4]
FE00:057B		  or	  ax, ax
FE00:057D		  jz	  short	ZERO_WAIT
FE00:057F
FE00:057F OUTER_LOOP:				  ; CODE XREF: DELAY+16j
FE00:057F		  mov	  bx, 10
FE00:0582
FE00:0582 INNER_LOOP:				  ; CODE XREF: DELAY+13j
FE00:0582		  mov	  cl, 120
FE00:0584		  shr	  cl, cl
FE00:0586		  dec	  bx
FE00:0587		  jnz	  short	INNER_LOOP
FE00:0589		  dec	  ax
FE00:058A		  jnz	  short	OUTER_LOOP
FE00:058C
FE00:058C ZERO_WAIT:				  ; CODE XREF: DELAY+9j
FE00:058C		  pop	  cx
FE00:058D		  pop	  bx
FE00:058E		  retn
FE00:058E DELAY		  endp
FE00:058E
FE00:058E ; ───────────────────────────────────────────────────────────────────────────
FE00:058F		  db	0
FE00:0590
FE00:0590 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0590
FE00:0590 ; Attributes:	bp-based frame
FE00:0590
FE00:0590 DISK_BOOT	  proc near		  ; CODE XREF: SYSCALL_12_DISK_BOOT+1p
FE00:0590					  ; AUTOBOOT_PROMPT+7Ap ...
FE00:0590
FE00:0590 LEN		  = word ptr -0Eh
FE00:0590 DEST		  = word ptr -0Ch
FE00:0590 var_A		  = word ptr -0Ah
FE00:0590 SRC		  = word ptr -8
FE00:0590 var_6		  = word ptr -6
FE00:0590 DISK_NUMBER	  = byte ptr  4
FE00:0590
FE00:0590		  push	  bp
FE00:0591		  mov	  bp, sp
FE00:0593		  push	  di
FE00:0594		  push	  si
FE00:0595		  sub	  sp, 0Ah
FE00:0598		  cmp	  word ptr [bp+DISK_NUMBER], 3
FE00:059C		  jbe	  short	FLOPPY_DISK
FE00:059E		  mov	  dx, 1
FE00:05A1		  jmp	  short	HARD_DISK
FE00:05A3 ; ───────────────────────────────────────────────────────────────────────────
FE00:05A3
FE00:05A3 FLOPPY_DISK:				  ; CODE XREF: DISK_BOOT+Cj
FE00:05A3		  mov	  dx, 2
FE00:05A6
FE00:05A6 HARD_DISK:				  ; CODE XREF: DISK_BOOT+11j
FE00:05A6		  mov	  BOOT_DISK_CODE, dl ; 1 = HDD,	2 = FDD
FE00:05AA		  mov	  dx, word ptr [bp+DISK_NUMBER]
FE00:05AD		  mov	  DISK_IOPB.DISK_DRIVE_NUM, dl
FE00:05B1		  cmp	  word ptr [bp+DISK_NUMBER], 3
FE00:05B5		  jbe	  short	loc_FE5BC
FE00:05B7		  mov	  dx, 21h ; '!'
FE00:05BA		  jmp	  short	loc_FE5BF
FE00:05BC ; ───────────────────────────────────────────────────────────────────────────
FE00:05BC
FE00:05BC loc_FE5BC:				  ; CODE XREF: DISK_BOOT+25j
FE00:05BC		  mov	  dx, 20h ; ' '
FE00:05BF
FE00:05BF loc_FE5BF:				  ; CODE XREF: DISK_BOOT+2Aj
FE00:05BF		  mov	  DISK_IOPB.DISK_OPCODE, dl
FE00:05C3		  mov	  DISK_IOPB.DISK_TRACK,	0
FE00:05C9		  mov	  DISK_IOPB.DISK_HEAD, 0
FE00:05CE		  cmp	  word ptr [bp+DISK_NUMBER], 3
FE00:05D2		  jbe	  short	loc_FE5D8
FE00:05D4		  sub	  dx, dx
FE00:05D6		  jmp	  short	loc_FE5DB
FE00:05D8 ; ───────────────────────────────────────────────────────────────────────────
FE00:05D8
FE00:05D8 loc_FE5D8:				  ; CODE XREF: DISK_BOOT+42j
FE00:05D8		  mov	  dx, 1
FE00:05DB
FE00:05DB loc_FE5DB:				  ; CODE XREF: DISK_BOOT+46j
FE00:05DB		  mov	  DISK_IOPB.DISK_SECTOR, dl
FE00:05DF		  mov	  DISK_IOPB.DISK_SECTOR_COUNT, 1
FE00:05E4		  mov	  DISK_IOPB.DISK_RETRIES, 10
FE00:05E9		  mov	  DISK_IOPB.DISK_DMA_OFFSET, offset DISK_DATA_BUF
FE00:05EF		  mov	  DISK_IOPB.DISK_DMA_SEGMENT, 0
FE00:05F5		  mov	  DISK_IOPB.DISK_SECTOR_LEN, 512
FE00:05FB		  call	  DISK_READ
FE00:05FE		  cmp	  DISK_IOPB.DISK_OP_STATUS, 0
FE00:0603		  jz	  short	BOOT_GOOD
FE00:0605
FE00:0605 BOOT_FAILED:				  ; CODE XREF: DISK_BOOT+B6j
FE00:0605					  ; DISK_BOOT+194j
FE00:0605		  call	  BOOT_FAILED_ERR
FE00:0608		  jmp	  loc_FE730
FE00:060B ; ───────────────────────────────────────────────────────────────────────────
FE00:060B
FE00:060B BOOT_GOOD:				  ; CODE XREF: DISK_BOOT+73j
FE00:060B		  mov	  dl, DISK_DATA_BUF+3
FE00:060F		  sub	  dh, dh
FE00:0611		  mov	  al, DISK_DATA_BUF+4
FE00:0614		  cbw
FE00:0615		  mov	  cx, 8
FE00:0618		  shl	  ax, cl
FE00:061A		  add	  dx, ax
FE00:061C		  mov	  [bp+var_A], dx
FE00:061F		  mov	  [bp+DEST], 0
FE00:0624		  mov	  SAVED_CPU_REGS.SAVE_CS, dx
FE00:0628		  mov	  di, [bp+DEST]
FE00:062B		  mov	  SAVED_CPU_REGS.SAVE_IP, di
FE00:062F		  mov	  [bp+var_6], 0
FE00:0634		  mov	  di, [bp+var_A]
FE00:0637		  mov	  DISK_IOPB.DISK_DMA_SEGMENT, di
FE00:063B		  inc	  DISK_IOPB.DISK_SECTOR
FE00:063F		  mov	  al, DISK_DATA_BUF+9
FE00:0642		  cbw
FE00:0643		  cmp	  ax, 2
FE00:0646		  ja	  short	BOOT_FAILED
FE00:0648		  shl	  ax, 1
FE00:064A		  xchg	  ax, bx
FE00:064B		  jmp	  cs:off_FE714[bx]
FE00:0650
FE00:0650 BOOT_TYPE_0_loc_FE650:		  ; DATA XREF: DISK_BOOT:off_FE714o
FE00:0650		  mov	  [bp+SRC], (offset DISK_DATA_BUF+80h)
FE00:0655		  mov	  di, 180h	  ; Length
FE00:0658		  push	  di
FE00:0659		  lea	  di, [bp+DEST]
FE00:065C		  push	  di
FE00:065D		  lea	  di, [bp+SRC]
FE00:0660		  push	  di
FE00:0661		  call	  MEMCPY
FE00:0664		  add	  sp, 6
FE00:0667		  mov	  di, [bp+DEST]
FE00:066A		  add	  di, 180h
FE00:066E		  mov	  DISK_IOPB.DISK_DMA_OFFSET, di
FE00:0672		  cmp	  word ptr [bp+DISK_NUMBER], 3
FE00:0676		  ja	  short	loc_FE6E4
FE00:0678		  mov	  DISK_IOPB.DISK_SECTOR_COUNT, 8
FE00:067D		  call	  FDC_READ
FE00:0680		  mov	  al, DISK_IOPB.DISK_SECTOR_COUNT
FE00:0683		  cbw
FE00:0684		  mov	  cx, 9
FE00:0687		  shl	  ax, cl
FE00:0689		  add	  DISK_IOPB.DISK_DMA_OFFSET, ax
FE00:068D		  mov	  DISK_IOPB.DISK_HEAD, 1
FE00:0692		  mov	  DISK_IOPB.DISK_SECTOR, 1
FE00:0697		  mov	  DISK_IOPB.DISK_SECTOR_COUNT, 9
FE00:069C		  jmp	  BOOT_TYPE_PARAMS_SET
FE00:069F ; ───────────────────────────────────────────────────────────────────────────
FE00:069F
FE00:069F BOOT_TYPE_1_loc_FE69F:		  ; CODE XREF: DISK_BOOT+BBj
FE00:069F					  ; DATA XREF: DISK_BOOT+186o
FE00:069F		  mov	  [bp+LEN], 502
FE00:06A4		  cmp	  word ptr [bp+DISK_NUMBER], 3
FE00:06A8		  ja	  short	loc_FE6C4
FE00:06AA		  mov	  di, 1
FE00:06AD		  push	  di
FE00:06AE		  mov	  al, DISK_IOPB.DISK_DRIVE_NUM
FE00:06B1		  cbw
FE00:06B2		  push	  ax
FE00:06B3		  call	  FDC_SET_FLOPPY_PARAMS
FE00:06B6		  add	  sp, 4
FE00:06B9		  mov	  DISK_IOPB.DISK_SECTOR_LEN, 256
FE00:06BF		  mov	  [bp+LEN], 246
FE00:06C4
FE00:06C4 loc_FE6C4:				  ; CODE XREF: DISK_BOOT+118j
FE00:06C4		  mov	  [bp+SRC], (offset DISK_DATA_BUF+0Ah)
FE00:06C9		  push	  [bp+LEN]
FE00:06CC		  lea	  di, [bp+DEST]
FE00:06CF		  push	  di
FE00:06D0		  lea	  di, [bp+SRC]
FE00:06D3		  push	  di
FE00:06D4		  call	  MEMCPY
FE00:06D7		  add	  sp, 6
FE00:06DA		  mov	  di, [bp+DEST]
FE00:06DD		  add	  di, [bp+LEN]
FE00:06E0		  mov	  DISK_IOPB.DISK_DMA_OFFSET, di
FE00:06E4
FE00:06E4 loc_FE6E4:				  ; CODE XREF: DISK_BOOT+E6j
FE00:06E4		  mov	  DISK_IOPB.DISK_SECTOR_COUNT, 15
FE00:06E9		  jmp	  short	BOOT_TYPE_PARAMS_SET
FE00:06EB ; ───────────────────────────────────────────────────────────────────────────
FE00:06EB
FE00:06EB BOOT_TYPE_2_loc_FE6EB:		  ; CODE XREF: DISK_BOOT+BBj
FE00:06EB					  ; DATA XREF: DISK_BOOT+188o
FE00:06EB		  mov	  [bp+SRC], offset DISK_DATA_BUF
FE00:06F0		  mov	  di, 512
FE00:06F3		  push	  di
FE00:06F4		  lea	  di, [bp+DEST]
FE00:06F7		  push	  di
FE00:06F8		  lea	  di, [bp+SRC]
FE00:06FB		  push	  di
FE00:06FC		  call	  MEMCPY
FE00:06FF		  add	  sp, 6
FE00:0702		  mov	  di, [bp+DEST]
FE00:0705		  add	  di, 512
FE00:0709		  mov	  DISK_IOPB.DISK_DMA_OFFSET, di
FE00:070D		  mov	  DISK_IOPB.DISK_SECTOR_COUNT, 2
FE00:0712		  jmp	  short	BOOT_TYPE_PARAMS_SET
FE00:0712 ; ───────────────────────────────────────────────────────────────────────────
FE00:0714 off_FE714	  dw offset BOOT_TYPE_0_loc_FE650 ; DATA XREF: DISK_BOOT+BBr
FE00:0716		  dw offset BOOT_TYPE_1_loc_FE69F
FE00:0718		  dw offset BOOT_TYPE_2_loc_FE6EB
FE00:071A ; ───────────────────────────────────────────────────────────────────────────
FE00:071A
FE00:071A BOOT_TYPE_PARAMS_SET:			  ; CODE XREF: DISK_BOOT+10Cj
FE00:071A					  ; DISK_BOOT+159j ...
FE00:071A		  call	  DISK_READ
FE00:071D		  cmp	  DISK_IOPB.DISK_OP_STATUS, 0
FE00:0722		  jz	  short	BOOT_GOOD_
FE00:0724		  jmp	  BOOT_FAILED
FE00:0727 ; ───────────────────────────────────────────────────────────────────────────
FE00:0727
FE00:0727 BOOT_GOOD_:				  ; CODE XREF: DISK_BOOT+192j
FE00:0727		  call	  PRINT_CRLF
FE00:072A		  call	  sub_FEBD6
FE00:072D		  call	  near ptr RESTORE_REGS_AND_IRET
FE00:0730
FE00:0730 loc_FE730:				  ; CODE XREF: DISK_BOOT+78j
FE00:0730		  jmp	  TAIL_loc_FFBE4
FE00:0730 DISK_BOOT	  endp
FE00:0730
FE00:0730 ; ───────────────────────────────────────────────────────────────────────────
FE00:0733		  db	0
FE00:0734
FE00:0734 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0734
FE00:0734 ; Attributes:	bp-based frame
FE00:0734
FE00:0734 BOOT_FAILED_ERR proc near		  ; CODE XREF: DISK_BOOT:BOOT_FAILEDp
FE00:0734		  push	  bp
FE00:0735		  mov	  bp, sp
FE00:0737		  push	  di
FE00:0738		  push	  si
FE00:0739		  mov	  di, offset STR_BOOT_FAILED ; "\nBoot Failed, Status="
FE00:073C		  push	  di
FE00:073D		  call	  PUTS
FE00:0740		  add	  sp, 2
FE00:0743		  mov	  al, DISK_IOPB.DISK_OP_STATUS
FE00:0746		  cbw
FE00:0747		  push	  ax
FE00:0748		  call	  PRINTHEX8
FE00:074B		  add	  sp, 2
FE00:074E		  jmp	  TAIL_loc_FFBE4
FE00:074E BOOT_FAILED_ERR endp
FE00:074E
FE00:074E ; ───────────────────────────────────────────────────────────────────────────
FE00:0751		  db	0
FE00:0752
FE00:0752 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0752
FE00:0752 ; Attributes:	bp-based frame
FE00:0752
FE00:0752 M_DISK_IO	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_K_DISK_IOp
FE00:0752		  push	  bp
FE00:0753		  mov	  bp, sp
FE00:0755		  push	  di
FE00:0756		  push	  si
FE00:0757		  mov	  di, 1
FE00:075A		  push	  di
FE00:075B		  call	  sub_FF14A
FE00:075E		  add	  sp, 2
FE00:0761		  call	  GETCHAR_ECHO
FE00:0764		  mov	  CHAR_BUF_byte_EBC, al
FE00:0767		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:076C		  jnz	  short	loc_FE774
FE00:076E		  call	  ERR_BEEP
FE00:0771
FE00:0771 loc_FE771:				  ; CODE XREF: M_DISK_IO+27j
FE00:0771					  ; M_DISK_IO+2Cj
FE00:0771		  jmp	  TAIL_loc_FFBE4
FE00:0774 ; ───────────────────────────────────────────────────────────────────────────
FE00:0774
FE00:0774 loc_FE774:				  ; CODE XREF: M_DISK_IO+1Aj
FE00:0774		  call	  PARSE_ADDR_sub_FE96E
FE00:0777		  test	  ax, ax
FE00:0779		  jz	  short	loc_FE771
FE00:077B		  call	  DISK_IO
FE00:077E		  jmp	  short	loc_FE771
FE00:077E M_DISK_IO	  endp
FE00:077E
FE00:0780
FE00:0780 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0780
FE00:0780 ; Attributes:	bp-based frame
FE00:0780
FE00:0780 DISK_IO	  proc near		  ; CODE XREF: SYSCALL_8_DISK_IO+Ap
FE00:0780					  ; M_DISK_IO+29p
FE00:0780
FE00:0780 COUNTER	  = word ptr -6
FE00:0780
FE00:0780		  push	  bp
FE00:0781		  mov	  bp, sp
FE00:0783		  push	  di
FE00:0784		  push	  si
FE00:0785		  sub	  sp, 2
FE00:0788		  mov	  [bp+COUNTER],	0
FE00:078D
FE00:078D COPY_IOPB_BYTE:			  ; CODE XREF: DISK_IO+23j
FE00:078D		  push	  [bp+COUNTER]
FE00:0790		  call	  MEM_READ8
FE00:0793		  pop	  bx
FE00:0794		  mov	  byte ptr DISK_IOPB.MON_RSVD_1[bx], al
FE00:0798		  inc	  ADDR_OFFSET
FE00:079C		  inc	  [bp+COUNTER]
FE00:079F		  cmp	  [bp+COUNTER],	20 ; sizeof(IOPB)
FE00:07A3		  jb	  short	COPY_IOPB_BYTE
FE00:07A5		  sub	  ADDR_OFFSET, 20
FE00:07AA		  call	  DISK_READ
FE00:07AD		  add	  ADDR_OFFSET, 11
FE00:07B2		  mov	  al, DISK_IOPB.DISK_OP_STATUS
FE00:07B5		  cbw
FE00:07B6		  push	  ax
FE00:07B7		  call	  MEM_WRITE8
FE00:07BA		  add	  sp, 2
FE00:07BD		  jmp	  TAIL_loc_FFBE4
FE00:07BD DISK_IO	  endp
FE00:07BD
FE00:07C0
FE00:07C0 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:07C0
FE00:07C0 ; Attributes:	bp-based frame
FE00:07C0
FE00:07C0 DISK_READ	  proc near		  ; CODE XREF: DISK_BOOT+6Bp
FE00:07C0					  ; DISK_BOOT:BOOT_TYPE_PARAMS_SETp ...
FE00:07C0		  push	  bp
FE00:07C1		  mov	  bp, sp
FE00:07C3		  push	  di
FE00:07C4		  push	  si
FE00:07C5		  cmp	  DISK_IOPB.DISK_DRIVE_NUM, 3
FE00:07CA		  jle	  short	DO_FLOPPY
FE00:07CC		  call	  HDD_READ
FE00:07CF
FE00:07CF ALL_DONE:				  ; CODE XREF: DISK_READ+15j
FE00:07CF		  jmp	  TAIL_loc_FFBE4
FE00:07D2 ; ───────────────────────────────────────────────────────────────────────────
FE00:07D2
FE00:07D2 DO_FLOPPY:				  ; CODE XREF: DISK_READ+Aj
FE00:07D2		  call	  FDC_READ
FE00:07D5		  jmp	  short	ALL_DONE
FE00:07D5 DISK_READ	  endp
FE00:07D5
FE00:07D5 ; ───────────────────────────────────────────────────────────────────────────
FE00:07D7		  db	0
FE00:07D8
FE00:07D8 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:07D8
FE00:07D8 ; Attributes:	bp-based frame
FE00:07D8
FE00:07D8 ERR_BEEP	  proc near		  ; CODE XREF: M_DISK_IO+1Cp
FE00:07D8					  ; READ_MEM_ADDR_sub_FE9D8:loc_FEA8Cp	...
FE00:07D8		  push	  bp
FE00:07D9		  mov	  bp, sp
FE00:07DB		  push	  di
FE00:07DC		  push	  si
FE00:07DD		  mov	  di, offset STR_ERR_BEEP ; "*\a "
FE00:07E0		  push	  di
FE00:07E1		  mov	  di, 3
FE00:07E4		  push	  di
FE00:07E5		  sub	  di, di
FE00:07E7		  push	  di
FE00:07E8		  call	  PRINT_BUF
FE00:07EB		  add	  sp, 6
FE00:07EE		  jmp	  TAIL_loc_FFBE4
FE00:07EE ERR_BEEP	  endp
FE00:07EE
FE00:07EE ; ───────────────────────────────────────────────────────────────────────────
FE00:07F1		  db	0
FE00:07F2
FE00:07F2 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:07F2
FE00:07F2 ; Attributes:	bp-based frame
FE00:07F2
FE00:07F2 FDC_SET_FLOPPY_PARAMS	proc near	  ; CODE XREF: FINISH_POST+B2p
FE00:07F2					  ; DISK_BOOT+123p ...
FE00:07F2
FE00:07F2 arg_0		  = byte ptr  4
FE00:07F2 SECTOR_SIZE	  = byte ptr  6
FE00:07F2
FE00:07F2		  push	  bp
FE00:07F3		  mov	  bp, sp
FE00:07F5		  push	  di
FE00:07F6		  push	  si
FE00:07F7		  cmp	  [bp+SECTOR_SIZE], 1
FE00:07FB		  jnz	  short	SECTOR_512
FE00:07FD		  mov	  di, 256
FE00:0800		  jmp	  short	SECTOR_256
FE00:0802 ; ───────────────────────────────────────────────────────────────────────────
FE00:0802
FE00:0802 SECTOR_512:				  ; CODE XREF: FDC_SET_FLOPPY_PARAMS+9j
FE00:0802		  mov	  di, 512
FE00:0805
FE00:0805 SECTOR_256:				  ; CODE XREF: FDC_SET_FLOPPY_PARAMS+Ej
FE00:0805		  mov	  al, [bp+arg_0]
FE00:0808		  cbw
FE00:0809		  mov	  cx, 5
FE00:080C		  shl	  ax, cl
FE00:080E		  mov	  si, ax
FE00:0810		  mov	  word ptr (FDC_REGS_0.FDC_PARAMS_1+2)[si], di
FE00:0814		  mov	  FDC_REGS_0.FDC_QUEUE_ADDR_LO,	offset FDC_QUEUE
FE00:081A		  mov	  FDC_REGS_0.FDC_COMMAND, FDC_FLOPPY_PARAMS
FE00:081F		  inc	  NEW_CMD_REG
FE00:0823
FE00:0823 WAIT_FDC_BUSY:			  ; CODE XREF: FDC_SET_FLOPPY_PARAMS+3Dj
FE00:0823		  mov	  dl, FDC_REGS_0.FDC_COMMAND
FE00:0827		  and	  dx, FDC_BUSY
FE00:082B		  cmp	  dx, FDC_BUSY
FE00:082F		  jz	  short	WAIT_FDC_BUSY
FE00:0831		  jmp	  TAIL_loc_FFBE4
FE00:0831 FDC_SET_FLOPPY_PARAMS	endp
FE00:0831
FE00:0834
FE00:0834 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0834
FE00:0834 ; Attributes:	bp-based frame
FE00:0834
FE00:0834 FDC_READ	  proc near		  ; CODE XREF: DISK_BOOT+EDp
FE00:0834					  ; DISK_READ:DO_FLOPPYp
FE00:0834
FE00:0834 DMA_SEGMENT	  = word ptr -16h
FE00:0834 DMA_OFFSET	  = word ptr -14h
FE00:0834 SECTORS_READ	  = word ptr -12h
FE00:0834 DMA_ADDRESS	  = word ptr -10h
FE00:0834 COMMAND	  = byte ptr -0Eh
FE00:0834 STATUS	  = byte ptr -0Dh
FE00:0834 DRIVE_NUM	  = byte ptr -0Ch
FE00:0834 TRACK		  = byte ptr -0Bh
FE00:0834 HEAD		  = byte ptr -0Ah
FE00:0834 SECTOR	  = byte ptr -9
FE00:0834 DATA_BUF_LO	  = byte ptr -8
FE00:0834 DATA_BUF_MID	  = byte ptr -7
FE00:0834 DATA_BUF_HI	  = byte ptr -6
FE00:0834
FE00:0834		  push	  bp
FE00:0835		  mov	  bp, sp
FE00:0837		  push	  di
FE00:0838		  push	  si
FE00:0839		  sub	  sp, 12h
FE00:083C		  mov	  dl, DISK_IOPB.DISK_OPCODE
FE00:0840		  and	  dx, 0F0h
FE00:0844		  mov	  di, dx
FE00:0846		  mov	  dl, DISK_IOPB.DISK_RETRIES
FE00:084A		  and	  dx, 0Fh
FE00:084E		  add	  di, dx
FE00:0850		  mov	  dx, di
FE00:0852		  mov	  [bp+COMMAND],	dl
FE00:0855		  mov	  [bp+STATUS], 0
FE00:0859		  mov	  dl, DISK_IOPB.DISK_DRIVE_NUM
FE00:085D		  mov	  [bp+DRIVE_NUM], dl
FE00:0860		  mov	  dx, DISK_IOPB.DISK_TRACK
FE00:0864		  mov	  [bp+TRACK], dl
FE00:0867		  mov	  dl, DISK_IOPB.DISK_HEAD
FE00:086B		  mov	  [bp+HEAD], dl
FE00:086E		  mov	  dl, DISK_IOPB.DISK_SECTOR
FE00:0872		  mov	  [bp+SECTOR], dl
FE00:0875		  mov	  al, [bp+DRIVE_NUM]
FE00:0878		  cbw
FE00:0879		  mov	  cx, 5
FE00:087C		  shl	  ax, cl
FE00:087E		  mov	  bx, ax
FE00:0880		  mov	  ax, word ptr (FDC_REGS_0.FDC_PARAMS_1+2)[bx]
FE00:0884		  cmp	  ax, DISK_IOPB.DISK_SECTOR_LEN
FE00:0888		  jz	  short	loc_FE8AB
FE00:088A		  cmp	  DISK_IOPB.DISK_SECTOR_LEN, 256
FE00:0890		  jz	  short	SECTOR_256
FE00:0892		  sub	  di, di
FE00:0894		  push	  di
FE00:0895		  mov	  al, [bp+DRIVE_NUM]
FE00:0898		  cbw
FE00:0899		  push	  ax
FE00:089A		  jmp	  short	loc_FE8A5
FE00:089C ; ───────────────────────────────────────────────────────────────────────────
FE00:089C
FE00:089C SECTOR_256:				  ; CODE XREF: FDC_READ+5Cj
FE00:089C		  mov	  di, 1
FE00:089F		  push	  di
FE00:08A0		  mov	  al, [bp+DRIVE_NUM]
FE00:08A3		  cbw
FE00:08A4		  push	  ax
FE00:08A5
FE00:08A5 loc_FE8A5:				  ; CODE XREF: FDC_READ+66j
FE00:08A5		  call	  FDC_SET_FLOPPY_PARAMS
FE00:08A8		  add	  sp, 4
FE00:08AB
FE00:08AB loc_FE8AB:				  ; CODE XREF: FDC_READ+54j
FE00:08AB		  mov	  di, DISK_IOPB.DISK_DMA_OFFSET
FE00:08AF		  mov	  [bp+DMA_OFFSET], di
FE00:08B2		  mov	  di, DISK_IOPB.DISK_DMA_SEGMENT
FE00:08B6		  mov	  [bp+DMA_SEGMENT], di
FE00:08B9		  mov	  [bp+SECTORS_READ], 0
FE00:08BE		  jmp	  loc_FE943
FE00:08C1 ; ───────────────────────────────────────────────────────────────────────────
FE00:08C1
FE00:08C1 READ_SECTORS:				  ; CODE XREF: FDC_READ+118j
FE00:08C1		  mov	  dx, [bp+DMA_SEGMENT]
FE00:08C4		  mov	  [bp+DMA_ADDRESS], dx
FE00:08C7		  mov	  cx, 0Ch
FE00:08CA		  shr	  dx, cl
FE00:08CC		  mov	  [bp+DATA_BUF_HI], dl
FE00:08CF		  mov	  dx, [bp+DMA_ADDRESS]
FE00:08D2		  mov	  cx, 4
FE00:08D5		  shl	  dx, cl
FE00:08D7		  add	  dx, [bp+DMA_OFFSET]
FE00:08DA		  mov	  [bp+DMA_ADDRESS], dx
FE00:08DD		  sub	  dh, dh
FE00:08DF		  mov	  [bp+DATA_BUF_LO], dl
FE00:08E2		  mov	  dx, [bp+DMA_ADDRESS]
FE00:08E5		  and	  dx, 0FF00h
FE00:08E9		  mov	  cx, 8
FE00:08EC		  shr	  dx, cl
FE00:08EE		  mov	  [bp+DATA_BUF_MID], dl
FE00:08F1		  lea	  di, [bp+COMMAND]
FE00:08F4		  push	  di
FE00:08F5		  call	  FDC_ENQUEUE_CMD
FE00:08F8		  add	  sp, 2
FE00:08FB		  mov	  FDC_REGS_0.FDC_QUEUE_SIZE, 1
FE00:0900		  mov	  FDC_REGS_0.FDC_QUEUE_PTR, 0
FE00:0905		  mov	  FDC_REGS_0.FDC_COMMAND, FDC_RUN_IO ; Submit commands
FE00:090A		  inc	  NEW_CMD_REG
FE00:090E
FE00:090E WAIT_FDC_NOT_BUSY:			  ; CODE XREF: FDC_READ+E6j
FE00:090E		  mov	  dl, FDC_REGS_0.FDC_COMMAND
FE00:0912		  and	  dx, FDC_BUSY
FE00:0916		  cmp	  dx, FDC_BUSY
FE00:091A		  jz	  short	WAIT_FDC_NOT_BUSY
FE00:091C
FE00:091C WAIT_FOR_FDC_READY:			  ; CODE XREF: FDC_READ+F0j
FE00:091C		  mov	  dl, FDC_REGS_0.FDC_STATUS
FE00:0920		  and	  dx, 0Fh
FE00:0924		  jnz	  short	WAIT_FOR_FDC_READY
FE00:0926
FE00:0926 WAIT_FOR_QUEUE_DRAIN:			  ; CODE XREF: FDC_READ+FAj
FE00:0926		  mov	  dl, FDC_REGS_0.FDC_QUEUE_SIZE
FE00:092A		  cmp	  FDC_REGS_0.FDC_QUEUE_PTR, dl
FE00:092E		  jnz	  short	WAIT_FOR_QUEUE_DRAIN
FE00:0930		  cmp	  [bp+STATUS], 0
FE00:0934		  jnz	  short	FDC_READ_FINISHED ; Error?
FE00:0936		  mov	  di, DISK_IOPB.DISK_SECTOR_LEN
FE00:093A		  add	  [bp+DMA_OFFSET], di
FE00:093D		  inc	  [bp+SECTOR]
FE00:0940		  inc	  [bp+SECTORS_READ]
FE00:0943
FE00:0943 loc_FE943:				  ; CODE XREF: FDC_READ+8Aj
FE00:0943		  mov	  al, DISK_IOPB.DISK_SECTOR_COUNT
FE00:0946		  cbw
FE00:0947		  cmp	  ax, [bp+SECTORS_READ]
FE00:094A		  jbe	  short	FDC_READ_FINISHED ; All	done?
FE00:094C		  jmp	  READ_SECTORS
FE00:094F ; ───────────────────────────────────────────────────────────────────────────
FE00:094F
FE00:094F FDC_READ_FINISHED:			  ; CODE XREF: FDC_READ+100j
FE00:094F					  ; FDC_READ+116j
FE00:094F		  mov	  dl, [bp+STATUS]
FE00:0952		  mov	  DISK_IOPB.DISK_OP_STATUS, dl
FE00:0956		  jmp	  TAIL_loc_FFBE4
FE00:0956 FDC_READ	  endp
FE00:0956
FE00:0956 ; ───────────────────────────────────────────────────────────────────────────
FE00:0959		  db	0
FE00:095A
FE00:095A ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:095A
FE00:095A ; Attributes:	bp-based frame
FE00:095A
FE00:095A FDC_ENQUEUE_CMD proc near		  ; CODE XREF: FDC_READ+C1p
FE00:095A
FE00:095A FDC_CMD	  = word ptr  4
FE00:095A
FE00:095A		  push	  bp
FE00:095B		  mov	  bp, sp
FE00:095D		  push	  si
FE00:095E		  push	  di
FE00:095F		  mov	  si, [bp+FDC_CMD]
FE00:0962		  lea	  di, FDC_QUEUE
FE00:0966		  call	  FDC_sub_FF6A2	  ; DI=FDC_QUEUE
FE00:0969		  pop	  di
FE00:096A		  pop	  si
FE00:096B		  pop	  bp
FE00:096C		  retn
FE00:096C FDC_ENQUEUE_CMD endp
FE00:096C
FE00:096C ; ───────────────────────────────────────────────────────────────────────────
FE00:096D		  db	0
FE00:096E
FE00:096E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:096E
FE00:096E ; Attributes:	bp-based frame
FE00:096E
FE00:096E PARSE_ADDR_sub_FE96E proc near	  ; CODE XREF: M_DISK_IO:loc_FE774p
FE00:096E					  ; M_GOTO:loc_FEB6Ep ...
FE00:096E
FE00:096E var_6		  = byte ptr -6
FE00:096E
FE00:096E		  push	  bp
FE00:096F		  mov	  bp, sp
FE00:0971		  push	  di
FE00:0972		  push	  si
FE00:0973		  sub	  sp, 2
FE00:0976		  mov	  [bp+var_6], 1
FE00:097A		  mov	  ADDR_SEGMENT,	0
FE00:0980		  mov	  di, offset ADDR_OFFSET
FE00:0983		  push	  di
FE00:0984		  call	  READ_MEM_ADDR_sub_FE9D8
FE00:0987		  add	  sp, 2
FE00:098A		  test	  ax, ax
FE00:098C		  jz	  short	loc_FE9B1
FE00:098E		  cmp	  CHAR_BUF_byte_EBC, ':'
FE00:0993		  jnz	  short	loc_FE9B5
FE00:0995		  mov	  di, ADDR_OFFSET
FE00:0999		  mov	  ADDR_SEGMENT,	di
FE00:099D		  call	  GETCHAR_ECHO
FE00:09A0		  mov	  CHAR_BUF_byte_EBC, al
FE00:09A3		  mov	  di, offset ADDR_OFFSET
FE00:09A6		  push	  di
FE00:09A7		  call	  READ_MEM_ADDR_sub_FE9D8
FE00:09AA		  add	  sp, 2
FE00:09AD		  test	  ax, ax
FE00:09AF		  jnz	  short	loc_FE9B5
FE00:09B1
FE00:09B1 loc_FE9B1:				  ; CODE XREF: PARSE_ADDR_sub_FE96E+1Ej
FE00:09B1		  mov	  [bp+var_6], 0
FE00:09B5
FE00:09B5 loc_FE9B5:				  ; CODE XREF: PARSE_ADDR_sub_FE96E+25j
FE00:09B5					  ; PARSE_ADDR_sub_FE96E+41j
FE00:09B5		  mov	  al, [bp+var_6]
FE00:09B8		  cbw
FE00:09B9		  jmp	  TAIL_loc_FFBE4
FE00:09B9 PARSE_ADDR_sub_FE96E endp
FE00:09B9
FE00:09BC
FE00:09BC ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:09BC
FE00:09BC ; Attributes:	bp-based frame
FE00:09BC
FE00:09BC GETCHAR_ECHO	  proc near		  ; CODE XREF: M_DISK_IO+Fp
FE00:09BC					  ; PARSE_ADDR_sub_FE96E+2Fp ...
FE00:09BC		  push	  bp
FE00:09BD		  mov	  bp, sp
FE00:09BF		  push	  di
FE00:09C0		  push	  si
FE00:09C1		  call	  GETCHAR
FE00:09C4		  mov	  GETCHAR_ECHO_BUF, ax
FE00:09C7		  mov	  di, offset GETCHAR_ECHO_BUF
FE00:09CA		  push	  di
FE00:09CB		  call	  PUTCHAR
FE00:09CE		  add	  sp, 2
FE00:09D1		  mov	  ax, GETCHAR_ECHO_BUF
FE00:09D4		  jmp	  TAIL_loc_FFBE4
FE00:09D4 GETCHAR_ECHO	  endp
FE00:09D4
FE00:09D4 ; ───────────────────────────────────────────────────────────────────────────
FE00:09D7		  db	0
FE00:09D8
FE00:09D8 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:09D8
FE00:09D8 ; Attributes:	bp-based frame
FE00:09D8
FE00:09D8 READ_MEM_ADDR_sub_FE9D8 proc near	  ; CODE XREF: PARSE_ADDR_sub_FE96E+16p
FE00:09D8					  ; PARSE_ADDR_sub_FE96E+39p ...
FE00:09D8
FE00:09D8 var_A		  = word ptr -0Ah
FE00:09D8 var_8		  = byte ptr -8
FE00:09D8 var_6		  = word ptr -6
FE00:09D8 arg_0		  = word ptr  4
FE00:09D8
FE00:09D8		  push	  bp
FE00:09D9		  mov	  bp, sp
FE00:09DB		  push	  di
FE00:09DC		  push	  si
FE00:09DD		  sub	  sp, 6
FE00:09E0		  mov	  [bp+var_8], '+'
FE00:09E4		  mov	  [bp+var_A], 0
FE00:09E9		  mov	  di, [bp+arg_0]
FE00:09EC		  mov	  word ptr [di], 0
FE00:09F0		  jmp	  short	loc_FEA1A
FE00:09F2 ; ───────────────────────────────────────────────────────────────────────────
FE00:09F2
FE00:09F2 loc_FE9F2:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+53j
FE00:09F2		  mov	  di, [bp+var_A]
FE00:09F5		  mov	  cx, 4
FE00:09F8		  shl	  di, cl
FE00:09FA		  mov	  al, byte ptr [bp+var_6]
FE00:09FD		  cbw
FE00:09FE		  add	  di, ax
FE00:0A00		  mov	  [bp+var_A], di
FE00:0A03		  call	  GETCHAR
FE00:0A06		  mov	  CHAR_BUF_byte_EBC, al
FE00:0A09		  cmp	  CHAR_BUF_byte_EBC, 0Dh ; END_OF_LINE
FE00:0A0E		  jz	  short	GOT_CRLF
FE00:0A10		  mov	  di, offset CHAR_BUF_byte_EBC
FE00:0A13		  push	  di
FE00:0A14		  call	  PUTCHAR
FE00:0A17		  add	  sp, 2
FE00:0A1A
FE00:0A1A loc_FEA1A:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+18j
FE00:0A1A					  ; READ_MEM_ADDR_sub_FE9D8+B1j
FE00:0A1A		  lea	  di, [bp+var_6]
FE00:0A1D		  push	  di
FE00:0A1E		  mov	  al, CHAR_BUF_byte_EBC
FE00:0A21		  cbw
FE00:0A22		  push	  ax
FE00:0A23		  call	  PARSE_HEX_sub_FF6BA
FE00:0A26		  add	  sp, 4
FE00:0A29		  test	  ax, ax
FE00:0A2B		  jnz	  short	loc_FE9F2
FE00:0A2D
FE00:0A2D GOT_CRLF:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+36j
FE00:0A2D		  cmp	  [bp+var_8], '+'
FE00:0A31		  jnz	  short	loc_FEA3D
FE00:0A33		  mov	  bx, [bp+arg_0]
FE00:0A36		  mov	  di, [bp+var_A]
FE00:0A39		  add	  [bx],	di
FE00:0A3B		  jmp	  short	loc_FEA45
FE00:0A3D ; ───────────────────────────────────────────────────────────────────────────
FE00:0A3D
FE00:0A3D loc_FEA3D:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+59j
FE00:0A3D		  mov	  bx, [bp+arg_0]
FE00:0A40		  mov	  di, [bp+var_A]
FE00:0A43		  sub	  [bx],	di
FE00:0A45
FE00:0A45 loc_FEA45:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+63j
FE00:0A45		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:0A4A		  jz	  short	loc_FEA61
FE00:0A4C		  cmp	  CHAR_BUF_byte_EBC, ':'
FE00:0A51		  jz	  short	loc_FEA61
FE00:0A53		  cmp	  CHAR_BUF_byte_EBC, ','
FE00:0A58		  jz	  short	loc_FEA61
FE00:0A5A		  cmp	  CHAR_BUF_byte_EBC, ' '
FE00:0A5F		  jnz	  short	loc_FEA69
FE00:0A61
FE00:0A61 loc_FEA61:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+72j
FE00:0A61					  ; READ_MEM_ADDR_sub_FE9D8+79j ...
FE00:0A61		  mov	  di, 1
FE00:0A64
FE00:0A64 loc_FEA64:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+B9j
FE00:0A64		  mov	  ax, di
FE00:0A66		  jmp	  TAIL_loc_FFBE4
FE00:0A69 ; ───────────────────────────────────────────────────────────────────────────
FE00:0A69
FE00:0A69 loc_FEA69:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+87j
FE00:0A69		  cmp	  CHAR_BUF_byte_EBC, '+'
FE00:0A6E		  jz	  short	loc_FEA77
FE00:0A70		  cmp	  CHAR_BUF_byte_EBC, '-'
FE00:0A75		  jnz	  short	loc_FEA8C
FE00:0A77
FE00:0A77 loc_FEA77:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+96j
FE00:0A77		  mov	  dl, CHAR_BUF_byte_EBC
FE00:0A7B		  mov	  [bp+var_8], dl
FE00:0A7E		  mov	  [bp+var_A], 0
FE00:0A83		  call	  GETCHAR_ECHO
FE00:0A86		  mov	  CHAR_BUF_byte_EBC, al
FE00:0A89		  jmp	  loc_FEA1A
FE00:0A8C ; ───────────────────────────────────────────────────────────────────────────
FE00:0A8C
FE00:0A8C loc_FEA8C:				  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+9Dj
FE00:0A8C		  call	  ERR_BEEP
FE00:0A8F		  sub	  di, di
FE00:0A91		  jmp	  short	loc_FEA64
FE00:0A91 READ_MEM_ADDR_sub_FE9D8 endp
FE00:0A91
FE00:0A91 ; ───────────────────────────────────────────────────────────────────────────
FE00:0A93		  db	0
FE00:0A94
FE00:0A94 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0A94
FE00:0A94 ; Attributes:	bp-based frame
FE00:0A94
FE00:0A94 sub_FEA94	  proc near		  ; CODE XREF: M_ALTER_MEMORY+85p
FE00:0A94					  ; sub_FF906+Ep
FE00:0A94
FE00:0A94 var_6		  = word ptr -6
FE00:0A94 arg_0		  = word ptr  4
FE00:0A94
FE00:0A94		  push	  bp
FE00:0A95		  mov	  bp, sp
FE00:0A97		  push	  di
FE00:0A98		  push	  si
FE00:0A99		  sub	  sp, 2
FE00:0A9C		  mov	  bx, [bp+arg_0]
FE00:0A9F		  mov	  byte ptr [bx], 0
FE00:0AA2		  jmp	  short	loc_FEAD0
FE00:0AA4 ; ───────────────────────────────────────────────────────────────────────────
FE00:0AA4
FE00:0AA4 loc_FEAA4:				  ; CODE XREF: sub_FEA94+4Dj
FE00:0AA4		  mov	  bx, [bp+arg_0]
FE00:0AA7		  mov	  al, [bx]
FE00:0AA9		  cbw
FE00:0AAA		  mov	  cx, 4
FE00:0AAD		  shl	  ax, cl
FE00:0AAF		  mov	  dx, ax
FE00:0AB1		  mov	  al, byte ptr [bp+var_6]
FE00:0AB4		  cbw
FE00:0AB5		  add	  dx, ax
FE00:0AB7		  mov	  [bx],	dl
FE00:0AB9		  call	  GETCHAR
FE00:0ABC		  mov	  CHAR_BUF_byte_EBC, al
FE00:0ABF		  cmp	  CHAR_BUF_byte_EBC, 0Dh ; CRLF
FE00:0AC4		  jz	  short	GOT_END_OF_LINE
FE00:0AC6		  mov	  di, offset CHAR_BUF_byte_EBC
FE00:0AC9		  push	  di
FE00:0ACA		  call	  PUTCHAR
FE00:0ACD		  add	  sp, 2
FE00:0AD0
FE00:0AD0 loc_FEAD0:				  ; CODE XREF: sub_FEA94+Ej
FE00:0AD0		  lea	  di, [bp+var_6]
FE00:0AD3		  push	  di
FE00:0AD4		  mov	  al, CHAR_BUF_byte_EBC
FE00:0AD7		  cbw
FE00:0AD8		  push	  ax
FE00:0AD9		  call	  PARSE_HEX_sub_FF6BA
FE00:0ADC		  add	  sp, 4
FE00:0ADF		  test	  ax, ax
FE00:0AE1		  jnz	  short	loc_FEAA4
FE00:0AE3
FE00:0AE3 GOT_END_OF_LINE:			  ; CODE XREF: sub_FEA94+30j
FE00:0AE3		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:0AE8		  jz	  short	loc_FEB02
FE00:0AEA		  cmp	  CHAR_BUF_byte_EBC, ' '
FE00:0AEF		  jz	  short	loc_FEB02
FE00:0AF1		  cmp	  CHAR_BUF_byte_EBC, ','
FE00:0AF6		  jz	  short	loc_FEB02
FE00:0AF8		  call	  ERR_BEEP
FE00:0AFB		  sub	  di, di
FE00:0AFD
FE00:0AFD loc_FEAFD:				  ; CODE XREF: sub_FEA94+71j
FE00:0AFD		  mov	  ax, di
FE00:0AFF		  jmp	  TAIL_loc_FFBE4
FE00:0B02 ; ───────────────────────────────────────────────────────────────────────────
FE00:0B02
FE00:0B02 loc_FEB02:				  ; CODE XREF: sub_FEA94+54j
FE00:0B02					  ; sub_FEA94+5Bj ...
FE00:0B02		  mov	  di, 1
FE00:0B05		  jmp	  short	loc_FEAFD
FE00:0B05 sub_FEA94	  endp
FE00:0B05
FE00:0B05 ; ───────────────────────────────────────────────────────────────────────────
FE00:0B07		  db	0
FE00:0B08
FE00:0B08 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0B08
FE00:0B08
FE00:0B08 RESTORE_REGS_AND_IRET	proc far	  ; CODE XREF: DISK_BOOT+19Dp
FE00:0B08					  ; M_GOTO+1Fp	...
FE00:0B08		  mov	  ax, offset SAVE_REGS_AND_BREAK
FE00:0B0B		  mov	  bx, 4
FE00:0B0E		  mov	  [bx],	ax
FE00:0B10		  mov	  [bx+CPU_REGS.SAVE_BX], cs
FE00:0B13		  mov	  bx, 0Ch
FE00:0B16		  mov	  [bx],	ax
FE00:0B18		  mov	  [bx+CPU_REGS.SAVE_BX], cs
FE00:0B1B		  mov	  bx, offset SAVED_CPU_REGS
FE00:0B1E		  cli
FE00:0B1F		  mov	  di, [bx+CPU_REGS.SAVE_DI]
FE00:0B22		  mov	  si, [bx+CPU_REGS.SAVE_SI]
FE00:0B25		  mov	  dx, [bx+CPU_REGS.SAVE_DX]
FE00:0B28		  mov	  cx, [bx+CPU_REGS.SAVE_CX]
FE00:0B2B		  mov	  ax, [bx+CPU_REGS.SAVE_AX]
FE00:0B2E		  mov	  es, [bx+CPU_REGS.SAVE_ES]
FE00:0B31		  mov	  ss, [bx+CPU_REGS.SAVE_SS]
FE00:0B34		  mov	  sp, [bx+CPU_REGS.SAVE_SP]
FE00:0B37		  mov	  bp, [bx+CPU_REGS.SAVE_BP]
FE00:0B3A		  push	  [bx+CPU_REGS.SAVE_FLAGS]
FE00:0B3D		  push	  [bx+CPU_REGS.SAVE_CS]
FE00:0B40		  push	  [bx+CPU_REGS.SAVE_IP]
FE00:0B43		  push	  [bx+CPU_REGS.SAVE_DS]
FE00:0B46		  mov	  bx, [bx+CPU_REGS.SAVE_BX]
FE00:0B49		  pop	  ds
FE00:0B4A		  iret
FE00:0B4A RESTORE_REGS_AND_IRET	endp ; sp = -6
FE00:0B4A
FE00:0B4A ; ───────────────────────────────────────────────────────────────────────────
FE00:0B4B		  db	0
FE00:0B4C
FE00:0B4C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0B4C
FE00:0B4C ; Attributes:	bp-based frame
FE00:0B4C
FE00:0B4C M_GOTO	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_G_O_TOp
FE00:0B4C		  push	  bp
FE00:0B4D		  mov	  bp, sp
FE00:0B4F		  push	  di
FE00:0B50		  push	  si
FE00:0B51		  mov	  di, 1
FE00:0B54		  push	  di
FE00:0B55		  call	  sub_FF14A
FE00:0B58		  add	  sp, 2
FE00:0B5B		  call	  GETCHAR_ECHO
FE00:0B5E		  mov	  CHAR_BUF_byte_EBC, al
FE00:0B61		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:0B66		  jnz	  short	loc_FEB6E
FE00:0B68		  call	  sub_FEBD6
FE00:0B6B		  call	  near ptr RESTORE_REGS_AND_IRET
FE00:0B6E
FE00:0B6E loc_FEB6E:				  ; CODE XREF: M_GOTO+1Aj
FE00:0B6E		  call	  PARSE_ADDR_sub_FE96E
FE00:0B71		  test	  ax, ax
FE00:0B73		  jz	  short	loc_FEB8B
FE00:0B75		  mov	  di, ADDR_SEGMENT
FE00:0B79		  mov	  SAVED_CPU_REGS.SAVE_CS, di
FE00:0B7D		  mov	  di, ADDR_OFFSET
FE00:0B81		  mov	  SAVED_CPU_REGS.SAVE_IP, di
FE00:0B85		  call	  sub_FEBD6
FE00:0B88		  call	  near ptr RESTORE_REGS_AND_IRET
FE00:0B8B
FE00:0B8B loc_FEB8B:				  ; CODE XREF: M_GOTO+27j
FE00:0B8B		  jmp	  TAIL_loc_FFBE4
FE00:0B8B M_GOTO	  endp
FE00:0B8B
FE00:0B8E
FE00:0B8E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0B8E
FE00:0B8E ; Attributes:	bp-based frame
FE00:0B8E
FE00:0B8E M_SINGLE_STEP	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_S_INGLE_STEPp
FE00:0B8E		  push	  bp
FE00:0B8F		  mov	  bp, sp
FE00:0B91		  push	  di
FE00:0B92		  push	  si
FE00:0B93		  mov	  di, 1
FE00:0B96		  push	  di
FE00:0B97		  call	  sub_FF14A
FE00:0B9A		  add	  sp, 2
FE00:0B9D		  call	  GETCHAR_ECHO
FE00:0BA0		  mov	  CHAR_BUF_byte_EBC, al
FE00:0BA3		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:0BA8		  jnz	  short	loc_FEBB3
FE00:0BAA		  or	  SAVED_CPU_REGS.SAVE_FLAGS, 100h
FE00:0BB0		  call	  near ptr RESTORE_REGS_AND_IRET
FE00:0BB3
FE00:0BB3 loc_FEBB3:				  ; CODE XREF: M_SINGLE_STEP+1Aj
FE00:0BB3		  call	  PARSE_ADDR_sub_FE96E
FE00:0BB6		  test	  ax, ax
FE00:0BB8		  jz	  short	loc_FEBD3
FE00:0BBA		  mov	  di, ADDR_SEGMENT
FE00:0BBE		  mov	  SAVED_CPU_REGS.SAVE_CS, di
FE00:0BC2		  mov	  di, ADDR_OFFSET
FE00:0BC6		  mov	  SAVED_CPU_REGS.SAVE_IP, di
FE00:0BCA		  or	  SAVED_CPU_REGS.SAVE_FLAGS, 100h
FE00:0BD0		  call	  near ptr RESTORE_REGS_AND_IRET
FE00:0BD3
FE00:0BD3 loc_FEBD3:				  ; CODE XREF: M_SINGLE_STEP+2Aj
FE00:0BD3		  jmp	  TAIL_loc_FFBE4
FE00:0BD3 M_SINGLE_STEP	  endp
FE00:0BD3
FE00:0BD6
FE00:0BD6 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0BD6
FE00:0BD6 ; Attributes:	bp-based frame
FE00:0BD6
FE00:0BD6 sub_FEBD6	  proc near		  ; CODE XREF: DISK_BOOT+19Ap
FE00:0BD6					  ; M_GOTO+1Cp	...
FE00:0BD6
FE00:0BD6 COUNTER	  = word ptr -6
FE00:0BD6
FE00:0BD6		  push	  bp
FE00:0BD7		  mov	  bp, sp
FE00:0BD9		  push	  di
FE00:0BDA		  push	  si
FE00:0BDB		  sub	  sp, 2
FE00:0BDE		  mov	  [bp+COUNTER],	0
FE00:0BE3
FE00:0BE3 loc_FEBE3:				  ; CODE XREF: sub_FEBD6+5Dj
FE00:0BE3		  mov	  ax, [bp+COUNTER]
FE00:0BE6		  mov	  cx, 6
FE00:0BE9		  imul	  cx
FE00:0BEB		  mov	  bx, ax
FE00:0BED		  mov	  al, byte_8CA[bx]
FE00:0BF1		  test	  al, al
FE00:0BF3		  jz	  short	loc_FEC2C
FE00:0BF5		  mov	  ax, [bp+COUNTER]
FE00:0BF8		  mov	  cx, 6
FE00:0BFB		  imul	  cx
FE00:0BFD		  mov	  bx, ax
FE00:0BFF		  mov	  ax, word_8CC[bx]
FE00:0C03		  mov	  ADDR_SEGMENT,	ax
FE00:0C06		  mov	  ax, [bp+COUNTER]
FE00:0C09		  imul	  cx
FE00:0C0B		  mov	  bx, ax
FE00:0C0D		  mov	  ax, word_8CE[bx]
FE00:0C11		  mov	  ADDR_OFFSET, ax
FE00:0C14		  mov	  ax, [bp+COUNTER]
FE00:0C17		  imul	  cx
FE00:0C19		  push	  ax
FE00:0C1A		  call	  MEM_READ8
FE00:0C1D		  pop	  bx
FE00:0C1E		  mov	  byte_8CB[bx],	al
FE00:0C22		  mov	  di, 0CCh ; '╠'
FE00:0C25		  push	  di
FE00:0C26		  call	  MEM_WRITE8
FE00:0C29		  add	  sp, 2
FE00:0C2C
FE00:0C2C loc_FEC2C:				  ; CODE XREF: sub_FEBD6+1Dj
FE00:0C2C		  inc	  [bp+COUNTER]
FE00:0C2F		  cmp	  [bp+COUNTER],	8
FE00:0C33		  jb	  short	loc_FEBE3
FE00:0C35		  jmp	  TAIL_loc_FFBE4
FE00:0C35 sub_FEBD6	  endp
FE00:0C35
FE00:0C38
FE00:0C38 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0C38
FE00:0C38 ; Attributes:	bp-based frame
FE00:0C38
FE00:0C38 INT3_sub_FEC38  proc near		  ; CODE XREF: SAVE_REGS_AND_BREAK+5Bp
FE00:0C38
FE00:0C38 var_6		  = word ptr -6
FE00:0C38
FE00:0C38		  push	  bp
FE00:0C39		  mov	  bp, sp
FE00:0C3B		  push	  di
FE00:0C3C		  push	  si
FE00:0C3D		  sub	  sp, 2
FE00:0C40		  mov	  di, offset STR_BREAK ; "\nBreak ...."
FE00:0C43		  push	  di
FE00:0C44		  call	  PUTS
FE00:0C47		  add	  sp, 2
FE00:0C4A		  mov	  [bp+var_6], 0
FE00:0C4F
FE00:0C4F loc_FEC4F:				  ; CODE XREF: INT3_sub_FEC38+62j
FE00:0C4F		  mov	  ax, [bp+var_6]
FE00:0C52		  mov	  cx, 6
FE00:0C55		  imul	  cx
FE00:0C57		  mov	  bx, ax
FE00:0C59		  mov	  al, byte_8CA[bx]
FE00:0C5D		  test	  al, al
FE00:0C5F		  jz	  short	loc_FEC93
FE00:0C61		  mov	  ax, [bp+var_6]
FE00:0C64		  mov	  cx, 6
FE00:0C67		  imul	  cx
FE00:0C69		  mov	  bx, ax
FE00:0C6B		  mov	  ax, word_8CC[bx]
FE00:0C6F		  mov	  ADDR_SEGMENT,	ax
FE00:0C72		  mov	  ax, [bp+var_6]
FE00:0C75		  imul	  cx
FE00:0C77		  mov	  bx, ax
FE00:0C79		  mov	  ax, word_8CE[bx]
FE00:0C7D		  mov	  ADDR_OFFSET, ax
FE00:0C80		  mov	  ax, [bp+var_6]
FE00:0C83		  imul	  cx
FE00:0C85		  mov	  di, ax
FE00:0C87		  mov	  al, byte_8CB[di]
FE00:0C8B		  cbw
FE00:0C8C		  push	  ax
FE00:0C8D		  call	  MEM_WRITE8
FE00:0C90		  add	  sp, 2
FE00:0C93
FE00:0C93 loc_FEC93:				  ; CODE XREF: INT3_sub_FEC38+27j
FE00:0C93		  inc	  [bp+var_6]
FE00:0C96		  cmp	  [bp+var_6], 8
FE00:0C9A		  jb	  short	loc_FEC4F
FE00:0C9C		  or	  SAVED_CPU_REGS.SAVE_FLAGS, 100h
FE00:0CA2		  call	  near ptr RESTORE_REGS_AND_IRET
FE00:0CA5		  jmp	  TAIL_loc_FFBE4
FE00:0CA5 INT3_sub_FEC38  endp
FE00:0CA5
FE00:0CA8
FE00:0CA8 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0CA8
FE00:0CA8 ; Attributes:	bp-based frame
FE00:0CA8
FE00:0CA8 HDD_READ	  proc near		  ; CODE XREF: DISK_READ+Cp
FE00:0CA8
FE00:0CA8 HDD_RETRIES	  = byte ptr -0Ah
FE00:0CA8 HDD_SECTORS_READ= word ptr -8
FE00:0CA8 RETRIES_DONE	  = word ptr -6
FE00:0CA8
FE00:0CA8		  push	  bp
FE00:0CA9		  mov	  bp, sp
FE00:0CAB		  push	  di
FE00:0CAC		  push	  si
FE00:0CAD		  sub	  sp, 6
FE00:0CB0		  mov	  dl, DISK_IOPB.DISK_OPCODE
FE00:0CB4		  mov	  IOP_BLOCK.HDD_OPCODE,	dl
FE00:0CB8		  mov	  IOP_BLOCK.HDD_STATUS,	0FFh
FE00:0CBD		  mov	  di, DISK_IOPB.DISK_TRACK
FE00:0CC1		  mov	  IOP_BLOCK.HDD_CYLINDER, di
FE00:0CC5		  mov	  [bp+HDD_SECTORS_READ], 1
FE00:0CCA		  mov	  dx, [bp+HDD_SECTORS_READ]
FE00:0CCD		  mov	  al, DISK_IOPB.DISK_DRIVE_NUM
FE00:0CD0		  cbw
FE00:0CD1		  mov	  cx, ax
FE00:0CD3		  shl	  dx, cl
FE00:0CD5		  mov	  al, DISK_IOPB.DISK_HEAD
FE00:0CD8		  cbw
FE00:0CD9		  add	  dx, ax
FE00:0CDB		  mov	  IOP_BLOCK.HDD_DRIVE_AND_HEAD,	dl
FE00:0CDF		  mov	  dl, DISK_IOPB.DISK_SECTOR
FE00:0CE3		  mov	  IOP_BLOCK.HDD_SECTOR,	dl
FE00:0CE7		  mov	  di, DISK_IOPB.DISK_DMA_OFFSET
FE00:0CEB		  mov	  IOP_BLOCK.HDD_DMA_OFFSET, di
FE00:0CEF		  mov	  di, DISK_IOPB.DISK_DMA_SEGMENT
FE00:0CF3		  mov	  IOP_BLOCK.HDD_DMA_SEGMENT, di
FE00:0CF7		  mov	  di, DISK_IOPB.DISK_SECTOR_LEN
FE00:0CFB		  mov	  IOP_BLOCK.HDD_SECTOR_LEN, di
FE00:0CFF		  mov	  dl, DISK_IOPB.DISK_RETRIES
FE00:0D03		  mov	  [bp+HDD_RETRIES], dl
FE00:0D06		  cmp	  [bp+HDD_RETRIES], 0
FE00:0D0A		  jg	  short	RETRIES_NOW_NONZERO
FE00:0D0C		  mov	  [bp+HDD_RETRIES], 1
FE00:0D10
FE00:0D10 RETRIES_NOW_NONZERO:			  ; CODE XREF: HDD_READ+62j
FE00:0D10		  mov	  [bp+HDD_SECTORS_READ], 0
FE00:0D15		  jmp	  short	loc_FED48
FE00:0D17 ; ───────────────────────────────────────────────────────────────────────────
FE00:0D17
FE00:0D17 HDD_READ_SECTORS:			  ; CODE XREF: HDD_READ+A7j
FE00:0D17		  mov	  byte ptr IOP_BLOCK.RESVD_0, 1
FE00:0D1C		  mov	  [bp+RETRIES_DONE], 1
FE00:0D21		  jmp	  short	loc_FED30
FE00:0D23 ; ───────────────────────────────────────────────────────────────────────────
FE00:0D23
FE00:0D23 loc_FED23:				  ; CODE XREF: HDD_READ+8Fj
FE00:0D23		  call	  IOP8086_DO_IO
FE00:0D26		  cmp	  IOP_BLOCK.HDD_STATUS,	0
FE00:0D2B		  jz	  short	NO_LONGER_BUSY
FE00:0D2D		  inc	  [bp+RETRIES_DONE]
FE00:0D30
FE00:0D30 loc_FED30:				  ; CODE XREF: HDD_READ+79j
FE00:0D30		  mov	  al, [bp+HDD_RETRIES]
FE00:0D33		  cbw
FE00:0D34		  cmp	  ax, [bp+RETRIES_DONE]
FE00:0D37		  jnb	  short	loc_FED23
FE00:0D39
FE00:0D39 NO_LONGER_BUSY:			  ; CODE XREF: HDD_READ+83j
FE00:0D39		  mov	  di, DISK_IOPB.DISK_SECTOR_LEN
FE00:0D3D		  add	  IOP_BLOCK.HDD_DMA_OFFSET, di
FE00:0D41		  inc	  IOP_BLOCK.HDD_SECTOR
FE00:0D45		  inc	  [bp+HDD_SECTORS_READ]
FE00:0D48
FE00:0D48 loc_FED48:				  ; CODE XREF: HDD_READ+6Dj
FE00:0D48		  mov	  al, DISK_IOPB.DISK_SECTOR_COUNT
FE00:0D4B		  cbw
FE00:0D4C		  cmp	  ax, [bp+HDD_SECTORS_READ]
FE00:0D4F		  ja	  short	HDD_READ_SECTORS
FE00:0D51		  mov	  dl, IOP_BLOCK.HDD_STATUS
FE00:0D55		  mov	  DISK_IOPB.DISK_OP_STATUS, dl
FE00:0D59		  jmp	  TAIL_loc_FFBE4
FE00:0D59 HDD_READ	  endp
FE00:0D59
FE00:0D5C
FE00:0D5C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0D5C
FE00:0D5C ; Attributes:	bp-based frame
FE00:0D5C
FE00:0D5C AUTOBOOT_PROMPT proc near		  ; CODE XREF: SYSCALL_0_MONITOR+1Cp
FE00:0D5C					  ; SAVE_REGS_AND_BREAK+55p
FE00:0D5C
FE00:0D5C DO_AUTO_BOOT	  = byte ptr -8
FE00:0D5C var_6		  = word ptr -6
FE00:0D5C SKIP_SETUP	  = byte ptr  4
FE00:0D5C
FE00:0D5C		  push	  bp
FE00:0D5D		  mov	  bp, sp
FE00:0D5F		  push	  di
FE00:0D60		  push	  si
FE00:0D61		  sub	  sp, 4
FE00:0D64		  cmp	  word ptr [bp+SKIP_SETUP], 0
FE00:0D68		  jnz	  short	DO_SETUP
FE00:0D6A		  jmp	  MONITOR_PROMPT
FE00:0D6D ; ───────────────────────────────────────────────────────────────────────────
FE00:0D6D
FE00:0D6D DO_SETUP:				  ; CODE XREF: AUTOBOOT_PROMPT+Cj
FE00:0D6D		  mov	  di, offset STR_VERSION_BANNER	; "				\nMonitor V"...
FE00:0D70		  push	  di
FE00:0D71		  call	  PUTS
FE00:0D74		  add	  sp, 2
FE00:0D77		  mov	  di, offset STR_BOOT_INTERRUPT	; "\nPress any key to interrupt	boot\n"
FE00:0D7A		  push	  di
FE00:0D7B		  call	  PUTS
FE00:0D7E		  add	  sp, 2
FE00:0D81		  mov	  [bp+var_6], 1
FE00:0D86
FE00:0D86 CHECK_KEY_INPUT:			  ; CODE XREF: AUTOBOOT_PROMPT+61j
FE00:0D86		  mov	  di, 100
FE00:0D89		  push	  di
FE00:0D8A		  call	  DELAY
FE00:0D8D		  add	  sp, 2
FE00:0D90		  mov	  al, CHAR_BUF_byte_EBC
FE00:0D93		  cbw
FE00:0D94		  push	  ax
FE00:0D95		  mov	  di, 0FFFFh
FE00:0D98		  push	  di
FE00:0D99		  sub	  di, di
FE00:0D9B		  push	  di
FE00:0D9C		  call	  SIO_RX
FE00:0D9F		  add	  sp, 6
FE00:0DA2		  test	  ax, ax
FE00:0DA4		  jnz	  short	loc_FEDAA
FE00:0DA6		  sub	  di, di
FE00:0DA8		  jmp	  short	loc_FEDAD
FE00:0DAA ; ───────────────────────────────────────────────────────────────────────────
FE00:0DAA
FE00:0DAA loc_FEDAA:				  ; CODE XREF: AUTOBOOT_PROMPT+48j
FE00:0DAA		  mov	  di, 1
FE00:0DAD
FE00:0DAD loc_FEDAD:				  ; CODE XREF: AUTOBOOT_PROMPT+4Cj
FE00:0DAD		  mov	  dx, di
FE00:0DAF		  mov	  [bp+DO_AUTO_BOOT], dl
FE00:0DB2		  test	  dl, dl
FE00:0DB4		  jnz	  short	loc_FEDBF
FE00:0DB6		  inc	  [bp+var_6]
FE00:0DB9		  cmp	  [bp+var_6], 80
FE00:0DBD		  jbe	  short	CHECK_KEY_INPUT
FE00:0DBF
FE00:0DBF loc_FEDBF:				  ; CODE XREF: AUTOBOOT_PROMPT+58j
FE00:0DBF		  cmp	  [bp+DO_AUTO_BOOT], 0
FE00:0DC3		  jnz	  short	NO_AUTO_BOOT
FE00:0DC5		  mov	  di, offset STR_BOOT_HDD ; "\nBooting from Hard Disk"
FE00:0DC8		  push	  di
FE00:0DC9		  call	  PUTS
FE00:0DCC		  add	  sp, 2
FE00:0DCF
FE00:0DCF KEY_1_HD_BOOT:			  ; CODE XREF: AUTOBOOT_PROMPT+B1j
FE00:0DCF		  call	  IOP8086_DO_IO
FE00:0DD2		  mov	  di, 4
FE00:0DD5		  push	  di
FE00:0DD6		  call	  DISK_BOOT
FE00:0DD9		  add	  sp, 2
FE00:0DDC		  jmp	  short	BOOT_ERR
FE00:0DDE ; ───────────────────────────────────────────────────────────────────────────
FE00:0DDE
FE00:0DDE NO_AUTO_BOOT:				  ; CODE XREF: AUTOBOOT_PROMPT+67j
FE00:0DDE		  call	  GETCHAR
FE00:0DE1		  mov	  CHAR_BUF_byte_EBC, al
FE00:0DE4		  jmp	  short	BOOT_MENU
FE00:0DE6 ; ───────────────────────────────────────────────────────────────────────────
FE00:0DE6
FE00:0DE6 NOT_KEY_2_FD_BOOT:			  ; CODE XREF: AUTOBOOT_PROMPT+B6j
FE00:0DE6		  cmp	  ax, '3'
FE00:0DE9		  jz	  short	loc_FEE2A
FE00:0DEB		  cmp	  ax, '?'
FE00:0DEE		  jnz	  short	BOOT_ERR
FE00:0DF0		  jmp	  MONITOR_PROMPT
FE00:0DF3 ; ───────────────────────────────────────────────────────────────────────────
FE00:0DF3
FE00:0DF3 BOOT_ERR:				  ; CODE XREF: AUTOBOOT_PROMPT+80j
FE00:0DF3					  ; AUTOBOOT_PROMPT+92j
FE00:0DF3		  call	  ERR_BEEP
FE00:0DF6
FE00:0DF6 BOOT_MENU:				  ; CODE XREF: AUTOBOOT_PROMPT+88j
FE00:0DF6		  mov	  di, offset STR_BOOT_PROMPT ; "\nEnter	[1] to boot from Hard Disk\nEnter"...
FE00:0DF9		  push	  di
FE00:0DFA		  call	  PUTS
FE00:0DFD		  add	  sp, 2
FE00:0E00		  call	  GETCHAR_ECHO
FE00:0E03		  mov	  CHAR_BUF_byte_EBC, al
FE00:0E06		  mov	  al, CHAR_BUF_byte_EBC
FE00:0E09		  cbw
FE00:0E0A		  cmp	  ax, '1'
FE00:0E0D		  jz	  short	KEY_1_HD_BOOT
FE00:0E0F		  cmp	  ax, '2'
FE00:0E12		  jnz	  short	NOT_KEY_2_FD_BOOT
FE00:0E14		  call	  IOP8086_DO_IO
FE00:0E17
FE00:0E17 KEY_2_FD_BOOT:
FE00:0E17		  sub	  di, di
FE00:0E19		  push	  di		  ; 0 =	FLOPPY
FE00:0E1A		  call	  DISK_BOOT	  ; FALLTHROUGH
FE00:0E1D
FE00:0E1D MONITOR:				  ; CODE XREF: AUTOBOOT_PROMPT+EEj
FE00:0E1D		  add	  sp, 2
FE00:0E20		  jmp	  short	MONITOR_PROMPT
FE00:0E22 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E22
FE00:0E22 DISPATCH_COMMAND:			  ; CODE XREF: AUTOBOOT_PROMPT+12Bj
FE00:0E22		  shl	  ax, 1
FE00:0E24		  xchg	  ax, bx
FE00:0E25		  jmp	  cs:MONITOR_COMMANDS[bx]
FE00:0E2A ; ───────────────────────────────────────────────────────────────────────────
FE00:0E2A
FE00:0E2A loc_FEE2A:				  ; CODE XREF: AUTOBOOT_PROMPT+8Dj
FE00:0E2A		  call	  IOP8086_DO_IO
FE00:0E2D		  jmp	  short	MONITOR_PROMPT
FE00:0E2F ; ───────────────────────────────────────────────────────────────────────────
FE00:0E2F
FE00:0E2F MON_A_LTER_MEMORY:			  ; CODE XREF: AUTOBOOT_PROMPT+C9j
FE00:0E2F					  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E2F		  call	  M_ALTER_MEMORY
FE00:0E32		  jmp	  short	MONITOR_PROMPT
FE00:0E34 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E34
FE00:0E34 MON_B_REAKPOINT:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E34		  call	  M_BREAKPOINT
FE00:0E37		  jmp	  short	MONITOR_PROMPT
FE00:0E39 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E39
FE00:0E39 MON_D_ISPLAY_MEMORY:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E39		  call	  M_DISPLAY_MEMORY
FE00:0E3C		  jmp	  short	MONITOR_PROMPT
FE00:0E3E ; ───────────────────────────────────────────────────────────────────────────
FE00:0E3E
FE00:0E3E MON_G_O_TO:				  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E3E		  call	  M_GOTO
FE00:0E41		  jmp	  short	MONITOR_PROMPT
FE00:0E43 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E43
FE00:0E43 MON_I_NPUT_FROM_PORT:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E43		  mov	  di, 1
FE00:0E46		  push	  di
FE00:0E47
FE00:0E47 DO_PORT_IO:				  ; CODE XREF: AUTOBOOT_PROMPT+102j
FE00:0E47		  call	  M_PORT_IO
FE00:0E4A		  jmp	  short	MONITOR
FE00:0E4C ; ───────────────────────────────────────────────────────────────────────────
FE00:0E4C
FE00:0E4C MON_K_DISK_IO:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E4C		  call	  M_DISK_IO
FE00:0E4F		  jmp	  short	MONITOR_PROMPT
FE00:0E51 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E51
FE00:0E51 MON_L_OAD_BOOT:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E51		  call	  M_LOAD_BOOT
FE00:0E54		  jmp	  short	MONITOR_PROMPT
FE00:0E56 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E56
FE00:0E56 MON_M_EMCPY:				  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E56		  call	  M_MEMCPY
FE00:0E59		  jmp	  short	MONITOR_PROMPT
FE00:0E5B ; ───────────────────────────────────────────────────────────────────────────
FE00:0E5B
FE00:0E5B MON_O_UTPUT_TO_PORT:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E5B		  sub	  di, di
FE00:0E5D		  push	  di
FE00:0E5E		  jmp	  short	DO_PORT_IO
FE00:0E60 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E60
FE00:0E60 MON_R_EGISTERS:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E60		  call	  M_REGISTER
FE00:0E63		  jmp	  short	MONITOR_PROMPT
FE00:0E65 ; ───────────────────────────────────────────────────────────────────────────
FE00:0E65
FE00:0E65 MON_S_INGLE_STEP:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E65		  call	  M_SINGLE_STEP
FE00:0E68		  jmp	  short	MONITOR_PROMPT
FE00:0E6A ; ───────────────────────────────────────────────────────────────────────────
FE00:0E6A
FE00:0E6A MON_X_HEX_DOWNLOAD:			  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E6A		  call	  M_HEX_DOWNLOAD
FE00:0E6D
FE00:0E6D MONITOR_PROMPT:			  ; CODE XREF: AUTOBOOT_PROMPT+Ej
FE00:0E6D					  ; AUTOBOOT_PROMPT+94j ...
FE00:0E6D		  mov	  di, offset STR_MONITOR_PROMPT	; "\n< A, B, D,	G, I, K, L, M, O, R, S,	X >"...
FE00:0E70		  push	  di
FE00:0E71		  call	  PUTS
FE00:0E74		  add	  sp, 2
FE00:0E77		  call	  GETCHAR_ECHO
FE00:0E7A		  mov	  CHAR_BUF_byte_EBC, al
FE00:0E7D		  mov	  al, CHAR_BUF_byte_EBC
FE00:0E80		  cbw
FE00:0E81		  sub	  ax, 'A'
FE00:0E84		  cmp	  ax, 23	  ; Num	of letters of alphabet
FE00:0E87		  jbe	  short	DISPATCH_COMMAND
FE00:0E89
FE00:0E89 MON___NO_CMD:				  ; DATA XREF: AUTOBOOT_PROMPT:MONITOR_COMMANDSo
FE00:0E89		  call	  ERR_BEEP
FE00:0E8C		  jmp	  short	MONITOR_PROMPT ; Try to	autoboot.
FE00:0E8C					  ; Allow breaking into	boot menu and monitor.
FE00:0E8C ; ───────────────────────────────────────────────────────────────────────────
FE00:0E8E MONITOR_COMMANDS dw offset MON_A_LTER_MEMORY;	0 ; DATA XREF: AUTOBOOT_PROMPT+C9r
FE00:0E8E		  dw offset MON_B_REAKPOINT; 1
FE00:0E8E		  dw offset MON___NO_CMD  ; 2
FE00:0E8E		  dw offset MON_D_ISPLAY_MEMORY; 3
FE00:0E8E		  dw offset MON___NO_CMD  ; 4
FE00:0E8E		  dw offset MON___NO_CMD  ; 5
FE00:0E8E		  dw offset MON_G_O_TO	  ; 6
FE00:0E8E		  dw offset MON___NO_CMD  ; 7
FE00:0E8E		  dw offset MON_I_NPUT_FROM_PORT; 8
FE00:0E8E		  dw offset MON___NO_CMD  ; 9
FE00:0E8E		  dw offset MON_K_DISK_IO ; 10
FE00:0E8E		  dw offset MON_L_OAD_BOOT; 11
FE00:0E8E		  dw offset MON_M_EMCPY	  ; 12
FE00:0E8E		  dw offset MON___NO_CMD  ; 13
FE00:0E8E		  dw offset MON_O_UTPUT_TO_PORT; 14
FE00:0E8E		  dw offset MON___NO_CMD  ; 15
FE00:0E8E		  dw offset MON___NO_CMD  ; 16
FE00:0E8E		  dw offset MON_R_EGISTERS; 17
FE00:0E8E		  dw offset MON_S_INGLE_STEP; 18
FE00:0E8E		  dw offset MON___NO_CMD  ; 19
FE00:0E8E		  dw offset MON___NO_CMD  ; 20
FE00:0E8E		  dw offset MON___NO_CMD  ; 21
FE00:0E8E		  dw offset MON___NO_CMD  ; 22
FE00:0E8E		  dw offset MON_X_HEX_DOWNLOAD;	23
FE00:0EBE ; ───────────────────────────────────────────────────────────────────────────
FE00:0EBE		  jmp	  MONITOR_PROMPT
FE00:0EBE AUTOBOOT_PROMPT endp
FE00:0EBE
FE00:0EBE ; ───────────────────────────────────────────────────────────────────────────
FE00:0EC1		  db	0
FE00:0EC2
FE00:0EC2 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0EC2
FE00:0EC2 ; Attributes:	bp-based frame
FE00:0EC2
FE00:0EC2 M_MEMCPY	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_M_EMCPYp
FE00:0EC2
FE00:0EC2 var_E		  = word ptr -0Eh
FE00:0EC2 var_C		  = word ptr -0Ch
FE00:0EC2 var_A		  = word ptr -0Ah
FE00:0EC2 var_8		  = word ptr -8
FE00:0EC2 var_6		  = word ptr -6
FE00:0EC2
FE00:0EC2		  push	  bp
FE00:0EC3		  mov	  bp, sp
FE00:0EC5		  push	  di
FE00:0EC6		  push	  si
FE00:0EC7
FE00:0EC7 loc_FEEC7:
FE00:0EC7		  sub	  sp, 0Ah
FE00:0ECA		  mov	  di, 1
FE00:0ECD		  push	  di
FE00:0ECE		  call	  sub_FF14A
FE00:0ED1		  add	  sp, 2
FE00:0ED4		  call	  sub_FF8DC
FE00:0ED7		  test	  ax, ax
FE00:0ED9		  jz	  short	loc_FEF30
FE00:0EDB		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:0EE0		  jnz	  short	loc_FEEE7
FE00:0EE2
FE00:0EE2 loc_FEEE2:				  ; CODE XREF: M_MEMCPY+3Fj
FE00:0EE2		  call	  ERR_BEEP
FE00:0EE5		  jmp	  short	loc_FEF30
FE00:0EE7 ; ───────────────────────────────────────────────────────────────────────────
FE00:0EE7
FE00:0EE7 loc_FEEE7:				  ; CODE XREF: M_MEMCPY+1Ej
FE00:0EE7		  mov	  di, ADDR_OFFSET
FE00:0EEB		  mov	  [bp+var_8], di
FE00:0EEE		  mov	  di, ADDR_SEGMENT
FE00:0EF2		  mov	  [bp+var_6], di
FE00:0EF5		  call	  sub_FF8DC
FE00:0EF8		  test	  ax, ax
FE00:0EFA		  jz	  short	loc_FEF30
FE00:0EFC		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:0F01		  jz	  short	loc_FEEE2
FE00:0F03
FE00:0F03 loc_FEF03:
FE00:0F03		  mov	  di, ADDR_OFFSET
FE00:0F07		  mov	  [bp+var_C], di
FE00:0F0A		  mov	  di, ADDR_SEGMENT
FE00:0F0E		  mov	  [bp+var_A], di
FE00:0F11		  lea	  di, [bp+var_E]
FE00:0F14		  push	  di
FE00:0F15		  call	  sub_FF8EE
FE00:0F18		  add	  sp, 2
FE00:0F1B		  test	  ax, ax
FE00:0F1D		  jz	  short	loc_FEF30
FE00:0F1F		  push	  [bp+var_E]
FE00:0F22		  lea	  di, [bp+var_C]
FE00:0F25		  push	  di
FE00:0F26		  lea	  di, [bp+var_8]
FE00:0F29		  push	  di
FE00:0F2A		  call	  MEMCPY
FE00:0F2D		  add	  sp, 6
FE00:0F30
FE00:0F30 loc_FEF30:				  ; CODE XREF: M_MEMCPY+17j
FE00:0F30					  ; M_MEMCPY+23j ...
FE00:0F30		  jmp	  TAIL_loc_FFBE4
FE00:0F30 M_MEMCPY	  endp
FE00:0F30
FE00:0F30 ; ───────────────────────────────────────────────────────────────────────────
FE00:0F33		  db	0
FE00:0F34
FE00:0F34 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0F34
FE00:0F34 ; Attributes:	bp-based frame
FE00:0F34
FE00:0F34 MEMCPY	  proc near		  ; CODE XREF: DISK_BOOT+D1p
FE00:0F34					  ; DISK_BOOT+144p ...
FE00:0F34
FE00:0F34 SRC		  = word ptr  4
FE00:0F34 DEST		  = word ptr  6
FE00:0F34 LEN		  = byte ptr  8
FE00:0F34
FE00:0F34		  push	  bp
FE00:0F35		  mov	  bp, sp
FE00:0F37		  push	  ds
FE00:0F38		  push	  di
FE00:0F39		  push	  si
FE00:0F3A		  push	  es
FE00:0F3B		  mov	  di, [bp+DEST]
FE00:0F3E		  mov	  es, word ptr [di+2]
FE00:0F41		  mov	  di, [di]
FE00:0F43		  mov	  bx, [bp+SRC]
FE00:0F46		  mov	  si, [bx]
FE00:0F48		  mov	  ds, word ptr [bx+2]
FE00:0F4B		  mov	  cx, word ptr [bp+LEN]
FE00:0F4E		  cld
FE00:0F4F		  rep movsb
FE00:0F51		  pop	  es
FE00:0F52		  pop	  si
FE00:0F53		  pop	  di
FE00:0F54		  pop	  ds
FE00:0F55		  pop	  bp
FE00:0F56		  retn
FE00:0F56 MEMCPY	  endp
FE00:0F56
FE00:0F56 ; ───────────────────────────────────────────────────────────────────────────
FE00:0F57		  db	0
FE00:0F58
FE00:0F58 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:0F58
FE00:0F58 ; Attributes:	bp-based frame
FE00:0F58
FE00:0F58 M_PORT_IO	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:DO_PORT_IOp
FE00:0F58
FE00:0F58 IO_VAL16	  = word ptr -0Ah
FE00:0F58 IO_PORT	  = word ptr -8
FE00:0F58 WIDTH		  = byte ptr -6
FE00:0F58 DIRECTION_INPUT = byte ptr  4
FE00:0F58
FE00:0F58		  push	  bp
FE00:0F59		  mov	  bp, sp
FE00:0F5B		  push	  di
FE00:0F5C		  push	  si
FE00:0F5D		  sub	  sp, 6
FE00:0F60		  mov	  [bp+WIDTH], 1
FE00:0F64		  mov	  di, 1
FE00:0F67		  push	  di
FE00:0F68		  call	  sub_FF14A
FE00:0F6B		  add	  sp, 2
FE00:0F6E		  call	  GETCHAR_ECHO
FE00:0F71		  mov	  CHAR_BUF_byte_EBC, al
FE00:0F74		  cmp	  CHAR_BUF_byte_EBC, 'B'
FE00:0F79		  jnz	  short	NOT_BYTE
FE00:0F7B		  mov	  [bp+WIDTH], 0
FE00:0F7F
FE00:0F7F GOT_WIDTH:				  ; CODE XREF: M_PORT_IO+6Cj
FE00:0F7F		  mov	  di, 1
FE00:0F82		  push	  di
FE00:0F83		  call	  sub_FF14A
FE00:0F86		  add	  sp, 2
FE00:0F89		  lea	  di, [bp+IO_PORT]
FE00:0F8C		  push	  di
FE00:0F8D		  call	  sub_FF8EE
FE00:0F90		  add	  sp, 2
FE00:0F93		  test	  ax, ax
FE00:0F95		  jz	  short	loc_FEFC9
FE00:0F97		  mov	  di, 1
FE00:0F9A		  push	  di
FE00:0F9B		  call	  sub_FF14A
FE00:0F9E		  add	  sp, 2
FE00:0FA1		  cmp	  [bp+DIRECTION_INPUT],	0
FE00:0FA5		  jz	  short	loc_FEFDB
FE00:0FA7		  cmp	  [bp+WIDTH], 0
FE00:0FAB		  jz	  short	loc_FEFCC
FE00:0FAD		  push	  [bp+IO_PORT]
FE00:0FB0		  call	  IN16
FE00:0FB3		  add	  sp, 2
FE00:0FB6		  push	  ax
FE00:0FB7		  call	  PRINTHEX16
FE00:0FBA
FE00:0FBA loc_FEFBA:				  ; CODE XREF: M_PORT_IO+81j
FE00:0FBA		  add	  sp, 2
FE00:0FBD		  jmp	  short	loc_FEFC9
FE00:0FBF ; ───────────────────────────────────────────────────────────────────────────
FE00:0FBF
FE00:0FBF NOT_BYTE:				  ; CODE XREF: M_PORT_IO+21j
FE00:0FBF		  cmp	  CHAR_BUF_byte_EBC, 'W'
FE00:0FC4		  jz	  short	GOT_WIDTH
FE00:0FC6		  call	  ERR_BEEP
FE00:0FC9
FE00:0FC9 loc_FEFC9:				  ; CODE XREF: M_PORT_IO+3Dj
FE00:0FC9					  ; M_PORT_IO+65j ...
FE00:0FC9		  jmp	  TAIL_loc_FFBE4
FE00:0FCC ; ───────────────────────────────────────────────────────────────────────────
FE00:0FCC
FE00:0FCC loc_FEFCC:				  ; CODE XREF: M_PORT_IO+53j
FE00:0FCC		  push	  [bp+IO_PORT]
FE00:0FCF		  call	  IN8
FE00:0FD2		  add	  sp, 2
FE00:0FD5		  push	  ax
FE00:0FD6		  call	  PRINTHEX8
FE00:0FD9		  jmp	  short	loc_FEFBA
FE00:0FDB ; ───────────────────────────────────────────────────────────────────────────
FE00:0FDB
FE00:0FDB loc_FEFDB:				  ; CODE XREF: M_PORT_IO+4Dj
FE00:0FDB		  lea	  di, [bp+IO_VAL16]
FE00:0FDE		  push	  di
FE00:0FDF		  call	  sub_FF8EE
FE00:0FE2		  add	  sp, 2
FE00:0FE5		  test	  ax, ax
FE00:0FE7		  jz	  short	loc_FEFC9
FE00:0FE9		  cmp	  [bp+WIDTH], 0
FE00:0FED		  jz	  short	loc_FEFFD
FE00:0FEF		  push	  [bp+IO_VAL16]
FE00:0FF2		  push	  [bp+IO_PORT]
FE00:0FF5		  call	  OUT16
FE00:0FF8
FE00:0FF8 loc_FEFF8:				  ; CODE XREF: M_PORT_IO+AEj
FE00:0FF8		  add	  sp, 4
FE00:0FFB		  jmp	  short	loc_FEFC9
FE00:0FFD ; ───────────────────────────────────────────────────────────────────────────
FE00:0FFD
FE00:0FFD loc_FEFFD:				  ; CODE XREF: M_PORT_IO+95j
FE00:0FFD		  push	  [bp+IO_VAL16]
FE00:1000		  push	  [bp+IO_PORT]
FE00:1003		  call	  OUT8
FE00:1006		  jmp	  short	loc_FEFF8
FE00:1006 M_PORT_IO	  endp
FE00:1006
FE00:1008
FE00:1008 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1008
FE00:1008 ; Attributes:	bp-based frame
FE00:1008
FE00:1008 PUTS		  proc near		  ; CODE XREF: FINISH_POST+8Ep
FE00:1008					  ; FINISH_POST+A8p ...
FE00:1008
FE00:1008 BUFFER	  = word ptr  4
FE00:1008
FE00:1008		  push	  bp
FE00:1009		  mov	  bp, sp
FE00:100B		  push	  di
FE00:100C		  push	  si
FE00:100D		  push	  [bp+BUFFER]
FE00:1010		  sub	  di, di
FE00:1012		  push	  di		  ; Attrs
FE00:1013		  push	  di		  ; Channel = 0
FE00:1014		  call	  DO_PUTS
FE00:1017		  add	  sp, 6
FE00:101A		  jmp	  TAIL_loc_FFBE4
FE00:101A PUTS		  endp
FE00:101A
FE00:101A ; ───────────────────────────────────────────────────────────────────────────
FE00:101D		  db	0
FE00:101E
FE00:101E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:101E
FE00:101E ; Attributes:	bp-based frame
FE00:101E
FE00:101E DO_PUTS	  proc near		  ; CODE XREF: SYSCALL_7_PUTS+6p
FE00:101E					  ; PUTS+Cp
FE00:101E
FE00:101E var_8		  = byte ptr -8
FE00:101E LENGTH	  = word ptr -6
FE00:101E CHANNEL	  = word ptr  4
FE00:101E ATTRS		  = word ptr  6
FE00:101E BUFFER	  = word ptr  8
FE00:101E
FE00:101E		  push	  bp
FE00:101F		  mov	  bp, sp
FE00:1021		  push	  di
FE00:1022		  push	  si
FE00:1023		  sub	  sp, 4
FE00:1026		  mov	  [bp+LENGTH], 0
FE00:102B		  mov	  di, [bp+ATTRS]
FE00:102E		  mov	  ADDR_SEGMENT,	di
FE00:1032		  mov	  di, [bp+BUFFER]
FE00:1035		  mov	  ADDR_OFFSET, di
FE00:1039		  jmp	  short	loc_FF081
FE00:103B ; ───────────────────────────────────────────────────────────────────────────
FE00:103B
FE00:103B loc_FF03B:				  ; CODE XREF: DO_PUTS+54j
FE00:103B					  ; DO_PUTS+5Aj
FE00:103B		  push	  [bp+BUFFER]
FE00:103E		  push	  [bp+ATTRS]
FE00:1041		  push	  [bp+LENGTH]
FE00:1044		  push	  [bp+CHANNEL]
FE00:1047		  call	  SIO_TX
FE00:104A		  add	  sp, 8
FE00:104D		  cmp	  [bp+var_8], 0Ah
FE00:1051		  jnz	  short	loc_FF060
FE00:1053		  push	  [bp+CHANNEL]
FE00:1056		  call	  DO_PRINT_CRLF
FE00:1059		  add	  sp, 2
FE00:105C		  inc	  ADDR_OFFSET
FE00:1060
FE00:1060 loc_FF060:				  ; CODE XREF: DO_PUTS+33j
FE00:1060		  mov	  di, ADDR_OFFSET
FE00:1064		  mov	  [bp+BUFFER], di
FE00:1067		  mov	  [bp+LENGTH], 0
FE00:106C		  jmp	  short	loc_FF081
FE00:106E ; ───────────────────────────────────────────────────────────────────────────
FE00:106E
FE00:106E loc_FF06E:				  ; CODE XREF: DO_PUTS+6Bj
FE00:106E		  cmp	  [bp+var_8], 0Ah
FE00:1072		  jz	  short	loc_FF03B
FE00:1074		  cmp	  [bp+LENGTH], 0Ah
FE00:1078		  jge	  short	loc_FF03B
FE00:107A		  inc	  [bp+LENGTH]
FE00:107D		  inc	  ADDR_OFFSET
FE00:1081
FE00:1081 loc_FF081:				  ; CODE XREF: DO_PUTS+1Bj
FE00:1081					  ; DO_PUTS+4Ej
FE00:1081		  call	  MEM_READ8
FE00:1084		  mov	  [bp+var_8], al
FE00:1087		  test	  al, al
FE00:1089		  jnz	  short	loc_FF06E
FE00:108B		  push	  [bp+BUFFER]
FE00:108E		  push	  [bp+ATTRS]
FE00:1091		  push	  [bp+LENGTH]
FE00:1094		  push	  [bp+CHANNEL]
FE00:1097		  call	  SIO_TX
FE00:109A		  add	  sp, 8
FE00:109D		  jmp	  TAIL_loc_FFBE4
FE00:109D DO_PUTS	  endp
FE00:109D
FE00:10A0
FE00:10A0 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:10A0
FE00:10A0 ; Attributes:	bp-based frame
FE00:10A0
FE00:10A0 PRINT_CRLF	  proc near		  ; CODE XREF: FINISH_POST+72p
FE00:10A0					  ; DISK_BOOT:BOOT_GOOD_p ...
FE00:10A0		  push	  bp
FE00:10A1		  mov	  bp, sp
FE00:10A3		  push	  di
FE00:10A4		  push	  si
FE00:10A5		  sub	  di, di
FE00:10A7		  push	  di
FE00:10A8		  call	  DO_PRINT_CRLF
FE00:10AB		  add	  sp, 2
FE00:10AE		  jmp	  TAIL_loc_FFBE4
FE00:10AE PRINT_CRLF	  endp
FE00:10AE
FE00:10AE ; ───────────────────────────────────────────────────────────────────────────
FE00:10B1		  db	0
FE00:10B2
FE00:10B2 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:10B2
FE00:10B2 ; Attributes:	bp-based frame
FE00:10B2
FE00:10B2 DO_PRINT_CRLF	  proc near		  ; CODE XREF: SYSCALL_6_PRINT_CRLF+1p
FE00:10B2					  ; DO_PUTS+38p ...
FE00:10B2
FE00:10B2 var_6		  = byte ptr -6
FE00:10B2 var_5		  = byte ptr -5
FE00:10B2 CHANNEL	  = word ptr  4
FE00:10B2
FE00:10B2		  push	  bp
FE00:10B3		  mov	  bp, sp
FE00:10B5		  push	  di
FE00:10B6		  push	  si
FE00:10B7		  sub	  sp, 2
FE00:10BA		  mov	  [bp+var_6], 0Dh
FE00:10BE		  mov	  [bp+var_5], 0Ah
FE00:10C2		  lea	  di, [bp+var_6]
FE00:10C5		  push	  di
FE00:10C6		  sub	  di, di
FE00:10C8		  push	  di
FE00:10C9		  mov	  di, 2
FE00:10CC		  push	  di
FE00:10CD		  push	  [bp+CHANNEL]
FE00:10D0		  call	  SIO_TX
FE00:10D3		  add	  sp, 8
FE00:10D6		  jmp	  TAIL_loc_FFBE4
FE00:10D6 DO_PRINT_CRLF	  endp
FE00:10D6
FE00:10D6 ; ───────────────────────────────────────────────────────────────────────────
FE00:10D9		  db	0
FE00:10DA
FE00:10DA ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:10DA
FE00:10DA ; Attributes:	bp-based frame
FE00:10DA
FE00:10DA PRINTHEX16	  proc near		  ; CODE XREF: M_PORT_IO+5Fp
FE00:10DA					  ; M_REGISTER+44p ...
FE00:10DA
FE00:10DA ARG16		  = word ptr  4
FE00:10DA
FE00:10DA		  push	  bp
FE00:10DB		  mov	  bp, sp
FE00:10DD		  push	  di
FE00:10DE		  push	  si
FE00:10DF		  mov	  di, [bp+ARG16]
FE00:10E2		  and	  di, 0FF00h
FE00:10E6		  mov	  cx, 8
FE00:10E9		  sar	  di, cl
FE00:10EB		  push	  di
FE00:10EC		  call	  PRINTHEX8
FE00:10EF		  add	  sp, 2
FE00:10F2		  mov	  di, [bp+ARG16]
FE00:10F5		  and	  di, 0FFh
FE00:10F9		  push	  di
FE00:10FA		  call	  PRINTHEX8
FE00:10FD		  add	  sp, 2
FE00:1100		  jmp	  TAIL_loc_FFBE4
FE00:1100 PRINTHEX16	  endp
FE00:1100
FE00:1100 ; ───────────────────────────────────────────────────────────────────────────
FE00:1103		  db	0
FE00:1104
FE00:1104 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1104
FE00:1104 ; Attributes:	bp-based frame
FE00:1104
FE00:1104 PRINTHEX8	  proc near		  ; CODE XREF: BOOT_FAILED_ERR+14p
FE00:1104					  ; M_PORT_IO+7Ep ...
FE00:1104
FE00:1104 ARG8		  = byte ptr  4
FE00:1104
FE00:1104		  push	  bp
FE00:1105		  mov	  bp, sp
FE00:1107		  push	  di
FE00:1108		  push	  si
FE00:1109		  mov	  di, offset PRINTHEX_unk_F1C
FE00:110C		  push	  di
FE00:110D		  mov	  di, offset PRINTHEX_unk_F1A
FE00:1110		  push	  di
FE00:1111		  mov	  al, [bp+ARG8]
FE00:1114		  cbw
FE00:1115		  push	  ax
FE00:1116		  call	  FMT_HEX
FE00:1119		  add	  sp, 6
FE00:111C		  mov	  di, offset PRINTHEX_unk_F1A
FE00:111F		  push	  di
FE00:1120		  call	  PUTCHAR
FE00:1123		  add	  sp, 2
FE00:1126		  mov	  di, offset PRINTHEX_unk_F1C
FE00:1129		  push	  di
FE00:112A		  call	  PUTCHAR
FE00:112D		  add	  sp, 2
FE00:1130		  jmp	  TAIL_loc_FFBE4
FE00:1130 PRINTHEX8	  endp
FE00:1130
FE00:1130 ; ───────────────────────────────────────────────────────────────────────────
FE00:1133		  db	0
FE00:1134
FE00:1134 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1134
FE00:1134 ; Attributes:	bp-based frame
FE00:1134
FE00:1134 sub_FF134	  proc near		  ; CODE XREF: M_BREAKPOINT+43p
FE00:1134					  ; M_BREAKPOINT:loc_FF3FAp ...
FE00:1134		  push	  bp
FE00:1135		  mov	  bp, sp
FE00:1137		  push	  di
FE00:1138		  push	  si
FE00:1139		  call	  PRINT_CRLF
FE00:113C		  mov	  di, 2
FE00:113F		  push	  di
FE00:1140		  call	  sub_FF14A
FE00:1143		  add	  sp, 2
FE00:1146		  jmp	  TAIL_loc_FFBE4
FE00:1146 sub_FF134	  endp
FE00:1146
FE00:1146 ; ───────────────────────────────────────────────────────────────────────────
FE00:1149		  db	0
FE00:114A
FE00:114A ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:114A
FE00:114A ; Attributes:	bp-based frame
FE00:114A
FE00:114A sub_FF14A	  proc near		  ; CODE XREF: M_DISK_IO+9p
FE00:114A					  ; M_GOTO+9p ...
FE00:114A
FE00:114A var_6		  = word ptr -6
FE00:114A arg_0		  = word ptr  4
FE00:114A
FE00:114A		  push	  bp
FE00:114B		  mov	  bp, sp
FE00:114D		  push	  di
FE00:114E		  push	  si
FE00:114F		  sub	  sp, 2
FE00:1152		  mov	  [bp+var_6], 1
FE00:1157		  jmp	  short	loc_FF166
FE00:1159 ; ───────────────────────────────────────────────────────────────────────────
FE00:1159
FE00:1159 loc_FF159:				  ; CODE XREF: sub_FF14A+22j
FE00:1159		  mov	  di, offset CHR_SPACE ; " "
FE00:115C		  push	  di
FE00:115D		  call	  PUTCHAR
FE00:1160		  add	  sp, 2
FE00:1163		  inc	  [bp+var_6]
FE00:1166
FE00:1166 loc_FF166:				  ; CODE XREF: sub_FF14A+Dj
FE00:1166		  mov	  di, [bp+arg_0]
FE00:1169		  cmp	  [bp+var_6], di
FE00:116C		  jle	  short	loc_FF159
FE00:116E		  jmp	  TAIL_loc_FFBE4
FE00:116E sub_FF14A	  endp
FE00:116E
FE00:116E ; ───────────────────────────────────────────────────────────────────────────
FE00:1171		  db	0
FE00:1172
FE00:1172 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1172
FE00:1172 ; Attributes:	bp-based frame
FE00:1172
FE00:1172 SIO_RX	  proc near		  ; CODE XREF: SYSCALL_1_5_SIO_GET_STAT_ATTR+7p
FE00:1172					  ; SIO_GETC+15p ...
FE00:1172
FE00:1172 CHANNEL	  = byte ptr  4
FE00:1172 LENGTH	  = word ptr  6
FE00:1172 BUFFER	  = word ptr  8
FE00:1172
FE00:1172		  push	  bp
FE00:1173		  mov	  bp, sp
FE00:1175		  push	  si
FE00:1176		  push	  di
FE00:1177		  mov	  bx, [bp+BUFFER]
FE00:117A		  mov	  al, 16h	  ; sizeof(SIO_CHAN_REGS)
FE00:117C		  mul	  [bp+CHANNEL]
FE00:117F		  lea	  si, SIO_REGS_0
FE00:1183		  add	  si, ax
FE00:1185		  cmp	  [bp+LENGTH], 0FFFFh ;	Just the attributes?
FE00:118A		  jz	  short	SET_ATTRS
FE00:118C		  xor	  cx, cx
FE00:118E		  cmp	  cx, [bp+LENGTH]
FE00:1191		  jnb	  short	loc_FF1F1
FE00:1193		  mov	  dx, [si+CHAN_REGS.CHAN_RX_LEN] ; Receive Data	Buffer Length Register
FE00:1196		  mov	  ax, [si+CHAN_REGS.CHAN_RX_OUT] ; Receive Buffer Output Pointer Register
FE00:1199		  mov	  di, word ptr [si+CHAN_REGS.CHAN_RX_LO] ; Receive Data	Buffer Address Register	LO
FE00:119C		  add	  di, ax
FE00:119E
FE00:119E WAIT_FOR_IO:				  ; CODE XREF: SIO_RX+34j
FE00:119E					  ; SIO_RX+39j	...
FE00:119E		  call	  SIO_WAIT_READY
FE00:11A1		  mov	  ax, [si+CHAN_REGS.CHAN_RX_IN]	; Receive Buffer Input Pointer Register
FE00:11A4		  test	  ax, ax
FE00:11A6		  js	  short	WAIT_FOR_IO
FE00:11A8		  cmp	  ax, [si+CHAN_REGS.CHAN_RX_OUT] ; Receive Buffer Output Pointer Register
FE00:11AB		  jz	  short	WAIT_FOR_IO
FE00:11AD		  mov	  ax, [si+CHAN_REGS.CHAN_STAT] ; Channel Status	Register
FE00:11B0		  and	  ax, 0F0h
FE00:11B3		  jz	  short	loc_FF1C0
FE00:11B5		  mov	  [si+CHAN_REGS.CHAN_CMD], 89h ; 'ë' ; Channel Command Register
FE00:11B9		  call	  NEW_COMMAND
FE00:11BC		  mov	  al, 0
FE00:11BE		  jmp	  short	SIO_RX_DONE
FE00:11C0 ; ───────────────────────────────────────────────────────────────────────────
FE00:11C0
FE00:11C0 loc_FF1C0:				  ; CODE XREF: SIO_RX+41j
FE00:11C0					  ; SIO_RX+74j
FE00:11C0		  mov	  al, [di]
FE00:11C2		  inc	  [si+CHAN_REGS.CHAN_RX_OUT] ; Receive Buffer Output Pointer Register
FE00:11C5		  inc	  di
FE00:11C6		  cmp	  [si+CHAN_REGS.CHAN_RX_OUT], dx ; Receive Buffer Output Pointer Register
FE00:11C9		  jb	  short	loc_FF1D3
FE00:11CB		  mov	  [si+CHAN_REGS.CHAN_RX_OUT], 0	; Receive Buffer Output	Pointer	Register
FE00:11D0		  mov	  di, word ptr [si+CHAN_REGS.CHAN_RX_LO] ; Receive Data	Buffer Address Register	LO
FE00:11D3
FE00:11D3 loc_FF1D3:				  ; CODE XREF: SIO_RX+57j
FE00:11D3		  mov	  [bx],	al
FE00:11D5		  inc	  bx
FE00:11D6		  inc	  cx
FE00:11D7		  cmp	  cx, [bp+LENGTH]
FE00:11DA		  jnb	  short	loc_FF1F1
FE00:11DC
FE00:11DC loc_FF1DC:				  ; CODE XREF: SIO_RX+6Fj
FE00:11DC		  mov	  ax, [si+CHAN_REGS.CHAN_RX_IN]	; Receive Buffer Input Pointer Register
FE00:11DF		  test	  ax, ax
FE00:11E1		  js	  short	loc_FF1DC
FE00:11E3		  cmp	  ax, [si+CHAN_REGS.CHAN_RX_OUT] ; Receive Buffer Output Pointer Register
FE00:11E6		  jnz	  short	loc_FF1C0
FE00:11E8		  mov	  [si+CHAN_REGS.CHAN_CMD], 83h ; 'â' ; Channel Command Register
FE00:11EC		  call	  NEW_COMMAND
FE00:11EF		  jmp	  short	WAIT_FOR_IO
FE00:11F1 ; ───────────────────────────────────────────────────────────────────────────
FE00:11F1
FE00:11F1 loc_FF1F1:				  ; CODE XREF: SIO_RX+1Fj
FE00:11F1					  ; SIO_RX+68j
FE00:11F1		  mov	  [si+CHAN_REGS.CHAN_CMD], 83h ; 'â' ; Channel Command Register
FE00:11F5		  call	  NEW_COMMAND
FE00:11F8		  jmp	  short	SIO_RX_DONE
FE00:11FA ; ───────────────────────────────────────────────────────────────────────────
FE00:11FA
FE00:11FA SET_ATTRS:				  ; CODE XREF: SIO_RX+18j
FE00:11FA		  mov	  dx, [si+CHAN_REGS.CHAN_PARM] ; Channel Parameter Register
FE00:11FD		  mov	  al, 0FFh
FE00:11FF
FE00:11FF loc_FF1FF:				  ; CODE XREF: SIO_RX+92j
FE00:11FF		  mov	  bx, [si+CHAN_REGS.CHAN_RX_IN]	; Receive Buffer Input Pointer Register
FE00:1202		  test	  bx, bx
FE00:1204		  js	  short	loc_FF1FF
FE00:1206		  cmp	  bx, [si+CHAN_REGS.CHAN_RX_OUT] ; Receive Buffer Output Pointer Register
FE00:1209		  jnz	  short	SIO_RX_DONE
FE00:120B		  xor	  al, al
FE00:120D
FE00:120D SIO_RX_DONE:				  ; CODE XREF: SIO_RX+4Cj
FE00:120D					  ; SIO_RX+86j	...
FE00:120D		  pop	  di
FE00:120E		  pop	  si
FE00:120F		  pop	  bp
FE00:1210		  retn
FE00:1210 SIO_RX	  endp
FE00:1210
FE00:1211
FE00:1211 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1211
FE00:1211 ; Attributes:	bp-based frame
FE00:1211
FE00:1211 SIO_TX	  proc near		  ; CODE XREF: SYSCALL_4_SIO_SET_ATTRS+6p
FE00:1211					  ; DO_PUTS+29p ...
FE00:1211
FE00:1211 CHANNEL	  = byte ptr  4
FE00:1211 LENGTH	  = word ptr  6		  ; 0FFFFh = only set attrs
FE00:1211 OFFSET_OR_ATTRS = word ptr  8
FE00:1211 BUFFER	  = word ptr  0Ah	  ; Not	used if	LENGTH=0FFFFh
FE00:1211
FE00:1211		  push	  bp
FE00:1212		  mov	  bp, sp
FE00:1214		  push	  si
FE00:1215		  push	  di
FE00:1216		  mov	  al, 16h
FE00:1218		  mul	  [bp+CHANNEL]
FE00:121B		  lea	  si, SIO_REGS_0
FE00:121F		  add	  si, ax
FE00:1221		  cmp	  [bp+LENGTH], 0FFFFh
FE00:1226		  jz	  short	JUST_SET_ATTR
FE00:1228		  cmp	  [bp+LENGTH], 0
FE00:122D		  jle	  short	SIO_TX_DONE ; Zero length write
FE00:122F		  call	  SIO_WAIT_READY
FE00:1232
FE00:1232 WAIT_CHAN_READY:			  ; CODE XREF: SIO_TX+2Cj
FE00:1232		  mov	  cx, [si+CHAN_REGS.CHAN_STAT] ; Channel Status	Register
FE00:1235		  and	  cx, 1000h
FE00:1239		  cmp	  cx, 1000h
FE00:123D		  jnz	  short	WAIT_CHAN_READY
FE00:123F		  mov	  al, 10
FE00:1241		  mul	  [bp+CHANNEL]
FE00:1244		  mov	  cl, 8
FE00:1246		  lea	  di, SIO_BUFS_unk_900
FE00:124A		  add	  di, ax
FE00:124C		  mov	  dx, di
FE00:124E		  and	  dx, 0FFh
FE00:1252		  mov	  [si+CHAN_REGS.CHAN_TX_LO], dl	; Transmit Data	Buffer Address Register	LO
FE00:1255		  mov	  dx, di
FE00:1257		  and	  dx, 0FF00h
FE00:125B		  shr	  dx, cl
FE00:125D		  mov	  word ptr [si+CHAN_REGS.CHAN_TX_MID], dx ; Transmit Data Buffer Address Register MID
FE00:1260		  mov	  cx, [bp+LENGTH]
FE00:1263		  cmp	  cx, 10
FE00:1267		  jbe	  short	LENGTH_NOW_LESS_THAN_10
FE00:1269		  mov	  cx, 10
FE00:126C
FE00:126C LENGTH_NOW_LESS_THAN_10:		  ; CODE XREF: SIO_TX+56j
FE00:126C		  mov	  [si+CHAN_REGS.CHAN_TX_LEN], cx ; Transmit Data Buffer	Length Register
FE00:126F		  push	  si
FE00:1270		  mov	  ds, [bp+OFFSET_OR_ATTRS]
FE00:1273		  mov	  si, [bp+BUFFER]
FE00:1276		  rep movsb		  ; Copy data to TX buffer
FE00:1278		  pop	  si
FE00:1279		  mov	  ax, 0
FE00:127C		  mov	  ds, ax
FE00:127E		  mov	  [si+CHAN_REGS.CHAN_CMD], 82h ; 'é' ; Channel Command Register
FE00:1282		  call	  NEW_COMMAND
FE00:1285		  jmp	  short	SIO_TX_DONE
FE00:1287 ; ───────────────────────────────────────────────────────────────────────────
FE00:1287
FE00:1287 JUST_SET_ATTR:			  ; CODE XREF: SIO_TX+15j
FE00:1287		  mov	  ax, [bp+OFFSET_OR_ATTRS]
FE00:128A		  mov	  [si+0], ax
FE00:128D		  mov	  al, 81h ; 'ü'
FE00:128F		  call	  SIO_COMMAND_WHEN_READY ; AL=command
FE00:1292
FE00:1292 SIO_TX_DONE:				  ; CODE XREF: SIO_TX+1Cj
FE00:1292					  ; SIO_TX+74j
FE00:1292		  pop	  di
FE00:1293		  pop	  si
FE00:1294		  pop	  bp
FE00:1295		  retn
FE00:1295 SIO_TX	  endp
FE00:1295
FE00:1296
FE00:1296 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1296
FE00:1296 ; Attributes:	bp-based frame
FE00:1296
FE00:1296 M_REGISTER	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_R_EGISTERSp
FE00:1296
FE00:1296 var_A		  = byte ptr -0Ah
FE00:1296 var_8		  = byte ptr -8
FE00:1296 var_6		  = word ptr -6
FE00:1296
FE00:1296		  push	  bp
FE00:1297		  mov	  bp, sp
FE00:1299		  push	  di
FE00:129A		  push	  si
FE00:129B		  sub	  sp, 6
FE00:129E		  mov	  di, 1
FE00:12A1		  push	  di
FE00:12A2		  call	  sub_FF14A
FE00:12A5		  add	  sp, 2
FE00:12A8		  call	  GETCHAR_ECHO
FE00:12AB		  mov	  [bp+var_8], al
FE00:12AE		  cmp	  [bp+var_8], 0Dh
FE00:12B2		  jnz	  short	loc_FF311
FE00:12B4		  call	  PRINT_REGS
FE00:12B7		  jmp	  short	loc_FF30E
FE00:12B9 ; ───────────────────────────────────────────────────────────────────────────
FE00:12B9
FE00:12B9 loc_FF2B9:				  ; CODE XREF: M_REGISTER+94j
FE00:12B9		  mov	  bx, [bp+var_6]
FE00:12BC		  shl	  bx, 1
FE00:12BE		  mov	  dl, byte ptr (REG_NAMES+1)[bx]
FE00:12C2		  cmp	  dl, [bp+var_A]
FE00:12C5		  jnz	  short	loc_FF32D
FE00:12C7		  mov	  di, 2
FE00:12CA		  push	  di
FE00:12CB		  call	  sub_FF14A
FE00:12CE		  add	  sp, 2
FE00:12D1		  mov	  di, [bp+var_6]
FE00:12D4		  shl	  di, 1
FE00:12D6		  push	  word ptr SAVED_CPU_REGS.SAVE_AX[di]
FE00:12DA		  call	  PRINTHEX16
FE00:12DD		  add	  sp, 2
FE00:12E0		  mov	  di, offset CHR_DASH_0	; "-"
FE00:12E3		  push	  di
FE00:12E4		  call	  PUTCHAR
FE00:12E7		  add	  sp, 2
FE00:12EA		  call	  GETCHAR_ECHO
FE00:12ED		  mov	  CHAR_BUF_byte_EBC, al
FE00:12F0		  cmp	  CHAR_BUF_byte_EBC, ' '
FE00:12F5		  jz	  short	loc_FF30E
FE00:12F7		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:12FC		  jz	  short	loc_FF30E
FE00:12FE		  mov	  di, [bp+var_6]
FE00:1301		  shl	  di, 1
FE00:1303		  add	  di, offset SAVED_CPU_REGS
FE00:1307		  push	  di
FE00:1308		  call	  READ_MEM_ADDR_sub_FE9D8
FE00:130B		  add	  sp, 2
FE00:130E
FE00:130E loc_FF30E:				  ; CODE XREF: M_REGISTER+21j
FE00:130E					  ; M_REGISTER+5Fj ...
FE00:130E		  jmp	  TAIL_loc_FFBE4
FE00:1311 ; ───────────────────────────────────────────────────────────────────────────
FE00:1311
FE00:1311 loc_FF311:				  ; CODE XREF: M_REGISTER+1Cj
FE00:1311		  call	  GETCHAR_ECHO
FE00:1314		  mov	  [bp+var_A], al
FE00:1317		  mov	  [bp+var_6], 0
FE00:131C
FE00:131C loc_FF31C:				  ; CODE XREF: M_REGISTER+9Ej
FE00:131C		  mov	  bx, [bp+var_6]
FE00:131F		  shl	  bx, 1
FE00:1321		  mov	  dl, byte ptr REG_NAMES[bx] ; "AX"
FE00:1325		  cmp	  dl, [bp+var_8]
FE00:1328		  jnz	  short	loc_FF32D
FE00:132A		  jmp	  loc_FF2B9
FE00:132D ; ───────────────────────────────────────────────────────────────────────────
FE00:132D
FE00:132D loc_FF32D:				  ; CODE XREF: M_REGISTER+2Fj
FE00:132D					  ; M_REGISTER+92j
FE00:132D		  inc	  [bp+var_6]
FE00:1330		  cmp	  [bp+var_6], 0Bh
FE00:1334		  jbe	  short	loc_FF31C
FE00:1336		  call	  ERR_BEEP
FE00:1339		  jmp	  short	loc_FF30E
FE00:1339 M_REGISTER	  endp
FE00:1339
FE00:1339 ; ───────────────────────────────────────────────────────────────────────────
FE00:133B		  db	0
FE00:133C
FE00:133C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:133C
FE00:133C ; Attributes:	bp-based frame
FE00:133C
FE00:133C M_BREAKPOINT	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_B_REAKPOINTp
FE00:133C
FE00:133C var_A		  = word ptr -0Ah
FE00:133C var_8		  = word ptr -8
FE00:133C var_6		  = word ptr -6
FE00:133C
FE00:133C		  push	  bp
FE00:133D		  mov	  bp, sp
FE00:133F		  push	  di
FE00:1340		  push	  si
FE00:1341		  sub	  sp, 6
FE00:1344		  mov	  byte ptr [bp+var_6], ':'
FE00:1348		  mov	  di, 1
FE00:134B		  push	  di
FE00:134C		  call	  sub_FF14A
FE00:134F		  add	  sp, 2
FE00:1352		  call	  GETCHAR_ECHO
FE00:1355		  mov	  CHAR_BUF_byte_EBC, al
FE00:1358		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:135D		  jnz	  short	loc_FF3CC
FE00:135F		  mov	  [bp+var_A], 0
FE00:1364
FE00:1364 loc_FF364:				  ; CODE XREF: M_BREAKPOINT+8Ej
FE00:1364		  cmp	  [bp+var_A], 8
FE00:1368		  jb	  short	loc_FF36D
FE00:136A		  jmp	  loc_FF3F7
FE00:136D ; ───────────────────────────────────────────────────────────────────────────
FE00:136D
FE00:136D loc_FF36D:				  ; CODE XREF: M_BREAKPOINT+2Cj
FE00:136D		  mov	  ax, [bp+var_A]
FE00:1370		  mov	  cx, 6
FE00:1373		  imul	  cx
FE00:1375		  mov	  bx, ax
FE00:1377		  mov	  al, byte_8CA[bx]
FE00:137B		  test	  al, al
FE00:137D		  jz	  short	loc_FF3C7
FE00:137F		  call	  sub_FF134
FE00:1382		  push	  [bp+var_A]
FE00:1385		  call	  PRINTHEX8
FE00:1388		  add	  sp, 2
FE00:138B		  mov	  di, 2
FE00:138E		  push	  di
FE00:138F		  call	  sub_FF14A
FE00:1392		  add	  sp, 2
FE00:1395		  mov	  ax, [bp+var_A]
FE00:1398		  mov	  cx, 6
FE00:139B		  imul	  cx
FE00:139D		  mov	  bx, ax
FE00:139F		  push	  word_8CC[bx]
FE00:13A3		  call	  PRINTHEX16
FE00:13A6		  add	  sp, 2
FE00:13A9		  lea	  di, [bp+var_6]
FE00:13AC		  push	  di
FE00:13AD		  call	  PUTCHAR
FE00:13B0		  add	  sp, 2
FE00:13B3		  mov	  ax, [bp+var_A]
FE00:13B6		  mov	  cx, 6
FE00:13B9		  imul	  cx
FE00:13BB		  mov	  bx, ax
FE00:13BD		  push	  word_8CE[bx]
FE00:13C1		  call	  PRINTHEX16
FE00:13C4		  add	  sp, 2
FE00:13C7
FE00:13C7 loc_FF3C7:				  ; CODE XREF: M_BREAKPOINT+41j
FE00:13C7		  inc	  [bp+var_A]
FE00:13CA		  jmp	  short	loc_FF364
FE00:13CC ; ───────────────────────────────────────────────────────────────────────────
FE00:13CC
FE00:13CC loc_FF3CC:				  ; CODE XREF: M_BREAKPOINT+21j
FE00:13CC		  cmp	  CHAR_BUF_byte_EBC, '-'
FE00:13D1		  jnz	  short	loc_FF402
FE00:13D3		  lea	  di, [bp+var_8]
FE00:13D6		  push	  di
FE00:13D7		  call	  sub_FF906
FE00:13DA		  add	  sp, 2
FE00:13DD		  test	  ax, ax
FE00:13DF		  jz	  short	loc_FF3FA
FE00:13E1		  cmp	  byte ptr [bp+var_8], 8
FE00:13E5		  jge	  short	loc_FF3FA
FE00:13E7		  mov	  al, byte ptr [bp+var_8]
FE00:13EA		  cbw
FE00:13EB		  mov	  cx, 6
FE00:13EE		  imul	  cx
FE00:13F0		  mov	  di, ax
FE00:13F2		  mov	  byte_8CA[di],	0
FE00:13F7
FE00:13F7 loc_FF3F7:				  ; CODE XREF: M_BREAKPOINT+2Ej
FE00:13F7					  ; M_BREAKPOINT+C4j ...
FE00:13F7		  jmp	  TAIL_loc_FFBE4
FE00:13FA ; ───────────────────────────────────────────────────────────────────────────
FE00:13FA
FE00:13FA loc_FF3FA:				  ; CODE XREF: M_BREAKPOINT+A3j
FE00:13FA					  ; M_BREAKPOINT+A9j
FE00:13FA		  call	  sub_FF134
FE00:13FD
FE00:13FD loc_FF3FD:				  ; CODE XREF: M_BREAKPOINT+E2j
FE00:13FD					  ; M_BREAKPOINT+E9j ...
FE00:13FD		  call	  ERR_BEEP
FE00:1400		  jmp	  short	loc_FF3F7
FE00:1402 ; ───────────────────────────────────────────────────────────────────────────
FE00:1402
FE00:1402 loc_FF402:				  ; CODE XREF: M_BREAKPOINT+95j
FE00:1402		  mov	  [bp+var_A], 0
FE00:1407
FE00:1407 loc_FF407:				  ; CODE XREF: M_BREAKPOINT+121j
FE00:1407		  mov	  ax, [bp+var_A]
FE00:140A		  mov	  cx, 6
FE00:140D		  imul	  cx
FE00:140F		  mov	  bx, ax
FE00:1411		  mov	  al, byte_8CA[bx]
FE00:1415		  test	  al, al
FE00:1417		  jnz	  short	loc_FF456
FE00:1419		  call	  PARSE_ADDR_sub_FE96E
FE00:141C		  test	  ax, ax
FE00:141E		  jz	  short	loc_FF3FD
FE00:1420		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:1425		  jnz	  short	loc_FF3FD
FE00:1427		  mov	  di, ADDR_SEGMENT
FE00:142B		  mov	  ax, [bp+var_A]
FE00:142E		  mov	  cx, 6
FE00:1431		  imul	  cx
FE00:1433		  mov	  si, ax
FE00:1435		  mov	  word_8CC[si],	di
FE00:1439		  mov	  di, ADDR_OFFSET
FE00:143D		  mov	  ax, [bp+var_A]
FE00:1440		  imul	  cx
FE00:1442		  mov	  si, ax
FE00:1444		  mov	  word_8CE[si],	di
FE00:1448		  mov	  ax, [bp+var_A]
FE00:144B		  imul	  cx
FE00:144D		  mov	  di, ax
FE00:144F		  mov	  byte_8CA[di],	1
FE00:1454		  jmp	  short	loc_FF3F7
FE00:1456 ; ───────────────────────────────────────────────────────────────────────────
FE00:1456
FE00:1456 loc_FF456:				  ; CODE XREF: M_BREAKPOINT+DBj
FE00:1456		  inc	  [bp+var_A]
FE00:1459		  cmp	  [bp+var_A], 8
FE00:145D		  jb	  short	loc_FF407
FE00:145F		  jmp	  short	loc_FF3FD
FE00:145F M_BREAKPOINT	  endp
FE00:145F
FE00:145F ; ───────────────────────────────────────────────────────────────────────────
FE00:1461		  db	0
FE00:1462
FE00:1462 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1462
FE00:1462 ; Attributes:	bp-based frame
FE00:1462
FE00:1462 PRINT_REGS	  proc near		  ; CODE XREF: SAVE_REGS_AND_BREAK:loc_FE4AAp
FE00:1462					  ; M_REGISTER+1Ep ...
FE00:1462
FE00:1462 var_6		  = word ptr -6
FE00:1462
FE00:1462		  push	  bp
FE00:1463		  mov	  bp, sp
FE00:1465		  push	  di
FE00:1466		  push	  si
FE00:1467		  sub	  sp, 2
FE00:146A		  mov	  di, offset STR_REG_CS_IP ; "\nCS:IP "
FE00:146D		  push	  di
FE00:146E		  call	  PUTS
FE00:1471		  add	  sp, 2
FE00:1474		  push	  SAVED_CPU_REGS.SAVE_CS
FE00:1478		  call	  PRINTHEX16
FE00:147B		  add	  sp, 2
FE00:147E		  mov	  di, offset CHR_COLON ; ":"
FE00:1481		  push	  di
FE00:1482		  call	  PUTCHAR
FE00:1485		  add	  sp, 2
FE00:1488		  push	  SAVED_CPU_REGS.SAVE_IP
FE00:148C		  call	  PRINTHEX16
FE00:148F		  add	  sp, 2
FE00:1492		  mov	  di, offset STR_REG_FLAGS ; "	Flags  "
FE00:1495		  push	  di
FE00:1496		  call	  PUTS
FE00:1499		  add	  sp, 2
FE00:149C		  call	  PRINT_FLAGS_REG
FE00:149F		  call	  sub_FF134
FE00:14A2		  mov	  [bp+var_6], 0
FE00:14A7
FE00:14A7 loc_FF4A7:				  ; CODE XREF: PRINT_REGS+6Dj
FE00:14A7		  mov	  di, [bp+var_6]
FE00:14AA		  shl	  di, 1
FE00:14AC		  add	  di, offset REG_NAMES ; "AX"
FE00:14B0		  push	  di
FE00:14B1		  mov	  di, 2
FE00:14B4		  push	  di
FE00:14B5		  sub	  di, di
FE00:14B7		  push	  di
FE00:14B8		  call	  PRINT_BUF
FE00:14BB		  add	  sp, 6
FE00:14BE		  mov	  di, 5
FE00:14C1		  push	  di
FE00:14C2		  call	  sub_FF14A
FE00:14C5		  add	  sp, 2
FE00:14C8		  inc	  [bp+var_6]
FE00:14CB		  cmp	  [bp+var_6], 0Bh
FE00:14CF		  jb	  short	loc_FF4A7
FE00:14D1		  call	  sub_FF134
FE00:14D4		  mov	  [bp+var_6], 0
FE00:14D9
FE00:14D9 loc_FF4D9:				  ; CODE XREF: PRINT_REGS+97j
FE00:14D9		  mov	  di, [bp+var_6]
FE00:14DC		  shl	  di, 1
FE00:14DE		  push	  word ptr SAVED_CPU_REGS.SAVE_AX[di]
FE00:14E2		  call	  PRINTHEX16
FE00:14E5		  add	  sp, 2
FE00:14E8		  mov	  di, 3
FE00:14EB		  push	  di
FE00:14EC		  call	  sub_FF14A
FE00:14EF		  add	  sp, 2
FE00:14F2		  inc	  [bp+var_6]
FE00:14F5		  cmp	  [bp+var_6], 0Bh
FE00:14F9		  jb	  short	loc_FF4D9
FE00:14FB		  jmp	  TAIL_loc_FFBE4
FE00:14FB PRINT_REGS	  endp
FE00:14FB
FE00:14FE
FE00:14FE ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:14FE
FE00:14FE ; Attributes:	bp-based frame
FE00:14FE
FE00:14FE PRINT_FLAGS_REG proc near		  ; CODE XREF: PRINT_REGS+3Ap
FE00:14FE
FE00:14FE FLAG_NUMBER	  = word ptr -8
FE00:14FE var_6		  = word ptr -6
FE00:14FE
FE00:14FE		  push	  bp
FE00:14FF		  mov	  bp, sp
FE00:1501		  push	  di
FE00:1502		  push	  si
FE00:1503		  sub	  sp, 4
FE00:1506		  mov	  di, SAVED_CPU_REGS.SAVE_FLAGS
FE00:150A		  mov	  [bp+var_6], di
FE00:150D		  mov	  [bp+FLAG_NUMBER], 0
FE00:1512
FE00:1512 PRINT_FLAG:				  ; CODE XREF: PRINT_FLAGS_REG+51j
FE00:1512		  mov	  dx, [bp+FLAG_NUMBER]
FE00:1515		  mov	  bx, dx
FE00:1517		  cmp	  byte ptr STR_FLAG_NAMES[bx], ' ' ; "    ODITSZ A P C"
FE00:151C		  jz	  short	loc_FF540
FE00:151E		  cmp	  [bp+var_6], 8000h
FE00:1523		  jb	  short	loc_FF52C
FE00:1525		  add	  dx, offset STR_FLAG_NAMES ; "	   ODITSZ A P C"
FE00:1529		  push	  dx
FE00:152A		  jmp	  short	loc_FF530
FE00:152C ; ───────────────────────────────────────────────────────────────────────────
FE00:152C
FE00:152C loc_FF52C:				  ; CODE XREF: PRINT_FLAGS_REG+25j
FE00:152C		  mov	  di, offset CHR_DASH_1	; "-"
FE00:152F		  push	  di
FE00:1530
FE00:1530 loc_FF530:				  ; CODE XREF: PRINT_FLAGS_REG+2Cj
FE00:1530		  call	  PUTCHAR
FE00:1533		  add	  sp, 2
FE00:1536		  mov	  di, 1
FE00:1539		  push	  di
FE00:153A		  call	  sub_FF14A
FE00:153D		  add	  sp, 2
FE00:1540
FE00:1540 loc_FF540:				  ; CODE XREF: PRINT_FLAGS_REG+1Ej
FE00:1540		  mov	  di, [bp+var_6]
FE00:1543		  shl	  di, 1
FE00:1545		  mov	  [bp+var_6], di
FE00:1548		  inc	  [bp+FLAG_NUMBER]
FE00:154B		  cmp	  [bp+FLAG_NUMBER], 10h
FE00:154F		  jb	  short	PRINT_FLAG
FE00:1551		  jmp	  TAIL_loc_FFBE4
FE00:1551 PRINT_FLAGS_REG endp
FE00:1551
FE00:1554
FE00:1554 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1554
FE00:1554 ; AL=command
FE00:1554
FE00:1554 SIO_COMMAND_WHEN_READY proc near	  ; CODE XREF: FINISH_POST:loc_FE311p
FE00:1554					  ; SIO_TX+7Ep
FE00:1554		  call	  SIO_WAIT_READY
FE00:1557		  mov	  [si+CHAN_REGS.CHAN_CMD], al ;	Channel	Command	Register
FE00:155A		  call	  NEW_COMMAND
FE00:155D		  retn
FE00:155D SIO_COMMAND_WHEN_READY endp
FE00:155D
FE00:155E
FE00:155E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:155E
FE00:155E
FE00:155E SYS_CMD_WHEN_READY proc near		  ; CODE XREF: FINISH_POST+59p
FE00:155E		  push	  dx
FE00:155F
FE00:155F WAIT_READY:				  ; CODE XREF: SYS_CMD_WHEN_READY+8j
FE00:155F		  mov	  dh, SYS_CMD_REG
FE00:1563		  and	  dh, 80h
FE00:1566		  jnz	  short	WAIT_READY
FE00:1568		  mov	  SYS_CMD_REG, al
FE00:156B		  call	  NEW_COMMAND
FE00:156E		  pop	  dx
FE00:156F		  retn
FE00:156F SYS_CMD_WHEN_READY endp
FE00:156F
FE00:1570
FE00:1570 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1570
FE00:1570 ; Attributes:	bp-based frame
FE00:1570
FE00:1570 MEM_WRITE8	  proc near		  ; CODE XREF: DISK_IO+37p
FE00:1570					  ; sub_FEBD6+50p ...
FE00:1570
FE00:1570 DATA8		  = byte ptr  4
FE00:1570
FE00:1570		  push	  bp
FE00:1571		  mov	  bp, sp
FE00:1573		  push	  ds
FE00:1574		  mov	  bx, ADDR_OFFSET
FE00:1578		  mov	  ds, ADDR_SEGMENT
FE00:157C		  mov	  al, [bp+DATA8]
FE00:157F		  mov	  [bx],	al
FE00:1581		  pop	  ds
FE00:1582		  pop	  bp
FE00:1583		  retn
FE00:1583 MEM_WRITE8	  endp
FE00:1583
FE00:1584
FE00:1584 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1584
FE00:1584
FE00:1584 MEM_READ8	  proc near		  ; CODE XREF: DISK_IO+10p
FE00:1584					  ; sub_FEBD6+44p ...
FE00:1584		  push	  ds
FE00:1585		  mov	  bx, ADDR_OFFSET
FE00:1589		  mov	  ds, ADDR_SEGMENT
FE00:158D		  mov	  al, [bx]
FE00:158F		  pop	  ds
FE00:1590		  retn
FE00:1590 MEM_READ8	  endp
FE00:1590
FE00:1590 ; ───────────────────────────────────────────────────────────────────────────
FE00:1591		  db	0
FE00:1592
FE00:1592 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1592
FE00:1592
FE00:1592 SIO_WAIT_READY  proc near		  ; CODE XREF: SIO_RX:WAIT_FOR_IOp
FE00:1592					  ; SIO_TX+1Ep	...
FE00:1592		  push	  dx
FE00:1593
FE00:1593 WAIT_READY:				  ; CODE XREF: SIO_WAIT_READY+7j
FE00:1593		  mov	  dh, [si+4]
FE00:1596		  and	  dh, 80h
FE00:1599		  jnz	  short	WAIT_READY
FE00:159B		  pop	  dx
FE00:159C		  retn
FE00:159C SIO_WAIT_READY  endp
FE00:159C
FE00:159C ; ───────────────────────────────────────────────────────────────────────────
FE00:159D		  db	0
FE00:159E
FE00:159E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:159E
FE00:159E ; Attributes:	bp-based frame
FE00:159E
FE00:159E PRINT_BUF	  proc near		  ; CODE XREF: DO_SYSCALL_3_PUTC+11p
FE00:159E					  ; ERR_BEEP+10p ...
FE00:159E
FE00:159E AUTOLEN	  = word ptr  4
FE00:159E LEN		  = word ptr  6
FE00:159E BUF		  = byte ptr  8
FE00:159E
FE00:159E		  push	  bp
FE00:159F		  mov	  bp, sp
FE00:15A1		  push	  di
FE00:15A2		  push	  si
FE00:15A3		  push	  word ptr [bp+BUF]
FE00:15A6		  sub	  di, di
FE00:15A8		  push	  di
FE00:15A9		  push	  [bp+LEN]
FE00:15AC		  push	  [bp+AUTOLEN]
FE00:15AF		  call	  SIO_TX
FE00:15B2		  add	  sp, 8
FE00:15B5		  jmp	  TAIL_loc_FFBE4
FE00:15B5 PRINT_BUF	  endp
FE00:15B5
FE00:15B8
FE00:15B8 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:15B8
FE00:15B8 ; Attributes:	bp-based frame
FE00:15B8
FE00:15B8 M_ALTER_MEMORY  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_A_LTER_MEMORYp
FE00:15B8
FE00:15B8 var_A		  = byte ptr -0Ah
FE00:15B8 var_8		  = word ptr -8
FE00:15B8 var_6		  = word ptr -6
FE00:15B8
FE00:15B8		  push	  bp
FE00:15B9		  mov	  bp, sp
FE00:15BB		  push	  di
FE00:15BC		  push	  si
FE00:15BD		  sub	  sp, 6
FE00:15C0		  mov	  byte ptr [bp+var_8], '-'
FE00:15C4		  mov	  [bp+var_A], 1
FE00:15C8		  mov	  di, 1
FE00:15CB		  push	  di
FE00:15CC		  call	  sub_FF14A
FE00:15CF		  add	  sp, 2
FE00:15D2		  call	  sub_FF8DC
FE00:15D5		  test	  ax, ax
FE00:15D7		  jz	  short	loc_FF5E3
FE00:15D9		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:15DE		  jz	  short	loc_FF5EE
FE00:15E0		  call	  ERR_BEEP
FE00:15E3
FE00:15E3 loc_FF5E3:				  ; CODE XREF: M_ALTER_MEMORY+1Fj
FE00:15E3					  ; M_ALTER_MEMORY+3Aj
FE00:15E3		  jmp	  TAIL_loc_FFBE4
FE00:15E6 ; ───────────────────────────────────────────────────────────────────────────
FE00:15E6
FE00:15E6 loc_FF5E6:				  ; CODE XREF: M_ALTER_MEMORY+7Fj
FE00:15E6					  ; M_ALTER_MEMORY+8Dj
FE00:15E6		  mov	  [bp+var_A], 0
FE00:15EA
FE00:15EA loc_FF5EA:				  ; CODE XREF: M_ALTER_MEMORY+65j
FE00:15EA					  ; M_ALTER_MEMORY+6Cj	...
FE00:15EA		  inc	  ADDR_OFFSET
FE00:15EE
FE00:15EE loc_FF5EE:				  ; CODE XREF: M_ALTER_MEMORY+26j
FE00:15EE		  cmp	  [bp+var_A], 0
FE00:15F2		  jz	  short	loc_FF5E3
FE00:15F4		  call	  PRINT_MEM_ADDR_sub_FF8A2
FE00:15F7		  call	  MEM_READ8
FE00:15FA		  mov	  byte ptr [bp+var_6], al
FE00:15FD		  mov	  al, byte ptr [bp+var_6]
FE00:1600		  cbw
FE00:1601		  push	  ax
FE00:1602		  call	  PRINTHEX8
FE00:1605		  add	  sp, 2
FE00:1608		  lea	  di, [bp+var_8]
FE00:160B		  push	  di
FE00:160C		  call	  PUTCHAR
FE00:160F		  add	  sp, 2
FE00:1612		  call	  GETCHAR_ECHO
FE00:1615		  mov	  CHAR_BUF_byte_EBC, al
FE00:1618		  cmp	  CHAR_BUF_byte_EBC, ' '
FE00:161D		  jz	  short	loc_FF5EA
FE00:161F		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:1624		  jz	  short	loc_FF5EA
FE00:1626		  lea	  di, [bp+var_6]
FE00:1629		  push	  di
FE00:162A		  mov	  al, CHAR_BUF_byte_EBC
FE00:162D		  cbw
FE00:162E		  push	  ax
FE00:162F		  call	  PARSE_HEX_sub_FF6BA
FE00:1632		  add	  sp, 4
FE00:1635		  test	  ax, ax
FE00:1637		  jz	  short	loc_FF5E6
FE00:1639		  lea	  di, [bp+var_6]
FE00:163C		  push	  di
FE00:163D		  call	  sub_FEA94
FE00:1640		  add	  sp, 2
FE00:1643		  test	  ax, ax
FE00:1645		  jz	  short	loc_FF5E6
FE00:1647		  mov	  al, byte ptr [bp+var_6]
FE00:164A		  cbw
FE00:164B		  push	  ax
FE00:164C		  call	  MEM_WRITE8
FE00:164F		  add	  sp, 2
FE00:1652		  call	  MEM_READ8
FE00:1655		  mov	  di, ax
FE00:1657		  mov	  al, byte ptr [bp+var_6]
FE00:165A		  cbw
FE00:165B		  cmp	  di, ax
FE00:165D		  jz	  short	loc_FF5EA
FE00:165F		  call	  ERR_BEEP
FE00:1662		  jmp	  short	loc_FF5EA
FE00:1662 M_ALTER_MEMORY  endp
FE00:1662
FE00:1664
FE00:1664 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1664
FE00:1664 ; Attributes:	bp-based frame
FE00:1664
FE00:1664 M_LOAD_BOOT	  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_L_OAD_BOOTp
FE00:1664
FE00:1664 var_6		  = word ptr -6
FE00:1664
FE00:1664		  push	  bp
FE00:1665		  mov	  bp, sp
FE00:1667		  push	  di
FE00:1668		  push	  si
FE00:1669		  sub	  sp, 2
FE00:166C		  mov	  di, 1
FE00:166F		  push	  di
FE00:1670		  call	  sub_FF14A
FE00:1673		  add	  sp, 2
FE00:1676		  lea	  di, [bp+var_6]
FE00:1679		  push	  di
FE00:167A		  call	  sub_FF906
FE00:167D		  add	  sp, 2
FE00:1680		  test	  ax, ax
FE00:1682		  jz	  short	loc_FF69B
FE00:1684		  cmp	  byte ptr [bp+var_6], 0
FE00:1688		  jl	  short	loc_FF69B
FE00:168A		  cmp	  byte ptr [bp+var_6], 5
FE00:168E		  jg	  short	loc_FF69B
FE00:1690		  mov	  al, byte ptr [bp+var_6]
FE00:1693		  cbw
FE00:1694		  push	  ax
FE00:1695		  call	  DISK_BOOT
FE00:1698		  add	  sp, 2
FE00:169B
FE00:169B loc_FF69B:				  ; CODE XREF: M_LOAD_BOOT+1Ej
FE00:169B					  ; M_LOAD_BOOT+24j ...
FE00:169B		  call	  ERR_BEEP
FE00:169E		  jmp	  TAIL_loc_FFBE4
FE00:169E M_LOAD_BOOT	  endp
FE00:169E
FE00:169E ; ───────────────────────────────────────────────────────────────────────────
FE00:16A1		  db	0
FE00:16A2
FE00:16A2 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:16A2
FE00:16A2 ; DI=FDC_QUEUE
FE00:16A2
FE00:16A2 FDC_sub_FF6A2	  proc near		  ; CODE XREF: FDC_ENQUEUE_CMD+Cp
FE00:16A2		  push	  cx
FE00:16A3		  mov	  ax, ds
FE00:16A5		  mov	  cl, 4
FE00:16A7		  rol	  ax, cl
FE00:16A9		  mov	  ch, al
FE00:16AB		  and	  ch, 0Fh
FE00:16AE		  mov	  [di+2], ch
FE00:16B1		  and	  al, 0F0h
FE00:16B3		  add	  ax, si
FE00:16B5		  mov	  [di],	ax
FE00:16B7		  pop	  cx
FE00:16B8		  retn
FE00:16B8 FDC_sub_FF6A2	  endp
FE00:16B8
FE00:16B8 ; ───────────────────────────────────────────────────────────────────────────
FE00:16B9		  db	0
FE00:16BA
FE00:16BA ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:16BA
FE00:16BA ; Attributes:	bp-based frame
FE00:16BA
FE00:16BA PARSE_HEX_sub_FF6BA proc near		  ; CODE XREF: READ_MEM_ADDR_sub_FE9D8+4Bp
FE00:16BA					  ; sub_FEA94+45p ...
FE00:16BA
FE00:16BA var_6		  = byte ptr -6
FE00:16BA arg_0		  = byte ptr  4
FE00:16BA arg_2		  = word ptr  6
FE00:16BA
FE00:16BA		  push	  bp
FE00:16BB		  mov	  bp, sp
FE00:16BD		  push	  di
FE00:16BE		  push	  si
FE00:16BF		  sub	  sp, 2
FE00:16C2		  mov	  [bp+var_6], 1
FE00:16C6		  cmp	  [bp+arg_0], 'f'
FE00:16CA		  jg	  short	loc_FF704
FE00:16CC		  cmp	  [bp+arg_0], 'a'
FE00:16D0		  jl	  short	loc_FF704
FE00:16D2		  mov	  bx, [bp+arg_2]
FE00:16D5		  mov	  al, [bp+arg_0]
FE00:16D8		  cbw
FE00:16D9		  add	  ax, -57h
FE00:16DC		  jmp	  short	loc_FF700
FE00:16DE ; ───────────────────────────────────────────────────────────────────────────
FE00:16DE
FE00:16DE loc_FF6DE:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+4Ej
FE00:16DE		  cmp	  [bp+arg_0], 'A'
FE00:16E2		  jl	  short	loc_FF70A
FE00:16E4		  mov	  bx, [bp+arg_2]
FE00:16E7		  mov	  al, [bp+arg_0]
FE00:16EA		  cbw
FE00:16EB		  add	  ax, -37h
FE00:16EE		  jmp	  short	loc_FF700
FE00:16F0 ; ───────────────────────────────────────────────────────────────────────────
FE00:16F0
FE00:16F0 loc_FF6F0:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+54j
FE00:16F0		  cmp	  [bp+arg_0], '0'
FE00:16F4		  jl	  short	loc_FF710
FE00:16F6		  mov	  bx, [bp+arg_2]
FE00:16F9		  mov	  al, [bp+arg_0]
FE00:16FC		  cbw
FE00:16FD		  add	  ax, -30h
FE00:1700
FE00:1700 loc_FF700:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+22j
FE00:1700					  ; PARSE_HEX_sub_FF6BA+34j
FE00:1700		  mov	  [bx],	al
FE00:1702		  jmp	  short	loc_FF714
FE00:1704 ; ───────────────────────────────────────────────────────────────────────────
FE00:1704
FE00:1704 loc_FF704:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+10j
FE00:1704					  ; PARSE_HEX_sub_FF6BA+16j
FE00:1704		  cmp	  [bp+arg_0], 'F'
FE00:1708		  jle	  short	loc_FF6DE
FE00:170A
FE00:170A loc_FF70A:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+28j
FE00:170A		  cmp	  [bp+arg_0], '9'
FE00:170E		  jle	  short	loc_FF6F0
FE00:1710
FE00:1710 loc_FF710:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+3Aj
FE00:1710		  mov	  [bp+var_6], 0
FE00:1714
FE00:1714 loc_FF714:				  ; CODE XREF: PARSE_HEX_sub_FF6BA+48j
FE00:1714		  mov	  al, [bp+var_6]
FE00:1717		  cbw
FE00:1718		  jmp	  TAIL_loc_FFBE4
FE00:1718 PARSE_HEX_sub_FF6BA endp
FE00:1718
FE00:1718 ; ───────────────────────────────────────────────────────────────────────────
FE00:171B		  db	0
FE00:171C
FE00:171C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:171C
FE00:171C ; Attributes:	bp-based frame
FE00:171C
FE00:171C GETCHAR	  proc near		  ; CODE XREF: GETCHAR_ECHO+5p
FE00:171C					  ; READ_MEM_ADDR_sub_FE9D8+2Bp ...
FE00:171C
FE00:171C var_6		  = word ptr -6
FE00:171C
FE00:171C		  push	  bp
FE00:171D		  mov	  bp, sp
FE00:171F		  push	  di
FE00:1720		  push	  si
FE00:1721		  sub	  sp, 2
FE00:1724		  lea	  di, [bp+var_6]
FE00:1727		  push	  di
FE00:1728		  mov	  di, 1
FE00:172B		  push	  di
FE00:172C		  sub	  di, di
FE00:172E		  push	  di
FE00:172F		  call	  SIO_RX
FE00:1732		  add	  sp, 6
FE00:1735		  mov	  al, byte ptr [bp+var_6]
FE00:1738		  cbw
FE00:1739		  jmp	  TAIL_loc_FFBE4
FE00:1739 GETCHAR	  endp
FE00:1739
FE00:173C
FE00:173C ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:173C
FE00:173C ; Attributes:	bp-based frame
FE00:173C
FE00:173C PUTCHAR	  proc near		  ; CODE XREF: GETCHAR_ECHO+Fp
FE00:173C					  ; READ_MEM_ADDR_sub_FE9D8+3Cp ...
FE00:173C
FE00:173C CHAR		  = byte ptr  4
FE00:173C
FE00:173C		  push	  bp
FE00:173D		  mov	  bp, sp
FE00:173F		  push	  di
FE00:1740		  push	  si
FE00:1741		  push	  word ptr [bp+CHAR]
FE00:1744		  mov	  di, 1
FE00:1747		  push	  di
FE00:1748		  sub	  di, di
FE00:174A		  push	  di
FE00:174B		  call	  PRINT_BUF
FE00:174E		  add	  sp, 6
FE00:1751		  jmp	  TAIL_loc_FFBE4
FE00:1751 PUTCHAR	  endp
FE00:1751
FE00:1754
FE00:1754 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1754
FE00:1754 ; Attributes:	bp-based frame
FE00:1754
FE00:1754 M_DISPLAY_MEMORY proc	near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_D_ISPLAY_MEMORYp
FE00:1754
FE00:1754 var_8		  = word ptr -8
FE00:1754 var_6		  = byte ptr -6
FE00:1754
FE00:1754		  push	  bp
FE00:1755		  mov	  bp, sp
FE00:1757		  push	  di
FE00:1758		  push	  si
FE00:1759		  sub	  sp, 4
FE00:175C		  mov	  di, 1
FE00:175F		  push	  di
FE00:1760		  call	  sub_FF14A
FE00:1763		  add	  sp, 2
FE00:1766		  call	  sub_FF8DC
FE00:1769		  test	  ax, ax
FE00:176B		  jnz	  short	loc_FF770
FE00:176D		  jmp	  loc_FF831
FE00:1770 ; ───────────────────────────────────────────────────────────────────────────
FE00:1770
FE00:1770 loc_FF770:				  ; CODE XREF: M_DISPLAY_MEMORY+17j
FE00:1770		  cmp	  CHAR_BUF_byte_EBC, 0Dh
FE00:1775		  jnz	  short	loc_FF77E
FE00:1777		  mov	  [bp+var_8], 1
FE00:177C		  jmp	  short	loc_FF78F
FE00:177E ; ───────────────────────────────────────────────────────────────────────────
FE00:177E
FE00:177E loc_FF77E:				  ; CODE XREF: M_DISPLAY_MEMORY+21j
FE00:177E		  lea	  di, [bp+var_8]
FE00:1781		  push	  di
FE00:1782		  call	  sub_FF8EE
FE00:1785		  add	  sp, 2
FE00:1788		  test	  ax, ax
FE00:178A		  jnz	  short	loc_FF78F
FE00:178C		  jmp	  loc_FF831
FE00:178F ; ───────────────────────────────────────────────────────────────────────────
FE00:178F
FE00:178F loc_FF78F:				  ; CODE XREF: M_DISPLAY_MEMORY+28j
FE00:178F					  ; M_DISPLAY_MEMORY+36j
FE00:178F		  call	  PRINT_MEM_ADDR_sub_FF8A2
FE00:1792		  mov	  di, ADDR_OFFSET
FE00:1796		  and	  di, 0Fh
FE00:179A		  mov	  al, REG_DISP_OFFSETS[di]
FE00:179E		  cbw
FE00:179F		  push	  ax
FE00:17A0		  call	  sub_FF14A
FE00:17A3		  add	  sp, 2
FE00:17A6
FE00:17A6 loc_FF7A6:				  ; CODE XREF: M_DISPLAY_MEMORY+AEj
FE00:17A6		  cmp	  [bp+var_8], 0
FE00:17AA		  jz	  short	loc_FF807
FE00:17AC		  call	  MEM_READ8
FE00:17AF		  mov	  [bp+var_6], al
FE00:17B2		  mov	  al, [bp+var_6]
FE00:17B5		  cbw
FE00:17B6		  push	  ax
FE00:17B7		  call	  PRINTHEX8
FE00:17BA		  add	  sp, 2
FE00:17BD		  inc	  ADDR_OFFSET
FE00:17C1		  dec	  [bp+var_8]
FE00:17C4		  test	  ADDR_OFFSET, 3
FE00:17CA		  jnz	  short	loc_FF7D6
FE00:17CC		  mov	  di, 1
FE00:17CF		  push	  di
FE00:17D0		  call	  sub_FF14A
FE00:17D3		  add	  sp, 2
FE00:17D6
FE00:17D6 loc_FF7D6:				  ; CODE XREF: M_DISPLAY_MEMORY+76j
FE00:17D6		  test	  ADDR_OFFSET, 0Fh
FE00:17DC		  jnz	  short	loc_FF7EE
FE00:17DE		  dec	  ADDR_OFFSET
FE00:17E2		  call	  DISPMEM_sub_FF834
FE00:17E5		  cmp	  [bp+var_8], 0
FE00:17E9		  jz	  short	loc_FF7EE
FE00:17EB		  call	  PRINT_MEM_ADDR_sub_FF8A2
FE00:17EE
FE00:17EE loc_FF7EE:				  ; CODE XREF: M_DISPLAY_MEMORY+88j
FE00:17EE					  ; M_DISPLAY_MEMORY+95j
FE00:17EE		  mov	  al, byte ptr ds:MONITOR_COMMANDS+2Eh
FE00:17F1		  cbw
FE00:17F2		  push	  ax
FE00:17F3		  mov	  di, 0FFFFh
FE00:17F6		  push	  di
FE00:17F7		  sub	  di, di
FE00:17F9		  push	  di
FE00:17FA		  call	  SIO_RX
FE00:17FD		  add	  sp, 6
FE00:1800		  test	  ax, ax
FE00:1802		  jz	  short	loc_FF7A6
FE00:1804		  call	  GETCHAR
FE00:1807
FE00:1807 loc_FF807:				  ; CODE XREF: M_DISPLAY_MEMORY+56j
FE00:1807		  test	  ADDR_OFFSET, 0Fh
FE00:180D		  jz	  short	loc_FF831
FE00:180F		  mov	  di, '$'
FE00:1812		  mov	  si, ADDR_OFFSET
FE00:1816		  and	  si, 0Fh
FE00:181A		  mov	  al, REG_DISP_OFFSETS[si]
FE00:181E		  cbw
FE00:181F		  sub	  di, ax
FE00:1821		  push	  di
FE00:1822		  call	  sub_FF14A
FE00:1825		  add	  sp, 2
FE00:1828		  and	  ADDR_OFFSET, 0FFF0h
FE00:182E		  call	  DISPMEM_sub_FF834
FE00:1831
FE00:1831 loc_FF831:				  ; CODE XREF: M_DISPLAY_MEMORY+19j
FE00:1831					  ; M_DISPLAY_MEMORY+38j ...
FE00:1831		  jmp	  TAIL_loc_FFBE4
FE00:1831 M_DISPLAY_MEMORY endp
FE00:1831
FE00:1834
FE00:1834 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1834
FE00:1834 ; Attributes:	bp-based frame
FE00:1834
FE00:1834 DISPMEM_sub_FF834 proc near		  ; CODE XREF: M_DISPLAY_MEMORY+8Ep
FE00:1834					  ; M_DISPLAY_MEMORY+DAp
FE00:1834
FE00:1834 var_C		  = word ptr -0Ch
FE00:1834 var_A		  = word ptr -0Ah
FE00:1834 var_8		  = word ptr -8
FE00:1834 var_6		  = word ptr -6
FE00:1834
FE00:1834		  push	  bp
FE00:1835		  mov	  bp, sp
FE00:1837		  push	  di
FE00:1838		  push	  si
FE00:1839		  sub	  sp, 8
FE00:183C		  mov	  byte ptr [bp+var_6], '*'
FE00:1840		  mov	  byte ptr [bp+var_8], '.'
FE00:1844		  mov	  di, 2
FE00:1847		  push	  di
FE00:1848		  call	  sub_FF14A
FE00:184B		  add	  sp, 2
FE00:184E		  lea	  di, [bp+var_6]
FE00:1851		  push	  di
FE00:1852		  call	  PUTCHAR
FE00:1855		  add	  sp, 2
FE00:1858		  and	  ADDR_OFFSET, 0FFF0h
FE00:185E		  mov	  [bp+var_C], 0
FE00:1863
FE00:1863 loc_FF863:				  ; CODE XREF: DISPMEM_sub_FF834+5Fj
FE00:1863		  call	  MEM_READ8
FE00:1866		  and	  ax, 7Fh
FE00:1869		  mov	  byte ptr [bp+var_A], al
FE00:186C		  cmp	  byte ptr [bp+var_A], ' '
FE00:1870		  jl	  short	loc_FF878
FE00:1872		  cmp	  byte ptr [bp+var_A], '~'
FE00:1876		  jle	  short	loc_FF87E
FE00:1878
FE00:1878 loc_FF878:				  ; CODE XREF: DISPMEM_sub_FF834+3Cj
FE00:1878		  lea	  di, [bp+var_8]
FE00:187B		  push	  di
FE00:187C		  jmp	  short	loc_FF882
FE00:187E ; ───────────────────────────────────────────────────────────────────────────
FE00:187E
FE00:187E loc_FF87E:				  ; CODE XREF: DISPMEM_sub_FF834+42j
FE00:187E		  lea	  di, [bp+var_A]
FE00:1881		  push	  di
FE00:1882
FE00:1882 loc_FF882:				  ; CODE XREF: DISPMEM_sub_FF834+48j
FE00:1882		  call	  PUTCHAR
FE00:1885		  add	  sp, 2
FE00:1888		  inc	  ADDR_OFFSET
FE00:188C		  inc	  [bp+var_C]
FE00:188F		  cmp	  [bp+var_C], 0Fh
FE00:1893		  jle	  short	loc_FF863
FE00:1895		  lea	  di, [bp+var_6]
FE00:1898		  push	  di
FE00:1899		  call	  PUTCHAR
FE00:189C		  add	  sp, 2
FE00:189F		  jmp	  TAIL_loc_FFBE4
FE00:189F DISPMEM_sub_FF834 endp
FE00:189F
FE00:18A2
FE00:18A2 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:18A2
FE00:18A2 ; Attributes:	bp-based frame
FE00:18A2
FE00:18A2 PRINT_MEM_ADDR_sub_FF8A2 proc	near	  ; CODE XREF: M_ALTER_MEMORY+3Cp
FE00:18A2					  ; M_DISPLAY_MEMORY:loc_FF78Fp ...
FE00:18A2
FE00:18A2 var_6		  = word ptr -6
FE00:18A2
FE00:18A2		  push	  bp
FE00:18A3		  mov	  bp, sp
FE00:18A5		  push	  di
FE00:18A6		  push	  si
FE00:18A7		  sub	  sp, 2
FE00:18AA		  mov	  byte ptr [bp+var_6], ':'
FE00:18AE		  call	  sub_FF134
FE00:18B1		  push	  ADDR_SEGMENT
FE00:18B5		  call	  PRINTHEX16
FE00:18B8		  add	  sp, 2
FE00:18BB		  lea	  di, [bp+var_6]
FE00:18BE		  push	  di
FE00:18BF		  call	  PUTCHAR
FE00:18C2		  add	  sp, 2
FE00:18C5		  push	  ADDR_OFFSET
FE00:18C9		  call	  PRINTHEX16
FE00:18CC		  add	  sp, 2
FE00:18CF		  mov	  di, 2
FE00:18D2		  push	  di
FE00:18D3		  call	  sub_FF14A
FE00:18D6		  add	  sp, 2
FE00:18D9		  jmp	  TAIL_loc_FFBE4
FE00:18D9 PRINT_MEM_ADDR_sub_FF8A2 endp
FE00:18D9
FE00:18DC
FE00:18DC ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:18DC
FE00:18DC ; Attributes:	bp-based frame
FE00:18DC
FE00:18DC sub_FF8DC	  proc near		  ; CODE XREF: M_MEMCPY+12p
FE00:18DC					  ; M_MEMCPY+33p ...
FE00:18DC		  push	  bp
FE00:18DD		  mov	  bp, sp
FE00:18DF		  push	  di
FE00:18E0		  push	  si
FE00:18E1		  call	  GETCHAR_ECHO
FE00:18E4		  mov	  CHAR_BUF_byte_EBC, al
FE00:18E7		  call	  PARSE_ADDR_sub_FE96E
FE00:18EA		  jmp	  TAIL_loc_FFBE4
FE00:18EA sub_FF8DC	  endp
FE00:18EA
FE00:18EA ; ───────────────────────────────────────────────────────────────────────────
FE00:18ED		  db	0
FE00:18EE
FE00:18EE ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:18EE
FE00:18EE ; Attributes:	bp-based frame
FE00:18EE
FE00:18EE sub_FF8EE	  proc near		  ; CODE XREF: M_MEMCPY+53p
FE00:18EE					  ; M_PORT_IO+35p ...
FE00:18EE
FE00:18EE arg_0		  = word ptr  4
FE00:18EE
FE00:18EE		  push	  bp
FE00:18EF		  mov	  bp, sp
FE00:18F1		  push	  di
FE00:18F2		  push	  si
FE00:18F3		  call	  GETCHAR_ECHO
FE00:18F6		  mov	  CHAR_BUF_byte_EBC, al
FE00:18F9		  push	  [bp+arg_0]
FE00:18FC		  call	  READ_MEM_ADDR_sub_FE9D8
FE00:18FF		  add	  sp, 2
FE00:1902		  jmp	  TAIL_loc_FFBE4
FE00:1902 sub_FF8EE	  endp
FE00:1902
FE00:1902 ; ───────────────────────────────────────────────────────────────────────────
FE00:1905		  db	0
FE00:1906
FE00:1906 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1906
FE00:1906 ; Attributes:	bp-based frame
FE00:1906
FE00:1906 sub_FF906	  proc near		  ; CODE XREF: M_BREAKPOINT+9Bp
FE00:1906					  ; M_LOAD_BOOT+16p
FE00:1906
FE00:1906 arg_0		  = word ptr  4
FE00:1906
FE00:1906		  push	  bp
FE00:1907		  mov	  bp, sp
FE00:1909		  push	  di
FE00:190A		  push	  si
FE00:190B		  call	  GETCHAR_ECHO
FE00:190E		  mov	  CHAR_BUF_byte_EBC, al
FE00:1911		  push	  [bp+arg_0]
FE00:1914		  call	  sub_FEA94
FE00:1917		  add	  sp, 2
FE00:191A		  jmp	  TAIL_loc_FFBE4
FE00:191A sub_FF906	  endp
FE00:191A
FE00:191A ; ───────────────────────────────────────────────────────────────────────────
FE00:191D		  db	0
FE00:191E
FE00:191E ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:191E
FE00:191E ; Attributes:	bp-based frame
FE00:191E
FE00:191E M_HEX_DOWNLOAD  proc near		  ; CODE XREF: AUTOBOOT_PROMPT:MON_X_HEX_DOWNLOADp
FE00:191E
FE00:191E var_16	  = byte ptr -16h
FE00:191E var_14	  = word ptr -14h
FE00:191E var_12	  = byte ptr -12h
FE00:191E var_10	  = byte ptr -10h
FE00:191E var_E		  = word ptr -0Eh
FE00:191E var_C		  = word ptr -0Ch
FE00:191E var_A		  = word ptr -0Ah
FE00:191E
FE00:191E		  push	  bp
FE00:191F		  mov	  bp, sp
FE00:1921		  push	  di
FE00:1922		  push	  si
FE00:1923		  sub	  sp, 12h
FE00:1926		  mov	  byte ptr [bp+var_A], ':'
FE00:192A		  mov	  byte ptr [bp+var_C], 'E'
FE00:192E		  mov	  byte ptr [bp+var_E], 'B'
FE00:1932		  mov	  [bp+var_10], 1
FE00:1936		  mov	  [bp+var_12], 0
FE00:193A		  mov	  [bp+var_16], 0
FE00:193E		  mov	  ADDR_SEGMENT,	0
FE00:1944		  mov	  ADDR_OFFSET, 0
FE00:194A		  mov	  al, HEX_byte_4F8
FE00:194D		  cbw
FE00:194E		  push	  ax
FE00:194F		  call	  HEX_sub_FFA68
FE00:1952		  add	  sp, 2
FE00:1955		  mov	  di, offset STR_READY ; " Ready- "
FE00:1958		  push	  di
FE00:1959		  call	  PUTS
FE00:195C		  add	  sp, 2
FE00:195F		  mov	  HEX_word_EB8,	0Bh
FE00:1965		  mov	  di, offset DISK_DATA_BUF
FE00:1968		  push	  di
FE00:1969		  push	  HEX_word_EB8
FE00:196D		  mov	  al, HEX_byte_4F8
FE00:1970		  cbw
FE00:1971		  push	  ax
FE00:1972		  call	  SIO_RX
FE00:1975		  add	  sp, 6
FE00:1978		  mov	  HEX_word_EB4,	0
FE00:197E		  mov	  HEX_word_EB6,	0
FE00:1984		  jmp	  loc_FFA4E
FE00:1987 ; ───────────────────────────────────────────────────────────────────────────
FE00:1987
FE00:1987 loc_FF987:				  ; CODE XREF: M_HEX_DOWNLOAD+78j
FE00:1987		  inc	  HEX_word_EB6
FE00:198B
FE00:198B loc_FF98B:				  ; CODE XREF: M_HEX_DOWNLOAD+136j
FE00:198B		  call	  HEX_sub_FFB20
FE00:198E		  mov	  di, ax
FE00:1990		  mov	  al, byte ptr [bp+var_A]
FE00:1993		  cbw
FE00:1994		  cmp	  di, ax
FE00:1996		  jnz	  short	loc_FF987
FE00:1998		  lea	  di, [bp+var_A]
FE00:199B		  push	  di
FE00:199C		  call	  PUTCHAR
FE00:199F		  add	  sp, 2
FE00:19A2		  mov	  HEX_word_EBA,	0
FE00:19A8		  call	  HEX_sub_FFAC6
FE00:19AB		  mov	  [bp+var_12], al
FE00:19AE		  call	  HEX_sub_FFB02
FE00:19B1		  mov	  ADDR_OFFSET, ax
FE00:19B4		  call	  HEX_sub_FFAC6
FE00:19B7		  mov	  [bp+var_16], al
FE00:19BA		  cmp	  [bp+var_16], 0
FE00:19BE		  jge	  short	loc_FF9C4
FE00:19C0		  mov	  [bp+var_16], 0
FE00:19C4
FE00:19C4 loc_FF9C4:				  ; CODE XREF: M_HEX_DOWNLOAD+A0j
FE00:19C4		  mov	  al, [bp+var_12]
FE00:19C7		  cbw
FE00:19C8		  mov	  di, ax
FE00:19CA		  mov	  al, [bp+var_12]
FE00:19CD		  cbw
FE00:19CE		  add	  di, ax
FE00:19D0		  add	  di, 0Bh
FE00:19D3		  add	  HEX_word_EB6,	di
FE00:19D7		  mov	  al, [bp+var_16]
FE00:19DA		  cbw
FE00:19DB		  cmp	  ax, 3
FE00:19DE		  ja	  short	loc_FFA25
FE00:19E0		  shl	  ax, 1
FE00:19E2		  xchg	  ax, bx
FE00:19E3		  jmp	  cs:off_FFA31[bx]
FE00:19E8
FE00:19E8 loc_FF9E8:				  ; DATA XREF: M_HEX_DOWNLOAD:off_FFA31o
FE00:19E8		  mov	  [bp+var_14], 1
FE00:19ED
FE00:19ED loc_FF9ED:				  ; CODE XREF: M_HEX_DOWNLOAD+E9j
FE00:19ED		  mov	  al, [bp+var_12]
FE00:19F0		  cbw
FE00:19F1		  cmp	  ax, [bp+var_14]
FE00:19F4		  jl	  short	loc_FFA39
FE00:19F6		  call	  HEX_sub_FFAC6
FE00:19F9		  push	  ax
FE00:19FA		  call	  MEM_WRITE8
FE00:19FD		  add	  sp, 2
FE00:1A00		  inc	  ADDR_OFFSET
FE00:1A04		  inc	  [bp+var_14]
FE00:1A07		  jmp	  short	loc_FF9ED
FE00:1A09 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A09
FE00:1A09 loc_FFA09:				  ; CODE XREF: M_HEX_DOWNLOAD+C5j
FE00:1A09					  ; DATA XREF: M_HEX_DOWNLOAD+115o
FE00:1A09		  mov	  [bp+var_10], 0
FE00:1A0D		  jmp	  short	loc_FFA39
FE00:1A0F ; ───────────────────────────────────────────────────────────────────────────
FE00:1A0F
FE00:1A0F loc_FFA0F:				  ; CODE XREF: M_HEX_DOWNLOAD+C5j
FE00:1A0F					  ; DATA XREF: M_HEX_DOWNLOAD+117o
FE00:1A0F		  call	  HEX_sub_FFB02
FE00:1A12		  mov	  ADDR_SEGMENT,	ax
FE00:1A15		  jmp	  short	loc_FFA39
FE00:1A17 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A17
FE00:1A17 loc_FFA17:				  ; CODE XREF: M_HEX_DOWNLOAD+C5j
FE00:1A17					  ; DATA XREF: M_HEX_DOWNLOAD+119o
FE00:1A17		  call	  HEX_sub_FFB02
FE00:1A1A		  mov	  SAVED_CPU_REGS.SAVE_CS, ax
FE00:1A1D		  call	  HEX_sub_FFB02
FE00:1A20		  mov	  SAVED_CPU_REGS.SAVE_IP, ax
FE00:1A23		  jmp	  short	loc_FFA39
FE00:1A25 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A25
FE00:1A25 loc_FFA25:				  ; CODE XREF: M_HEX_DOWNLOAD+C0j
FE00:1A25		  lea	  di, [bp+var_E]
FE00:1A28		  push	  di
FE00:1A29		  call	  PUTCHAR
FE00:1A2C		  add	  sp, 2
FE00:1A2F		  jmp	  short	loc_FFA39
FE00:1A2F ; ───────────────────────────────────────────────────────────────────────────
FE00:1A31 off_FFA31	  dw offset loc_FF9E8	  ; DATA XREF: M_HEX_DOWNLOAD+C5r
FE00:1A33		  dw offset loc_FFA09
FE00:1A35		  dw offset loc_FFA0F
FE00:1A37		  dw offset loc_FFA17
FE00:1A39 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A39
FE00:1A39 loc_FFA39:				  ; CODE XREF: M_HEX_DOWNLOAD+D6j
FE00:1A39					  ; M_HEX_DOWNLOAD+EFj	...
FE00:1A39		  call	  HEX_sub_FFAC6
FE00:1A3C		  test	  HEX_word_EBA,	0FFh
FE00:1A42		  jz	  short	loc_FFA4E
FE00:1A44		  lea	  di, [bp+var_C]
FE00:1A47		  push	  di
FE00:1A48		  call	  PUTCHAR
FE00:1A4B		  add	  sp, 2
FE00:1A4E
FE00:1A4E loc_FFA4E:				  ; CODE XREF: M_HEX_DOWNLOAD+66j
FE00:1A4E					  ; M_HEX_DOWNLOAD+124j
FE00:1A4E		  cmp	  [bp+var_10], 0
FE00:1A52		  jz	  short	loc_FFA57
FE00:1A54		  jmp	  loc_FF98B
FE00:1A57 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A57
FE00:1A57 loc_FFA57:				  ; CODE XREF: M_HEX_DOWNLOAD+134j
FE00:1A57		  mov	  di, offset STR_DONE ;	" -Done"
FE00:1A5A		  push	  di
FE00:1A5B		  call	  PUTS
FE00:1A5E		  add	  sp, 2
FE00:1A61		  call	  PRINT_REGS
FE00:1A64		  jmp	  TAIL_loc_FFBE4
FE00:1A64 M_HEX_DOWNLOAD  endp
FE00:1A64
FE00:1A64 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A67		  db	0
FE00:1A68
FE00:1A68 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1A68
FE00:1A68 ; Attributes:	bp-based frame
FE00:1A68
FE00:1A68 HEX_sub_FFA68	  proc near		  ; CODE XREF: M_HEX_DOWNLOAD+31p
FE00:1A68
FE00:1A68 arg_0		  = byte ptr  4
FE00:1A68
FE00:1A68		  push	  bp
FE00:1A69		  mov	  bp, sp
FE00:1A6B		  push	  di
FE00:1A6C		  push	  si
FE00:1A6D		  jmp	  short	loc_FFA7A
FE00:1A6F ; ───────────────────────────────────────────────────────────────────────────
FE00:1A6F
FE00:1A6F loc_FFA6F:				  ; CODE XREF: HEX_sub_FFA68+28j
FE00:1A6F		  mov	  al, [bp+arg_0]
FE00:1A72		  cbw
FE00:1A73		  push	  ax
FE00:1A74		  call	  SIO_GETC
FE00:1A77		  add	  sp, 2
FE00:1A7A
FE00:1A7A loc_FFA7A:				  ; CODE XREF: HEX_sub_FFA68+5j
FE00:1A7A		  mov	  al, CHAR_BUF_byte_EBC
FE00:1A7D		  cbw
FE00:1A7E		  push	  ax
FE00:1A7F		  mov	  di, 0FFFFh
FE00:1A82		  push	  di
FE00:1A83		  mov	  al, [bp+arg_0]
FE00:1A86		  cbw
FE00:1A87		  push	  ax
FE00:1A88		  call	  SIO_RX
FE00:1A8B		  add	  sp, 6
FE00:1A8E		  test	  ax, ax
FE00:1A90		  jnz	  short	loc_FFA6F
FE00:1A92		  jmp	  TAIL_loc_FFBE4
FE00:1A92 HEX_sub_FFA68	  endp
FE00:1A92
FE00:1A92 ; ───────────────────────────────────────────────────────────────────────────
FE00:1A95		  db	0
FE00:1A96
FE00:1A96 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1A96
FE00:1A96 ; Attributes:	bp-based frame
FE00:1A96
FE00:1A96 IN8		  proc near		  ; CODE XREF: M_PORT_IO+77p
FE00:1A96
FE00:1A96 IO_PORT	  = byte ptr  4
FE00:1A96
FE00:1A96		  push	  bp
FE00:1A97		  mov	  bp, sp
FE00:1A99		  mov	  dx, word ptr [bp+IO_PORT]
FE00:1A9C		  in	  al, dx
FE00:1A9D		  pop	  bp
FE00:1A9E		  retn
FE00:1A9E IN8		  endp
FE00:1A9E
FE00:1A9F
FE00:1A9F ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1A9F
FE00:1A9F ; Attributes:	bp-based frame
FE00:1A9F
FE00:1A9F IN16		  proc near		  ; CODE XREF: M_PORT_IO+58p
FE00:1A9F
FE00:1A9F IO_PORT	  = byte ptr  4
FE00:1A9F
FE00:1A9F		  push	  bp
FE00:1AA0		  mov	  bp, sp
FE00:1AA2		  mov	  dx, word ptr [bp+IO_PORT]
FE00:1AA5		  in	  ax, dx
FE00:1AA6		  pop	  bp
FE00:1AA7		  retn
FE00:1AA7 IN16		  endp
FE00:1AA7
FE00:1AA8
FE00:1AA8 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1AA8
FE00:1AA8 ; Attributes:	bp-based frame
FE00:1AA8
FE00:1AA8 OUT8		  proc near		  ; CODE XREF: M_PORT_IO+ABp
FE00:1AA8
FE00:1AA8 IO_PORT	  = word ptr  4
FE00:1AA8 IO_VAL	  = byte ptr  6
FE00:1AA8
FE00:1AA8		  push	  bp
FE00:1AA9		  mov	  bp, sp
FE00:1AAB		  mov	  dx, [bp+IO_PORT]
FE00:1AAE		  mov	  al, [bp+IO_VAL]
FE00:1AB1		  out	  dx, al
FE00:1AB2		  pop	  bp
FE00:1AB3		  retn
FE00:1AB3 OUT8		  endp
FE00:1AB3
FE00:1AB4
FE00:1AB4 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1AB4
FE00:1AB4 ; Attributes:	bp-based frame
FE00:1AB4
FE00:1AB4 OUT16		  proc near		  ; CODE XREF: M_PORT_IO+9Dp
FE00:1AB4
FE00:1AB4 IO_PORT	  = word ptr  4
FE00:1AB4 IO_VAL	  = byte ptr  6
FE00:1AB4
FE00:1AB4		  push	  bp
FE00:1AB5		  mov	  bp, sp
FE00:1AB7		  mov	  dx, [bp+IO_PORT]
FE00:1ABA		  mov	  ax, word ptr [bp+IO_VAL]
FE00:1ABD		  out	  dx, ax
FE00:1ABE		  pop	  bp
FE00:1ABF		  retn
FE00:1ABF OUT16		  endp
FE00:1ABF
FE00:1AC0
FE00:1AC0 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1AC0
FE00:1AC0
FE00:1AC0 NEW_COMMAND	  proc near		  ; CODE XREF: SIO_RX+47p
FE00:1AC0					  ; SIO_RX+7Ap	...
FE00:1AC0		  inc	  NEW_CMD_REG
FE00:1AC4		  retn
FE00:1AC4 NEW_COMMAND	  endp
FE00:1AC4
FE00:1AC4 ; ───────────────────────────────────────────────────────────────────────────
FE00:1AC5		  db	0
FE00:1AC6
FE00:1AC6 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1AC6
FE00:1AC6 ; Attributes:	bp-based frame
FE00:1AC6
FE00:1AC6 HEX_sub_FFAC6	  proc near		  ; CODE XREF: M_HEX_DOWNLOAD+8Ap
FE00:1AC6					  ; M_HEX_DOWNLOAD+96p	...
FE00:1AC6
FE00:1AC6 var_A		  = word ptr -0Ah
FE00:1AC6 var_8		  = word ptr -8
FE00:1AC6 var_6		  = word ptr -6
FE00:1AC6
FE00:1AC6		  push	  bp
FE00:1AC7		  mov	  bp, sp
FE00:1AC9		  push	  di
FE00:1ACA		  push	  si
FE00:1ACB		  sub	  sp, 6
FE00:1ACE		  call	  HEX_sub_FFB20
FE00:1AD1		  mov	  [bp+var_8], ax
FE00:1AD4		  call	  HEX_sub_FFB20
FE00:1AD7		  mov	  [bp+var_A], ax
FE00:1ADA		  lea	  di, [bp+var_6]
FE00:1ADD		  push	  di
FE00:1ADE		  push	  ax
FE00:1ADF		  push	  [bp+var_8]
FE00:1AE2		  call	  HEX_sub_FFB84
FE00:1AE5		  add	  sp, 6
FE00:1AE8		  test	  ax, ax
FE00:1AEA		  jz	  short	loc_FFAF9
FE00:1AEC		  mov	  di, [bp+var_6]
FE00:1AEF		  and	  di, 0FFh
FE00:1AF3		  add	  HEX_word_EBA,	di
FE00:1AF7		  jmp	  short	loc_FFAFC
FE00:1AF9 ; ───────────────────────────────────────────────────────────────────────────
FE00:1AF9
FE00:1AF9 loc_FFAF9:				  ; CODE XREF: HEX_sub_FFAC6+24j
FE00:1AF9		  call	  ERR_BEEP
FE00:1AFC
FE00:1AFC loc_FFAFC:				  ; CODE XREF: HEX_sub_FFAC6+31j
FE00:1AFC		  mov	  ax, [bp+var_6]
FE00:1AFF		  jmp	  TAIL_loc_FFBE4
FE00:1AFF HEX_sub_FFAC6	  endp
FE00:1AFF
FE00:1B02
FE00:1B02 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1B02
FE00:1B02 ; Attributes:	bp-based frame
FE00:1B02
FE00:1B02 HEX_sub_FFB02	  proc near		  ; CODE XREF: M_HEX_DOWNLOAD+90p
FE00:1B02					  ; M_HEX_DOWNLOAD:loc_FFA0Fp ...
FE00:1B02
FE00:1B02 var_6		  = word ptr -6
FE00:1B02
FE00:1B02		  push	  bp
FE00:1B03		  mov	  bp, sp
FE00:1B05		  push	  di
FE00:1B06		  push	  si
FE00:1B07		  sub	  sp, 2
FE00:1B0A		  call	  HEX_sub_FFAC6
FE00:1B0D		  mov	  cx, 8
FE00:1B10		  shl	  ax, cl
FE00:1B12		  push	  ax
FE00:1B13		  call	  HEX_sub_FFAC6
FE00:1B16		  pop	  bx
FE00:1B17		  add	  ax, bx
FE00:1B19		  mov	  [bp+var_6], ax
FE00:1B1C		  jmp	  TAIL_loc_FFBE4
FE00:1B1C HEX_sub_FFB02	  endp
FE00:1B1C
FE00:1B1C ; ───────────────────────────────────────────────────────────────────────────
FE00:1B1F		  db	0
FE00:1B20
FE00:1B20 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1B20
FE00:1B20 ; Attributes:	bp-based frame
FE00:1B20
FE00:1B20 HEX_sub_FFB20	  proc near		  ; CODE XREF: M_HEX_DOWNLOAD:loc_FF98Bp
FE00:1B20					  ; HEX_sub_FFAC6+8p ...
FE00:1B20
FE00:1B20 var_6		  = word ptr -6
FE00:1B20
FE00:1B20		  push	  bp
FE00:1B21		  mov	  bp, sp
FE00:1B23		  push	  di
FE00:1B24		  push	  si
FE00:1B25		  sub	  sp, 6
FE00:1B28		  mov	  di, HEX_word_EB8
FE00:1B2C		  cmp	  HEX_word_EB4,	di
FE00:1B30		  jb	  short	loc_FFB6F
FE00:1B32		  cmp	  HEX_word_EB6,	300
FE00:1B38		  jbe	  short	loc_FFB48
FE00:1B3A		  mov	  HEX_word_EB8,	300
FE00:1B40		  sub	  HEX_word_EB6,	300
FE00:1B46		  jmp	  short	loc_FFB56
FE00:1B48 ; ───────────────────────────────────────────────────────────────────────────
FE00:1B48
FE00:1B48 loc_FFB48:				  ; CODE XREF: HEX_sub_FFB20+18j
FE00:1B48		  mov	  di, HEX_word_EB6
FE00:1B4C		  mov	  HEX_word_EB8,	di
FE00:1B50		  mov	  HEX_word_EB6,	0
FE00:1B56
FE00:1B56 loc_FFB56:				  ; CODE XREF: HEX_sub_FFB20+26j
FE00:1B56		  mov	  di, offset DISK_DATA_BUF
FE00:1B59		  push	  di
FE00:1B5A		  push	  HEX_word_EB8
FE00:1B5E		  mov	  al, HEX_byte_4F8
FE00:1B61		  cbw
FE00:1B62		  push	  ax
FE00:1B63		  call	  SIO_RX
FE00:1B66		  add	  sp, 6
FE00:1B69		  mov	  HEX_word_EB4,	0
FE00:1B6F
FE00:1B6F loc_FFB6F:				  ; CODE XREF: HEX_sub_FFB20+10j
FE00:1B6F		  mov	  bx, HEX_word_EB4
FE00:1B73		  mov	  al, DISK_DATA_BUF[bx]
FE00:1B77		  and	  ax, 7Fh
FE00:1B7A		  mov	  [bp+var_6], ax
FE00:1B7D		  inc	  HEX_word_EB4
FE00:1B81		  jmp	  TAIL_loc_FFBE4
FE00:1B81 HEX_sub_FFB20	  endp
FE00:1B81
FE00:1B84
FE00:1B84 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1B84
FE00:1B84 ; Attributes:	bp-based frame
FE00:1B84
FE00:1B84 HEX_sub_FFB84	  proc near		  ; CODE XREF: HEX_sub_FFAC6+1Cp
FE00:1B84
FE00:1B84 var_A		  = word ptr -0Ah
FE00:1B84 var_8		  = word ptr -8
FE00:1B84 var_6		  = byte ptr -6
FE00:1B84 arg_0		  = byte ptr  4
FE00:1B84 arg_2		  = byte ptr  6
FE00:1B84 arg_4		  = word ptr  8
FE00:1B84
FE00:1B84		  push	  bp
FE00:1B85		  mov	  bp, sp
FE00:1B87		  push	  di
FE00:1B88		  push	  si
FE00:1B89		  sub	  sp, 6
FE00:1B8C		  mov	  [bp+var_6], 1
FE00:1B90		  lea	  di, [bp+var_8]
FE00:1B93		  push	  di
FE00:1B94		  mov	  al, [bp+arg_0]
FE00:1B97		  cbw
FE00:1B98		  push	  ax
FE00:1B99		  call	  PARSE_HEX_sub_FF6BA
FE00:1B9C		  add	  sp, 4
FE00:1B9F		  mov	  [bp+var_6], al
FE00:1BA2		  cmp	  [bp+var_6], 0
FE00:1BA6		  jz	  short	loc_FFBBB
FE00:1BA8		  lea	  di, [bp+var_A]
FE00:1BAB		  push	  di
FE00:1BAC		  mov	  al, [bp+arg_2]
FE00:1BAF		  cbw
FE00:1BB0		  push	  ax
FE00:1BB1		  call	  PARSE_HEX_sub_FF6BA
FE00:1BB4		  add	  sp, 4
FE00:1BB7		  test	  ax, ax
FE00:1BB9		  jnz	  short	loc_FFBBF
FE00:1BBB
FE00:1BBB loc_FFBBB:				  ; CODE XREF: HEX_sub_FFB84+22j
FE00:1BBB		  sub	  di, di
FE00:1BBD		  jmp	  short	loc_FFBC2
FE00:1BBF ; ───────────────────────────────────────────────────────────────────────────
FE00:1BBF
FE00:1BBF loc_FFBBF:				  ; CODE XREF: HEX_sub_FFB84+35j
FE00:1BBF		  mov	  di, 1
FE00:1BC2
FE00:1BC2 loc_FFBC2:				  ; CODE XREF: HEX_sub_FFB84+39j
FE00:1BC2		  mov	  dx, di
FE00:1BC4		  mov	  [bp+var_6], dl
FE00:1BC7		  mov	  bx, [bp+arg_4]
FE00:1BCA		  mov	  al, byte ptr [bp+var_8]
FE00:1BCD		  cbw
FE00:1BCE		  mov	  cx, 4
FE00:1BD1		  shl	  ax, cl
FE00:1BD3		  mov	  dx, ax
FE00:1BD5		  mov	  al, byte ptr [bp+var_A]
FE00:1BD8		  cbw
FE00:1BD9		  add	  dx, ax
FE00:1BDB		  mov	  [bx],	dl
FE00:1BDD		  mov	  al, [bp+var_6]
FE00:1BE0		  cbw
FE00:1BE1		  jmp	  $+3		  ; FALLTHROUGH
FE00:1BE1 HEX_sub_FFB84	  endp
FE00:1BE1
FE00:1BE4
FE00:1BE4 ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1BE4
FE00:1BE4
FE00:1BE4 TAIL_loc_FFBE4  proc near		  ; CODE XREF: SIO_GETC+22j
FE00:1BE4					  ; DO_SYSCALL_3_PUTC+17j ...
FE00:1BE4		  lea	  sp, [bp-4]
FE00:1BE7		  pop	  si
FE00:1BE8		  pop	  di
FE00:1BE9		  pop	  bp
FE00:1BEA		  retn
FE00:1BEA TAIL_loc_FFBE4  endp ; sp =  6
FE00:1BEA
FE00:1BEA ; ───────────────────────────────────────────────────────────────────────────
FE00:1BEB		  db	0
FE00:1BEC
FE00:1BEC ; ███████████████ S U	B R O U	T I N E	███████████████████████████████████████
FE00:1BEC
FE00:1BEC ; Attributes:	bp-based frame
FE00:1BEC
FE00:1BEC ORPHAN_sub_FFBEC proc	near
FE00:1BEC		  push	  bp
FE00:1BED		  mov	  bp, sp
FE00:1BEF		  push	  di
FE00:1BF0		  push	  si
FE00:1BF1		  jmp	  TAIL_loc_FFBE4
FE00:1BF1 ORPHAN_sub_FFBEC endp
FE00:1BF1
FE00:1BF1 ; ───────────────────────────────────────────────────────────────────────────
FE00:1BF4		  dw 0FEEBh
FE00:1BF6		  dw 0FEEBh
FE00:1BF8		  dw 0FEEBh
FE00:1BFA		  db	0
FE00:1BFB		  db	0
FE00:1BFC		  db	0
FE00:1BFD		  db	0
FE00:1BFE		  db	0
FE00:1BFF		  db	0
FE00:1C00 ROM_DATA	  db 1,0,0,0,'@',0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'<',9,0,0Ah
FE00:1C00					  ; DATA XREF: FINISH_POST+9o
FE00:1C00		  db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'F',9,0,'F',5,0,0,0,0,0,0,0,'┤¸',0,0,0,0,0,0,0,0,'î',0Eh,0,0Ah
FE00:1C00		  db 0,0,0,0,0,0,0,0,'┤·',0,0,0,0,0,0,0,0,'û',0Eh,0,0Ah
FE00:1C00		  db 0,0,0,0,0,0,0,0,'û¸',0,0,0,0,0,0,0,0,'á',0Eh,0,0Ah
FE00:1C00		  db 0,0,0,0,0,0,0,0,'┤■',0,0,0,0,0,0,0,0,'¬',0Eh,0,0Ah
FE00:1C00		  db 0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,6,0,0,0,0,0,0,0,0,0,0,0,0
FE00:1C00		  db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11h,11h,11h,11h,'""""""',0Ch,0,0FFh,1Fh,1,'                             ',0Ah
FE00:1C00		  db 'Monitor Version V1.3',0,0Ah
FE00:1C00		  db 'PASSED POWER-UP TEST',0,0Ah
FE00:1C00		  db 'FAILED POWER-UP TEST ',0,0,'0123456789ABCDEF',0,0,0Ah
FE00:1C00		  db 'Boot Failed, Status=',0,'*',7,' ',0,0Ah
FE00:1C00		  db 'Break ....',0,'AXBXCXDXSIDIDSESSSSPBPFL',0Ah
FE00:1C00		  db 'Press any key to interrupt boot',0Ah
FE00:1C00		  db 0,0Ah
FE00:1C00		  db 'Booting from Hard Disk',0,0Ah
FE00:1C00		  db 'Enter [1] to boot from Hard Disk',0Ah
FE00:1C00		  db 'Enter [2] to boot from Floppy Disk',0Ah
FE00:1C00		  db 'Enter [3] to enter Monitor',0Ah
FE00:1C00		  db 0Ah
FE00:1C00		  db 'Enter option: ',0,0Ah
FE00:1C00		  db '< A, B, D, G, I, K, L, M, O, R, S, X > ',0,0,' ',0,'-',0,':',0,'-',0,' '
FE00:1C00		  db '   ODITSZ A P C',0,0,0Ah
FE00:1C00		  db 'CS:IP ',0,'  Flags  ',0,0,2,4,6,9,0Bh,0Dh,0Fh,12h,14h,16h,18h,1Bh,1Dh,1Fh,'! Ready- ',0,' -Done',0
FE00:1EBA IOPB_BLOCK	  db 51h, 30h, 0D0h, 0FFh ;	    movi    gc,0ffd0h
FE00:1EBE		  db 0AAh, 0BBh, 4, 20h	  ;	    jnbt    [pp].4h,5,x1ee2
FE00:1EC2		  db 0Ah, 4Eh, 6, 80h	  ;	    movbi   [gc].6h,80h
FE00:1EC6		  db 2,	93h, 8,	2, 0CEh, 2 ;	     movb    [gc].2h,[pp].8h
FE00:1ECC		  db 0EAh, 0BAh, 6, 0FCh  ; x1ecc:  jnbt    [gc].6h,7,x1ecc
FE00:1ED0		  db 0Ah, 4Eh, 6, 20h	  ;	    movbi   [gc].6h,20h
FE00:1ED4		  db 13h, 4Fh, 14h, 2 dup(0) ;	       movi    [pp].14h,0h
FE00:1ED9		  db 0Ah, 0BEh,	6, 0FCh	  ; x1ed9:  jbt	    [gc].6h,0,x1ed9
FE00:1EDD		  db 12h, 0BAh,	4, 0E2h, 0 ;	     ljnbt   [gc].4h,0,x1fc4
FE00:1EE2		  db 0Ah, 0CBh,	4, 0Fh	  ; x1ee2:  andbi   [pp].4h,0fh
FE00:1EE6		  db 12h, 0E7h,	4, 0B1h, 0 ;	     ljzb    [pp].4h,x1f9c
FE00:1EEB		  db 2,	93h, 8,	2, 0CEh, 2 ;	     movb    [gc].2h,[pp].8h
FE00:1EF1		  db 0EAh, 0BAh, 6, 0FCh  ; x1ef1:  jnbt    [gc].6h,7,x1ef1
FE00:1EF5		  db 2,	93h, 14h, 0, 0CEh ;	    movb    [gc],[pp].14h
FE00:1EFA		  db 2,	93h, 15h, 0, 0CEh ;	    movb    [gc],[pp].15h
FE00:1EFF		  db 2,	93h, 6,	2, 0CEh, 4 ;	     movb    [gc].4h,[pp].6h
FE00:1F05		  db 2,	93h, 7,	2, 0CEh, 4 ;	     movb    [gc].4h,[pp].7h
FE00:1F0B		  db 0Ah, 4Eh, 6, 10h	  ;	    movbi   [gc].6h,10h
FE00:1F0F		  db 3,	93h, 6,	3, 0CFh, 14h ;	       mov     [pp].14h,[pp].6h
FE00:1F15		  db 0Ah, 0BEh,	6, 0FCh	  ; x1f15:  jbt	    [gc].6h,0,x1f15
FE00:1F19		  db 2Ah, 0BAh,	4, 0FCh	  ; x1f19:  jnbt    [gc].4h,1,x1f19
FE00:1F1D		  db 0Ah, 0E7h,	10h, 7Bh  ;	    jzb	    [pp].10h,x1f9c
FE00:1F21		  db 0Ah, 0BFh,	4, 0Eh	  ;	    jbt	    [pp].4h,0,x1f33
FE00:1F25		  db 3,	8Bh, 0Ch	  ;	    lpd	    ga,[pp].0ch
FE00:1F28		  db 31h, 30h, 2 dup(0)	  ;	    movi    gb,0h
FE00:1F2C		  db 63h, 83h, 0Ah	  ;	    mov	    bc,[pp].0ah
FE00:1F2F		  db 8Bh, 9Fh, 16h, 70h	  ;	    call    [pp].16h,x1fa3
FE00:1F33		  db 31h, 30h, 2 dup(0)	  ; x1f33:  movi    gb,0h
FE00:1F37		  db 0F1h, 30h,	80h, 0FEh ;	    movi    mc,0fe80h
FE00:1F3B		  db 11h, 30h, 0D0h, 0FFh ;	    movi    ga,0ffd0h
FE00:1F3F		  db 13h, 4Fh, 12h, 0, 2  ;	    movi    [pp].12h,200h
FE00:1F44		  db 0Ah, 0BBh,	4, 12h	  ;	    jnbt    [pp].4h,0,x1f5a
FE00:1F48		  db 0D1h, 30h,	28h, 8Ah  ;	    movi    cc,8a28h
FE00:1F4C		  db 0A0h, 0		  ;	    wid	    8,16
FE00:1F4E		  db 6Ah, 0BBh,	4, 17h	  ;	    jnbt    [pp].4h,3,x1f69
FE00:1F52		  db 13h, 4Fh, 12h, 5, 2  ;	    movi    [pp].12h,205h
FE00:1F57		  db 88h, 20h, 0Fh	  ;	    jmp	    x1f69
FE00:1F5A		  db 0D1h, 30h,	28h, 56h  ; x1f5a:  movi    cc,5628h
FE00:1F5E		  db 0C0h, 0		  ;	    wid	    16,8
FE00:1F60		  db 4Ah, 0BBh,	4, 5	  ;	    jnbt    [pp].4h,2,x1f69
FE00:1F64		  db 13h, 4Fh, 12h, 4, 0  ;	    movi    [pp].12h,4h
FE00:1F69		  db 63h, 83h, 12h	  ; x1f69:  mov	    bc,[pp].12h
FE00:1F6C		  db 2,	93h, 9,	0, 0CEh	  ;	    movb    [gc],[pp].9h
FE00:1F71		  db 60h, 0		  ;	    xfer
FE00:1F73		  db 2,	93h, 4,	2, 0CEh, 6 ;	     movb    [gc].6h,[pp].4h
FE00:1F79		  db 0Ah, 0B6h,	6, 33h	  ;	    jmcne   [gc].6h,x1fb0
FE00:1F7D		  db 2,	0EFh, 10h	  ;	    decb    [pp].10h
FE00:1F80		  db 0Ah, 0E7h,	10h, 6	  ;	    jzb	    [pp].10h,x1f8a
FE00:1F84		  db 2,	0EBh, 9		  ;	    incb    [pp].9h
FE00:1F87		  db 88h, 20h, 0DFh	  ;	    jmp	    x1f69
FE00:1F8A		  db 0Ah, 0BBh,	4, 0Eh	  ; x1f8a:  jnbt    [pp].4h,0,x1f9c
FE00:1F8E		  db 23h, 8Bh, 0Ch	  ;	    lpd	    gb,[pp].0ch
FE00:1F91		  db 11h, 30h, 2 dup(0)	  ;	    movi    ga,0h
FE00:1F95		  db 63h, 83h, 0Ah	  ;	    mov	    bc,[pp].0ah
FE00:1F98		  db 8Bh, 9Fh, 16h, 7	  ;	    call    [pp].16h,x1fa3
FE00:1F9C		  db 0Ah, 4Fh, 5, 0	  ; x1f9c:  movbi   [pp].5h,0h
FE00:1FA0		  db 88h, 20h, 26h	  ;	    jmp	    x1fc9
FE00:1FA3		  db 0E0h, 0		  ; x1fa3:  wid	    16,16
FE00:1FA5		  db 0D1h, 30h,	8, 0C2h	  ;	    movi    cc,0c208h
FE00:1FA9		  db 60h, 0		  ;	    xfer
FE00:1FAB		  db 2 dup(0)		  ;	    nop
FE00:1FAD		  db 83h, 8Fh, 16h	  ;	    movp    tp,[pp].16h
FE00:1FB0		  db 2,	92h, 6,	2, 0CFh, 5 ; x1fb0:  movb    [pp].5h,[gc].6h
FE00:1FB6		  db 0Ah, 0CBh,	5, 7Eh	  ;	    andbi   [pp].5h,7eh
FE00:1FBA		  db 0E2h, 0F7h, 5	  ;	    setb    [pp].5h,7
FE00:1FBD		  db 0Ah, 4Eh, 6, 0	  ;	    movbi   [gc].6h,0h
FE00:1FC1		  db 88h, 20h, 5	  ;	    jmp	    x1fc9
FE00:1FC4		  db 13h, 4Fh, 5, 81h, 0  ; x1fc4:  movi    [pp].5h,81h
FE00:1FC9		  db 40h, 0		  ; x1fc9:  sintr
FE00:1FCB		  db 20h, 48h		  ;	    hlt
FE00:1FCD		  db 11h dup(	0)	  ; 0
FE00:1FDE		  dw 1EC8h
FE00:1FE0		  dw 0FE00h
FE00:1FE2		  db 0Eh dup(	0)	  ; 0
FE00:1FE2 FE00		  ends
FE00:1FE2
HIGH:0000 ; ───────────────────────────────────────────────────────────────────────────
HIGH:0000 ; ═══════════════════════════════════════════════════════════════════════════
HIGH:0000
HIGH:0000 ; Segment type: Regular
HIGH:0000 HIGH		  segment byte public '' use16
HIGH:0000		  assume cs:HIGH
HIGH:0000		  assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
HIGH:0000
HIGH:0000 loc_FFFF0:
HIGH:0000		  jmp	  far ptr DO_RESET_ENTRY
HIGH:0000 ; ───────────────────────────────────────────────────────────────────────────
HIGH:0005 unk_FFFF5	  db	0
HIGH:0006 IOP8089_FLAGS	  IOP8089_SCP <1, 0FFh,	offset SCB, 0>
HIGH:000C unk_FFFFC	  db	0
HIGH:000D unk_FFFFD	  db	0
HIGH:000E word_FFFFE	  dw 1BFFh		  ; Checksum???
HIGH:000E HIGH		  ends
HIGH:000E
HIGH:000E
HIGH:000E		  end
